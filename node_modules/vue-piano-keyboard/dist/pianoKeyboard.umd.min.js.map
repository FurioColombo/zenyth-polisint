{"version":3,"sources":["webpack://pianoKeyboard/webpack/universalModuleDefinition","webpack://pianoKeyboard/webpack/bootstrap","webpack://pianoKeyboard/./node_modules/core-js/internals/to-string-tag-support.js","webpack://pianoKeyboard/./node_modules/core-js/internals/function-bind-context.js","webpack://pianoKeyboard/./node_modules/automation-events/build/es5/bundle.js","webpack://pianoKeyboard/./node_modules/core-js/internals/object-get-own-property-names-external.js","webpack://pianoKeyboard/./node_modules/core-js/internals/object-get-own-property-descriptor.js","webpack://pianoKeyboard/./node_modules/core-js/internals/ie8-dom-define.js","webpack://pianoKeyboard/./node_modules/core-js/internals/html.js","webpack://pianoKeyboard/./node_modules/core-js/internals/a-function.js","webpack://pianoKeyboard/./node_modules/core-js/internals/check-correctness-of-iteration.js","webpack://pianoKeyboard/./node_modules/core-js/internals/require-object-coercible.js","webpack://pianoKeyboard/./node_modules/core-js/internals/array-method-has-species-support.js","webpack://pianoKeyboard/./node_modules/core-js/internals/to-absolute-index.js","webpack://pianoKeyboard/./node_modules/core-js/internals/export.js","webpack://pianoKeyboard/./node_modules/core-js/internals/object-get-own-property-names.js","webpack://pianoKeyboard/./node_modules/css-loader/dist/runtime/api.js","webpack://pianoKeyboard/./node_modules/core-js/modules/es.regexp.to-string.js","webpack://pianoKeyboard/./node_modules/@babel/runtime/helpers/slicedToArray.js","webpack://pianoKeyboard/./node_modules/core-js/internals/engine-v8-version.js","webpack://pianoKeyboard/./node_modules/core-js/internals/engine-user-agent.js","webpack://pianoKeyboard/./node_modules/core-js/internals/get-iterator-method.js","webpack://pianoKeyboard/./node_modules/core-js/internals/object-define-properties.js","webpack://pianoKeyboard/./node_modules/core-js/internals/a-possible-prototype.js","webpack://pianoKeyboard/./node_modules/core-js/modules/es.string.iterator.js","webpack://pianoKeyboard/./node_modules/core-js/internals/iterators.js","webpack://pianoKeyboard/./node_modules/core-js/internals/path.js","webpack://pianoKeyboard/./node_modules/core-js/internals/indexed-object.js","webpack://pianoKeyboard/./node_modules/core-js/internals/add-to-unscopables.js","webpack://pianoKeyboard/./node_modules/core-js/internals/native-symbol.js","webpack://pianoKeyboard/./node_modules/vue-style-loader/lib/listToStyles.js","webpack://pianoKeyboard/./node_modules/vue-style-loader/lib/addStylesClient.js","webpack://pianoKeyboard/./node_modules/core-js/internals/array-includes.js","webpack://pianoKeyboard/./node_modules/core-js/internals/array-from.js","webpack://pianoKeyboard/./node_modules/core-js/internals/to-length.js","webpack://pianoKeyboard/./node_modules/core-js/internals/has.js","webpack://pianoKeyboard/./node_modules/core-js/internals/shared.js","webpack://pianoKeyboard/./node_modules/core-js/internals/own-keys.js","webpack://pianoKeyboard/./node_modules/core-js/internals/whitespaces.js","webpack://pianoKeyboard/./node_modules/core-js/internals/string-trim.js","webpack://pianoKeyboard/./node_modules/@babel/runtime/helpers/arrayLikeToArray.js","webpack://pianoKeyboard/./node_modules/@babel/runtime/helpers/createClass.js","webpack://pianoKeyboard/./node_modules/core-js/internals/create-property-descriptor.js","webpack://pianoKeyboard/./node_modules/core-js/internals/string-multibyte.js","webpack://pianoKeyboard/./node_modules/core-js/internals/array-species-create.js","webpack://pianoKeyboard/./node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","webpack://pianoKeyboard/./node_modules/core-js/internals/internal-state.js","webpack://pianoKeyboard/./node_modules/core-js/internals/redefine.js","webpack://pianoKeyboard/./node_modules/core-js/internals/inherit-if-required.js","webpack://pianoKeyboard/./src/components/PianoKeyboard.vue?46d5","webpack://pianoKeyboard/./src/components/PianoKeyboard.vue?3226","webpack://pianoKeyboard/./node_modules/core-js/internals/object-get-own-property-symbols.js","webpack://pianoKeyboard/./node_modules/core-js/internals/define-well-known-symbol.js","webpack://pianoKeyboard/./node_modules/core-js/internals/enum-bug-keys.js","webpack://pianoKeyboard/./node_modules/core-js/internals/to-object.js","webpack://pianoKeyboard/./node_modules/core-js/internals/object-create.js","webpack://pianoKeyboard/./node_modules/core-js/internals/define-iterator.js","webpack://pianoKeyboard/./node_modules/core-js/internals/native-weak-map.js","webpack://pianoKeyboard/./node_modules/core-js/internals/an-object.js","webpack://pianoKeyboard/./node_modules/core-js/internals/descriptors.js","webpack://pianoKeyboard/./node_modules/core-js/internals/create-property.js","webpack://pianoKeyboard/./node_modules/core-js/internals/is-object.js","webpack://pianoKeyboard/./node_modules/@soda/get-current-script/index.js","webpack://pianoKeyboard/./node_modules/core-js/internals/inspect-source.js","webpack://pianoKeyboard/./node_modules/core-js/internals/uid.js","webpack://pianoKeyboard/./node_modules/core-js/internals/create-non-enumerable-property.js","webpack://pianoKeyboard/./node_modules/core-js/internals/is-forced.js","webpack://pianoKeyboard/./node_modules/@babel/runtime/helpers/classCallCheck.js","webpack://pianoKeyboard/./node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","webpack://pianoKeyboard/./node_modules/core-js/internals/call-with-safe-iteration-closing.js","webpack://pianoKeyboard/./node_modules/core-js/internals/object-define-property.js","webpack://pianoKeyboard/./node_modules/core-js/internals/create-iterator-constructor.js","webpack://pianoKeyboard/./node_modules/core-js/modules/es.symbol.js","webpack://pianoKeyboard/./node_modules/core-js/modules/es.array.from.js","webpack://pianoKeyboard/./node_modules/core-js/internals/to-integer.js","webpack://pianoKeyboard/./node_modules/core-js/modules/es.number.constructor.js","webpack://pianoKeyboard/./node_modules/core-js/internals/regexp-flags.js","webpack://pianoKeyboard/./node_modules/core-js/internals/array-method-uses-to-length.js","webpack://pianoKeyboard/./node_modules/core-js/internals/iterators-core.js","webpack://pianoKeyboard/./node_modules/core-js/internals/object-to-string.js","webpack://pianoKeyboard/./node_modules/core-js/modules/es.function.name.js","webpack://pianoKeyboard/./node_modules/core-js/internals/well-known-symbol.js","webpack://pianoKeyboard/./src/components/PianoKeyboard.vue?eb4f","webpack://pianoKeyboard/./node_modules/core-js/internals/array-iteration.js","webpack://pianoKeyboard/./node_modules/core-js/internals/to-primitive.js","webpack://pianoKeyboard/./node_modules/@babel/runtime/helpers/arrayWithHoles.js","webpack://pianoKeyboard/./node_modules/@babel/runtime/helpers/nonIterableRest.js","webpack://pianoKeyboard/./node_modules/core-js/internals/is-pure.js","webpack://pianoKeyboard/./node_modules/core-js/internals/classof-raw.js","webpack://pianoKeyboard/./node_modules/core-js/internals/shared-store.js","webpack://pianoKeyboard/(webpack)/buildin/global.js","webpack://pianoKeyboard/./node_modules/core-js/internals/object-keys-internal.js","webpack://pianoKeyboard/./node_modules/core-js/internals/document-create-element.js","webpack://pianoKeyboard/./node_modules/core-js/internals/set-global.js","webpack://pianoKeyboard/./node_modules/core-js/internals/hidden-keys.js","webpack://pianoKeyboard/./node_modules/core-js/internals/fails.js","webpack://pianoKeyboard/./node_modules/core-js/internals/get-built-in.js","webpack://pianoKeyboard/./node_modules/core-js/internals/object-property-is-enumerable.js","webpack://pianoKeyboard/./node_modules/core-js/modules/es.symbol.iterator.js","webpack://pianoKeyboard/./node_modules/core-js/internals/object-set-prototype-of.js","webpack://pianoKeyboard/./node_modules/core-js/modules/es.object.to-string.js","webpack://pianoKeyboard/./node_modules/core-js/internals/set-to-string-tag.js","webpack://pianoKeyboard/./node_modules/core-js/internals/global.js","webpack://pianoKeyboard/./node_modules/core-js/modules/web.dom-collections.iterator.js","webpack://pianoKeyboard/./node_modules/core-js/internals/object-keys.js","webpack://pianoKeyboard/./node_modules/core-js/modules/es.symbol.description.js","webpack://pianoKeyboard/./node_modules/core-js/internals/object-get-prototype-of.js","webpack://pianoKeyboard/./node_modules/core-js/internals/correct-prototype-getter.js","webpack://pianoKeyboard/./node_modules/core-js/modules/es.array.iterator.js","webpack://pianoKeyboard/./node_modules/core-js/internals/well-known-symbol-wrapped.js","webpack://pianoKeyboard/./node_modules/core-js/internals/copy-constructor-properties.js","webpack://pianoKeyboard/./node_modules/core-js/internals/is-array.js","webpack://pianoKeyboard/./node_modules/core-js/internals/is-array-iterator-method.js","webpack://pianoKeyboard/./node_modules/core-js/internals/classof.js","webpack://pianoKeyboard/./node_modules/core-js/internals/shared-key.js","webpack://pianoKeyboard/./node_modules/@vue/cli-service/lib/commands/build/setPublicPath.js","webpack://pianoKeyboard/./src/components/PianoKeyboard.vue?daa5","webpack://pianoKeyboard/./node_modules/tone/build/esm/version.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/abort-error.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/add-active-input-connection-to-audio-node.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/add-audio-node-connections.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/add-audio-param-connections.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/globals.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/helpers/is-constructible.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/helpers/split-import-statements.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/add-audio-worklet-module.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/helpers/get-value-for-key.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/helpers/pick-element-from-set.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/helpers/delete-passive-input-connection-to-audio-node.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/helpers/get-event-listeners-of-audio-node.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/helpers/set-internal-state-to-active.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/guards/audio-worklet-node.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/helpers/set-internal-state-to-passive.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/helpers/set-internal-state-to-passive-when-necessary.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/add-connection-to-audio-node.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/add-passive-input-connection-to-audio-node.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/add-silent-connection.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/add-unrendered-audio-worklet-node.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/analyser-node-constructor.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/helpers/is-owned-by-context.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/analyser-node-renderer-factory.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/helpers/test-audio-buffer-copy-channel-methods-out-of-bounds-support.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/index-size-error.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-buffer-get-channel-data-method.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/audio-buffer-constructor.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/constants.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/helpers/is-active-audio-node.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/audio-buffer-source-node-constructor.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/audio-buffer-source-node-renderer-factory.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/guards/audio-buffer-source-node.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/guards/biquad-filter-node.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/guards/constant-source-node.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/guards/gain-node.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/guards/oscillator-node.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/guards/stereo-panner-node.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/helpers/get-audio-node-connections.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/helpers/get-audio-param-connections.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/helpers/deactivate-active-audio-node-input-connections.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/helpers/deactivate-audio-graph.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/helpers/is-valid-latency-hint.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/audio-context-constructor.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/audio-destination-node-constructor.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/audio-destination-node-renderer-factory.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/audio-listener-factory.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/guards/audio-node.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/guards/audio-node-output-connection.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/helpers/insert-element-in-set.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/helpers/add-active-input-connection-to-audio-param.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/helpers/add-passive-input-connection-to-audio-param.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/guards/native-audio-node-faker.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/helpers/connect-native-audio-node-to-native-audio-node.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/helpers/delete-active-input-connection.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/helpers/delete-active-input-connection-to-audio-param.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/helpers/delete-event-listeners-of-audio-node.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/helpers/delete-passive-input-connection-to-audio-param.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/helpers/disconnect-native-audio-node-from-native-audio-node.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/helpers/get-native-audio-node.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/helpers/get-native-audio-param.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/helpers/is-part-of-a-cycle.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/helpers/is-passive-audio-node.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/helpers/test-audio-node-disconnect-method-support.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/helpers/visit-each-audio-node-once.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/guards/native-audio-node.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-node-disconnect-method.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/audio-node-constructor.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/audio-param-factory.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/audio-param-renderer.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/read-only-map.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/audio-worklet-node-constructor.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/helpers/copy-from-channel.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/helpers/copy-to-channel.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/helpers/create-nested-arrays.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/helpers/get-audio-worklet-processor.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/audio-worklet-node-renderer-factory.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/base-audio-context-constructor.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/biquad-filter-node-constructor.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/biquad-filter-node-renderer-factory.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/cache-test-result.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/channel-merger-node-constructor.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/channel-merger-node-renderer-factory.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/channel-splitter-node-constructor.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/channel-splitter-node-renderer-factory.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/connect-audio-param.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/connect-multiple-outputs.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/connected-native-audio-buffer-source-node-factory.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/constant-source-node-constructor.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/constant-source-node-renderer-factory.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/convert-number-to-unsigned-long.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/convolver-node-constructor.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/convolver-node-renderer-factory.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/create-native-offline-audio-context.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/data-clone-error.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/helpers/detach-array-buffer.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/decode-audio-data.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/decrement-cycle-counter.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/delay-node-constructor.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/delay-node-renderer-factory.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/delete-active-input-connection-to-audio-node.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/delete-unrendered-audio-worklet-node.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/guards/delay-node.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/detect-cycles.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/disconnect-multiple-outputs.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/dynamics-compressor-node-constructor.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/dynamics-compressor-node-renderer-factory.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/encoding-error.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/evaluate-source.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/event-target-constructor.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/expose-current-frame-and-current-time.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/fetch-source.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/gain-node-constructor.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/gain-node-renderer-factory.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/get-active-audio-worklet-node-inputs.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/get-audio-node-renderer.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/get-audio-node-tail-time.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/get-audio-param-renderer.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/get-backup-offline-audio-context.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/invalid-state-error.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/get-native-context.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/get-or-create-backup-offline-audio-context.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/get-unrendered-audio-worklet-nodes.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/invalid-access-error.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/helpers/wrap-iir-filter-node-get-frequency-response-method.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/iir-filter-node-constructor.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/helpers/filter-buffer.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/iir-filter-node-renderer-factory.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/increment-cycle-counter-factory.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/is-any-audio-context.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/is-any-audio-node.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/is-any-audio-param.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/is-any-offline-audio-context.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/is-native-audio-context.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/is-native-audio-node.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/is-native-audio-param.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/is-native-context.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/is-native-offline-audio-context.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/is-secure-context.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/media-element-audio-source-node-constructor.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/media-stream-audio-destination-node-constructor.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/media-stream-audio-source-node-constructor.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/media-stream-track-audio-source-node-constructor.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/minimal-audio-context-constructor.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/minimal-base-audio-context-constructor.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/helpers/test-promise-support.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/minimal-offline-audio-context-constructor.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/monitor-connections.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-option.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-options.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/helpers/test-analyser-node-get-float-time-domain-data-method-support.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/helpers/wrap-analyser-node-get-float-time-domain-data-method.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/native-analyser-node-factory.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/native-audio-buffer-constructor.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-audio-param-value.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-buffer-source-node-start-method-consecutive-calls.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-scheduled-source-node-start-method-negative-parameters.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-scheduled-source-node-stop-method-negative-parameters.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/native-audio-buffer-source-node-factory.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/native-audio-context-constructor.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/native-audio-destination-node.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/native-audio-worklet-node-constructor.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/helpers/test-clonability-of-audio-worklet-node-options.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/native-audio-worklet-node-factory.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/helpers/compute-buffer-size.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/helpers/clone-audio-worklet-node-options.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/helpers/create-audio-worklet-processor-promise.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/helpers/create-audio-worklet-processor.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/native-audio-worklet-node-faker-factory.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/native-biquad-filter-node.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/native-channel-merger-node-factory.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/helpers/wrap-channel-splitter-node.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/native-channel-splitter-node.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/native-constant-source-node-factory.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/helpers/intercept-connections.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/native-constant-source-node-faker-factory.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/native-convolver-node-factory.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/native-delay-node.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/native-dynamics-compressor-node-factory.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/native-gain-node.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/native-iir-filter-node-factory.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/native-iir-filter-node-faker-factory.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/native-media-element-audio-source-node.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/native-media-stream-audio-destination-node.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/native-media-stream-audio-source-node.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/native-media-stream-track-audio-source-node-factory.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/native-offline-audio-context-constructor.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/native-oscillator-node-factory.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/native-panner-node-factory.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/native-panner-node-faker-factory.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/native-periodic-wave-factory.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/native-script-processor-node.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/native-stereo-panner-node-factory.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/native-stereo-panner-node-faker-factory.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/native-wave-shaper-node-factory.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/native-wave-shaper-node-faker-factory.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/not-supported-error.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/offline-audio-context-constructor.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/oscillator-node-constructor.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/oscillator-node-renderer-factory.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/panner-node-constructor.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/panner-node-renderer-factory.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/periodic-wave-constructor.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/render-automation.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/render-inputs-of-audio-node.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/render-inputs-of-audio-param.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/render-native-offline-audio-context.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/set-active-audio-worklet-node-inputs.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/set-audio-node-tail-time.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/start-rendering.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/stereo-panner-node-constructor.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/stereo-panner-node-renderer-factory.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/test-audio-buffer-constructor-support.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/test-audio-worklet-processor-post-message-support.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/test-offline-audio-context-current-time-support.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/unknown-error.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/wave-shaper-node-constructor.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/wave-shaper-node-renderer-factory.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/window.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/wrap-audio-buffer-copy-channel-methods.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/wrap-audio-buffer-copy-channel-methods-out-of-bounds.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/wrap-audio-buffer-source-node-stop-method-nullified-buffer.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/factories/wrap-channel-merger-node.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/helpers/is-dc-curve.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/helpers/overwrite-accessors.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/helpers/sanitize-audio-worklet-node-options.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/helpers/sanitize-channel-splitter-options.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/helpers/sanitize-periodic-wave-options.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/helpers/test-audio-buffer-source-node-start-method-consecutive-calls-support.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/helpers/test-audio-buffer-source-node-start-method-offset-clamping-support.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/helpers/test-audio-buffer-source-node-stop-method-nullified-buffer-support.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/helpers/test-audio-scheduled-source-node-start-method-negative-parameters-support.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/helpers/test-audio-scheduled-source-node-stop-method-consecutive-calls-support.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/helpers/test-audio-scheduled-source-node-stop-method-negative-parameters-support.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-buffer-source-node-start-method-offset-clamping.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-scheduled-source-node-stop-method-consecutive-calls.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/helpers/wrap-event-listener.js","webpack://pianoKeyboard/./node_modules/standardized-audio-context/build/es2019/module.js","webpack://pianoKeyboard/./node_modules/tone/build/esm/core/util/Debug.js","webpack://pianoKeyboard/./node_modules/tone/build/esm/core/util/TypeCheck.js","webpack://pianoKeyboard/./node_modules/tone/build/esm/core/context/AudioContext.js","webpack://pianoKeyboard/./node_modules/tslib/tslib.es6.js","webpack://pianoKeyboard/./node_modules/tone/build/esm/core/clock/Ticker.js","webpack://pianoKeyboard/./node_modules/tone/build/esm/core/util/AdvancedTypeCheck.js","webpack://pianoKeyboard/./node_modules/tone/build/esm/core/util/Defaults.js","webpack://pianoKeyboard/./node_modules/tone/build/esm/core/Tone.js","webpack://pianoKeyboard/./node_modules/tone/build/esm/core/util/Math.js","webpack://pianoKeyboard/./node_modules/tone/build/esm/core/util/Timeline.js","webpack://pianoKeyboard/./node_modules/tone/build/esm/core/context/ContextInitialization.js","webpack://pianoKeyboard/./node_modules/tone/build/esm/core/util/Emitter.js","webpack://pianoKeyboard/./node_modules/tone/build/esm/core/context/BaseContext.js","webpack://pianoKeyboard/./node_modules/tone/build/esm/core/context/Context.js","webpack://pianoKeyboard/./node_modules/tone/build/esm/core/context/DummyContext.js","webpack://pianoKeyboard/./node_modules/tone/build/esm/core/util/Interface.js","webpack://pianoKeyboard/./node_modules/tone/build/esm/core/context/ToneAudioBuffer.js","webpack://pianoKeyboard/./node_modules/tone/build/esm/core/context/OfflineContext.js","webpack://pianoKeyboard/./node_modules/tone/build/esm/core/Global.js","webpack://pianoKeyboard/./node_modules/tone/build/esm/core/type/Conversions.js","webpack://pianoKeyboard/./node_modules/tone/build/esm/core/type/TimeBase.js","webpack://pianoKeyboard/./node_modules/tone/build/esm/core/type/Time.js","webpack://pianoKeyboard/./node_modules/tone/build/esm/core/type/Frequency.js","webpack://pianoKeyboard/./node_modules/tone/build/esm/core/type/TransportTime.js","webpack://pianoKeyboard/./node_modules/tone/build/esm/core/context/ToneWithContext.js","webpack://pianoKeyboard/./node_modules/tone/build/esm/core/util/StateTimeline.js","webpack://pianoKeyboard/./node_modules/tone/build/esm/core/context/Param.js","webpack://pianoKeyboard/./node_modules/tone/build/esm/core/context/ToneAudioNode.js","webpack://pianoKeyboard/./node_modules/tone/build/esm/core/context/Gain.js","webpack://pianoKeyboard/./node_modules/tone/build/esm/source/OneShotSource.js","webpack://pianoKeyboard/./node_modules/tone/build/esm/signal/ToneConstantSource.js","webpack://pianoKeyboard/./node_modules/tone/build/esm/signal/Signal.js","webpack://pianoKeyboard/./node_modules/tone/build/esm/core/clock/TickParam.js","webpack://pianoKeyboard/./node_modules/tone/build/esm/core/clock/TickSignal.js","webpack://pianoKeyboard/./node_modules/tone/build/esm/core/clock/TickSource.js","webpack://pianoKeyboard/./node_modules/tone/build/esm/core/clock/Clock.js","webpack://pianoKeyboard/./node_modules/tone/build/esm/core/context/ToneAudioBuffers.js","webpack://pianoKeyboard/./node_modules/tone/build/esm/core/type/Ticks.js","webpack://pianoKeyboard/./node_modules/tone/build/esm/core/util/Draw.js","webpack://pianoKeyboard/./node_modules/tone/build/esm/core/util/IntervalTimeline.js","webpack://pianoKeyboard/./node_modules/tone/build/esm/component/channel/Volume.js","webpack://pianoKeyboard/./node_modules/tone/build/esm/core/context/Destination.js","webpack://pianoKeyboard/./node_modules/tone/build/esm/core/util/TimelineValue.js","webpack://pianoKeyboard/./node_modules/tone/build/esm/core/clock/TransportEvent.js","webpack://pianoKeyboard/./node_modules/tone/build/esm/core/clock/TransportRepeatEvent.js","webpack://pianoKeyboard/./node_modules/tone/build/esm/core/clock/Transport.js","webpack://pianoKeyboard/./node_modules/tone/build/esm/source/Source.js","webpack://pianoKeyboard/./node_modules/tone/build/esm/source/buffer/ToneBufferSource.js","webpack://pianoKeyboard/./node_modules/tone/build/esm/source/oscillator/OscillatorInterface.js","webpack://pianoKeyboard/./node_modules/tone/build/esm/source/oscillator/ToneOscillatorNode.js","webpack://pianoKeyboard/./node_modules/tone/build/esm/source/oscillator/Oscillator.js","webpack://pianoKeyboard/./node_modules/tone/build/esm/signal/SignalOperator.js","webpack://pianoKeyboard/./node_modules/tone/build/esm/signal/WaveShaper.js","webpack://pianoKeyboard/./node_modules/tone/build/esm/signal/AudioToGain.js","webpack://pianoKeyboard/./node_modules/tone/build/esm/signal/Multiply.js","webpack://pianoKeyboard/./node_modules/tone/build/esm/source/oscillator/AMOscillator.js","webpack://pianoKeyboard/./node_modules/tone/build/esm/source/oscillator/FMOscillator.js","webpack://pianoKeyboard/./node_modules/tone/build/esm/source/oscillator/PulseOscillator.js","webpack://pianoKeyboard/./node_modules/tone/build/esm/source/oscillator/FatOscillator.js","webpack://pianoKeyboard/./node_modules/tone/build/esm/source/oscillator/PWMOscillator.js","webpack://pianoKeyboard/./node_modules/tone/build/esm/source/oscillator/OmniOscillator.js","webpack://pianoKeyboard/./node_modules/tone/build/esm/core/util/Decorator.js","webpack://pianoKeyboard/./node_modules/tone/build/esm/source/buffer/Player.js","webpack://pianoKeyboard/./node_modules/tone/build/esm/component/envelope/Envelope.js","webpack://pianoKeyboard/./node_modules/tone/build/esm/instrument/Instrument.js","webpack://pianoKeyboard/./node_modules/tone/build/esm/instrument/Monophonic.js","webpack://pianoKeyboard/./node_modules/tone/build/esm/component/envelope/AmplitudeEnvelope.js","webpack://pianoKeyboard/./node_modules/tone/build/esm/instrument/Synth.js","webpack://pianoKeyboard/./node_modules/tone/build/esm/instrument/MembraneSynth.js","webpack://pianoKeyboard/./node_modules/tone/build/esm/core/worklet/WorkletGlobalScope.js","webpack://pianoKeyboard/./node_modules/tone/build/esm/core/worklet/ToneAudioWorkletProcessor.worklet.js","webpack://pianoKeyboard/./node_modules/tone/build/esm/core/worklet/SingleIOProcessor.worklet.js","webpack://pianoKeyboard/./node_modules/tone/build/esm/core/worklet/DelayLine.worklet.js","webpack://pianoKeyboard/./node_modules/tone/build/esm/component/filter/FeedbackCombFilter.worklet.js","webpack://pianoKeyboard/./node_modules/tone/build/esm/instrument/Sampler.js","webpack://pianoKeyboard/./node_modules/tone/build/esm/component/channel/Panner.js","webpack://pianoKeyboard/./node_modules/tone/build/esm/effect/BitCrusher.worklet.js","webpack://pianoKeyboard/./node_modules/tone/build/esm/component/channel/Solo.js","webpack://pianoKeyboard/./node_modules/tone/build/esm/component/channel/PanVol.js","webpack://pianoKeyboard/./node_modules/tone/build/esm/component/channel/Channel.js","webpack://pianoKeyboard/./node_modules/tone/build/esm/core/context/Listener.js","webpack://pianoKeyboard/./node_modules/tone/build/esm/index.js","webpack://pianoKeyboard/src/components/PianoKeyboard.vue","webpack://pianoKeyboard/./src/components/PianoKeyboard.vue?15b1","webpack://pianoKeyboard/./node_modules/vue-loader/lib/runtime/componentNormalizer.js","webpack://pianoKeyboard/./src/components/PianoKeyboard.vue","webpack://pianoKeyboard/./node_modules/@vue/cli-service/lib/commands/build/entry-lib.js","webpack://pianoKeyboard/./node_modules/core-js/modules/es.array.slice.js","webpack://pianoKeyboard/./node_modules/core-js/internals/to-indexed-object.js","webpack://pianoKeyboard/./node_modules/core-js/internals/dom-iterables.js","webpack://pianoKeyboard/./node_modules/core-js/internals/use-symbol-as-uid.js"],"names":["root","factory","exports","module","define","amd","self","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","wellKnownSymbol","TO_STRING_TAG","test","String","aFunction","fn","that","length","undefined","a","b","apply","arguments","global","_slicedToArray","_classCallCheck","_createClass","_interopDefaultLegacy","e","_slicedToArray__default","_classCallCheck__default","_createClass__default","createExtendedExponentialRampToValueAutomationEvent","endTime","insertTime","type","createExtendedLinearRampToValueAutomationEvent","createSetValueAutomationEvent","startTime","createSetValueCurveAutomationEvent","values","duration","getTargetValueAtTime","time","valueAtStartTime","_ref","target","timeConstant","Math","exp","isExponentialRampToValueAutomationEvent","automationEvent","isLinearRampToValueAutomationEvent","isAnyRampToValueAutomationEvent","isSetValueAutomationEvent","isSetValueCurveAutomationEvent","getValueOfAutomationEventAtIndexAtTime","automationEvents","index","defaultValue","getEndTimeAndValueOfPreviousAutomationEvent","currentAutomationEvent","nextAutomationEvent","isCancelAndHoldAutomationEvent","isCancelScheduledValuesAutomationEvent","getEventTime","cancelTime","getExponentialRampValueAtTime","pow","getLinearRampValueAtTime","interpolateValue","theoreticIndex","lowerIndex","floor","upperIndex","ceil","getValueCurveValueAtTime","isSetTargetAutomationEvent","AutomationEventList","_automationEvents","_currenTime","_defaultValue","iterator","eventTime","findIndex","removedAutomationEvent","slice","lastAutomationEvent","Error","startValue","truncatedAutomationEvent","push","getValue","Float32Array","_index","previousAutomationEvent","persistentAutomationEvent","splice","remainingAutomationEvents","firstRemainingAutomationEvent","unshift","_getEndTimeAndValueOf","_getEndTimeAndValueOf2","_getEndTimeAndValueOf3","_getEndTimeAndValueOf4","_startTime","_value","createCancelAndHoldAutomationEvent","createCancelScheduledValuesAutomationEvent","createExponentialRampToValueAutomationEvent","createLinearRampToValueAutomationEvent","createSetTargetAutomationEvent","toIndexedObject","nativeGetOwnPropertyNames","f","toString","windowNames","window","getOwnPropertyNames","getWindowNames","it","error","DESCRIPTORS","propertyIsEnumerableModule","createPropertyDescriptor","toPrimitive","has","IE8_DOM_DEFINE","nativeGetOwnPropertyDescriptor","getOwnPropertyDescriptor","O","P","fails","createElement","getBuiltIn","TypeError","ITERATOR","SAFE_CLOSING","called","iteratorWithReturn","next","done","Array","from","exec","SKIP_CLOSING","ITERATION_SUPPORT","V8_VERSION","SPECIES","METHOD_NAME","array","constructor","foo","Boolean","toInteger","max","min","integer","createNonEnumerableProperty","redefine","setGlobal","copyConstructorProperties","isForced","options","source","FORCED","targetProperty","sourceProperty","descriptor","TARGET","GLOBAL","STATIC","stat","noTargetGet","forced","sham","internalObjectKeys","enumBugKeys","hiddenKeys","concat","cssWithMappingToString","item","useSourceMap","content","cssMapping","btoa","sourceMapping","toComment","sourceURLs","sources","map","sourceRoot","join","sourceMap","base64","unescape","encodeURIComponent","JSON","stringify","data","list","mediaQuery","dedupe","alreadyImportedModules","id","_i","anObject","flags","TO_STRING","RegExpPrototype","RegExp","nativeToString","NOT_GENERIC","INCORRECT_NAME","R","rf","unsafe","arrayWithHoles","require","iterableToArrayLimit","unsupportedIterableToArray","nonIterableRest","arr","match","version","userAgent","process","versions","v8","split","classof","Iterators","definePropertyModule","objectKeys","defineProperties","Properties","keys","isObject","charAt","InternalStateModule","defineIterator","STRING_ITERATOR","setInternalState","set","getInternalState","getterFor","iterated","string","point","state","propertyIsEnumerable","UNSCOPABLES","ArrayPrototype","configurable","getOwnPropertySymbols","listToStyles","parentId","styles","newStyles","css","media","part","parts","hasDocument","document","DEBUG","stylesInDom","head","getElementsByTagName","singletonElement","singletonCounter","isProduction","noop","ssrIdKey","isOldIE","navigator","toLowerCase","addStylesClient","_isProduction","_options","addStylesToDom","newList","mayRemove","domStyle","refs","j","addStyle","createStyleElement","styleElement","appendChild","obj","update","remove","querySelector","parentNode","removeChild","styleIndex","applyToSingletonTag","applyToTag","newObj","replaceText","textStore","replacement","filter","styleSheet","cssText","cssNode","createTextNode","childNodes","insertBefore","setAttribute","ssrId","firstChild","toLength","toAbsoluteIndex","createMethod","IS_INCLUDES","$this","el","fromIndex","includes","indexOf","toObject","callWithSafeIterationClosing","isArrayIteratorMethod","createProperty","getIteratorMethod","arrayLike","result","step","C","argumentsLength","mapfn","mapping","iteratorMethod","argument","IS_PURE","store","copyright","getOwnPropertyNamesModule","getOwnPropertySymbolsModule","requireObjectCoercible","whitespaces","whitespace","ltrim","rtrim","TYPE","replace","start","end","trim","_arrayLikeToArray","len","arr2","_defineProperties","props","writable","Constructor","protoProps","staticProps","bitmap","CONVERT_TO_STRING","pos","first","second","S","position","size","charCodeAt","codeAt","isArray","originalArray","arrayLikeToArray","_unsupportedIterableToArray","minLen","NATIVE_WEAK_MAP","objectHas","sharedKey","WeakMap","enforce","wmget","wmhas","wmset","metadata","STATE","inspectSource","enforceInternalState","TEMPLATE","simple","Function","setPrototypeOf","dummy","Wrapper","NewTarget","NewTargetPrototype","___CSS_LOADER_API_IMPORT___","path","wrappedWellKnownSymbolModule","NAME","activeXDocument","html","documentCreateElement","GT","LT","PROTOTYPE","SCRIPT","IE_PROTO","EmptyConstructor","scriptTag","NullProtoObjectViaActiveX","write","close","temp","parentWindow","NullProtoObjectViaIFrame","iframeDocument","iframe","JS","style","display","src","contentWindow","open","F","NullProtoObject","domain","ActiveXObject","$","createIteratorConstructor","getPrototypeOf","setToStringTag","IteratorsCore","IteratorPrototype","BUGGY_SAFARI_ITERATORS","KEYS","VALUES","ENTRIES","returnThis","Iterable","IteratorConstructor","DEFAULT","IS_SET","CurrentIteratorPrototype","methods","KEY","getIterationMethod","KIND","defaultIterator","IterablePrototype","INCORRECT_VALUES_NAME","nativeIterator","anyNativeIterator","entries","proto","propertyKey","getCurrentScript","currentScript","err","pageSource","inlineScriptSourceRegExp","inlineScriptSource","ieStackRegExp","ffStackRegExp","stackDetails","stack","scriptLocation","line","currentLocation","location","href","hash","scripts","documentElement","outerHTML","readyState","innerHTML","functionToString","postfix","random","feature","detection","normalize","POLYFILL","NATIVE","instance","_iterableToArrayLimit","_arr","_n","_d","_e","_s","returnMethod","nativeDefineProperty","Attributes","NATIVE_SYMBOL","USE_SYMBOL_AS_UID","nativeObjectCreate","getOwnPropertyNamesExternal","getOwnPropertyDescriptorModule","shared","uid","defineWellKnownSymbol","$forEach","forEach","HIDDEN","SYMBOL","TO_PRIMITIVE","ObjectPrototype","$Symbol","$stringify","nativePropertyIsEnumerable","AllSymbols","ObjectPrototypeSymbols","StringToSymbolRegistry","SymbolToStringRegistry","WellKnownSymbolsStore","QObject","USE_SETTER","findChild","setSymbolDescriptor","ObjectPrototypeDescriptor","wrap","tag","description","symbol","isSymbol","$defineProperty","$defineProperties","properties","$getOwnPropertySymbols","$propertyIsEnumerable","$create","V","$getOwnPropertyDescriptor","$getOwnPropertyNames","names","IS_OBJECT_PROTOTYPE","setter","keyFor","sym","useSetter","useSimple","FORCED_JSON_STRINGIFY","replacer","space","$replacer","args","valueOf","checkCorrectnessOfIteration","INCORRECT_ITERATION","iterable","isNaN","inheritIfRequired","NUMBER","NativeNumber","NumberPrototype","BROKEN_CLASSOF","toNumber","third","radix","maxCode","digits","code","NaN","parseInt","NumberWrapper","ignoreCase","multiline","dotAll","unicode","sticky","cache","thrower","method","ACCESSORS","argument0","argument1","PrototypeOfArrayIteratorPrototype","arrayIterator","TO_STRING_TAG_SUPPORT","FunctionPrototype","FunctionPrototypeToString","nameRE","createWellKnownSymbol","withoutSetter","locals","add","default","IndexedObject","arraySpeciesCreate","IS_MAP","IS_FILTER","IS_SOME","IS_EVERY","IS_FIND_INDEX","NO_HOLES","callbackfn","specificCreate","boundFunction","some","every","find","input","PREFERRED_STRING","val","_arrayWithHoles","_nonIterableRest","SHARED","g","EXISTS","variable","namespace","NASHORN_BUG","1","aPossiblePrototype","CORRECT_SETTER","__proto__","TAG","check","globalThis","DOMIterables","ArrayIteratorMethods","ArrayValues","COLLECTION_NAME","Collection","CollectionPrototype","NativeSymbol","EmptyStringDescriptionStore","SymbolWrapper","symbolPrototype","symbolToString","native","regexp","desc","CORRECT_PROTOTYPE_GETTER","addToUnscopables","ARRAY_ITERATOR","kind","Arguments","ownKeys","arg","classofRaw","CORRECT_ARGUMENTS","tryGet","callee","render","_vm","_h","$createElement","_c","_self","staticClass","_l","noteObject","note","class","pressed","width","whiteNoteWidthSize","background","whiteNoteBackground","on","$event","playNoteMouse","removePressedKeyMouse","playNoteHover","removePressedKey","blackNote","blackNoteBackground","stopPropagation","_v","staticRenderFns","createAbortError","DOMException","createAddActiveInputConnectionToAudioNode","insertElementInSet","activeInputs","output","eventListener","ignoreDuplicates","activeInputConnection","createAddAudioNodeConnections","audioNodeConnectionsStore","audioNode","audioNodeRenderer","nativeAudioNode","numberOfInputs","Set","outputs","passiveInputs","renderer","createAddAudioParamConnections","audioParamConnectionsStore","audioParam","audioParamRenderer","ACTIVE_AUDIO_NODE_STORE","WeakSet","AUDIO_NODE_CONNECTIONS_STORE","AUDIO_NODE_STORE","AUDIO_PARAM_CONNECTIONS_STORE","AUDIO_PARAM_STORE","CONTEXT_STORE","EVENT_LISTENERS","CYCLE_COUNTERS","NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS","NODE_TO_PROCESSOR_MAPS","handler","isConstructible","constructible","proxy","Proxy","IMPORT_STATEMENT_REGEX","splitImportStatements","url","importStatements","sourceWithoutImportStatements","unresolvedUrl","importStatementWithResolvedUrl","URL","verifyParameterDescriptors","parameterDescriptors","verifyProcessorCtor","processorCtor","createAddAudioWorkletModule","cacheTestResult","createNotSupportedError","evaluateSource","exposeCurrentFrameAndCurrentTime","fetchSource","getNativeContext","getOrCreateBackupOfflineAudioContext","isNativeOfflineAudioContext","ongoingRequests","resolvedRequests","testAudioWorkletProcessorPostMessageSupport","context","moduleURL","credentials","nativeContext","absoluteUrl","audioWorklet","Promise","all","resolve","then","isSupportingPostMessage","patchedSourceWithoutImportStatements","memberDefinition","bufferRegistration","wrappedSource","blob","Blob","createObjectURL","addModule","backupOfflineAudioContext","finally","revokeObjectURL","resolvedRequestsOfContext","ongoingRequestsOfContext","promiseOfOngoingRequest","promise","evaluateAudioWorkletGlobalScope","_AWGS","pop","SyntaxError","currentTime","sampleRate","nodeNameToProcessorConstructorMap","Map","rslvdRqstsFCntxt","ngngRqstsFCntxt","delete","pickElementFromSet","predicate","matchingElements","matchingElement","deletePassiveInputConnectionToAudioNode","passiveInputConnections","matchingConnection","passiveInputConnection","setInternalStateToActive","isAudioWorkletNode","setInternalStateToPassive","setInternalStateToPassiveWhenNecessary","connections","createAddConnectionToAudioNode","addActiveInputConnectionToAudioNode","addPassiveInputConnectionToAudioNode","connectNativeAudioNodeToNativeAudioNode","deleteActiveInputConnectionToAudioNode","disconnectNativeAudioNodeFromNativeAudioNode","getAudioNodeConnections","getAudioNodeTailTime","getEventListenersOfAudioNode","getNativeAudioNode","isActiveAudioNode","isPartOfACycle","isPassiveAudioNode","destination","isOffline","eventListeners","isActive","nativeDestinationAudioNode","nativeSourceAudioNode","partialConnection","tailTime","setTimeout","outputConnection","createAddPassiveInputConnectionToAudioNode","createAddSilentConnection","createNativeGainNode","nativeAudioScheduledSourceNode","nativeGainNode","channelCount","channelCountMode","channelInterpretation","gain","connect","disconnect","removeEventListener","addEventListener","createAddUnrenderedAudioWorkletNode","getUnrenderedAudioWorkletNodes","audioWorkletNode","DEFAULT_OPTIONS","fftSize","maxDecibels","minDecibels","smoothingTimeConstant","createAnalyserNodeConstructor","audionNodeConstructor","createAnalyserNodeRenderer","createIndexSizeError","createNativeAnalyserNode","mergedOptions","nativeAnalyserNode","analyserNodeRenderer","super","_nativeAnalyserNode","frequencyBinCount","getByteFrequencyData","getByteTimeDomainData","getFloatFrequencyData","getFloatTimeDomainData","isOwnedByContext","createAnalyserNodeRendererFactory","renderInputsOfAudioNode","renderedNativeAnalyserNodes","createAnalyserNode","async","nativeOfflineAudioContext","trace","nativeAnalyserNodeIsOwnedByContext","renderedNativeAnalyserNode","nativeAudioBuffer","copyToChannel","wrapAudioBufferGetChannelDataMethod","audioBuffer","getChannelData","channel","numberOfChannels","createAudioBufferConstructor","audioBufferStore","nativeAudioBufferConstructor","nativeOfflineAudioContextConstructor","testNativeAudioBufferConstructorSupport","wrapAudioBufferCopyChannelMethods","wrapAudioBufferCopyChannelMethodsOutOfBounds","AudioBuffer","createBuffer","copyFromChannel","hasInstance","MOST_NEGATIVE_SINGLE_FLOAT","MOST_POSITIVE_SINGLE_FLOAT","buffer","loop","loopEnd","loopStart","playbackRate","createAudioBufferSourceNodeConstructor","audioNodeConstructor","createAudioBufferSourceNodeRenderer","createAudioParam","createInvalidStateError","createNativeAudioBufferSourceNode","wrapEventListener","nativeAudioBufferSourceNode","audioBufferSourceNodeRenderer","_audioBufferSourceNodeRenderer","_isBufferNullified","_isBufferSet","_nativeAudioBufferSourceNode","_onended","_playbackRate","wrappedListener","onended","nativeOnEnded","when","offset","resetInternalStateToPassive","stop","createAudioBufferSourceNodeRendererFactory","connectAudioParam","renderAutomation","renderedNativeAudioBufferSourceNodes","createAudioBufferSourceNode","nativeAudioBufferSourceNodeIsOwnedByContext","renderedNativeAudioBufferSourceNode","isAudioBufferSourceNode","isBiquadFilterNode","isConstantSourceNode","isGainNode","isOscillatorNode","isStereoPannerNode","getAudioParamConnections","deactivateActiveAudioNodeInputConnections","audioParams","parameters","Q","detune","frequency","pan","audioParamConnections","deactivateAudioGraph","isValidLatencyHint","latencyHint","createAudioContextConstructor","baseAudioContextConstructor","createUnknownError","mediaElementAudioSourceNodeConstructor","mediaStreamAudioDestinationNodeConstructor","mediaStreamAudioSourceNodeConstructor","mediaStreamTrackAudioSourceNodeConstructor","nativeAudioContextConstructor","nativeAudioContext","_baseLatency","baseLatency","round","_nativeAudioContext","_nativeGainNode","createGain","_nativeOscillatorNode","createOscillator","_state","revokeState","mediaElement","mediaStream","mediaStreamTrack","reject","resolvePromise","resume","catch","suspend","createAudioDestinationNodeConstructor","createAudioDestinationNodeRenderer","createNativeAudioDestinationNode","nativeAudioDestinationNode","audioDestinationNodeRenderer","_isNodeOfNativeOfflineAudioContext","_nativeAudioDestinationNode","maxChannelCount","nativeAudioDestinationNodePromise","createAudioDestinationNode","createAudioListenerFactory","createNativeChannelMergerNode","createNativeConstantSourceNode","createNativeScriptProcessorNode","nativeListener","listener","createFakeAudioParams","channelMergerNode","scriptProcessorNode","createFakeAudioParam","constantSourceNode","lastOrientation","lastPosition","onaudioprocess","inputBuffer","orientation","setOrientation","positon","setPosition","forwardX","forwardY","forwardZ","positionX","positionY","positionZ","upX","upY","upZ","isAudioNode","audioNodeOrAudioParam","isAudioNodeOutputConnection","element","lmnt","addActiveInputConnectionToAudioParam","addPassiveInputConnectionToAudioParam","isNativeAudioNodeFaker","nativeAudioNodeOrNativeAudioNodeFaker","fakeNativeDestinationAudioNode","inputs","deleteActiveInputConnection","activeInputConnections","deleteActiveInputConnectionToAudioParam","deleteEventListenerOfAudioNode","deletePassiveInputConnectionToAudioParam","testAudioNodeDisconnectMethodSupport","analyzer","createScriptProcessor","ones","channelData","createBufferSource","event","chnnlDt","sample","visitEachAudioNodeOnce","cycles","visitor","counts","cycle","count","nativeAudioNodeOrAudioParam","wrapAudioNodeDisconnectMethod","returnValue","connectionsToDestination","connection","destinationOrOutput","clear","filteredConnections","addConnectionToAudioParamOfAudioContext","nativeAudioParam","deleteInputConnectionOfAudioNode","deleteInputConnectionOfAudioParam","deleteInputsOfAudioNode","deleteInputsOfAudioParam","deleteAnyConnection","audioNodeConnectionsOfSource","destinations","deleteConnectionAtOutput","deleteConnectionToDestination","createAudioNodeConstructor","addAudioNodeConnections","addConnectionToAudioNode","createIncrementCycleCounter","createInvalidAccessError","decrementCycleCounter","detectCycles","eventTargetConstructor","isNativeAudioContext","isNativeAudioNode","isNativeAudioParam","_context","_nativeAudioNode","numberOfOutputs","isPassive","isNewConnectionToAudioNode","isNewConnectionToAudioParam","createAudioParamFactory","addAudioParamConnections","audioParamAudioNodeStore","audioParamStore","createAudioParamRenderer","isAudioParamOfOfflineAudioContext","maxValue","minValue","automationEventList","setValueAtTime","cancelAndHoldAtTime","flush","previousLastEvent","currentLastEvent","cancelScheduledValues","exponentialRampToValueAtTime","linearRampToValueAtTime","setValueCurveAtTime","RangeError","Number","isFinite","setTargetAtTime","convertedValues","firstSample","lastSample","numberOfInterpolatedValues","interpolatedValues","timeOfLastSample","ReadOnlyMap","_map","callback","thisArg","parameterData","processorOptions","createAudioWorkletNodeConstructor","addUnrenderedAudioWorkletNode","createAudioWorkletNodeRenderer","createNativeAudioWorkletNode","getBackupOfflineAudioContext","nativeAudioWorkletNodeConstructor","sanitizeAudioWorkletNodeOptions","setActiveAudioWorkletNodeInputs","_a","processorConstructor","nativeContextOrBackupOfflineAudioContext","nativeAudioWorkletNode","audioWorkletNodeRenderer","nm","_nativeAudioWorkletNode","_onprocessorerror","_parameters","onprocessorerror","nativeOnProcessorError","port","parent","channelNumber","bufferOffset","byteLength","slicedInput","BYTES_PER_ELEMENT","createNestedArrays","x","y","arrays","getAudioWorkletProcessor","nodeToProcessorMap","processBuffer","renderedBuffer","outputChannelCount","numberOfInputChannels","numberOfOutputChannels","reduce","sum","processedBuffer","audioNodeConnections","audioWorkletProcessor","prmtrs","k","potentiallyEmptyInputs","activeSourceFlag","outputChannelSplitterNodeOutput","dispatchEvent","ErrorEvent","colno","filename","lineno","message","createAudioWorkletNodeRendererFactory","connectMultipleOutputs","createNativeChannelSplitterNode","deleteUnrenderedAudioWorkletNode","disconnectMultipleOutputs","renderNativeOfflineAudioContext","renderedNativeAudioNodes","processedBufferPromise","createAudioNode","nativeOutputNodes","nativeAudioWorkletNodeIsOwnedByContext","outputChannelSplitterNode","outputChannelMergerNodes","outputGainNode","numberOfParameters","renderBuffer","partialOfflineAudioContext","gainNodes","inputChannelSplitterNodes","constantSourceNodes","inputChannelMergerNode","gainNode","audioBufferSourceNode","outputChannelMergerNode","renderedNativeAudioWorkletNodeOrGainNode","createBaseAudioContextConstructor","addAudioWorkletModule","analyserNodeConstructor","audioBufferConstructor","audioBufferSourceNodeConstructor","biquadFilterNodeConstructor","channelMergerNodeConstructor","channelSplitterNodeConstructor","constantSourceNodeConstructor","convolverNodeConstructor","decodeAudioData","delayNodeConstructor","dynamicsCompressorNodeConstructor","gainNodeConstructor","iIRFilterNodeConstructor","minimalBaseAudioContextConstructor","oscillatorNodeConstructor","pannerNodeConstructor","periodicWaveConstructor","stereoPannerNodeConstructor","waveShaperNodeConstructor","_nativeContext","_audioWorklet","maxDelayTime","feedforward","feedback","real","imag","constraints","disableNormalization","audioData","successCallback","errorCallback","createBiquadFilterNodeConstructor","createBiquadFilterNodeRenderer","createNativeBiquadFilterNode","setAudioNodeTailTime","nativeBiquadFilterNode","biquadFilterNodeRenderer","_Q","_detune","log2","_frequency","_gain","log10","_nativeBiquadFilterNode","frequencyHz","magResponse","phaseResponse","getFrequencyResponse","createBiquadFilterNodeRendererFactory","renderedNativeBiquadFilterNodes","createBiquadFilterNode","nativeBiquadFilterNodeIsOwnedByContext","renderedNativeBiquadFilterNode","createCacheTestResult","ongoingTests","testResults","tester","cachedTestResult","ongoingTest","synchronousTestResult","finalTestResult","createChannelMergerNodeConstructor","createChannelMergerNodeRenderer","nativeChannelMergerNode","channelMergerNodeRenderer","createChannelMergerNodeRendererFactory","nativeAudioNodeIsOwnedByContext","renderedNativeAudioNode","createChannelSplitterNodeConstructor","createChannelSplitterNodeRenderer","sanitizeChannelSplitterOptions","nativeChannelSplitterNode","channelSplitterNodeRenderer","createChannelSplitterNodeRendererFactory","createConnectAudioParam","renderInputsOfAudioParam","createConnectMultipleOutputs","outputAudioNodes","outputAudioNode","createConnectedNativeAudioBufferSourceNodeFactory","createConstantSourceNodeConstructor","createConstantSourceNodeRendererFactory","nativeConstantSourceNode","constantSourceNodeRenderer","_constantSourceNodeRenderer","_nativeConstantSourceNode","_offset","renderedNativeConstantSourceNodes","createConstantSourceNode","nativeConstantSourceNodeIsOwnedByContext","renderedNativeConstantSourceNode","createConvertNumberToUnsignedLong","unit32Array","createConvolverNodeConstructor","createConvolverNodeRenderer","createNativeConvolverNode","nativeConvolverNode","convolverNodeRenderer","_nativeConvolverNode","createConvolverNodeRendererFactory","renderedNativeConvolverNodes","createConvolverNode","nativeConvolverNodeIsOwnedByContext","renderedNativeConvolverNode","createCreateNativeOfflineAudioContext","detachArrayBuffer","arrayBuffer","port1","MessageChannel","postMessage","createDecodeAudioData","createDataCloneError","createEncodingError","detachedArrayBuffers","isNativeContext","testAudioBufferCopyChannelMethodsOutOfBoundsSupport","testPromiseSupport","anyContext","complete","fail","createDecrementCycleCounter","cycleCounters","getNativeAudioParam","cycleCounter","nativeDestinationAudioParam","delayTime","createDelayNodeConstructor","createDelayNodeRenderer","createNativeDelayNode","nativeDelayNode","delayNodeRenderer","_delayTime","createDelayNodeRendererFactory","renderedNativeDelayNodes","createDelayNode","nativeDelayNodeIsOwnedByContext","renderedNativeDelayNode","createDeleteActiveInputConnectionToAudioNode","createDeleteUnrenderedAudioWorkletNode","isDelayNode","createDetectCycles","getValueForKey","chain","nextLink","mergedCycles","nestedCycles","getOutputAudioNodeAtIndex","createDisconnectMultipleOutputs","attack","knee","ratio","release","threshold","createDynamicsCompressorNodeConstructor","createDynamicsCompressorNodeRenderer","createNativeDynamicsCompressorNode","nativeDynamicsCompressorNode","dynamicsCompressorNodeRenderer","_attack","_knee","_nativeDynamicsCompressorNode","_ratio","_release","_threshold","previousChannelCount","reduction","createDynamicsCompressorNodeRendererFactory","renderedNativeDynamicsCompressorNodes","createDynamicsCompressorNode","nativeDynamicsCompressorNodeIsOwnedByContext","renderedNativeDynamicsCompressorNode","createEvaluateSource","script","originalOnErrorHandler","onerror","removeErrorEventListenerAndRevokeUrl","onload","createEventTargetConstructor","_nativeEventTarget","_listeners","wrappedEventListener","createExposeCurrentFrameAndCurrentTime","currentFrame","createFetchSource","response","fetch","ok","text","createGainNodeConstructor","createGainNodeRenderer","gainNodeRenderer","createGainNodeRendererFactory","renderedNativeGainNodes","createGainNode","nativeGainNodeIsOwnedByContext","renderedNativeGainNode","createGetActiveAudioWorkletNodeInputs","activeAudioWorkletNodeInputsStore","createGetAudioNodeRenderer","createGetAudioNodeTailTime","audioNodeTailTimeStore","createGetAudioParamRenderer","createGetBackupOfflineAudioContext","backupOfflineAudioContextStore","createGetNativeContext","contextStore","createGetOrCreateBackupOfflineAudioContext","createGetUnrenderedAudioWorkletNodes","unrenderedAudioWorkletNodeStore","unrenderedAudioWorkletNodes","wrapIIRFilterNodeGetFrequencyResponseMethod","nativeIIRFilterNode","createIIRFilterNodeConstructor","createNativeIIRFilterNode","createIIRFilterNodeRenderer","iirFilterNodeRenderer","_nativeIIRFilterNode","filterBuffer","feedbackLength","feedforwardLength","minLength","xBuffer","yBuffer","bufferIndex","bufferLength","inputLength","filterFullBuffer","convertedFeedback","Float64Array","convertedFeedforward","filteredBuffer","fill","createIIRFilterNodeRendererFactory","filteredBufferPromise","nativeIIRFilterNodeIsOwnedByContext","createIIRFilter","createIncrementCycleCounterFactory","createIsAnyAudioContext","anything","createIsAnyAudioNode","audioNodeStore","createIsAnyAudioParam","createIsAnyOfflineAudioContext","createIsNativeAudioContext","createIsNativeAudioNode","AudioNode","createIsNativeAudioParam","AudioParam","createIsNativeContext","createIsNativeOfflineAudioContext","createIsSecureContext","isSecureContext","createMediaElementAudioSourceNodeConstructor","createNativeMediaElementAudioSourceNode","nativeMediaElementAudioSourceNode","_nativeMediaElementAudioSourceNode","createMediaStreamAudioDestinationNodeConstructor","createNativeMediaStreamAudioDestinationNode","nativeMediaStreamAudioDestinationNode","_nativeMediaStreamAudioDestinationNode","stream","createMediaStreamAudioSourceNodeConstructor","createNativeMediaStreamAudioSourceNode","nativeMediaStreamAudioSourceNode","_nativeMediaStreamAudioSourceNode","createMediaStreamTrackAudioSourceNodeConstructor","createNativeMediaStreamTrackAudioSourceNode","nativeMediaStreamTrackAudioSourceNode","createMinimalAudioContextConstructor","createMinimalBaseAudioContextConstructor","audioDestinationNodeConstructor","createAudioListener","_destination","_listener","_onstatechange","onstatechange","nativeOnStateChange","uint32Array","Uint32Array","createMinimalOfflineAudioContextConstructor","createNativeOfflineAudioContext","startRendering","delayStateChangeEvent","stopImmediatePropagation","_waitForThePromiseToSettle","_length","_nativeOfflineAudioContext","createMonitorConnections","whenConnected","whenDisconnected","wasDisconnected","wasConnected","isDisconnected","assignNativeAudioNodeOption","option","assignNativeAudioNodeOptions","testAnalyserNodeGetFloatTimeDomainDataMethodSupport","wrapAnalyserNodeGetFloatTimeDomainDataMethod","byteTimeDomainData","Uint8Array","createNativeAnalyserNodeFactory","createAnalyser","createNativeAudioBufferConstructor","assignNativeAudioNodeAudioParamValue","wrapAudioBufferSourceNodeStartMethodConsecutiveCalls","isScheduled","wrapAudioScheduledSourceNodeStartMethodNegativeParameters","wrapAudioScheduledSourceNodeStopMethodNegativeParameters","createNativeAudioBufferSourceNodeFactory","addSilentConnection","testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport","testAudioBufferSourceNodeStartMethodOffsetClampingSupport","testAudioBufferSourceNodeStopMethodNullifiedBufferSupport","testAudioScheduledSourceNodeStartMethodNegativeParametersSupport","testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport","testAudioScheduledSourceNodeStopMethodNegativeParametersSupport","wrapAudioBufferSourceNodeStartMethodOffsetClampling","wrapAudioBufferSourceNodeStopMethodNullifiedBuffer","wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls","createNativeAudioContextConstructor","AudioContext","webkitAudioContext","createNativeAudioDestinationNodeFactory","overwriteAccessors","isNodeOfNativeOfflineAudioContext","createNativeAudioWorkletNodeConstructor","AudioWorkletNode","testClonabilityOfAudioWorkletNodeOptions","audioWorkletNodeOptions","createNativeAudioWorkletNodeFactory","createNativeAudioWorkletNodeFaker","monitorConnections","patchedEventListeners","unpatchedEventListener","handleEvent","patchedEventListener","computeBufferSize","cloneAudioWorkletNodeOptions","port2","onmessage","onmessageerror","createAudioWorkletProcessorPromise","clonedAudioWorkletNodeOptions","createAudioWorkletProcessor","audioWorkletProcessorPromise","createNativeAudioWorkletNodeFakerFactory","getActiveAudioWorkletNodeInputs","messageChannel","bufferSize","parameterMap","nativeAudioWorkletNodeFaker","_","dWrkltPrcssr","disconnectOutputsGraph","activeInputIndexes","outputBuffer","activeInput","isConnected","disconnectFakeGraph","connectFakeGraph","createBiquadFilter","createNativeChannelMergerNodeFactory","wrapChannelMergerNode","createChannelMerger","wrapChannelSplitterNode","channelSplitterNode","createChannelSplitter","createNativeConstantSourceNodeFactory","createNativeConstantSourceNodeFaker","createConstantSource","interceptConnections","original","interceptor","createNativeConstantSourceNodeFakerFactory","audioNodeOptions","nativeConstantSourceNodeFaker","createNativeConvolverNodeFactory","createConvolver","createDelay","createNativeDynamicsCompressorNodeFactory","createDynamicsCompressor","createNativeIIRFilterNodeFactory","createNativeIIRFilterNodeFaker","divide","denominator","multiply","evaluatePolynomial","coefficient","z","createNativeIIRFilterNodeFakerFactory","bufferIndexes","xBuffers","yBuffers","nyquist","nativeIIRFilterNodeFaker","omega","PI","cos","sin","numerator","sqrt","atan2","createMediaElementSource","createMediaStreamDestination","audioStreamTracks","getAudioTracks","sort","filteredAudioStreamTracks","createMediaStreamSource","MediaStream","createNativeMediaStreamTrackAudioSourceNodeFactory","createMediaStreamTrackSource","createNativeOfflineAudioContextConstructor","OfflineAudioContext","webkitOfflineAudioContext","createNativeOscillatorNodeFactory","nativeOscillatorNode","periodicWave","setPeriodicWave","createNativePannerNodeFactory","createNativePannerNodeFaker","nativePannerNode","createPanner","orientationX","createNativePannerNodeFakerFactory","createNativeWaveShaperNode","coneInnerAngle","coneOuterAngle","coneOuterGain","distanceModel","maxDistance","orientationY","orientationZ","panningModel","refDistance","rolloffFactor","pannerNode","SINGLE_CHANNEL_OPTIONS","inputGainNode","orientationXGainNode","orientationYGainNode","orientationZGainNode","positionXGainNode","positionYGainNode","positionZGainNode","waveShaperNode","curve","oversample","nativePannerNodeFaker","createNativePeriodicWaveFactory","convertedImag","convertedReal","nativePeriodicWave","createPeriodicWave","createNativeStereoPannerNodeFactory","createNativeStereoPannerNodeFaker","createStereoPanner","nativeStereoPannerNode","createNativeStereoPannerNodeFakerFactory","CURVE_SIZE","DC_CURVE","HALF_PI","SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS","buildInternalGraphForMono","panGainNode","leftWaveShaperCurve","rightWaveShaperCurve","leftGainNode","leftWaveShaperNode","panWaveShaperNode","rightGainNode","rightWaveShaperNode","buildInternalGraphForStereo","leftInputForLeftOutputWaveShaperCurve","leftInputForRightOutputWaveShaperCurve","rightInputForLeftOutputWaveShaperCurve","rightInputForRightOutputWaveShaperCurve","centerIndex","leftInputForLeftOutputGainNode","leftInputForLeftOutputWaveShaperNode","leftInputForRightOutputGainNode","leftInputForRightOutputWaveShaperNode","rightInputForLeftOutputGainNode","rightInputForLeftOutputWaveShaperNode","rightInputForRightOutputGainNode","rightInputForRightOutputWaveShaperNode","buildInternalGraph","connectGraph","disconnectGraph","nativeStereoPannerNodeFakerFactory","createNativeWaveShaperNodeFactory","createConnectedNativeAudioBufferSourceNode","createNativeWaveShaperNodeFaker","isDCCurve","nativeWaveShaperNode","createWaveShaper","disconnectNativeAudioBufferSourceNode","createNativeWaveShaperNodeFakerFactory","negativeWaveShaperNode","positiveWaveShaperNode","invertGainNode","revertGainNode","unmodifiedCurve","nativeWaveShaperNodeFaker","curveLength","negativeCurve","positiveCurve","createOfflineAudioContextConstructor","createOscillatorNodeConstructor","createNativeOscillatorNode","createOscillatorNodeRenderer","oscillatorNodeRenderer","_oscillatorNodeRenderer","createOscillatorNodeRendererFactory","renderedNativeOscillatorNodes","createOscillatorNode","nativeOscillatorNodeIsOwnedByContext","renderedNativeOscillatorNode","createPannerNodeConstructor","createNativePannerNode","createPannerNodeRenderer","pannerNodeRenderer","_nativePannerNode","_orientationX","_orientationY","_orientationZ","_positionX","_positionY","_positionZ","createPannerNodeRendererFactory","renderedBufferPromise","commonAudioNodeOptions","commonNativePannerNodeOptions","nativePannerNodeIsOwnedByContext","nativeConstantSourceNodes","channelDatas","gateGainNode","partialPannerNode","renderedNativeGainNodeOrNativePannerNode","createPeriodicWaveConstructor","createNativePeriodicWave","periodicWaveStore","sanitizePeriodicWaveOptions","PeriodicWave","createRenderAutomation","getAudioParamRenderer","replay","createRenderInputsOfAudioNode","getAudioNodeRenderer","nextTrace","allRenderingPromises","renderingPromises","createRenderInputsOfAudioParam","createRenderNativeOfflineAudioContext","testOfflineAudioContextCurrentTimeSupport","isOfflineAudioContextCurrentTimeSupported","oncomplete","createSetActiveAudioWorkletNodeInputs","createSetAudioNodeTailTime","createStartRendering","createStereoPannerNodeConstructor","createNativeStereoPannerNode","createStereoPannerNodeRenderer","stereoPannerNodeRenderer","_pan","createStereoPannerNodeRendererFactory","renderedNativeStereoPannerNodes","createStereoPannerNode","nativeStereoPannerNodeIsOwnedByContext","renderedNativeStereoPannerNode","createTestAudioBufferConstructorSupport","createTestAudioWorkletProcessorPostMessageSupport","offlineAudioContext","isEmittingMessageEvents","isEmittingProcessorErrorEvents","oscillator","createTestOfflineAudioContextCurrentTimeSupport","createWaveShaperNodeConstructor","createWaveShaperNodeRenderer","waveShaperNodeRenderer","_isCurveNullified","_nativeWaveShaperNode","createWaveShaperNodeRendererFactory","renderedNativeWaveShaperNodes","createWaveShaperNode","nativeWaveShaperNodeIsOwnedByContext","renderedNativeWaveShaperNode","createWindow","createWrapAudioBufferCopyChannelMethods","convertNumberToUnsignedLong","channelNumberAsNumber","bufferOffsetAsNumber","audioBufferLength","destinationLength","sourceLength","createWrapAudioBufferCopyChannelMethodsOutOfBounds","createWrapAudioBufferSourceNodeStopMethodNullifiedBuffer","nullifiedBuffer","createWrapChannelMergerNode","createGetter","createSetter","wrapAudioBufferSourceNodeStartMethodOffsetClamping","clampedOffset","disconnectGainNode","isStopped","currentTarget","createConstantSourceNodeRenderer","audioContextConstructor","audioWorkletNodeConstructor","offlineAudioContextConstructor","isAnyAudioContext","isAnyAudioNode","isAnyAudioParam","isAnyOfflineAudioContext","assert","statement","assertRange","gte","lte","Infinity","assertContextRunning","warn","defaultLogger","console","log","isUndef","isDefined","isFunction","isNumber","isBoolean","isString","isNote","createAudioContext","createOfflineAudioContext","channels","theWindow","hasAudioContext","createAudioWorkletNode","__decorate","decorators","Reflect","decorate","__awaiter","_arguments","generator","adopt","fulfilled","rejected","Ticker","updateInterval","_callback","_type","_updateInterval","_createClock","toFixed","blobUrl","worker","Worker","_worker","_timeout","_createTimeout","_createWorker","clearTimeout","terminate","interval","_disposeClock","isAudioParam","isOfflineAudioContext","isAudioContext","isAudioBuffer","noCopy","deepMerge","shift","assign","deepEquals","arrayA","arrayB","optionsFromArguments","defaults","argsArray","objKey","opts","partOfDefaults","getDefaultsFromInstance","getDefaults","defaultArg","given","fallback","omitFromObject","omit","prop","debug","_wasDisposed","TONE_DEBUG_CLASS","EPSILON","GTE","EQ","abs","clamp","_timeline","memory","increasing","lastValue","_search","diff","param","after","beginning","midPoint","nextEvent","testEvent","lowerBound","upperBound","_iterate","dispose","notifyNewContext","onContextInit","cb","initializeContext","ctx","notifyCloseContext","onContextClose","closeContext","events","eventName","_events","boundCallback","off","eventList","constr","_constants","_timeouts","_timeoutIds","_initialized","_workletModules","_ticker","emit","clockSource","_timeoutLoop","_setLatencyHint","lookAhead","feedForward","initialize","_transport","_draw","rawContext","promises","_latencyHint","hint","lookAheadValue","constant","now","firstEvent","peek","timeout","intervalFn","_numberOfChannels","_sampleRate","_numberOfInputs","_numberOfOutputs","_maxDelayTime","_feedForward","_feedback","_real","_imag","_constraints","_stream","_audioData","_name","_url","_fn","_id","_interval","_val","readOnly","str","noOp","reverse","load","_buffer","getContext","loaded","_reversed","_reverse","doneLoading","downloads","isMultidimensional","multiChannelArray","chanNum","fromArray","toArray","outputArray","numChannels","channelArray","ret","startSamples","endSamples","retBuffer","subarray","rev","matches","extensions","extension","ext","supportsType","baseUrl","endsWith","canPlayType","_currentTime","_duration","asynchronous","yieldEvery","workletsAreReady","_renderClock","dummyContext","globalContext","setContext","TONE_SILENCE_LOGGING","prefix","printString","dbToGain","db","gainToDb","LN10","intervalToFrequencyRatio","A4","getA4","setA4","freq","ftom","ftomf","mtof","midi","units","defaultUnits","_units","_expressions","_getExpressions","hz","_frequencyToUnits","parseFloat","_ticksToUnits","_beatsToUnits","_getTimeSignature","dot","numericValue","scalar","number","_secondsToUnits","samples","tr","q","total","fromType","_noArg","typeName","quantity","expr","matching","beats","_getBpm","seconds","ticks","_getPPQ","_now","transport","bpm","timeSignature","PPQ","toSeconds","toTicks","toFrequency","toMidi","capture","quantize","quantTo","nextSubdivision","subdiv","percent","subdivision","multiple","ideal","testNotations","power","closest","closestSeconds","notation","notationSeconds","quarterTime","quarters","measures","sixteenths","sixteenthString","progress","pitch","octave","noteToScaleIndex","noteNumber","intervals","transpose","noteName","scaleIndexToNote","cbb","cx","dbb","dx","ebb","eb","ex","fbb","fb","fx","gbb","gb","gx","abb","ab","ax","bbb","bb","bx","defaultContext","attribute","member","_getPartialProperties","initial","_initial","setStateAtTime","overridden","_minOutput","_param","_swappable","swappable","_initialValue","convert","_minValue","_maxValue","_toType","getValueAtTime","_fromType","_is","computedTime","_assertRange","getAfter","before","beforeValue","previous","getBefore","_linearInterpolate","_exponentialInterpolate","previousVal","_exponentialApproach","currentVal","rampTime","setRampPoint","exponentialApproachValueAtTime","scaling","startingValue","segTime","cancel","valueAtTime","sampleTime","exponentialRampTo","linearRampTo","previousEvent","subdivisions","forEachAfter","t0","v0","v1","t1","_internalChannels","node","nodeList","_isAudioNode","_getInternalNodes","_getChannelProperties","_setChannelProperties","outputNum","inputNum","toDestination","nodes","connectSeries","prev","current","srcNode","dstNode","outputNumber","inputNumber","_gainNode","_stopTime","getStateAtTime","_fadeIn","fadeIn","_fadeOut","fadeOut","_curve","fadeInTime","_stopGain","cancelStop","fadeOutTime","targetRampTo","additionalTail","_stopSource","disposeCallback","requestIdleCallback","_source","_startGain","override","_constantSource","connectSignal","rampTo","signal","_multiplier","multiplier","computedValue","prevEvent","segments","rampVal","ticksUntilTime","_getTicksUntilEvent","computedVal","segmentDur","val0","val1","onTheLineEvent","currentTick","getTicksAtTime","getTimeOfTick","tick","delta","sol1","sol2","getDurationOfTicks","computedDuration","startTicks","endTicks","ticksToTime","timeToTicks","_tickOffset","setTicksAtTime","stopEvent","getLastState","tmpEvent","lastState","elapsedTicks","forEachBetween","periodStartTime","offsetEvent","getSecondsAtTime","elapsedSeconds","absoluteTicks","lastStateEvent","forEachTickBetween","maxStartTime","ticksAtStart","nextTickTime","_lastUpdate","_boundLoop","_loop","_tickSource","pause","mixin","_buffers","_loadingCount","urls","_bufferLoaded","expiration","anticipation","_boundDrawLoop","_drawLoop","_animationFrame","requestAnimationFrame","cancelAnimationFrame","draw","_root","IntervalNode","insert","updateHeight","updateMax","_rebalance","results","search","_removeNode","forEachFrom","isLeftChild","left","right","_setRoot","_replaceNodeInParent","balance","getBalance","pivotNode","_rotateLeft","_rotateRight","low","allNodes","traverse","searchAfter","high","_left","_right","height","volume","_unmutedVolume","mute","initialValue","_eventId","_once","once","_currentId","_nextId","_nextTick","_boundRestart","_restart","_createEvents","invoke","scheduleOnce","_loopStart","_loopEnd","_scheduledEvents","_repeatedEvents","_syncedSignals","_swingAmount","_ppq","ppq","_clock","_processTick","_bindClockEvents","_timeSignature","_swingTicks","swing","swingSubdivision","tickTime","amount","forEachAtTime","_addEvent","eventId","timeline","computedAfter","offsetTicks","timeSig","startPosition","endPosition","toNotation","toBarsBeatsSixteenths","transportPos","remainingTicks","computedFreq","ratioSignal","syncedSignal","_synced","_scheduled","_syncedStart","_syncedStop","_volume","onstop","_clampToCurrentTime","sched","schedule","_start","immediate","restart","getNextState","_stop","stateEvent","startOffset","unsync","_sourceStarted","_sourceStopped","computedOffset","loopDuration","computedDur","generateWaveform","clone","_oscillator","_partials","partials","_partialCount","partialCount","baseType","phase","_wave","syncSignal","unsyncSignal","oscProps","_periodicWaveCache","_phase","isBasicType","_getCachedPeriodicWave","wave","_getRealImaginary","partial","fullPartials","v","periodicWaveSize","piFactor","twoPi","testPositions","_inverseFFT","_shaper","setMap","normalized","oversampling","isOverSampleType","_norm","_mult","factor","_modulationScale","_modulationNode","_carrier","_modulator","modulationType","harmonicity","modulationIndex","_widthGate","_thresh","_triangle","_oscillators","_spread","spread","_forEach","osc","sourceType","_scale","_pulse","modulationFrequency","carrierType","OmniOscillatorSourceMap","am","fat","fm","pulse","pwm","_sourceType","substr","_createNewOscillator","_getOscType","oscType","OscConstructor","oldOsc","blockTime","sType","mType","range","valueMap","newValue","timeRange","_activeSources","_onload","autostart","origDuration","_onSourceEnd","implicitEnd","rate","_sig","decay","sustain","attackCurve","releaseCurve","decayCurve","direction","curveName","EnvelopeCurves","curveDef","_getCurve","_attackCurve","_setCurve","_releaseCurve","_decayCurve","velocity","originalAttack","currentValue","attackRate","remainingDistance","decayValue","decayStart","triggerAttack","triggerRelease","attackPortion","envelopeDuration","sustainTime","totalDuration","triggerAttackRelease","curveLen","cosineCurve","rippleCurve","rippleCurveFreq","sineWave","stairsCurve","steps","sineCurve","bounceCurve","invertCurve","out","reverseCurve","bounce","In","Out","cosine","exponential","linear","ripple","sine","_original_triggerAttack","_original_triggerRelease","_syncState","_syncMethod","changed","timePosition","originalMethod","portamento","onsilence","_triggerEnvelopeAttack","setNote","_triggerEnvelopeRelease","computedFrequency","getLevelAtTime","portTime","envelope","computedAttack","computedDecay","pitchDecay","octaves","hertz","maxNote","workletContext","addToWorklet","classOrFunction","registerProcessor","classDesc","processor","toneAudioWorkletProcessor","singleIOProcess","delayLine","workletName","feedbackCombFilter","urlMap","mid","MAX_INTERVAL","notes","midiFloat","remainder","difference","_findClosest","closestNote","_panner","bitCrusherWorklet","_allSolos","solo","_isSoloed","_addSolo","_removeSolo","_updateSolo","_soloed","_noSolos","_solo","_panVol","muted","buses","bus","_getBus","sendKnob","allKeys","whiteNoteColor","blackNoteColor","showKeys","showNotes","startOctave","endOctave","watch","regenerate","created","synth","generateNotes","generateNotesIndexesByKey","onmouseup","destroyed","playNote","normalizeComponent","scriptExports","functionalTemplate","injectStyles","scopeId","moduleIdentifier","shadowMode","hook","_compiled","functional","_scopeId","$vnode","ssrContext","__VUE_SSR_CONTEXT__","_registeredComponents","_ssrRegister","$root","$options","shadowRoot","_injectStyles","originalRender","h","existing","beforeCreate","component","arrayMethodHasSpeciesSupport","arrayMethodUsesToLength","HAS_SPECIES_SUPPORT","USES_TO_LENGTH","0","nativeSlice","fin","CSSRuleList","CSSStyleDeclaration","CSSValueList","ClientRectList","DOMRectList","DOMStringList","DOMTokenList","DataTransferItemList","FileList","HTMLAllCollection","HTMLCollection","HTMLFormElement","HTMLSelectElement","MediaList","MimeTypeArray","NamedNodeMap","NodeList","PaintRequestList","Plugin","PluginArray","SVGLengthList","SVGNumberList","SVGPathSegList","SVGPointList","SVGStringList","SVGTransformList","SourceBufferList","StyleSheetList","TextTrackCueList","TextTrackList","TouchList"],"mappings":"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","file":"pianoKeyboard.umd.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"pianoKeyboard\"] = factory();\n\telse\n\t\troot[\"pianoKeyboard\"] = factory();\n})((typeof self !== 'undefined' ? self : this), function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"fb15\");\n","var wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\nvar test = {};\n\ntest[TO_STRING_TAG] = 'z';\n\nmodule.exports = String(test) === '[object z]';\n","var aFunction = require('../internals/a-function');\n\n// optional / simple context binding\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 0: return function () {\n      return fn.call(that);\n    };\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n","(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@babel/runtime/helpers/slicedToArray'), require('@babel/runtime/helpers/classCallCheck'), require('@babel/runtime/helpers/createClass')) :\n    typeof define === 'function' && define.amd ? define(['exports', '@babel/runtime/helpers/slicedToArray', '@babel/runtime/helpers/classCallCheck', '@babel/runtime/helpers/createClass'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.automationEvents = {}, global._slicedToArray, global._classCallCheck, global._createClass));\n}(this, (function (exports, _slicedToArray, _classCallCheck, _createClass) { 'use strict';\n\n    function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\n    var _slicedToArray__default = /*#__PURE__*/_interopDefaultLegacy(_slicedToArray);\n    var _classCallCheck__default = /*#__PURE__*/_interopDefaultLegacy(_classCallCheck);\n    var _createClass__default = /*#__PURE__*/_interopDefaultLegacy(_createClass);\n\n    var createExtendedExponentialRampToValueAutomationEvent = function createExtendedExponentialRampToValueAutomationEvent(value, endTime, insertTime) {\n      return {\n        endTime: endTime,\n        insertTime: insertTime,\n        type: 'exponentialRampToValue',\n        value: value\n      };\n    };\n\n    var createExtendedLinearRampToValueAutomationEvent = function createExtendedLinearRampToValueAutomationEvent(value, endTime, insertTime) {\n      return {\n        endTime: endTime,\n        insertTime: insertTime,\n        type: 'linearRampToValue',\n        value: value\n      };\n    };\n\n    var createSetValueAutomationEvent = function createSetValueAutomationEvent(value, startTime) {\n      return {\n        startTime: startTime,\n        type: 'setValue',\n        value: value\n      };\n    };\n\n    var createSetValueCurveAutomationEvent = function createSetValueCurveAutomationEvent(values, startTime, duration) {\n      return {\n        duration: duration,\n        startTime: startTime,\n        type: 'setValueCurve',\n        values: values\n      };\n    };\n\n    var getTargetValueAtTime = function getTargetValueAtTime(time, valueAtStartTime, _ref) {\n      var startTime = _ref.startTime,\n          target = _ref.target,\n          timeConstant = _ref.timeConstant;\n      return target + (valueAtStartTime - target) * Math.exp((startTime - time) / timeConstant);\n    };\n\n    var isExponentialRampToValueAutomationEvent = function isExponentialRampToValueAutomationEvent(automationEvent) {\n      return automationEvent.type === 'exponentialRampToValue';\n    };\n\n    var isLinearRampToValueAutomationEvent = function isLinearRampToValueAutomationEvent(automationEvent) {\n      return automationEvent.type === 'linearRampToValue';\n    };\n\n    var isAnyRampToValueAutomationEvent = function isAnyRampToValueAutomationEvent(automationEvent) {\n      return isExponentialRampToValueAutomationEvent(automationEvent) || isLinearRampToValueAutomationEvent(automationEvent);\n    };\n\n    var isSetValueAutomationEvent = function isSetValueAutomationEvent(automationEvent) {\n      return automationEvent.type === 'setValue';\n    };\n\n    var isSetValueCurveAutomationEvent = function isSetValueCurveAutomationEvent(automationEvent) {\n      return automationEvent.type === 'setValueCurve';\n    };\n\n    var getValueOfAutomationEventAtIndexAtTime = function getValueOfAutomationEventAtIndexAtTime(automationEvents, index, time, defaultValue) {\n      var automationEvent = automationEvents[index];\n      return automationEvent === undefined ? defaultValue : isAnyRampToValueAutomationEvent(automationEvent) || isSetValueAutomationEvent(automationEvent) ? automationEvent.value : isSetValueCurveAutomationEvent(automationEvent) ? automationEvent.values[automationEvent.values.length - 1] : getTargetValueAtTime(time, getValueOfAutomationEventAtIndexAtTime(automationEvents, index - 1, automationEvent.startTime, defaultValue), automationEvent);\n    };\n\n    var getEndTimeAndValueOfPreviousAutomationEvent = function getEndTimeAndValueOfPreviousAutomationEvent(automationEvents, index, currentAutomationEvent, nextAutomationEvent, defaultValue) {\n      return currentAutomationEvent === undefined ? [nextAutomationEvent.insertTime, defaultValue] : isAnyRampToValueAutomationEvent(currentAutomationEvent) ? [currentAutomationEvent.endTime, currentAutomationEvent.value] : isSetValueAutomationEvent(currentAutomationEvent) ? [currentAutomationEvent.startTime, currentAutomationEvent.value] : isSetValueCurveAutomationEvent(currentAutomationEvent) ? [currentAutomationEvent.startTime + currentAutomationEvent.duration, currentAutomationEvent.values[currentAutomationEvent.values.length - 1]] : [currentAutomationEvent.startTime, getValueOfAutomationEventAtIndexAtTime(automationEvents, index - 1, currentAutomationEvent.startTime, defaultValue)];\n    };\n\n    var isCancelAndHoldAutomationEvent = function isCancelAndHoldAutomationEvent(automationEvent) {\n      return automationEvent.type === 'cancelAndHold';\n    };\n\n    var isCancelScheduledValuesAutomationEvent = function isCancelScheduledValuesAutomationEvent(automationEvent) {\n      return automationEvent.type === 'cancelScheduledValues';\n    };\n\n    var getEventTime = function getEventTime(automationEvent) {\n      if (isCancelAndHoldAutomationEvent(automationEvent) || isCancelScheduledValuesAutomationEvent(automationEvent)) {\n        return automationEvent.cancelTime;\n      }\n\n      if (isExponentialRampToValueAutomationEvent(automationEvent) || isLinearRampToValueAutomationEvent(automationEvent)) {\n        return automationEvent.endTime;\n      }\n\n      return automationEvent.startTime;\n    };\n\n    var getExponentialRampValueAtTime = function getExponentialRampValueAtTime(time, startTime, valueAtStartTime, _ref) {\n      var endTime = _ref.endTime,\n          value = _ref.value;\n\n      if (valueAtStartTime === value) {\n        return value;\n      }\n\n      if (0 < valueAtStartTime && 0 < value || valueAtStartTime < 0 && value < 0) {\n        return valueAtStartTime * Math.pow(value / valueAtStartTime, (time - startTime) / (endTime - startTime));\n      }\n\n      return 0;\n    };\n\n    var getLinearRampValueAtTime = function getLinearRampValueAtTime(time, startTime, valueAtStartTime, _ref) {\n      var endTime = _ref.endTime,\n          value = _ref.value;\n      return valueAtStartTime + (time - startTime) / (endTime - startTime) * (value - valueAtStartTime);\n    };\n\n    var interpolateValue = function interpolateValue(values, theoreticIndex) {\n      var lowerIndex = Math.floor(theoreticIndex);\n      var upperIndex = Math.ceil(theoreticIndex);\n\n      if (lowerIndex === upperIndex) {\n        return values[lowerIndex];\n      }\n\n      return (1 - (theoreticIndex - lowerIndex)) * values[lowerIndex] + (1 - (upperIndex - theoreticIndex)) * values[upperIndex];\n    };\n\n    var getValueCurveValueAtTime = function getValueCurveValueAtTime(time, _ref) {\n      var duration = _ref.duration,\n          startTime = _ref.startTime,\n          values = _ref.values;\n      var theoreticIndex = (time - startTime) / duration * (values.length - 1);\n      return interpolateValue(values, theoreticIndex);\n    };\n\n    var isSetTargetAutomationEvent = function isSetTargetAutomationEvent(automationEvent) {\n      return automationEvent.type === 'setTarget';\n    };\n\n    var AutomationEventList = /*#__PURE__*/function () {\n      function AutomationEventList(defaultValue) {\n        _classCallCheck__default['default'](this, AutomationEventList);\n\n        this._automationEvents = [];\n        this._currenTime = 0;\n        this._defaultValue = defaultValue;\n      }\n\n      _createClass__default['default'](AutomationEventList, [{\n        key: Symbol.iterator,\n        value: function value() {\n          return this._automationEvents[Symbol.iterator]();\n        }\n      }, {\n        key: \"add\",\n        value: function add(automationEvent) {\n          var eventTime = getEventTime(automationEvent);\n\n          if (isCancelAndHoldAutomationEvent(automationEvent) || isCancelScheduledValuesAutomationEvent(automationEvent)) {\n            var index = this._automationEvents.findIndex(function (currentAutomationEvent) {\n              if (isCancelScheduledValuesAutomationEvent(automationEvent) && isSetValueCurveAutomationEvent(currentAutomationEvent)) {\n                return currentAutomationEvent.startTime + currentAutomationEvent.duration >= eventTime;\n              }\n\n              return getEventTime(currentAutomationEvent) >= eventTime;\n            });\n\n            var removedAutomationEvent = this._automationEvents[index];\n\n            if (index !== -1) {\n              this._automationEvents = this._automationEvents.slice(0, index);\n            }\n\n            if (isCancelAndHoldAutomationEvent(automationEvent)) {\n              var lastAutomationEvent = this._automationEvents[this._automationEvents.length - 1];\n\n              if (removedAutomationEvent !== undefined && isAnyRampToValueAutomationEvent(removedAutomationEvent)) {\n                if (isSetTargetAutomationEvent(lastAutomationEvent)) {\n                  throw new Error('The internal list is malformed.');\n                }\n\n                var startTime = isSetValueCurveAutomationEvent(lastAutomationEvent) ? lastAutomationEvent.startTime + lastAutomationEvent.duration : getEventTime(lastAutomationEvent);\n                var startValue = isSetValueCurveAutomationEvent(lastAutomationEvent) ? lastAutomationEvent.values[lastAutomationEvent.values.length - 1] : lastAutomationEvent.value;\n                var value = isExponentialRampToValueAutomationEvent(removedAutomationEvent) ? getExponentialRampValueAtTime(eventTime, startTime, startValue, removedAutomationEvent) : getLinearRampValueAtTime(eventTime, startTime, startValue, removedAutomationEvent);\n                var truncatedAutomationEvent = isExponentialRampToValueAutomationEvent(removedAutomationEvent) ? createExtendedExponentialRampToValueAutomationEvent(value, eventTime, this._currenTime) : createExtendedLinearRampToValueAutomationEvent(value, eventTime, this._currenTime);\n\n                this._automationEvents.push(truncatedAutomationEvent);\n              }\n\n              if (lastAutomationEvent !== undefined && isSetTargetAutomationEvent(lastAutomationEvent)) {\n                this._automationEvents.push(createSetValueAutomationEvent(this.getValue(eventTime), eventTime));\n              }\n\n              if (lastAutomationEvent !== undefined && isSetValueCurveAutomationEvent(lastAutomationEvent) && lastAutomationEvent.startTime + lastAutomationEvent.duration > eventTime) {\n                this._automationEvents[this._automationEvents.length - 1] = createSetValueCurveAutomationEvent(new Float32Array([6, 7]), lastAutomationEvent.startTime, eventTime - lastAutomationEvent.startTime);\n              }\n            }\n          } else {\n            var _index = this._automationEvents.findIndex(function (currentAutomationEvent) {\n              return getEventTime(currentAutomationEvent) > eventTime;\n            });\n\n            var previousAutomationEvent = _index === -1 ? this._automationEvents[this._automationEvents.length - 1] : this._automationEvents[_index - 1];\n\n            if (previousAutomationEvent !== undefined && isSetValueCurveAutomationEvent(previousAutomationEvent) && getEventTime(previousAutomationEvent) + previousAutomationEvent.duration > eventTime) {\n              return false;\n            }\n\n            var persistentAutomationEvent = isExponentialRampToValueAutomationEvent(automationEvent) ? createExtendedExponentialRampToValueAutomationEvent(automationEvent.value, automationEvent.endTime, this._currenTime) : isLinearRampToValueAutomationEvent(automationEvent) ? createExtendedLinearRampToValueAutomationEvent(automationEvent.value, eventTime, this._currenTime) : automationEvent;\n\n            if (_index === -1) {\n              this._automationEvents.push(persistentAutomationEvent);\n            } else {\n              if (isSetValueCurveAutomationEvent(automationEvent) && eventTime + automationEvent.duration > getEventTime(this._automationEvents[_index])) {\n                return false;\n              }\n\n              this._automationEvents.splice(_index, 0, persistentAutomationEvent);\n            }\n          }\n\n          return true;\n        }\n      }, {\n        key: \"flush\",\n        value: function flush(time) {\n          var index = this._automationEvents.findIndex(function (currentAutomationEvent) {\n            return getEventTime(currentAutomationEvent) > time;\n          });\n\n          if (index > 1) {\n            var remainingAutomationEvents = this._automationEvents.slice(index - 1);\n\n            var firstRemainingAutomationEvent = remainingAutomationEvents[0];\n\n            if (isSetTargetAutomationEvent(firstRemainingAutomationEvent)) {\n              remainingAutomationEvents.unshift(createSetValueAutomationEvent(getValueOfAutomationEventAtIndexAtTime(this._automationEvents, index - 2, firstRemainingAutomationEvent.startTime, this._defaultValue), firstRemainingAutomationEvent.startTime));\n            }\n\n            this._automationEvents = remainingAutomationEvents;\n          }\n        }\n      }, {\n        key: \"getValue\",\n        value: function getValue(time) {\n          if (this._automationEvents.length === 0) {\n            return this._defaultValue;\n          }\n\n          var lastAutomationEvent = this._automationEvents[this._automationEvents.length - 1];\n\n          var index = this._automationEvents.findIndex(function (automationEvent) {\n            return getEventTime(automationEvent) > time;\n          });\n\n          var nextAutomationEvent = this._automationEvents[index];\n          var currentAutomationEvent = getEventTime(lastAutomationEvent) <= time ? lastAutomationEvent : this._automationEvents[index - 1];\n\n          if (currentAutomationEvent !== undefined && isSetTargetAutomationEvent(currentAutomationEvent) && (nextAutomationEvent === undefined || !isAnyRampToValueAutomationEvent(nextAutomationEvent) || nextAutomationEvent.insertTime > time)) {\n            return getTargetValueAtTime(time, getValueOfAutomationEventAtIndexAtTime(this._automationEvents, index - 2, currentAutomationEvent.startTime, this._defaultValue), currentAutomationEvent);\n          }\n\n          if (currentAutomationEvent !== undefined && isSetValueAutomationEvent(currentAutomationEvent) && (nextAutomationEvent === undefined || !isAnyRampToValueAutomationEvent(nextAutomationEvent))) {\n            return currentAutomationEvent.value;\n          }\n\n          if (currentAutomationEvent !== undefined && isSetValueCurveAutomationEvent(currentAutomationEvent) && (nextAutomationEvent === undefined || !isAnyRampToValueAutomationEvent(nextAutomationEvent) || currentAutomationEvent.startTime + currentAutomationEvent.duration > time)) {\n            if (time < currentAutomationEvent.startTime + currentAutomationEvent.duration) {\n              return getValueCurveValueAtTime(time, currentAutomationEvent);\n            }\n\n            return currentAutomationEvent.values[currentAutomationEvent.values.length - 1];\n          }\n\n          if (currentAutomationEvent !== undefined && isAnyRampToValueAutomationEvent(currentAutomationEvent) && (nextAutomationEvent === undefined || !isAnyRampToValueAutomationEvent(nextAutomationEvent))) {\n            return currentAutomationEvent.value;\n          }\n\n          if (nextAutomationEvent !== undefined && isExponentialRampToValueAutomationEvent(nextAutomationEvent)) {\n            var _getEndTimeAndValueOf = getEndTimeAndValueOfPreviousAutomationEvent(this._automationEvents, index - 1, currentAutomationEvent, nextAutomationEvent, this._defaultValue),\n                _getEndTimeAndValueOf2 = _slicedToArray__default['default'](_getEndTimeAndValueOf, 2),\n                startTime = _getEndTimeAndValueOf2[0],\n                value = _getEndTimeAndValueOf2[1];\n\n            return getExponentialRampValueAtTime(time, startTime, value, nextAutomationEvent);\n          }\n\n          if (nextAutomationEvent !== undefined && isLinearRampToValueAutomationEvent(nextAutomationEvent)) {\n            var _getEndTimeAndValueOf3 = getEndTimeAndValueOfPreviousAutomationEvent(this._automationEvents, index - 1, currentAutomationEvent, nextAutomationEvent, this._defaultValue),\n                _getEndTimeAndValueOf4 = _slicedToArray__default['default'](_getEndTimeAndValueOf3, 2),\n                _startTime = _getEndTimeAndValueOf4[0],\n                _value = _getEndTimeAndValueOf4[1];\n\n            return getLinearRampValueAtTime(time, _startTime, _value, nextAutomationEvent);\n          }\n\n          return this._defaultValue;\n        }\n      }]);\n\n      return AutomationEventList;\n    }();\n\n    var createCancelAndHoldAutomationEvent = function createCancelAndHoldAutomationEvent(cancelTime) {\n      return {\n        cancelTime: cancelTime,\n        type: 'cancelAndHold'\n      };\n    };\n\n    var createCancelScheduledValuesAutomationEvent = function createCancelScheduledValuesAutomationEvent(cancelTime) {\n      return {\n        cancelTime: cancelTime,\n        type: 'cancelScheduledValues'\n      };\n    };\n\n    var createExponentialRampToValueAutomationEvent = function createExponentialRampToValueAutomationEvent(value, endTime) {\n      return {\n        endTime: endTime,\n        type: 'exponentialRampToValue',\n        value: value\n      };\n    };\n\n    var createLinearRampToValueAutomationEvent = function createLinearRampToValueAutomationEvent(value, endTime) {\n      return {\n        endTime: endTime,\n        type: 'linearRampToValue',\n        value: value\n      };\n    };\n\n    var createSetTargetAutomationEvent = function createSetTargetAutomationEvent(target, startTime, timeConstant) {\n      return {\n        startTime: startTime,\n        target: target,\n        timeConstant: timeConstant,\n        type: 'setTarget'\n      };\n    };\n\n    exports.AutomationEventList = AutomationEventList;\n    exports.createCancelAndHoldAutomationEvent = createCancelAndHoldAutomationEvent;\n    exports.createCancelScheduledValuesAutomationEvent = createCancelScheduledValuesAutomationEvent;\n    exports.createExponentialRampToValueAutomationEvent = createExponentialRampToValueAutomationEvent;\n    exports.createLinearRampToValueAutomationEvent = createLinearRampToValueAutomationEvent;\n    exports.createSetTargetAutomationEvent = createSetTargetAutomationEvent;\n    exports.createSetValueAutomationEvent = createSetValueAutomationEvent;\n    exports.createSetValueCurveAutomationEvent = createSetValueCurveAutomationEvent;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","var toIndexedObject = require('../internals/to-indexed-object');\nvar nativeGetOwnPropertyNames = require('../internals/object-get-own-property-names').f;\n\nvar toString = {}.toString;\n\nvar windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames\n  ? Object.getOwnPropertyNames(window) : [];\n\nvar getWindowNames = function (it) {\n  try {\n    return nativeGetOwnPropertyNames(it);\n  } catch (error) {\n    return windowNames.slice();\n  }\n};\n\n// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window\nmodule.exports.f = function getOwnPropertyNames(it) {\n  return windowNames && toString.call(it) == '[object Window]'\n    ? getWindowNames(it)\n    : nativeGetOwnPropertyNames(toIndexedObject(it));\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar propertyIsEnumerableModule = require('../internals/object-property-is-enumerable');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar toPrimitive = require('../internals/to-primitive');\nvar has = require('../internals/has');\nvar IE8_DOM_DEFINE = require('../internals/ie8-dom-define');\n\nvar nativeGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n\n// `Object.getOwnPropertyDescriptor` method\n// https://tc39.github.io/ecma262/#sec-object.getownpropertydescriptor\nexports.f = DESCRIPTORS ? nativeGetOwnPropertyDescriptor : function getOwnPropertyDescriptor(O, P) {\n  O = toIndexedObject(O);\n  P = toPrimitive(P, true);\n  if (IE8_DOM_DEFINE) try {\n    return nativeGetOwnPropertyDescriptor(O, P);\n  } catch (error) { /* empty */ }\n  if (has(O, P)) return createPropertyDescriptor(!propertyIsEnumerableModule.f.call(O, P), O[P]);\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar fails = require('../internals/fails');\nvar createElement = require('../internals/document-create-element');\n\n// Thank's IE8 for his funny defineProperty\nmodule.exports = !DESCRIPTORS && !fails(function () {\n  return Object.defineProperty(createElement('div'), 'a', {\n    get: function () { return 7; }\n  }).a != 7;\n});\n","var getBuiltIn = require('../internals/get-built-in');\n\nmodule.exports = getBuiltIn('document', 'documentElement');\n","module.exports = function (it) {\n  if (typeof it != 'function') {\n    throw TypeError(String(it) + ' is not a function');\n  } return it;\n};\n","var wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar ITERATOR = wellKnownSymbol('iterator');\nvar SAFE_CLOSING = false;\n\ntry {\n  var called = 0;\n  var iteratorWithReturn = {\n    next: function () {\n      return { done: !!called++ };\n    },\n    'return': function () {\n      SAFE_CLOSING = true;\n    }\n  };\n  iteratorWithReturn[ITERATOR] = function () {\n    return this;\n  };\n  // eslint-disable-next-line no-throw-literal\n  Array.from(iteratorWithReturn, function () { throw 2; });\n} catch (error) { /* empty */ }\n\nmodule.exports = function (exec, SKIP_CLOSING) {\n  if (!SKIP_CLOSING && !SAFE_CLOSING) return false;\n  var ITERATION_SUPPORT = false;\n  try {\n    var object = {};\n    object[ITERATOR] = function () {\n      return {\n        next: function () {\n          return { done: ITERATION_SUPPORT = true };\n        }\n      };\n    };\n    exec(object);\n  } catch (error) { /* empty */ }\n  return ITERATION_SUPPORT;\n};\n","// `RequireObjectCoercible` abstract operation\n// https://tc39.github.io/ecma262/#sec-requireobjectcoercible\nmodule.exports = function (it) {\n  if (it == undefined) throw TypeError(\"Can't call method on \" + it);\n  return it;\n};\n","var fails = require('../internals/fails');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar V8_VERSION = require('../internals/engine-v8-version');\n\nvar SPECIES = wellKnownSymbol('species');\n\nmodule.exports = function (METHOD_NAME) {\n  // We can't use this feature detection in V8 since it causes\n  // deoptimization and serious performance degradation\n  // https://github.com/zloirock/core-js/issues/677\n  return V8_VERSION >= 51 || !fails(function () {\n    var array = [];\n    var constructor = array.constructor = {};\n    constructor[SPECIES] = function () {\n      return { foo: 1 };\n    };\n    return array[METHOD_NAME](Boolean).foo !== 1;\n  });\n};\n","var toInteger = require('../internals/to-integer');\n\nvar max = Math.max;\nvar min = Math.min;\n\n// Helper for a popular repeating case of the spec:\n// Let integer be ? ToInteger(index).\n// If integer < 0, let result be max((length + integer), 0); else let result be min(integer, length).\nmodule.exports = function (index, length) {\n  var integer = toInteger(index);\n  return integer < 0 ? max(integer + length, 0) : min(integer, length);\n};\n","var global = require('../internals/global');\nvar getOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar redefine = require('../internals/redefine');\nvar setGlobal = require('../internals/set-global');\nvar copyConstructorProperties = require('../internals/copy-constructor-properties');\nvar isForced = require('../internals/is-forced');\n\n/*\n  options.target      - name of the target object\n  options.global      - target is the global object\n  options.stat        - export as static methods of target\n  options.proto       - export as prototype methods of target\n  options.real        - real prototype method for the `pure` version\n  options.forced      - export even if the native feature is available\n  options.bind        - bind methods to the target, required for the `pure` version\n  options.wrap        - wrap constructors to preventing global pollution, required for the `pure` version\n  options.unsafe      - use the simple assignment of property instead of delete + defineProperty\n  options.sham        - add a flag to not completely full polyfills\n  options.enumerable  - export as enumerable property\n  options.noTargetGet - prevent calling a getter on target\n*/\nmodule.exports = function (options, source) {\n  var TARGET = options.target;\n  var GLOBAL = options.global;\n  var STATIC = options.stat;\n  var FORCED, target, key, targetProperty, sourceProperty, descriptor;\n  if (GLOBAL) {\n    target = global;\n  } else if (STATIC) {\n    target = global[TARGET] || setGlobal(TARGET, {});\n  } else {\n    target = (global[TARGET] || {}).prototype;\n  }\n  if (target) for (key in source) {\n    sourceProperty = source[key];\n    if (options.noTargetGet) {\n      descriptor = getOwnPropertyDescriptor(target, key);\n      targetProperty = descriptor && descriptor.value;\n    } else targetProperty = target[key];\n    FORCED = isForced(GLOBAL ? key : TARGET + (STATIC ? '.' : '#') + key, options.forced);\n    // contained in target\n    if (!FORCED && targetProperty !== undefined) {\n      if (typeof sourceProperty === typeof targetProperty) continue;\n      copyConstructorProperties(sourceProperty, targetProperty);\n    }\n    // add a flag to not completely full polyfills\n    if (options.sham || (targetProperty && targetProperty.sham)) {\n      createNonEnumerableProperty(sourceProperty, 'sham', true);\n    }\n    // extend global\n    redefine(target, key, sourceProperty, options);\n  }\n};\n","var internalObjectKeys = require('../internals/object-keys-internal');\nvar enumBugKeys = require('../internals/enum-bug-keys');\n\nvar hiddenKeys = enumBugKeys.concat('length', 'prototype');\n\n// `Object.getOwnPropertyNames` method\n// https://tc39.github.io/ecma262/#sec-object.getownpropertynames\nexports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {\n  return internalObjectKeys(O, hiddenKeys);\n};\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\n// eslint-disable-next-line func-names\nmodule.exports = function (useSourceMap) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item, useSourceMap);\n\n      if (item[2]) {\n        return \"@media \".concat(item[2], \" {\").concat(content, \"}\");\n      }\n\n      return content;\n    }).join('');\n  }; // import a list of modules into the list\n  // eslint-disable-next-line func-names\n\n\n  list.i = function (modules, mediaQuery, dedupe) {\n    if (typeof modules === 'string') {\n      // eslint-disable-next-line no-param-reassign\n      modules = [[null, modules, '']];\n    }\n\n    var alreadyImportedModules = {};\n\n    if (dedupe) {\n      for (var i = 0; i < this.length; i++) {\n        // eslint-disable-next-line prefer-destructuring\n        var id = this[i][0];\n\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n\n    for (var _i = 0; _i < modules.length; _i++) {\n      var item = [].concat(modules[_i]);\n\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        // eslint-disable-next-line no-continue\n        continue;\n      }\n\n      if (mediaQuery) {\n        if (!item[2]) {\n          item[2] = mediaQuery;\n        } else {\n          item[2] = \"\".concat(mediaQuery, \" and \").concat(item[2]);\n        }\n      }\n\n      list.push(item);\n    }\n  };\n\n  return list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n  var content = item[1] || ''; // eslint-disable-next-line prefer-destructuring\n\n  var cssMapping = item[3];\n\n  if (!cssMapping) {\n    return content;\n  }\n\n  if (useSourceMap && typeof btoa === 'function') {\n    var sourceMapping = toComment(cssMapping);\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return \"/*# sourceURL=\".concat(cssMapping.sourceRoot || '').concat(source, \" */\");\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n  }\n\n  return [content].join('\\n');\n} // Adapted from convert-source-map (MIT)\n\n\nfunction toComment(sourceMap) {\n  // eslint-disable-next-line no-undef\n  var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n  var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n  return \"/*# \".concat(data, \" */\");\n}","'use strict';\nvar redefine = require('../internals/redefine');\nvar anObject = require('../internals/an-object');\nvar fails = require('../internals/fails');\nvar flags = require('../internals/regexp-flags');\n\nvar TO_STRING = 'toString';\nvar RegExpPrototype = RegExp.prototype;\nvar nativeToString = RegExpPrototype[TO_STRING];\n\nvar NOT_GENERIC = fails(function () { return nativeToString.call({ source: 'a', flags: 'b' }) != '/a/b'; });\n// FF44- RegExp#toString has a wrong name\nvar INCORRECT_NAME = nativeToString.name != TO_STRING;\n\n// `RegExp.prototype.toString` method\n// https://tc39.github.io/ecma262/#sec-regexp.prototype.tostring\nif (NOT_GENERIC || INCORRECT_NAME) {\n  redefine(RegExp.prototype, TO_STRING, function toString() {\n    var R = anObject(this);\n    var p = String(R.source);\n    var rf = R.flags;\n    var f = String(rf === undefined && R instanceof RegExp && !('flags' in RegExpPrototype) ? flags.call(R) : rf);\n    return '/' + p + '/' + f;\n  }, { unsafe: true });\n}\n","var arrayWithHoles = require(\"./arrayWithHoles\");\n\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableRest = require(\"./nonIterableRest\");\n\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}\n\nmodule.exports = _slicedToArray;","var global = require('../internals/global');\nvar userAgent = require('../internals/engine-user-agent');\n\nvar process = global.process;\nvar versions = process && process.versions;\nvar v8 = versions && versions.v8;\nvar match, version;\n\nif (v8) {\n  match = v8.split('.');\n  version = match[0] + match[1];\n} else if (userAgent) {\n  match = userAgent.match(/Edge\\/(\\d+)/);\n  if (!match || match[1] >= 74) {\n    match = userAgent.match(/Chrome\\/(\\d+)/);\n    if (match) version = match[1];\n  }\n}\n\nmodule.exports = version && +version;\n","var getBuiltIn = require('../internals/get-built-in');\n\nmodule.exports = getBuiltIn('navigator', 'userAgent') || '';\n","var classof = require('../internals/classof');\nvar Iterators = require('../internals/iterators');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar ITERATOR = wellKnownSymbol('iterator');\n\nmodule.exports = function (it) {\n  if (it != undefined) return it[ITERATOR]\n    || it['@@iterator']\n    || Iterators[classof(it)];\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar definePropertyModule = require('../internals/object-define-property');\nvar anObject = require('../internals/an-object');\nvar objectKeys = require('../internals/object-keys');\n\n// `Object.defineProperties` method\n// https://tc39.github.io/ecma262/#sec-object.defineproperties\nmodule.exports = DESCRIPTORS ? Object.defineProperties : function defineProperties(O, Properties) {\n  anObject(O);\n  var keys = objectKeys(Properties);\n  var length = keys.length;\n  var index = 0;\n  var key;\n  while (length > index) definePropertyModule.f(O, key = keys[index++], Properties[key]);\n  return O;\n};\n","var isObject = require('../internals/is-object');\n\nmodule.exports = function (it) {\n  if (!isObject(it) && it !== null) {\n    throw TypeError(\"Can't set \" + String(it) + ' as a prototype');\n  } return it;\n};\n","'use strict';\nvar charAt = require('../internals/string-multibyte').charAt;\nvar InternalStateModule = require('../internals/internal-state');\nvar defineIterator = require('../internals/define-iterator');\n\nvar STRING_ITERATOR = 'String Iterator';\nvar setInternalState = InternalStateModule.set;\nvar getInternalState = InternalStateModule.getterFor(STRING_ITERATOR);\n\n// `String.prototype[@@iterator]` method\n// https://tc39.github.io/ecma262/#sec-string.prototype-@@iterator\ndefineIterator(String, 'String', function (iterated) {\n  setInternalState(this, {\n    type: STRING_ITERATOR,\n    string: String(iterated),\n    index: 0\n  });\n// `%StringIteratorPrototype%.next` method\n// https://tc39.github.io/ecma262/#sec-%stringiteratorprototype%.next\n}, function next() {\n  var state = getInternalState(this);\n  var string = state.string;\n  var index = state.index;\n  var point;\n  if (index >= string.length) return { value: undefined, done: true };\n  point = charAt(string, index);\n  state.index += point.length;\n  return { value: point, done: false };\n});\n","module.exports = {};\n","var global = require('../internals/global');\n\nmodule.exports = global;\n","var fails = require('../internals/fails');\nvar classof = require('../internals/classof-raw');\n\nvar split = ''.split;\n\n// fallback for non-array-like ES3 and non-enumerable old V8 strings\nmodule.exports = fails(function () {\n  // throws an error in rhino, see https://github.com/mozilla/rhino/issues/346\n  // eslint-disable-next-line no-prototype-builtins\n  return !Object('z').propertyIsEnumerable(0);\n}) ? function (it) {\n  return classof(it) == 'String' ? split.call(it, '') : Object(it);\n} : Object;\n","var wellKnownSymbol = require('../internals/well-known-symbol');\nvar create = require('../internals/object-create');\nvar definePropertyModule = require('../internals/object-define-property');\n\nvar UNSCOPABLES = wellKnownSymbol('unscopables');\nvar ArrayPrototype = Array.prototype;\n\n// Array.prototype[@@unscopables]\n// https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables\nif (ArrayPrototype[UNSCOPABLES] == undefined) {\n  definePropertyModule.f(ArrayPrototype, UNSCOPABLES, {\n    configurable: true,\n    value: create(null)\n  });\n}\n\n// add a key to Array.prototype[@@unscopables]\nmodule.exports = function (key) {\n  ArrayPrototype[UNSCOPABLES][key] = true;\n};\n","var fails = require('../internals/fails');\n\nmodule.exports = !!Object.getOwnPropertySymbols && !fails(function () {\n  // Chrome 38 Symbol has incorrect toString conversion\n  // eslint-disable-next-line no-undef\n  return !String(Symbol());\n});\n","/**\n * Translates the list format produced by css-loader into something\n * easier to manipulate.\n */\nexport default function listToStyles (parentId, list) {\n  var styles = []\n  var newStyles = {}\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i]\n    var id = item[0]\n    var css = item[1]\n    var media = item[2]\n    var sourceMap = item[3]\n    var part = {\n      id: parentId + ':' + i,\n      css: css,\n      media: media,\n      sourceMap: sourceMap\n    }\n    if (!newStyles[id]) {\n      styles.push(newStyles[id] = { id: id, parts: [part] })\n    } else {\n      newStyles[id].parts.push(part)\n    }\n  }\n  return styles\n}\n","/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n  Modified by Evan You @yyx990803\n*/\n\nimport listToStyles from './listToStyles'\n\nvar hasDocument = typeof document !== 'undefined'\n\nif (typeof DEBUG !== 'undefined' && DEBUG) {\n  if (!hasDocument) {\n    throw new Error(\n    'vue-style-loader cannot be used in a non-browser environment. ' +\n    \"Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.\"\n  ) }\n}\n\n/*\ntype StyleObject = {\n  id: number;\n  parts: Array<StyleObjectPart>\n}\n\ntype StyleObjectPart = {\n  css: string;\n  media: string;\n  sourceMap: ?string\n}\n*/\n\nvar stylesInDom = {/*\n  [id: number]: {\n    id: number,\n    refs: number,\n    parts: Array<(obj?: StyleObjectPart) => void>\n  }\n*/}\n\nvar head = hasDocument && (document.head || document.getElementsByTagName('head')[0])\nvar singletonElement = null\nvar singletonCounter = 0\nvar isProduction = false\nvar noop = function () {}\nvar options = null\nvar ssrIdKey = 'data-vue-ssr-id'\n\n// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n// tags it will allow on a page\nvar isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\\b/.test(navigator.userAgent.toLowerCase())\n\nexport default function addStylesClient (parentId, list, _isProduction, _options) {\n  isProduction = _isProduction\n\n  options = _options || {}\n\n  var styles = listToStyles(parentId, list)\n  addStylesToDom(styles)\n\n  return function update (newList) {\n    var mayRemove = []\n    for (var i = 0; i < styles.length; i++) {\n      var item = styles[i]\n      var domStyle = stylesInDom[item.id]\n      domStyle.refs--\n      mayRemove.push(domStyle)\n    }\n    if (newList) {\n      styles = listToStyles(parentId, newList)\n      addStylesToDom(styles)\n    } else {\n      styles = []\n    }\n    for (var i = 0; i < mayRemove.length; i++) {\n      var domStyle = mayRemove[i]\n      if (domStyle.refs === 0) {\n        for (var j = 0; j < domStyle.parts.length; j++) {\n          domStyle.parts[j]()\n        }\n        delete stylesInDom[domStyle.id]\n      }\n    }\n  }\n}\n\nfunction addStylesToDom (styles /* Array<StyleObject> */) {\n  for (var i = 0; i < styles.length; i++) {\n    var item = styles[i]\n    var domStyle = stylesInDom[item.id]\n    if (domStyle) {\n      domStyle.refs++\n      for (var j = 0; j < domStyle.parts.length; j++) {\n        domStyle.parts[j](item.parts[j])\n      }\n      for (; j < item.parts.length; j++) {\n        domStyle.parts.push(addStyle(item.parts[j]))\n      }\n      if (domStyle.parts.length > item.parts.length) {\n        domStyle.parts.length = item.parts.length\n      }\n    } else {\n      var parts = []\n      for (var j = 0; j < item.parts.length; j++) {\n        parts.push(addStyle(item.parts[j]))\n      }\n      stylesInDom[item.id] = { id: item.id, refs: 1, parts: parts }\n    }\n  }\n}\n\nfunction createStyleElement () {\n  var styleElement = document.createElement('style')\n  styleElement.type = 'text/css'\n  head.appendChild(styleElement)\n  return styleElement\n}\n\nfunction addStyle (obj /* StyleObjectPart */) {\n  var update, remove\n  var styleElement = document.querySelector('style[' + ssrIdKey + '~=\"' + obj.id + '\"]')\n\n  if (styleElement) {\n    if (isProduction) {\n      // has SSR styles and in production mode.\n      // simply do nothing.\n      return noop\n    } else {\n      // has SSR styles but in dev mode.\n      // for some reason Chrome can't handle source map in server-rendered\n      // style tags - source maps in <style> only works if the style tag is\n      // created and inserted dynamically. So we remove the server rendered\n      // styles and inject new ones.\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  if (isOldIE) {\n    // use singleton mode for IE9.\n    var styleIndex = singletonCounter++\n    styleElement = singletonElement || (singletonElement = createStyleElement())\n    update = applyToSingletonTag.bind(null, styleElement, styleIndex, false)\n    remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true)\n  } else {\n    // use multi-style-tag mode in all other cases\n    styleElement = createStyleElement()\n    update = applyToTag.bind(null, styleElement)\n    remove = function () {\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  update(obj)\n\n  return function updateStyle (newObj /* StyleObjectPart */) {\n    if (newObj) {\n      if (newObj.css === obj.css &&\n          newObj.media === obj.media &&\n          newObj.sourceMap === obj.sourceMap) {\n        return\n      }\n      update(obj = newObj)\n    } else {\n      remove()\n    }\n  }\n}\n\nvar replaceText = (function () {\n  var textStore = []\n\n  return function (index, replacement) {\n    textStore[index] = replacement\n    return textStore.filter(Boolean).join('\\n')\n  }\n})()\n\nfunction applyToSingletonTag (styleElement, index, remove, obj) {\n  var css = remove ? '' : obj.css\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = replaceText(index, css)\n  } else {\n    var cssNode = document.createTextNode(css)\n    var childNodes = styleElement.childNodes\n    if (childNodes[index]) styleElement.removeChild(childNodes[index])\n    if (childNodes.length) {\n      styleElement.insertBefore(cssNode, childNodes[index])\n    } else {\n      styleElement.appendChild(cssNode)\n    }\n  }\n}\n\nfunction applyToTag (styleElement, obj) {\n  var css = obj.css\n  var media = obj.media\n  var sourceMap = obj.sourceMap\n\n  if (media) {\n    styleElement.setAttribute('media', media)\n  }\n  if (options.ssrId) {\n    styleElement.setAttribute(ssrIdKey, obj.id)\n  }\n\n  if (sourceMap) {\n    // https://developer.chrome.com/devtools/docs/javascript-debugging\n    // this makes source maps inside style tags work properly in Chrome\n    css += '\\n/*# sourceURL=' + sourceMap.sources[0] + ' */'\n    // http://stackoverflow.com/a/26603875\n    css += '\\n/*# sourceMappingURL=data:application/json;base64,' + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + ' */'\n  }\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild)\n    }\n    styleElement.appendChild(document.createTextNode(css))\n  }\n}\n","var toIndexedObject = require('../internals/to-indexed-object');\nvar toLength = require('../internals/to-length');\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\n\n// `Array.prototype.{ indexOf, includes }` methods implementation\nvar createMethod = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIndexedObject($this);\n    var length = toLength(O.length);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare\n      if (value != value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) {\n      if ((IS_INCLUDES || index in O) && O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n\nmodule.exports = {\n  // `Array.prototype.includes` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.includes\n  includes: createMethod(true),\n  // `Array.prototype.indexOf` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.indexof\n  indexOf: createMethod(false)\n};\n","'use strict';\nvar bind = require('../internals/function-bind-context');\nvar toObject = require('../internals/to-object');\nvar callWithSafeIterationClosing = require('../internals/call-with-safe-iteration-closing');\nvar isArrayIteratorMethod = require('../internals/is-array-iterator-method');\nvar toLength = require('../internals/to-length');\nvar createProperty = require('../internals/create-property');\nvar getIteratorMethod = require('../internals/get-iterator-method');\n\n// `Array.from` method implementation\n// https://tc39.github.io/ecma262/#sec-array.from\nmodule.exports = function from(arrayLike /* , mapfn = undefined, thisArg = undefined */) {\n  var O = toObject(arrayLike);\n  var C = typeof this == 'function' ? this : Array;\n  var argumentsLength = arguments.length;\n  var mapfn = argumentsLength > 1 ? arguments[1] : undefined;\n  var mapping = mapfn !== undefined;\n  var iteratorMethod = getIteratorMethod(O);\n  var index = 0;\n  var length, result, step, iterator, next, value;\n  if (mapping) mapfn = bind(mapfn, argumentsLength > 2 ? arguments[2] : undefined, 2);\n  // if the target is not iterable or it's an array with the default iterator - use a simple case\n  if (iteratorMethod != undefined && !(C == Array && isArrayIteratorMethod(iteratorMethod))) {\n    iterator = iteratorMethod.call(O);\n    next = iterator.next;\n    result = new C();\n    for (;!(step = next.call(iterator)).done; index++) {\n      value = mapping ? callWithSafeIterationClosing(iterator, mapfn, [step.value, index], true) : step.value;\n      createProperty(result, index, value);\n    }\n  } else {\n    length = toLength(O.length);\n    result = new C(length);\n    for (;length > index; index++) {\n      value = mapping ? mapfn(O[index], index) : O[index];\n      createProperty(result, index, value);\n    }\n  }\n  result.length = index;\n  return result;\n};\n","var toInteger = require('../internals/to-integer');\n\nvar min = Math.min;\n\n// `ToLength` abstract operation\n// https://tc39.github.io/ecma262/#sec-tolength\nmodule.exports = function (argument) {\n  return argument > 0 ? min(toInteger(argument), 0x1FFFFFFFFFFFFF) : 0; // 2 ** 53 - 1 == 9007199254740991\n};\n","var hasOwnProperty = {}.hasOwnProperty;\n\nmodule.exports = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n","var IS_PURE = require('../internals/is-pure');\nvar store = require('../internals/shared-store');\n\n(module.exports = function (key, value) {\n  return store[key] || (store[key] = value !== undefined ? value : {});\n})('versions', []).push({\n  version: '3.6.5',\n  mode: IS_PURE ? 'pure' : 'global',\n  copyright: '© 2020 Denis Pushkarev (zloirock.ru)'\n});\n","var getBuiltIn = require('../internals/get-built-in');\nvar getOwnPropertyNamesModule = require('../internals/object-get-own-property-names');\nvar getOwnPropertySymbolsModule = require('../internals/object-get-own-property-symbols');\nvar anObject = require('../internals/an-object');\n\n// all object keys, includes non-enumerable and symbols\nmodule.exports = getBuiltIn('Reflect', 'ownKeys') || function ownKeys(it) {\n  var keys = getOwnPropertyNamesModule.f(anObject(it));\n  var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;\n  return getOwnPropertySymbols ? keys.concat(getOwnPropertySymbols(it)) : keys;\n};\n","// a string of all valid unicode whitespaces\n// eslint-disable-next-line max-len\nmodule.exports = '\\u0009\\u000A\\u000B\\u000C\\u000D\\u0020\\u00A0\\u1680\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF';\n","var requireObjectCoercible = require('../internals/require-object-coercible');\nvar whitespaces = require('../internals/whitespaces');\n\nvar whitespace = '[' + whitespaces + ']';\nvar ltrim = RegExp('^' + whitespace + whitespace + '*');\nvar rtrim = RegExp(whitespace + whitespace + '*$');\n\n// `String.prototype.{ trim, trimStart, trimEnd, trimLeft, trimRight }` methods implementation\nvar createMethod = function (TYPE) {\n  return function ($this) {\n    var string = String(requireObjectCoercible($this));\n    if (TYPE & 1) string = string.replace(ltrim, '');\n    if (TYPE & 2) string = string.replace(rtrim, '');\n    return string;\n  };\n};\n\nmodule.exports = {\n  // `String.prototype.{ trimLeft, trimStart }` methods\n  // https://tc39.github.io/ecma262/#sec-string.prototype.trimstart\n  start: createMethod(1),\n  // `String.prototype.{ trimRight, trimEnd }` methods\n  // https://tc39.github.io/ecma262/#sec-string.prototype.trimend\n  end: createMethod(2),\n  // `String.prototype.trim` method\n  // https://tc39.github.io/ecma262/#sec-string.prototype.trim\n  trim: createMethod(3)\n};\n","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;","module.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n","var toInteger = require('../internals/to-integer');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\n// `String.prototype.{ codePointAt, at }` methods implementation\nvar createMethod = function (CONVERT_TO_STRING) {\n  return function ($this, pos) {\n    var S = String(requireObjectCoercible($this));\n    var position = toInteger(pos);\n    var size = S.length;\n    var first, second;\n    if (position < 0 || position >= size) return CONVERT_TO_STRING ? '' : undefined;\n    first = S.charCodeAt(position);\n    return first < 0xD800 || first > 0xDBFF || position + 1 === size\n      || (second = S.charCodeAt(position + 1)) < 0xDC00 || second > 0xDFFF\n        ? CONVERT_TO_STRING ? S.charAt(position) : first\n        : CONVERT_TO_STRING ? S.slice(position, position + 2) : (first - 0xD800 << 10) + (second - 0xDC00) + 0x10000;\n  };\n};\n\nmodule.exports = {\n  // `String.prototype.codePointAt` method\n  // https://tc39.github.io/ecma262/#sec-string.prototype.codepointat\n  codeAt: createMethod(false),\n  // `String.prototype.at` method\n  // https://github.com/mathiasbynens/String.prototype.at\n  charAt: createMethod(true)\n};\n","var isObject = require('../internals/is-object');\nvar isArray = require('../internals/is-array');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar SPECIES = wellKnownSymbol('species');\n\n// `ArraySpeciesCreate` abstract operation\n// https://tc39.github.io/ecma262/#sec-arrayspeciescreate\nmodule.exports = function (originalArray, length) {\n  var C;\n  if (isArray(originalArray)) {\n    C = originalArray.constructor;\n    // cross-realm fallback\n    if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;\n    else if (isObject(C)) {\n      C = C[SPECIES];\n      if (C === null) C = undefined;\n    }\n  } return new (C === undefined ? Array : C)(length === 0 ? 0 : length);\n};\n","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;","var NATIVE_WEAK_MAP = require('../internals/native-weak-map');\nvar global = require('../internals/global');\nvar isObject = require('../internals/is-object');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar objectHas = require('../internals/has');\nvar sharedKey = require('../internals/shared-key');\nvar hiddenKeys = require('../internals/hidden-keys');\n\nvar WeakMap = global.WeakMap;\nvar set, get, has;\n\nvar enforce = function (it) {\n  return has(it) ? get(it) : set(it, {});\n};\n\nvar getterFor = function (TYPE) {\n  return function (it) {\n    var state;\n    if (!isObject(it) || (state = get(it)).type !== TYPE) {\n      throw TypeError('Incompatible receiver, ' + TYPE + ' required');\n    } return state;\n  };\n};\n\nif (NATIVE_WEAK_MAP) {\n  var store = new WeakMap();\n  var wmget = store.get;\n  var wmhas = store.has;\n  var wmset = store.set;\n  set = function (it, metadata) {\n    wmset.call(store, it, metadata);\n    return metadata;\n  };\n  get = function (it) {\n    return wmget.call(store, it) || {};\n  };\n  has = function (it) {\n    return wmhas.call(store, it);\n  };\n} else {\n  var STATE = sharedKey('state');\n  hiddenKeys[STATE] = true;\n  set = function (it, metadata) {\n    createNonEnumerableProperty(it, STATE, metadata);\n    return metadata;\n  };\n  get = function (it) {\n    return objectHas(it, STATE) ? it[STATE] : {};\n  };\n  has = function (it) {\n    return objectHas(it, STATE);\n  };\n}\n\nmodule.exports = {\n  set: set,\n  get: get,\n  has: has,\n  enforce: enforce,\n  getterFor: getterFor\n};\n","var global = require('../internals/global');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar has = require('../internals/has');\nvar setGlobal = require('../internals/set-global');\nvar inspectSource = require('../internals/inspect-source');\nvar InternalStateModule = require('../internals/internal-state');\n\nvar getInternalState = InternalStateModule.get;\nvar enforceInternalState = InternalStateModule.enforce;\nvar TEMPLATE = String(String).split('String');\n\n(module.exports = function (O, key, value, options) {\n  var unsafe = options ? !!options.unsafe : false;\n  var simple = options ? !!options.enumerable : false;\n  var noTargetGet = options ? !!options.noTargetGet : false;\n  if (typeof value == 'function') {\n    if (typeof key == 'string' && !has(value, 'name')) createNonEnumerableProperty(value, 'name', key);\n    enforceInternalState(value).source = TEMPLATE.join(typeof key == 'string' ? key : '');\n  }\n  if (O === global) {\n    if (simple) O[key] = value;\n    else setGlobal(key, value);\n    return;\n  } else if (!unsafe) {\n    delete O[key];\n  } else if (!noTargetGet && O[key]) {\n    simple = true;\n  }\n  if (simple) O[key] = value;\n  else createNonEnumerableProperty(O, key, value);\n// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative\n})(Function.prototype, 'toString', function toString() {\n  return typeof this == 'function' && getInternalState(this).source || inspectSource(this);\n});\n","var isObject = require('../internals/is-object');\nvar setPrototypeOf = require('../internals/object-set-prototype-of');\n\n// makes subclassing work correct for wrapped built-ins\nmodule.exports = function ($this, dummy, Wrapper) {\n  var NewTarget, NewTargetPrototype;\n  if (\n    // it can work only with native `setPrototypeOf`\n    setPrototypeOf &&\n    // we haven't completely correct pre-ES6 way for getting `new.target`, so use this\n    typeof (NewTarget = dummy.constructor) == 'function' &&\n    NewTarget !== Wrapper &&\n    isObject(NewTargetPrototype = NewTarget.prototype) &&\n    NewTargetPrototype !== Wrapper.prototype\n  ) setPrototypeOf($this, NewTargetPrototype);\n  return $this;\n};\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".piano-keyboard{position:relative;height:100%;width:100%}.white-note{display:flex;justify-content:center;float:left;position:relative;cursor:pointer;color:#000;height:98%;border-radius:0 0 5px 5px;box-shadow:inset 0 0 0 hsla(0,0%,100%,.8),inset -2px -5px 3px #ccc,0 0 3px rgba(0,0,0,.5)}.white-note-pressed{box-shadow:inset 2px 0 3px rgba(0,0,0,.2),inset -5px -1px 20px rgba(0,0,0,.2),0 0 3px rgba(0,0,0,.5)}.black-note{display:flex;align-items:flex-end;justify-content:center;position:absolute;cursor:pointer;height:65%;width:65%;left:68%;z-index:1;color:#fff;border-radius:0 0 3px 3px;box-shadow:inset -1px -1px 2px hsla(0,0%,100%,.2),inset 0 -5px 2px rgba(0,0,0,.5),0 2px 4px rgba(0,0,0,.5)}.black-note-pressed{box-shadow:inset -1px -1px 2px hsla(0,0%,100%,.2),inset 0 -1px 2px rgba(0,0,0,.2),0 1px 2px rgba(0,0,0,.2)}.key-group{align-self:flex-end;display:flex;flex-direction:column;align-items:center;margin-bottom:.8vw;font-size:1.2vw}.key-text{margin-top:.8vw}.key-text-on-black-note{transform:rotate(-90deg);margin:.8vw 0;margin-top:1vw}.key-input{text-align:center;width:2em;color:inherit;font-size:1vw}.unselectable{-webkit-touch-callout:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","export * from \"-!../../node_modules/vue-style-loader/index.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PianoKeyboard.vue?vue&type=style&index=0&lang=css&\"","exports.f = Object.getOwnPropertySymbols;\n","var path = require('../internals/path');\nvar has = require('../internals/has');\nvar wrappedWellKnownSymbolModule = require('../internals/well-known-symbol-wrapped');\nvar defineProperty = require('../internals/object-define-property').f;\n\nmodule.exports = function (NAME) {\n  var Symbol = path.Symbol || (path.Symbol = {});\n  if (!has(Symbol, NAME)) defineProperty(Symbol, NAME, {\n    value: wrappedWellKnownSymbolModule.f(NAME)\n  });\n};\n","// IE8- don't enum bug keys\nmodule.exports = [\n  'constructor',\n  'hasOwnProperty',\n  'isPrototypeOf',\n  'propertyIsEnumerable',\n  'toLocaleString',\n  'toString',\n  'valueOf'\n];\n","var requireObjectCoercible = require('../internals/require-object-coercible');\n\n// `ToObject` abstract operation\n// https://tc39.github.io/ecma262/#sec-toobject\nmodule.exports = function (argument) {\n  return Object(requireObjectCoercible(argument));\n};\n","var anObject = require('../internals/an-object');\nvar defineProperties = require('../internals/object-define-properties');\nvar enumBugKeys = require('../internals/enum-bug-keys');\nvar hiddenKeys = require('../internals/hidden-keys');\nvar html = require('../internals/html');\nvar documentCreateElement = require('../internals/document-create-element');\nvar sharedKey = require('../internals/shared-key');\n\nvar GT = '>';\nvar LT = '<';\nvar PROTOTYPE = 'prototype';\nvar SCRIPT = 'script';\nvar IE_PROTO = sharedKey('IE_PROTO');\n\nvar EmptyConstructor = function () { /* empty */ };\n\nvar scriptTag = function (content) {\n  return LT + SCRIPT + GT + content + LT + '/' + SCRIPT + GT;\n};\n\n// Create object with fake `null` prototype: use ActiveX Object with cleared prototype\nvar NullProtoObjectViaActiveX = function (activeXDocument) {\n  activeXDocument.write(scriptTag(''));\n  activeXDocument.close();\n  var temp = activeXDocument.parentWindow.Object;\n  activeXDocument = null; // avoid memory leak\n  return temp;\n};\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar NullProtoObjectViaIFrame = function () {\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = documentCreateElement('iframe');\n  var JS = 'java' + SCRIPT + ':';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  html.appendChild(iframe);\n  // https://github.com/zloirock/core-js/issues/475\n  iframe.src = String(JS);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(scriptTag('document.F=Object'));\n  iframeDocument.close();\n  return iframeDocument.F;\n};\n\n// Check for document.domain and active x support\n// No need to use active x approach when document.domain is not set\n// see https://github.com/es-shims/es5-shim/issues/150\n// variation of https://github.com/kitcambridge/es5-shim/commit/4f738ac066346\n// avoid IE GC bug\nvar activeXDocument;\nvar NullProtoObject = function () {\n  try {\n    /* global ActiveXObject */\n    activeXDocument = document.domain && new ActiveXObject('htmlfile');\n  } catch (error) { /* ignore */ }\n  NullProtoObject = activeXDocument ? NullProtoObjectViaActiveX(activeXDocument) : NullProtoObjectViaIFrame();\n  var length = enumBugKeys.length;\n  while (length--) delete NullProtoObject[PROTOTYPE][enumBugKeys[length]];\n  return NullProtoObject();\n};\n\nhiddenKeys[IE_PROTO] = true;\n\n// `Object.create` method\n// https://tc39.github.io/ecma262/#sec-object.create\nmodule.exports = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    EmptyConstructor[PROTOTYPE] = anObject(O);\n    result = new EmptyConstructor();\n    EmptyConstructor[PROTOTYPE] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO] = O;\n  } else result = NullProtoObject();\n  return Properties === undefined ? result : defineProperties(result, Properties);\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar createIteratorConstructor = require('../internals/create-iterator-constructor');\nvar getPrototypeOf = require('../internals/object-get-prototype-of');\nvar setPrototypeOf = require('../internals/object-set-prototype-of');\nvar setToStringTag = require('../internals/set-to-string-tag');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar redefine = require('../internals/redefine');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar IS_PURE = require('../internals/is-pure');\nvar Iterators = require('../internals/iterators');\nvar IteratorsCore = require('../internals/iterators-core');\n\nvar IteratorPrototype = IteratorsCore.IteratorPrototype;\nvar BUGGY_SAFARI_ITERATORS = IteratorsCore.BUGGY_SAFARI_ITERATORS;\nvar ITERATOR = wellKnownSymbol('iterator');\nvar KEYS = 'keys';\nvar VALUES = 'values';\nvar ENTRIES = 'entries';\n\nvar returnThis = function () { return this; };\n\nmodule.exports = function (Iterable, NAME, IteratorConstructor, next, DEFAULT, IS_SET, FORCED) {\n  createIteratorConstructor(IteratorConstructor, NAME, next);\n\n  var getIterationMethod = function (KIND) {\n    if (KIND === DEFAULT && defaultIterator) return defaultIterator;\n    if (!BUGGY_SAFARI_ITERATORS && KIND in IterablePrototype) return IterablePrototype[KIND];\n    switch (KIND) {\n      case KEYS: return function keys() { return new IteratorConstructor(this, KIND); };\n      case VALUES: return function values() { return new IteratorConstructor(this, KIND); };\n      case ENTRIES: return function entries() { return new IteratorConstructor(this, KIND); };\n    } return function () { return new IteratorConstructor(this); };\n  };\n\n  var TO_STRING_TAG = NAME + ' Iterator';\n  var INCORRECT_VALUES_NAME = false;\n  var IterablePrototype = Iterable.prototype;\n  var nativeIterator = IterablePrototype[ITERATOR]\n    || IterablePrototype['@@iterator']\n    || DEFAULT && IterablePrototype[DEFAULT];\n  var defaultIterator = !BUGGY_SAFARI_ITERATORS && nativeIterator || getIterationMethod(DEFAULT);\n  var anyNativeIterator = NAME == 'Array' ? IterablePrototype.entries || nativeIterator : nativeIterator;\n  var CurrentIteratorPrototype, methods, KEY;\n\n  // fix native\n  if (anyNativeIterator) {\n    CurrentIteratorPrototype = getPrototypeOf(anyNativeIterator.call(new Iterable()));\n    if (IteratorPrototype !== Object.prototype && CurrentIteratorPrototype.next) {\n      if (!IS_PURE && getPrototypeOf(CurrentIteratorPrototype) !== IteratorPrototype) {\n        if (setPrototypeOf) {\n          setPrototypeOf(CurrentIteratorPrototype, IteratorPrototype);\n        } else if (typeof CurrentIteratorPrototype[ITERATOR] != 'function') {\n          createNonEnumerableProperty(CurrentIteratorPrototype, ITERATOR, returnThis);\n        }\n      }\n      // Set @@toStringTag to native iterators\n      setToStringTag(CurrentIteratorPrototype, TO_STRING_TAG, true, true);\n      if (IS_PURE) Iterators[TO_STRING_TAG] = returnThis;\n    }\n  }\n\n  // fix Array#{values, @@iterator}.name in V8 / FF\n  if (DEFAULT == VALUES && nativeIterator && nativeIterator.name !== VALUES) {\n    INCORRECT_VALUES_NAME = true;\n    defaultIterator = function values() { return nativeIterator.call(this); };\n  }\n\n  // define iterator\n  if ((!IS_PURE || FORCED) && IterablePrototype[ITERATOR] !== defaultIterator) {\n    createNonEnumerableProperty(IterablePrototype, ITERATOR, defaultIterator);\n  }\n  Iterators[NAME] = defaultIterator;\n\n  // export additional methods\n  if (DEFAULT) {\n    methods = {\n      values: getIterationMethod(VALUES),\n      keys: IS_SET ? defaultIterator : getIterationMethod(KEYS),\n      entries: getIterationMethod(ENTRIES)\n    };\n    if (FORCED) for (KEY in methods) {\n      if (BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME || !(KEY in IterablePrototype)) {\n        redefine(IterablePrototype, KEY, methods[KEY]);\n      }\n    } else $({ target: NAME, proto: true, forced: BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME }, methods);\n  }\n\n  return methods;\n};\n","var global = require('../internals/global');\nvar inspectSource = require('../internals/inspect-source');\n\nvar WeakMap = global.WeakMap;\n\nmodule.exports = typeof WeakMap === 'function' && /native code/.test(inspectSource(WeakMap));\n","var isObject = require('../internals/is-object');\n\nmodule.exports = function (it) {\n  if (!isObject(it)) {\n    throw TypeError(String(it) + ' is not an object');\n  } return it;\n};\n","var fails = require('../internals/fails');\n\n// Thank's IE8 for his funny defineProperty\nmodule.exports = !fails(function () {\n  return Object.defineProperty({}, 1, { get: function () { return 7; } })[1] != 7;\n});\n","'use strict';\nvar toPrimitive = require('../internals/to-primitive');\nvar definePropertyModule = require('../internals/object-define-property');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\n\nmodule.exports = function (object, key, value) {\n  var propertyKey = toPrimitive(key);\n  if (propertyKey in object) definePropertyModule.f(object, propertyKey, createPropertyDescriptor(0, value));\n  else object[propertyKey] = value;\n};\n","module.exports = function (it) {\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n","// addapted from the document.currentScript polyfill by Adam Miller\n// MIT license\n// source: https://github.com/amiller-gh/currentScript-polyfill\n\n// added support for Firefox https://bugzilla.mozilla.org/show_bug.cgi?id=1620505\n\n(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define([], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    module.exports = factory();\n  } else {\n    root.getCurrentScript = factory();\n  }\n}(typeof self !== 'undefined' ? self : this, function () {\n  function getCurrentScript () {\n    var descriptor = Object.getOwnPropertyDescriptor(document, 'currentScript')\n    // for chrome\n    if (!descriptor && 'currentScript' in document && document.currentScript) {\n      return document.currentScript\n    }\n\n    // for other browsers with native support for currentScript\n    if (descriptor && descriptor.get !== getCurrentScript && document.currentScript) {\n      return document.currentScript\n    }\n  \n    // IE 8-10 support script readyState\n    // IE 11+ & Firefox support stack trace\n    try {\n      throw new Error();\n    }\n    catch (err) {\n      // Find the second match for the \"at\" string to get file src url from stack.\n      var ieStackRegExp = /.*at [^(]*\\((.*):(.+):(.+)\\)$/ig,\n        ffStackRegExp = /@([^@]*):(\\d+):(\\d+)\\s*$/ig,\n        stackDetails = ieStackRegExp.exec(err.stack) || ffStackRegExp.exec(err.stack),\n        scriptLocation = (stackDetails && stackDetails[1]) || false,\n        line = (stackDetails && stackDetails[2]) || false,\n        currentLocation = document.location.href.replace(document.location.hash, ''),\n        pageSource,\n        inlineScriptSourceRegExp,\n        inlineScriptSource,\n        scripts = document.getElementsByTagName('script'); // Live NodeList collection\n  \n      if (scriptLocation === currentLocation) {\n        pageSource = document.documentElement.outerHTML;\n        inlineScriptSourceRegExp = new RegExp('(?:[^\\\\n]+?\\\\n){0,' + (line - 2) + '}[^<]*<script>([\\\\d\\\\D]*?)<\\\\/script>[\\\\d\\\\D]*', 'i');\n        inlineScriptSource = pageSource.replace(inlineScriptSourceRegExp, '$1').trim();\n      }\n  \n      for (var i = 0; i < scripts.length; i++) {\n        // If ready state is interactive, return the script tag\n        if (scripts[i].readyState === 'interactive') {\n          return scripts[i];\n        }\n  \n        // If src matches, return the script tag\n        if (scripts[i].src === scriptLocation) {\n          return scripts[i];\n        }\n  \n        // If inline source matches, return the script tag\n        if (\n          scriptLocation === currentLocation &&\n          scripts[i].innerHTML &&\n          scripts[i].innerHTML.trim() === inlineScriptSource\n        ) {\n          return scripts[i];\n        }\n      }\n  \n      // If no match, return null\n      return null;\n    }\n  };\n\n  return getCurrentScript\n}));\n","var store = require('../internals/shared-store');\n\nvar functionToString = Function.toString;\n\n// this helper broken in `3.4.1-3.4.4`, so we can't use `shared` helper\nif (typeof store.inspectSource != 'function') {\n  store.inspectSource = function (it) {\n    return functionToString.call(it);\n  };\n}\n\nmodule.exports = store.inspectSource;\n","var id = 0;\nvar postfix = Math.random();\n\nmodule.exports = function (key) {\n  return 'Symbol(' + String(key === undefined ? '' : key) + ')_' + (++id + postfix).toString(36);\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar definePropertyModule = require('../internals/object-define-property');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\n\nmodule.exports = DESCRIPTORS ? function (object, key, value) {\n  return definePropertyModule.f(object, key, createPropertyDescriptor(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n","var fails = require('../internals/fails');\n\nvar replacement = /#|\\.prototype\\./;\n\nvar isForced = function (feature, detection) {\n  var value = data[normalize(feature)];\n  return value == POLYFILL ? true\n    : value == NATIVE ? false\n    : typeof detection == 'function' ? fails(detection)\n    : !!detection;\n};\n\nvar normalize = isForced.normalize = function (string) {\n  return String(string).replace(replacement, '.').toLowerCase();\n};\n\nvar data = isForced.data = {};\nvar NATIVE = isForced.NATIVE = 'N';\nvar POLYFILL = isForced.POLYFILL = 'P';\n\nmodule.exports = isForced;\n","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nmodule.exports = _iterableToArrayLimit;","var anObject = require('../internals/an-object');\n\n// call something on iterator step with safe closing on error\nmodule.exports = function (iterator, fn, value, ENTRIES) {\n  try {\n    return ENTRIES ? fn(anObject(value)[0], value[1]) : fn(value);\n  // 7.4.6 IteratorClose(iterator, completion)\n  } catch (error) {\n    var returnMethod = iterator['return'];\n    if (returnMethod !== undefined) anObject(returnMethod.call(iterator));\n    throw error;\n  }\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar IE8_DOM_DEFINE = require('../internals/ie8-dom-define');\nvar anObject = require('../internals/an-object');\nvar toPrimitive = require('../internals/to-primitive');\n\nvar nativeDefineProperty = Object.defineProperty;\n\n// `Object.defineProperty` method\n// https://tc39.github.io/ecma262/#sec-object.defineproperty\nexports.f = DESCRIPTORS ? nativeDefineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return nativeDefineProperty(O, P, Attributes);\n  } catch (error) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n","'use strict';\nvar IteratorPrototype = require('../internals/iterators-core').IteratorPrototype;\nvar create = require('../internals/object-create');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\nvar setToStringTag = require('../internals/set-to-string-tag');\nvar Iterators = require('../internals/iterators');\n\nvar returnThis = function () { return this; };\n\nmodule.exports = function (IteratorConstructor, NAME, next) {\n  var TO_STRING_TAG = NAME + ' Iterator';\n  IteratorConstructor.prototype = create(IteratorPrototype, { next: createPropertyDescriptor(1, next) });\n  setToStringTag(IteratorConstructor, TO_STRING_TAG, false, true);\n  Iterators[TO_STRING_TAG] = returnThis;\n  return IteratorConstructor;\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar global = require('../internals/global');\nvar getBuiltIn = require('../internals/get-built-in');\nvar IS_PURE = require('../internals/is-pure');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar NATIVE_SYMBOL = require('../internals/native-symbol');\nvar USE_SYMBOL_AS_UID = require('../internals/use-symbol-as-uid');\nvar fails = require('../internals/fails');\nvar has = require('../internals/has');\nvar isArray = require('../internals/is-array');\nvar isObject = require('../internals/is-object');\nvar anObject = require('../internals/an-object');\nvar toObject = require('../internals/to-object');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar toPrimitive = require('../internals/to-primitive');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\nvar nativeObjectCreate = require('../internals/object-create');\nvar objectKeys = require('../internals/object-keys');\nvar getOwnPropertyNamesModule = require('../internals/object-get-own-property-names');\nvar getOwnPropertyNamesExternal = require('../internals/object-get-own-property-names-external');\nvar getOwnPropertySymbolsModule = require('../internals/object-get-own-property-symbols');\nvar getOwnPropertyDescriptorModule = require('../internals/object-get-own-property-descriptor');\nvar definePropertyModule = require('../internals/object-define-property');\nvar propertyIsEnumerableModule = require('../internals/object-property-is-enumerable');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar redefine = require('../internals/redefine');\nvar shared = require('../internals/shared');\nvar sharedKey = require('../internals/shared-key');\nvar hiddenKeys = require('../internals/hidden-keys');\nvar uid = require('../internals/uid');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar wrappedWellKnownSymbolModule = require('../internals/well-known-symbol-wrapped');\nvar defineWellKnownSymbol = require('../internals/define-well-known-symbol');\nvar setToStringTag = require('../internals/set-to-string-tag');\nvar InternalStateModule = require('../internals/internal-state');\nvar $forEach = require('../internals/array-iteration').forEach;\n\nvar HIDDEN = sharedKey('hidden');\nvar SYMBOL = 'Symbol';\nvar PROTOTYPE = 'prototype';\nvar TO_PRIMITIVE = wellKnownSymbol('toPrimitive');\nvar setInternalState = InternalStateModule.set;\nvar getInternalState = InternalStateModule.getterFor(SYMBOL);\nvar ObjectPrototype = Object[PROTOTYPE];\nvar $Symbol = global.Symbol;\nvar $stringify = getBuiltIn('JSON', 'stringify');\nvar nativeGetOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;\nvar nativeDefineProperty = definePropertyModule.f;\nvar nativeGetOwnPropertyNames = getOwnPropertyNamesExternal.f;\nvar nativePropertyIsEnumerable = propertyIsEnumerableModule.f;\nvar AllSymbols = shared('symbols');\nvar ObjectPrototypeSymbols = shared('op-symbols');\nvar StringToSymbolRegistry = shared('string-to-symbol-registry');\nvar SymbolToStringRegistry = shared('symbol-to-string-registry');\nvar WellKnownSymbolsStore = shared('wks');\nvar QObject = global.QObject;\n// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173\nvar USE_SETTER = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;\n\n// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687\nvar setSymbolDescriptor = DESCRIPTORS && fails(function () {\n  return nativeObjectCreate(nativeDefineProperty({}, 'a', {\n    get: function () { return nativeDefineProperty(this, 'a', { value: 7 }).a; }\n  })).a != 7;\n}) ? function (O, P, Attributes) {\n  var ObjectPrototypeDescriptor = nativeGetOwnPropertyDescriptor(ObjectPrototype, P);\n  if (ObjectPrototypeDescriptor) delete ObjectPrototype[P];\n  nativeDefineProperty(O, P, Attributes);\n  if (ObjectPrototypeDescriptor && O !== ObjectPrototype) {\n    nativeDefineProperty(ObjectPrototype, P, ObjectPrototypeDescriptor);\n  }\n} : nativeDefineProperty;\n\nvar wrap = function (tag, description) {\n  var symbol = AllSymbols[tag] = nativeObjectCreate($Symbol[PROTOTYPE]);\n  setInternalState(symbol, {\n    type: SYMBOL,\n    tag: tag,\n    description: description\n  });\n  if (!DESCRIPTORS) symbol.description = description;\n  return symbol;\n};\n\nvar isSymbol = USE_SYMBOL_AS_UID ? function (it) {\n  return typeof it == 'symbol';\n} : function (it) {\n  return Object(it) instanceof $Symbol;\n};\n\nvar $defineProperty = function defineProperty(O, P, Attributes) {\n  if (O === ObjectPrototype) $defineProperty(ObjectPrototypeSymbols, P, Attributes);\n  anObject(O);\n  var key = toPrimitive(P, true);\n  anObject(Attributes);\n  if (has(AllSymbols, key)) {\n    if (!Attributes.enumerable) {\n      if (!has(O, HIDDEN)) nativeDefineProperty(O, HIDDEN, createPropertyDescriptor(1, {}));\n      O[HIDDEN][key] = true;\n    } else {\n      if (has(O, HIDDEN) && O[HIDDEN][key]) O[HIDDEN][key] = false;\n      Attributes = nativeObjectCreate(Attributes, { enumerable: createPropertyDescriptor(0, false) });\n    } return setSymbolDescriptor(O, key, Attributes);\n  } return nativeDefineProperty(O, key, Attributes);\n};\n\nvar $defineProperties = function defineProperties(O, Properties) {\n  anObject(O);\n  var properties = toIndexedObject(Properties);\n  var keys = objectKeys(properties).concat($getOwnPropertySymbols(properties));\n  $forEach(keys, function (key) {\n    if (!DESCRIPTORS || $propertyIsEnumerable.call(properties, key)) $defineProperty(O, key, properties[key]);\n  });\n  return O;\n};\n\nvar $create = function create(O, Properties) {\n  return Properties === undefined ? nativeObjectCreate(O) : $defineProperties(nativeObjectCreate(O), Properties);\n};\n\nvar $propertyIsEnumerable = function propertyIsEnumerable(V) {\n  var P = toPrimitive(V, true);\n  var enumerable = nativePropertyIsEnumerable.call(this, P);\n  if (this === ObjectPrototype && has(AllSymbols, P) && !has(ObjectPrototypeSymbols, P)) return false;\n  return enumerable || !has(this, P) || !has(AllSymbols, P) || has(this, HIDDEN) && this[HIDDEN][P] ? enumerable : true;\n};\n\nvar $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(O, P) {\n  var it = toIndexedObject(O);\n  var key = toPrimitive(P, true);\n  if (it === ObjectPrototype && has(AllSymbols, key) && !has(ObjectPrototypeSymbols, key)) return;\n  var descriptor = nativeGetOwnPropertyDescriptor(it, key);\n  if (descriptor && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key])) {\n    descriptor.enumerable = true;\n  }\n  return descriptor;\n};\n\nvar $getOwnPropertyNames = function getOwnPropertyNames(O) {\n  var names = nativeGetOwnPropertyNames(toIndexedObject(O));\n  var result = [];\n  $forEach(names, function (key) {\n    if (!has(AllSymbols, key) && !has(hiddenKeys, key)) result.push(key);\n  });\n  return result;\n};\n\nvar $getOwnPropertySymbols = function getOwnPropertySymbols(O) {\n  var IS_OBJECT_PROTOTYPE = O === ObjectPrototype;\n  var names = nativeGetOwnPropertyNames(IS_OBJECT_PROTOTYPE ? ObjectPrototypeSymbols : toIndexedObject(O));\n  var result = [];\n  $forEach(names, function (key) {\n    if (has(AllSymbols, key) && (!IS_OBJECT_PROTOTYPE || has(ObjectPrototype, key))) {\n      result.push(AllSymbols[key]);\n    }\n  });\n  return result;\n};\n\n// `Symbol` constructor\n// https://tc39.github.io/ecma262/#sec-symbol-constructor\nif (!NATIVE_SYMBOL) {\n  $Symbol = function Symbol() {\n    if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor');\n    var description = !arguments.length || arguments[0] === undefined ? undefined : String(arguments[0]);\n    var tag = uid(description);\n    var setter = function (value) {\n      if (this === ObjectPrototype) setter.call(ObjectPrototypeSymbols, value);\n      if (has(this, HIDDEN) && has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;\n      setSymbolDescriptor(this, tag, createPropertyDescriptor(1, value));\n    };\n    if (DESCRIPTORS && USE_SETTER) setSymbolDescriptor(ObjectPrototype, tag, { configurable: true, set: setter });\n    return wrap(tag, description);\n  };\n\n  redefine($Symbol[PROTOTYPE], 'toString', function toString() {\n    return getInternalState(this).tag;\n  });\n\n  redefine($Symbol, 'withoutSetter', function (description) {\n    return wrap(uid(description), description);\n  });\n\n  propertyIsEnumerableModule.f = $propertyIsEnumerable;\n  definePropertyModule.f = $defineProperty;\n  getOwnPropertyDescriptorModule.f = $getOwnPropertyDescriptor;\n  getOwnPropertyNamesModule.f = getOwnPropertyNamesExternal.f = $getOwnPropertyNames;\n  getOwnPropertySymbolsModule.f = $getOwnPropertySymbols;\n\n  wrappedWellKnownSymbolModule.f = function (name) {\n    return wrap(wellKnownSymbol(name), name);\n  };\n\n  if (DESCRIPTORS) {\n    // https://github.com/tc39/proposal-Symbol-description\n    nativeDefineProperty($Symbol[PROTOTYPE], 'description', {\n      configurable: true,\n      get: function description() {\n        return getInternalState(this).description;\n      }\n    });\n    if (!IS_PURE) {\n      redefine(ObjectPrototype, 'propertyIsEnumerable', $propertyIsEnumerable, { unsafe: true });\n    }\n  }\n}\n\n$({ global: true, wrap: true, forced: !NATIVE_SYMBOL, sham: !NATIVE_SYMBOL }, {\n  Symbol: $Symbol\n});\n\n$forEach(objectKeys(WellKnownSymbolsStore), function (name) {\n  defineWellKnownSymbol(name);\n});\n\n$({ target: SYMBOL, stat: true, forced: !NATIVE_SYMBOL }, {\n  // `Symbol.for` method\n  // https://tc39.github.io/ecma262/#sec-symbol.for\n  'for': function (key) {\n    var string = String(key);\n    if (has(StringToSymbolRegistry, string)) return StringToSymbolRegistry[string];\n    var symbol = $Symbol(string);\n    StringToSymbolRegistry[string] = symbol;\n    SymbolToStringRegistry[symbol] = string;\n    return symbol;\n  },\n  // `Symbol.keyFor` method\n  // https://tc39.github.io/ecma262/#sec-symbol.keyfor\n  keyFor: function keyFor(sym) {\n    if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol');\n    if (has(SymbolToStringRegistry, sym)) return SymbolToStringRegistry[sym];\n  },\n  useSetter: function () { USE_SETTER = true; },\n  useSimple: function () { USE_SETTER = false; }\n});\n\n$({ target: 'Object', stat: true, forced: !NATIVE_SYMBOL, sham: !DESCRIPTORS }, {\n  // `Object.create` method\n  // https://tc39.github.io/ecma262/#sec-object.create\n  create: $create,\n  // `Object.defineProperty` method\n  // https://tc39.github.io/ecma262/#sec-object.defineproperty\n  defineProperty: $defineProperty,\n  // `Object.defineProperties` method\n  // https://tc39.github.io/ecma262/#sec-object.defineproperties\n  defineProperties: $defineProperties,\n  // `Object.getOwnPropertyDescriptor` method\n  // https://tc39.github.io/ecma262/#sec-object.getownpropertydescriptors\n  getOwnPropertyDescriptor: $getOwnPropertyDescriptor\n});\n\n$({ target: 'Object', stat: true, forced: !NATIVE_SYMBOL }, {\n  // `Object.getOwnPropertyNames` method\n  // https://tc39.github.io/ecma262/#sec-object.getownpropertynames\n  getOwnPropertyNames: $getOwnPropertyNames,\n  // `Object.getOwnPropertySymbols` method\n  // https://tc39.github.io/ecma262/#sec-object.getownpropertysymbols\n  getOwnPropertySymbols: $getOwnPropertySymbols\n});\n\n// Chrome 38 and 39 `Object.getOwnPropertySymbols` fails on primitives\n// https://bugs.chromium.org/p/v8/issues/detail?id=3443\n$({ target: 'Object', stat: true, forced: fails(function () { getOwnPropertySymbolsModule.f(1); }) }, {\n  getOwnPropertySymbols: function getOwnPropertySymbols(it) {\n    return getOwnPropertySymbolsModule.f(toObject(it));\n  }\n});\n\n// `JSON.stringify` method behavior with symbols\n// https://tc39.github.io/ecma262/#sec-json.stringify\nif ($stringify) {\n  var FORCED_JSON_STRINGIFY = !NATIVE_SYMBOL || fails(function () {\n    var symbol = $Symbol();\n    // MS Edge converts symbol values to JSON as {}\n    return $stringify([symbol]) != '[null]'\n      // WebKit converts symbol values to JSON as null\n      || $stringify({ a: symbol }) != '{}'\n      // V8 throws on boxed symbols\n      || $stringify(Object(symbol)) != '{}';\n  });\n\n  $({ target: 'JSON', stat: true, forced: FORCED_JSON_STRINGIFY }, {\n    // eslint-disable-next-line no-unused-vars\n    stringify: function stringify(it, replacer, space) {\n      var args = [it];\n      var index = 1;\n      var $replacer;\n      while (arguments.length > index) args.push(arguments[index++]);\n      $replacer = replacer;\n      if (!isObject(replacer) && it === undefined || isSymbol(it)) return; // IE8 returns string on undefined\n      if (!isArray(replacer)) replacer = function (key, value) {\n        if (typeof $replacer == 'function') value = $replacer.call(this, key, value);\n        if (!isSymbol(value)) return value;\n      };\n      args[1] = replacer;\n      return $stringify.apply(null, args);\n    }\n  });\n}\n\n// `Symbol.prototype[@@toPrimitive]` method\n// https://tc39.github.io/ecma262/#sec-symbol.prototype-@@toprimitive\nif (!$Symbol[PROTOTYPE][TO_PRIMITIVE]) {\n  createNonEnumerableProperty($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);\n}\n// `Symbol.prototype[@@toStringTag]` property\n// https://tc39.github.io/ecma262/#sec-symbol.prototype-@@tostringtag\nsetToStringTag($Symbol, SYMBOL);\n\nhiddenKeys[HIDDEN] = true;\n","var $ = require('../internals/export');\nvar from = require('../internals/array-from');\nvar checkCorrectnessOfIteration = require('../internals/check-correctness-of-iteration');\n\nvar INCORRECT_ITERATION = !checkCorrectnessOfIteration(function (iterable) {\n  Array.from(iterable);\n});\n\n// `Array.from` method\n// https://tc39.github.io/ecma262/#sec-array.from\n$({ target: 'Array', stat: true, forced: INCORRECT_ITERATION }, {\n  from: from\n});\n","var ceil = Math.ceil;\nvar floor = Math.floor;\n\n// `ToInteger` abstract operation\n// https://tc39.github.io/ecma262/#sec-tointeger\nmodule.exports = function (argument) {\n  return isNaN(argument = +argument) ? 0 : (argument > 0 ? floor : ceil)(argument);\n};\n","'use strict';\nvar DESCRIPTORS = require('../internals/descriptors');\nvar global = require('../internals/global');\nvar isForced = require('../internals/is-forced');\nvar redefine = require('../internals/redefine');\nvar has = require('../internals/has');\nvar classof = require('../internals/classof-raw');\nvar inheritIfRequired = require('../internals/inherit-if-required');\nvar toPrimitive = require('../internals/to-primitive');\nvar fails = require('../internals/fails');\nvar create = require('../internals/object-create');\nvar getOwnPropertyNames = require('../internals/object-get-own-property-names').f;\nvar getOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;\nvar defineProperty = require('../internals/object-define-property').f;\nvar trim = require('../internals/string-trim').trim;\n\nvar NUMBER = 'Number';\nvar NativeNumber = global[NUMBER];\nvar NumberPrototype = NativeNumber.prototype;\n\n// Opera ~12 has broken Object#toString\nvar BROKEN_CLASSOF = classof(create(NumberPrototype)) == NUMBER;\n\n// `ToNumber` abstract operation\n// https://tc39.github.io/ecma262/#sec-tonumber\nvar toNumber = function (argument) {\n  var it = toPrimitive(argument, false);\n  var first, third, radix, maxCode, digits, length, index, code;\n  if (typeof it == 'string' && it.length > 2) {\n    it = trim(it);\n    first = it.charCodeAt(0);\n    if (first === 43 || first === 45) {\n      third = it.charCodeAt(2);\n      if (third === 88 || third === 120) return NaN; // Number('+0x1') should be NaN, old V8 fix\n    } else if (first === 48) {\n      switch (it.charCodeAt(1)) {\n        case 66: case 98: radix = 2; maxCode = 49; break; // fast equal of /^0b[01]+$/i\n        case 79: case 111: radix = 8; maxCode = 55; break; // fast equal of /^0o[0-7]+$/i\n        default: return +it;\n      }\n      digits = it.slice(2);\n      length = digits.length;\n      for (index = 0; index < length; index++) {\n        code = digits.charCodeAt(index);\n        // parseInt parses a string to a first unavailable symbol\n        // but ToNumber should return NaN if a string contains unavailable symbols\n        if (code < 48 || code > maxCode) return NaN;\n      } return parseInt(digits, radix);\n    }\n  } return +it;\n};\n\n// `Number` constructor\n// https://tc39.github.io/ecma262/#sec-number-constructor\nif (isForced(NUMBER, !NativeNumber(' 0o1') || !NativeNumber('0b1') || NativeNumber('+0x1'))) {\n  var NumberWrapper = function Number(value) {\n    var it = arguments.length < 1 ? 0 : value;\n    var dummy = this;\n    return dummy instanceof NumberWrapper\n      // check on 1..constructor(foo) case\n      && (BROKEN_CLASSOF ? fails(function () { NumberPrototype.valueOf.call(dummy); }) : classof(dummy) != NUMBER)\n        ? inheritIfRequired(new NativeNumber(toNumber(it)), dummy, NumberWrapper) : toNumber(it);\n  };\n  for (var keys = DESCRIPTORS ? getOwnPropertyNames(NativeNumber) : (\n    // ES3:\n    'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,' +\n    // ES2015 (in case, if modules with ES2015 Number statics required before):\n    'EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,' +\n    'MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger'\n  ).split(','), j = 0, key; keys.length > j; j++) {\n    if (has(NativeNumber, key = keys[j]) && !has(NumberWrapper, key)) {\n      defineProperty(NumberWrapper, key, getOwnPropertyDescriptor(NativeNumber, key));\n    }\n  }\n  NumberWrapper.prototype = NumberPrototype;\n  NumberPrototype.constructor = NumberWrapper;\n  redefine(global, NUMBER, NumberWrapper);\n}\n","'use strict';\nvar anObject = require('../internals/an-object');\n\n// `RegExp.prototype.flags` getter implementation\n// https://tc39.github.io/ecma262/#sec-get-regexp.prototype.flags\nmodule.exports = function () {\n  var that = anObject(this);\n  var result = '';\n  if (that.global) result += 'g';\n  if (that.ignoreCase) result += 'i';\n  if (that.multiline) result += 'm';\n  if (that.dotAll) result += 's';\n  if (that.unicode) result += 'u';\n  if (that.sticky) result += 'y';\n  return result;\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar fails = require('../internals/fails');\nvar has = require('../internals/has');\n\nvar defineProperty = Object.defineProperty;\nvar cache = {};\n\nvar thrower = function (it) { throw it; };\n\nmodule.exports = function (METHOD_NAME, options) {\n  if (has(cache, METHOD_NAME)) return cache[METHOD_NAME];\n  if (!options) options = {};\n  var method = [][METHOD_NAME];\n  var ACCESSORS = has(options, 'ACCESSORS') ? options.ACCESSORS : false;\n  var argument0 = has(options, 0) ? options[0] : thrower;\n  var argument1 = has(options, 1) ? options[1] : undefined;\n\n  return cache[METHOD_NAME] = !!method && !fails(function () {\n    if (ACCESSORS && !DESCRIPTORS) return true;\n    var O = { length: -1 };\n\n    if (ACCESSORS) defineProperty(O, 1, { enumerable: true, get: thrower });\n    else O[1] = 1;\n\n    method.call(O, argument0, argument1);\n  });\n};\n","'use strict';\nvar getPrototypeOf = require('../internals/object-get-prototype-of');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar has = require('../internals/has');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar IS_PURE = require('../internals/is-pure');\n\nvar ITERATOR = wellKnownSymbol('iterator');\nvar BUGGY_SAFARI_ITERATORS = false;\n\nvar returnThis = function () { return this; };\n\n// `%IteratorPrototype%` object\n// https://tc39.github.io/ecma262/#sec-%iteratorprototype%-object\nvar IteratorPrototype, PrototypeOfArrayIteratorPrototype, arrayIterator;\n\nif ([].keys) {\n  arrayIterator = [].keys();\n  // Safari 8 has buggy iterators w/o `next`\n  if (!('next' in arrayIterator)) BUGGY_SAFARI_ITERATORS = true;\n  else {\n    PrototypeOfArrayIteratorPrototype = getPrototypeOf(getPrototypeOf(arrayIterator));\n    if (PrototypeOfArrayIteratorPrototype !== Object.prototype) IteratorPrototype = PrototypeOfArrayIteratorPrototype;\n  }\n}\n\nif (IteratorPrototype == undefined) IteratorPrototype = {};\n\n// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\nif (!IS_PURE && !has(IteratorPrototype, ITERATOR)) {\n  createNonEnumerableProperty(IteratorPrototype, ITERATOR, returnThis);\n}\n\nmodule.exports = {\n  IteratorPrototype: IteratorPrototype,\n  BUGGY_SAFARI_ITERATORS: BUGGY_SAFARI_ITERATORS\n};\n","'use strict';\nvar TO_STRING_TAG_SUPPORT = require('../internals/to-string-tag-support');\nvar classof = require('../internals/classof');\n\n// `Object.prototype.toString` method implementation\n// https://tc39.github.io/ecma262/#sec-object.prototype.tostring\nmodule.exports = TO_STRING_TAG_SUPPORT ? {}.toString : function toString() {\n  return '[object ' + classof(this) + ']';\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar defineProperty = require('../internals/object-define-property').f;\n\nvar FunctionPrototype = Function.prototype;\nvar FunctionPrototypeToString = FunctionPrototype.toString;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// Function instances `.name` property\n// https://tc39.github.io/ecma262/#sec-function-instances-name\nif (DESCRIPTORS && !(NAME in FunctionPrototype)) {\n  defineProperty(FunctionPrototype, NAME, {\n    configurable: true,\n    get: function () {\n      try {\n        return FunctionPrototypeToString.call(this).match(nameRE)[1];\n      } catch (error) {\n        return '';\n      }\n    }\n  });\n}\n","var global = require('../internals/global');\nvar shared = require('../internals/shared');\nvar has = require('../internals/has');\nvar uid = require('../internals/uid');\nvar NATIVE_SYMBOL = require('../internals/native-symbol');\nvar USE_SYMBOL_AS_UID = require('../internals/use-symbol-as-uid');\n\nvar WellKnownSymbolsStore = shared('wks');\nvar Symbol = global.Symbol;\nvar createWellKnownSymbol = USE_SYMBOL_AS_UID ? Symbol : Symbol && Symbol.withoutSetter || uid;\n\nmodule.exports = function (name) {\n  if (!has(WellKnownSymbolsStore, name)) {\n    if (NATIVE_SYMBOL && has(Symbol, name)) WellKnownSymbolsStore[name] = Symbol[name];\n    else WellKnownSymbolsStore[name] = createWellKnownSymbol('Symbol.' + name);\n  } return WellKnownSymbolsStore[name];\n};\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PianoKeyboard.vue?vue&type=style&index=0&lang=css&\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"69d82ba6\", content, true, {\"sourceMap\":false,\"shadowMode\":false});","var bind = require('../internals/function-bind-context');\nvar IndexedObject = require('../internals/indexed-object');\nvar toObject = require('../internals/to-object');\nvar toLength = require('../internals/to-length');\nvar arraySpeciesCreate = require('../internals/array-species-create');\n\nvar push = [].push;\n\n// `Array.prototype.{ forEach, map, filter, some, every, find, findIndex }` methods implementation\nvar createMethod = function (TYPE) {\n  var IS_MAP = TYPE == 1;\n  var IS_FILTER = TYPE == 2;\n  var IS_SOME = TYPE == 3;\n  var IS_EVERY = TYPE == 4;\n  var IS_FIND_INDEX = TYPE == 6;\n  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;\n  return function ($this, callbackfn, that, specificCreate) {\n    var O = toObject($this);\n    var self = IndexedObject(O);\n    var boundFunction = bind(callbackfn, that, 3);\n    var length = toLength(self.length);\n    var index = 0;\n    var create = specificCreate || arraySpeciesCreate;\n    var target = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined;\n    var value, result;\n    for (;length > index; index++) if (NO_HOLES || index in self) {\n      value = self[index];\n      result = boundFunction(value, index, O);\n      if (TYPE) {\n        if (IS_MAP) target[index] = result; // map\n        else if (result) switch (TYPE) {\n          case 3: return true;              // some\n          case 5: return value;             // find\n          case 6: return index;             // findIndex\n          case 2: push.call(target, value); // filter\n        } else if (IS_EVERY) return false;  // every\n      }\n    }\n    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : target;\n  };\n};\n\nmodule.exports = {\n  // `Array.prototype.forEach` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.foreach\n  forEach: createMethod(0),\n  // `Array.prototype.map` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.map\n  map: createMethod(1),\n  // `Array.prototype.filter` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.filter\n  filter: createMethod(2),\n  // `Array.prototype.some` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.some\n  some: createMethod(3),\n  // `Array.prototype.every` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.every\n  every: createMethod(4),\n  // `Array.prototype.find` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.find\n  find: createMethod(5),\n  // `Array.prototype.findIndex` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.findIndex\n  findIndex: createMethod(6)\n};\n","var isObject = require('../internals/is-object');\n\n// `ToPrimitive` abstract operation\n// https://tc39.github.io/ecma262/#sec-toprimitive\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function (input, PREFERRED_STRING) {\n  if (!isObject(input)) return input;\n  var fn, val;\n  if (PREFERRED_STRING && typeof (fn = input.toString) == 'function' && !isObject(val = fn.call(input))) return val;\n  if (typeof (fn = input.valueOf) == 'function' && !isObject(val = fn.call(input))) return val;\n  if (!PREFERRED_STRING && typeof (fn = input.toString) == 'function' && !isObject(val = fn.call(input))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n","function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nmodule.exports = _arrayWithHoles;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableRest;","module.exports = false;\n","var toString = {}.toString;\n\nmodule.exports = function (it) {\n  return toString.call(it).slice(8, -1);\n};\n","var global = require('../internals/global');\nvar setGlobal = require('../internals/set-global');\n\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || setGlobal(SHARED, {});\n\nmodule.exports = store;\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","var has = require('../internals/has');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar indexOf = require('../internals/array-includes').indexOf;\nvar hiddenKeys = require('../internals/hidden-keys');\n\nmodule.exports = function (object, names) {\n  var O = toIndexedObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) !has(hiddenKeys, key) && has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (has(O, key = names[i++])) {\n    ~indexOf(result, key) || result.push(key);\n  }\n  return result;\n};\n","var global = require('../internals/global');\nvar isObject = require('../internals/is-object');\n\nvar document = global.document;\n// typeof document.createElement is 'object' in old IE\nvar EXISTS = isObject(document) && isObject(document.createElement);\n\nmodule.exports = function (it) {\n  return EXISTS ? document.createElement(it) : {};\n};\n","var global = require('../internals/global');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\n\nmodule.exports = function (key, value) {\n  try {\n    createNonEnumerableProperty(global, key, value);\n  } catch (error) {\n    global[key] = value;\n  } return value;\n};\n","module.exports = {};\n","module.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (error) {\n    return true;\n  }\n};\n","var path = require('../internals/path');\nvar global = require('../internals/global');\n\nvar aFunction = function (variable) {\n  return typeof variable == 'function' ? variable : undefined;\n};\n\nmodule.exports = function (namespace, method) {\n  return arguments.length < 2 ? aFunction(path[namespace]) || aFunction(global[namespace])\n    : path[namespace] && path[namespace][method] || global[namespace] && global[namespace][method];\n};\n","'use strict';\nvar nativePropertyIsEnumerable = {}.propertyIsEnumerable;\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n\n// Nashorn ~ JDK8 bug\nvar NASHORN_BUG = getOwnPropertyDescriptor && !nativePropertyIsEnumerable.call({ 1: 2 }, 1);\n\n// `Object.prototype.propertyIsEnumerable` method implementation\n// https://tc39.github.io/ecma262/#sec-object.prototype.propertyisenumerable\nexports.f = NASHORN_BUG ? function propertyIsEnumerable(V) {\n  var descriptor = getOwnPropertyDescriptor(this, V);\n  return !!descriptor && descriptor.enumerable;\n} : nativePropertyIsEnumerable;\n","var defineWellKnownSymbol = require('../internals/define-well-known-symbol');\n\n// `Symbol.iterator` well-known symbol\n// https://tc39.github.io/ecma262/#sec-symbol.iterator\ndefineWellKnownSymbol('iterator');\n","var anObject = require('../internals/an-object');\nvar aPossiblePrototype = require('../internals/a-possible-prototype');\n\n// `Object.setPrototypeOf` method\n// https://tc39.github.io/ecma262/#sec-object.setprototypeof\n// Works with __proto__ only. Old v8 can't work with null proto objects.\n/* eslint-disable no-proto */\nmodule.exports = Object.setPrototypeOf || ('__proto__' in {} ? function () {\n  var CORRECT_SETTER = false;\n  var test = {};\n  var setter;\n  try {\n    setter = Object.getOwnPropertyDescriptor(Object.prototype, '__proto__').set;\n    setter.call(test, []);\n    CORRECT_SETTER = test instanceof Array;\n  } catch (error) { /* empty */ }\n  return function setPrototypeOf(O, proto) {\n    anObject(O);\n    aPossiblePrototype(proto);\n    if (CORRECT_SETTER) setter.call(O, proto);\n    else O.__proto__ = proto;\n    return O;\n  };\n}() : undefined);\n","var TO_STRING_TAG_SUPPORT = require('../internals/to-string-tag-support');\nvar redefine = require('../internals/redefine');\nvar toString = require('../internals/object-to-string');\n\n// `Object.prototype.toString` method\n// https://tc39.github.io/ecma262/#sec-object.prototype.tostring\nif (!TO_STRING_TAG_SUPPORT) {\n  redefine(Object.prototype, 'toString', toString, { unsafe: true });\n}\n","var defineProperty = require('../internals/object-define-property').f;\nvar has = require('../internals/has');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\n\nmodule.exports = function (it, TAG, STATIC) {\n  if (it && !has(it = STATIC ? it : it.prototype, TO_STRING_TAG)) {\n    defineProperty(it, TO_STRING_TAG, { configurable: true, value: TAG });\n  }\n};\n","var check = function (it) {\n  return it && it.Math == Math && it;\n};\n\n// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nmodule.exports =\n  // eslint-disable-next-line no-undef\n  check(typeof globalThis == 'object' && globalThis) ||\n  check(typeof window == 'object' && window) ||\n  check(typeof self == 'object' && self) ||\n  check(typeof global == 'object' && global) ||\n  // eslint-disable-next-line no-new-func\n  Function('return this')();\n","var global = require('../internals/global');\nvar DOMIterables = require('../internals/dom-iterables');\nvar ArrayIteratorMethods = require('../modules/es.array.iterator');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar ITERATOR = wellKnownSymbol('iterator');\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\nvar ArrayValues = ArrayIteratorMethods.values;\n\nfor (var COLLECTION_NAME in DOMIterables) {\n  var Collection = global[COLLECTION_NAME];\n  var CollectionPrototype = Collection && Collection.prototype;\n  if (CollectionPrototype) {\n    // some Chrome versions have non-configurable methods on DOMTokenList\n    if (CollectionPrototype[ITERATOR] !== ArrayValues) try {\n      createNonEnumerableProperty(CollectionPrototype, ITERATOR, ArrayValues);\n    } catch (error) {\n      CollectionPrototype[ITERATOR] = ArrayValues;\n    }\n    if (!CollectionPrototype[TO_STRING_TAG]) {\n      createNonEnumerableProperty(CollectionPrototype, TO_STRING_TAG, COLLECTION_NAME);\n    }\n    if (DOMIterables[COLLECTION_NAME]) for (var METHOD_NAME in ArrayIteratorMethods) {\n      // some Chrome versions have non-configurable methods on DOMTokenList\n      if (CollectionPrototype[METHOD_NAME] !== ArrayIteratorMethods[METHOD_NAME]) try {\n        createNonEnumerableProperty(CollectionPrototype, METHOD_NAME, ArrayIteratorMethods[METHOD_NAME]);\n      } catch (error) {\n        CollectionPrototype[METHOD_NAME] = ArrayIteratorMethods[METHOD_NAME];\n      }\n    }\n  }\n}\n","var internalObjectKeys = require('../internals/object-keys-internal');\nvar enumBugKeys = require('../internals/enum-bug-keys');\n\n// `Object.keys` method\n// https://tc39.github.io/ecma262/#sec-object.keys\nmodule.exports = Object.keys || function keys(O) {\n  return internalObjectKeys(O, enumBugKeys);\n};\n","// `Symbol.prototype.description` getter\n// https://tc39.github.io/ecma262/#sec-symbol.prototype.description\n'use strict';\nvar $ = require('../internals/export');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar global = require('../internals/global');\nvar has = require('../internals/has');\nvar isObject = require('../internals/is-object');\nvar defineProperty = require('../internals/object-define-property').f;\nvar copyConstructorProperties = require('../internals/copy-constructor-properties');\n\nvar NativeSymbol = global.Symbol;\n\nif (DESCRIPTORS && typeof NativeSymbol == 'function' && (!('description' in NativeSymbol.prototype) ||\n  // Safari 12 bug\n  NativeSymbol().description !== undefined\n)) {\n  var EmptyStringDescriptionStore = {};\n  // wrap Symbol constructor for correct work with undefined description\n  var SymbolWrapper = function Symbol() {\n    var description = arguments.length < 1 || arguments[0] === undefined ? undefined : String(arguments[0]);\n    var result = this instanceof SymbolWrapper\n      ? new NativeSymbol(description)\n      // in Edge 13, String(Symbol(undefined)) === 'Symbol(undefined)'\n      : description === undefined ? NativeSymbol() : NativeSymbol(description);\n    if (description === '') EmptyStringDescriptionStore[result] = true;\n    return result;\n  };\n  copyConstructorProperties(SymbolWrapper, NativeSymbol);\n  var symbolPrototype = SymbolWrapper.prototype = NativeSymbol.prototype;\n  symbolPrototype.constructor = SymbolWrapper;\n\n  var symbolToString = symbolPrototype.toString;\n  var native = String(NativeSymbol('test')) == 'Symbol(test)';\n  var regexp = /^Symbol\\((.*)\\)[^)]+$/;\n  defineProperty(symbolPrototype, 'description', {\n    configurable: true,\n    get: function description() {\n      var symbol = isObject(this) ? this.valueOf() : this;\n      var string = symbolToString.call(symbol);\n      if (has(EmptyStringDescriptionStore, symbol)) return '';\n      var desc = native ? string.slice(7, -1) : string.replace(regexp, '$1');\n      return desc === '' ? undefined : desc;\n    }\n  });\n\n  $({ global: true, forced: true }, {\n    Symbol: SymbolWrapper\n  });\n}\n","var has = require('../internals/has');\nvar toObject = require('../internals/to-object');\nvar sharedKey = require('../internals/shared-key');\nvar CORRECT_PROTOTYPE_GETTER = require('../internals/correct-prototype-getter');\n\nvar IE_PROTO = sharedKey('IE_PROTO');\nvar ObjectPrototype = Object.prototype;\n\n// `Object.getPrototypeOf` method\n// https://tc39.github.io/ecma262/#sec-object.getprototypeof\nmodule.exports = CORRECT_PROTOTYPE_GETTER ? Object.getPrototypeOf : function (O) {\n  O = toObject(O);\n  if (has(O, IE_PROTO)) return O[IE_PROTO];\n  if (typeof O.constructor == 'function' && O instanceof O.constructor) {\n    return O.constructor.prototype;\n  } return O instanceof Object ? ObjectPrototype : null;\n};\n","var fails = require('../internals/fails');\n\nmodule.exports = !fails(function () {\n  function F() { /* empty */ }\n  F.prototype.constructor = null;\n  return Object.getPrototypeOf(new F()) !== F.prototype;\n});\n","'use strict';\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar addToUnscopables = require('../internals/add-to-unscopables');\nvar Iterators = require('../internals/iterators');\nvar InternalStateModule = require('../internals/internal-state');\nvar defineIterator = require('../internals/define-iterator');\n\nvar ARRAY_ITERATOR = 'Array Iterator';\nvar setInternalState = InternalStateModule.set;\nvar getInternalState = InternalStateModule.getterFor(ARRAY_ITERATOR);\n\n// `Array.prototype.entries` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.entries\n// `Array.prototype.keys` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.keys\n// `Array.prototype.values` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.values\n// `Array.prototype[@@iterator]` method\n// https://tc39.github.io/ecma262/#sec-array.prototype-@@iterator\n// `CreateArrayIterator` internal method\n// https://tc39.github.io/ecma262/#sec-createarrayiterator\nmodule.exports = defineIterator(Array, 'Array', function (iterated, kind) {\n  setInternalState(this, {\n    type: ARRAY_ITERATOR,\n    target: toIndexedObject(iterated), // target\n    index: 0,                          // next index\n    kind: kind                         // kind\n  });\n// `%ArrayIteratorPrototype%.next` method\n// https://tc39.github.io/ecma262/#sec-%arrayiteratorprototype%.next\n}, function () {\n  var state = getInternalState(this);\n  var target = state.target;\n  var kind = state.kind;\n  var index = state.index++;\n  if (!target || index >= target.length) {\n    state.target = undefined;\n    return { value: undefined, done: true };\n  }\n  if (kind == 'keys') return { value: index, done: false };\n  if (kind == 'values') return { value: target[index], done: false };\n  return { value: [index, target[index]], done: false };\n}, 'values');\n\n// argumentsList[@@iterator] is %ArrayProto_values%\n// https://tc39.github.io/ecma262/#sec-createunmappedargumentsobject\n// https://tc39.github.io/ecma262/#sec-createmappedargumentsobject\nIterators.Arguments = Iterators.Array;\n\n// https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');\n","var wellKnownSymbol = require('../internals/well-known-symbol');\n\nexports.f = wellKnownSymbol;\n","var has = require('../internals/has');\nvar ownKeys = require('../internals/own-keys');\nvar getOwnPropertyDescriptorModule = require('../internals/object-get-own-property-descriptor');\nvar definePropertyModule = require('../internals/object-define-property');\n\nmodule.exports = function (target, source) {\n  var keys = ownKeys(source);\n  var defineProperty = definePropertyModule.f;\n  var getOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    if (!has(target, key)) defineProperty(target, key, getOwnPropertyDescriptor(source, key));\n  }\n};\n","var classof = require('../internals/classof-raw');\n\n// `IsArray` abstract operation\n// https://tc39.github.io/ecma262/#sec-isarray\nmodule.exports = Array.isArray || function isArray(arg) {\n  return classof(arg) == 'Array';\n};\n","var wellKnownSymbol = require('../internals/well-known-symbol');\nvar Iterators = require('../internals/iterators');\n\nvar ITERATOR = wellKnownSymbol('iterator');\nvar ArrayPrototype = Array.prototype;\n\n// check on default Array iterator\nmodule.exports = function (it) {\n  return it !== undefined && (Iterators.Array === it || ArrayPrototype[ITERATOR] === it);\n};\n","var TO_STRING_TAG_SUPPORT = require('../internals/to-string-tag-support');\nvar classofRaw = require('../internals/classof-raw');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\n// ES3 wrong here\nvar CORRECT_ARGUMENTS = classofRaw(function () { return arguments; }()) == 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function (it, key) {\n  try {\n    return it[key];\n  } catch (error) { /* empty */ }\n};\n\n// getting tag from ES6+ `Object.prototype.toString`\nmodule.exports = TO_STRING_TAG_SUPPORT ? classofRaw : function (it) {\n  var O, tag, result;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (tag = tryGet(O = Object(it), TO_STRING_TAG)) == 'string' ? tag\n    // builtinTag case\n    : CORRECT_ARGUMENTS ? classofRaw(O)\n    // ES3 arguments fallback\n    : (result = classofRaw(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : result;\n};\n","var shared = require('../internals/shared');\nvar uid = require('../internals/uid');\n\nvar keys = shared('keys');\n\nmodule.exports = function (key) {\n  return keys[key] || (keys[key] = uid(key));\n};\n","// This file is imported into lib/wc client bundles.\n\nif (typeof window !== 'undefined') {\n  var currentScript = window.document.currentScript\n  if (process.env.NEED_CURRENTSCRIPT_POLYFILL) {\n    var getCurrentScript = require('@soda/get-current-script')\n    currentScript = getCurrentScript()\n\n    // for backward compatibility, because previously we directly included the polyfill\n    if (!('currentScript' in document)) {\n      Object.defineProperty(document, 'currentScript', { get: getCurrentScript })\n    }\n  }\n\n  var src = currentScript && currentScript.src.match(/(.+\\/)[^/]+\\.js(\\?.*)?$/)\n  if (src) {\n    __webpack_public_path__ = src[1] // eslint-disable-line\n  }\n}\n\n// Indicate to webpack that this file can be concatenated\nexport default null\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"piano-keyboard\"},_vm._l((_vm.notes),function(noteObject){return _c('div',{key:noteObject.note,staticClass:\"white-note\",class:[noteObject.pressed ? 'white-note-pressed' : ''],style:({width: _vm.whiteNoteWidthSize + '%', background: _vm.whiteNoteBackground(noteObject.pressed)}),on:{\"mousedown\":function($event){return _vm.playNoteMouse(noteObject)},\"mouseup\":function($event){return _vm.removePressedKeyMouse(noteObject)},\"mouseover\":function($event){return _vm.playNoteHover(noteObject)},\"mouseleave\":function($event){return _vm.removePressedKey(noteObject)}}},[(noteObject.blackNote)?_c('div',{staticClass:\"black-note\",class:[noteObject.blackNote.pressed ? 'black-note-pressed' : ''],style:({background: _vm.blackNoteBackground(noteObject.blackNote.pressed)}),on:{\"mousedown\":function($event){$event.stopPropagation();return _vm.playNoteMouse(noteObject.blackNote)},\"mouseup\":function($event){$event.stopPropagation();return _vm.removePressedKeyMouse(noteObject.blackNote)},\"mouseover\":function($event){$event.stopPropagation();return _vm.playNoteHover(noteObject.blackNote)},\"mouseleave\":function($event){$event.stopPropagation();return _vm.removePressedKey(noteObject.blackNote)}}},[_c('div',{staticClass:\"key-group unselectable\"},[(_vm.showKeys)?_c('div',{staticClass:\"key-input\"},[_vm._v(\" \"+_vm._s(noteObject.blackNote.key)+\" \")]):_vm._e(),(_vm.showNotes)?_c('div',{staticClass:\"key-text key-text-on-black-note\"},[_vm._v(\" \"+_vm._s(noteObject.blackNote.note)+\" \")]):_vm._e()])]):_vm._e(),_c('div',{staticClass:\"key-group unselectable\"},[(_vm.showKeys)?_c('div',{staticClass:\"key-input\"},[_vm._v(\" \"+_vm._s(noteObject.key)+\" \")]):_vm._e(),(_vm.showNotes)?_c('div',{staticClass:\"key-text\"},[_vm._v(\" \"+_vm._s(noteObject.note)+\" \")]):_vm._e()])])}),0)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","export const version = \"14.7.58\";\n//# sourceMappingURL=version.js.map","export const createAbortError = () => new DOMException('', 'AbortError');\n//# sourceMappingURL=abort-error.js.map","export const createAddActiveInputConnectionToAudioNode = (insertElementInSet) => {\n    return (activeInputs, source, [output, input, eventListener], ignoreDuplicates) => {\n        insertElementInSet(activeInputs[input], [source, output, eventListener], (activeInputConnection) => activeInputConnection[0] === source && activeInputConnection[1] === output, ignoreDuplicates);\n    };\n};\n//# sourceMappingURL=add-active-input-connection-to-audio-node.js.map","export const createAddAudioNodeConnections = (audioNodeConnectionsStore) => {\n    return (audioNode, audioNodeRenderer, nativeAudioNode) => {\n        const activeInputs = [];\n        for (let i = 0; i < nativeAudioNode.numberOfInputs; i += 1) {\n            activeInputs.push(new Set());\n        }\n        audioNodeConnectionsStore.set(audioNode, {\n            activeInputs,\n            outputs: new Set(),\n            passiveInputs: new WeakMap(),\n            renderer: audioNodeRenderer\n        });\n    };\n};\n//# sourceMappingURL=add-audio-node-connections.js.map","export const createAddAudioParamConnections = (audioParamConnectionsStore) => {\n    return (audioParam, audioParamRenderer) => {\n        audioParamConnectionsStore.set(audioParam, { activeInputs: new Set(), passiveInputs: new WeakMap(), renderer: audioParamRenderer });\n    };\n};\n//# sourceMappingURL=add-audio-param-connections.js.map","export const ACTIVE_AUDIO_NODE_STORE = new WeakSet();\nexport const AUDIO_NODE_CONNECTIONS_STORE = new WeakMap();\nexport const AUDIO_NODE_STORE = new WeakMap();\nexport const AUDIO_PARAM_CONNECTIONS_STORE = new WeakMap();\nexport const AUDIO_PARAM_STORE = new WeakMap();\nexport const CONTEXT_STORE = new WeakMap();\nexport const EVENT_LISTENERS = new WeakMap();\nexport const CYCLE_COUNTERS = new WeakMap();\n// This clunky name is borrowed from the spec. :-)\nexport const NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS = new WeakMap();\nexport const NODE_TO_PROCESSOR_MAPS = new WeakMap();\n//# sourceMappingURL=globals.js.map","const handler = {\n    construct() {\n        return handler;\n    }\n};\nexport const isConstructible = (constructible) => {\n    try {\n        const proxy = new Proxy(constructible, handler);\n        new proxy(); // tslint:disable-line:no-unused-expression\n    }\n    catch {\n        return false;\n    }\n    return true;\n};\n//# sourceMappingURL=is-constructible.js.map","/*\n * This massive regex tries to cover all the following cases.\n *\n * import './path';\n * import defaultImport from './path';\n * import { namedImport } from './path';\n * import { namedImport as renamendImport } from './path';\n * import * as namespaceImport from './path';\n * import defaultImport, { namedImport } from './path';\n * import defaultImport, { namedImport as renamendImport } from './path';\n * import defaultImport, * as namespaceImport from './path';\n */\nconst IMPORT_STATEMENT_REGEX = /^import(?:(?:[\\s]+[\\w]+|(?:[\\s]+[\\w]+[\\s]*,)?[\\s]*\\{[\\s]*[\\w]+(?:[\\s]+as[\\s]+[\\w]+)?(?:[\\s]*,[\\s]*[\\w]+(?:[\\s]+as[\\s]+[\\w]+)?)*[\\s]*}|(?:[\\s]+[\\w]+[\\s]*,)?[\\s]*\\*[\\s]+as[\\s]+[\\w]+)[\\s]+from)?(?:[\\s]*)(\"([^\"\\\\]|\\\\.)+\"|'([^'\\\\]|\\\\.)+')(?:[\\s]*);?/; // tslint:disable-line:max-line-length\nexport const splitImportStatements = (source, url) => {\n    const importStatements = [];\n    let sourceWithoutImportStatements = source.replace(/^[\\s]+/, '');\n    let result = sourceWithoutImportStatements.match(IMPORT_STATEMENT_REGEX);\n    while (result !== null) {\n        const unresolvedUrl = result[1].slice(1, -1);\n        const importStatementWithResolvedUrl = result[0]\n            .replace(/([\\s]+)?;?$/, '')\n            .replace(unresolvedUrl, new URL(unresolvedUrl, url).toString());\n        importStatements.push(importStatementWithResolvedUrl);\n        sourceWithoutImportStatements = sourceWithoutImportStatements.slice(result[0].length).replace(/^[\\s]+/, '');\n        result = sourceWithoutImportStatements.match(IMPORT_STATEMENT_REGEX);\n    }\n    return [importStatements.join(';'), sourceWithoutImportStatements];\n};\n//# sourceMappingURL=split-import-statements.js.map","import { NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS } from '../globals';\nimport { isConstructible } from '../helpers/is-constructible';\nimport { splitImportStatements } from '../helpers/split-import-statements';\nconst verifyParameterDescriptors = (parameterDescriptors) => {\n    if (parameterDescriptors !== undefined && !Array.isArray(parameterDescriptors)) {\n        throw new TypeError('The parameterDescriptors property of given value for processorCtor is not an array.');\n    }\n};\nconst verifyProcessorCtor = (processorCtor) => {\n    if (!isConstructible(processorCtor)) {\n        throw new TypeError('The given value for processorCtor should be a constructor.');\n    }\n    if (processorCtor.prototype === null || typeof processorCtor.prototype !== 'object') {\n        throw new TypeError('The given value for processorCtor should have a prototype.');\n    }\n};\nexport const createAddAudioWorkletModule = (cacheTestResult, createNotSupportedError, evaluateSource, exposeCurrentFrameAndCurrentTime, fetchSource, getNativeContext, getOrCreateBackupOfflineAudioContext, isNativeOfflineAudioContext, ongoingRequests, resolvedRequests, testAudioWorkletProcessorPostMessageSupport, window) => {\n    return (context, moduleURL, options = { credentials: 'omit' }) => {\n        const nativeContext = getNativeContext(context);\n        const absoluteUrl = new URL(moduleURL, window.location.href).toString();\n        // Bug #59: Safari does not implement the audioWorklet property.\n        if (nativeContext.audioWorklet !== undefined) {\n            return Promise.all([\n                fetchSource(moduleURL),\n                Promise.resolve(cacheTestResult(testAudioWorkletProcessorPostMessageSupport, testAudioWorkletProcessorPostMessageSupport))\n            ]).then(([source, isSupportingPostMessage]) => {\n                const [importStatements, sourceWithoutImportStatements] = splitImportStatements(source, absoluteUrl);\n                /*\n                 * Bug #179: Firefox does not allow to transfer any buffer which has been passed to the process() method as an argument.\n                 *\n                 * This is the unminified version of the code used below.\n                 *\n                 * ```js\n                 * class extends AudioWorkletProcessor {\n                 *\n                 *     __buffers = new WeakSet();\n                 *\n                 *     constructor () {\n                 *         super();\n                 *\n                 *         this.port.postMessage = ((postMessage) => {\n                 *             return (message, transferables) => {\n                 *                 const filteredTransferables = (transferables)\n                 *                     ? transferables.filter((transferable) => !this.__buffers.has(transferable))\n                 *                     : transferables;\n                 *\n                 *                 return postMessage.call(this.port, message, filteredTransferables);\n                 *              };\n                 *         })(this.port.postMessage);\n                 *     }\n                 * }\n                 * ```\n                 */\n                const patchedSourceWithoutImportStatements = isSupportingPostMessage\n                    ? sourceWithoutImportStatements\n                    : sourceWithoutImportStatements.replace(/\\s+extends\\s+AudioWorkletProcessor\\s*{/, ` extends (class extends AudioWorkletProcessor {__b=new WeakSet();constructor(){super();(p=>p.postMessage=(q=>(m,t)=>q.call(p,m,t?t.filter(u=>!this.__b.has(u)):t))(p.postMessage))(this.port)}}){`);\n                /*\n                 * Bug #170: Chrome and Edge do call process() with an array with empty channelData for each input if no input is connected.\n                 *\n                 * Bug #179: Firefox does not allow to transfer any buffer which has been passed to the process() method as an argument.\n                 *\n                 * This is the unminified version of the code used below:\n                 *\n                 * ```js\n                 * `${ importStatements };\n                 * ((registerProcessor) => {${ sourceWithoutImportStatements }\n                 * })((name, processorCtor) => registerProcessor(name, class extends processorCtor {\n                 *\n                 *     __collectBuffers = (array) => {\n                 *         array.forEach((element) => this.__buffers.add(element.buffer));\n                 *     };\n                 *\n                 *     process (inputs, outputs, parameters) {\n                 *         inputs.forEach(this.__collectBuffers);\n                 *         outputs.forEach(this.__collectBuffers);\n                 *         this.__collectBuffers(Object.values(parameters));\n                 *\n                 *         return super.process(\n                 *             (inputs.map((input) => input.some((channelData) => channelData.length === 0)) ? [ ] : input),\n                 *             outputs,\n                 *             parameters\n                 *         );\n                 *     }\n                 *\n                 * }))`\n                 * ```\n                 */\n                const memberDefinition = isSupportingPostMessage ? '' : '__c = (a) => a.forEach(e=>this.__b.add(e.buffer));';\n                const bufferRegistration = isSupportingPostMessage\n                    ? ''\n                    : 'i.forEach(this.__c);o.forEach(this.__c);this.__c(Object.values(p));';\n                const wrappedSource = `${importStatements};(registerProcessor=>{${patchedSourceWithoutImportStatements}\n})((n,p)=>registerProcessor(n,class extends p{${memberDefinition}process(i,o,p){${bufferRegistration}return super.process(i.map(j=>j.some(k=>k.length===0)?[]:j),o,p)}}))`;\n                const blob = new Blob([wrappedSource], { type: 'application/javascript; charset=utf-8' });\n                const url = URL.createObjectURL(blob);\n                return nativeContext.audioWorklet\n                    .addModule(url, options)\n                    .then(() => {\n                    if (isNativeOfflineAudioContext(nativeContext)) {\n                        return;\n                    }\n                    // Bug #186: Chrome, Edge and Opera do not allow to create an AudioWorkletNode on a closed AudioContext.\n                    const backupOfflineAudioContext = getOrCreateBackupOfflineAudioContext(nativeContext);\n                    return backupOfflineAudioContext.audioWorklet.addModule(url, options);\n                })\n                    .finally(() => URL.revokeObjectURL(url));\n            });\n        }\n        const resolvedRequestsOfContext = resolvedRequests.get(context);\n        if (resolvedRequestsOfContext !== undefined && resolvedRequestsOfContext.has(moduleURL)) {\n            return Promise.resolve();\n        }\n        const ongoingRequestsOfContext = ongoingRequests.get(context);\n        if (ongoingRequestsOfContext !== undefined) {\n            const promiseOfOngoingRequest = ongoingRequestsOfContext.get(moduleURL);\n            if (promiseOfOngoingRequest !== undefined) {\n                return promiseOfOngoingRequest;\n            }\n        }\n        const promise = fetchSource(moduleURL)\n            .then((source) => {\n            const [importStatements, sourceWithoutImportStatements] = splitImportStatements(source, absoluteUrl);\n            /*\n             * This is the unminified version of the code used below:\n             *\n             * ```js\n             * ${ importStatements };\n             * ((a, b) => {\n             *     (a[b] = a[b] || [ ]).push(\n             *         (AudioWorkletProcessor, global, registerProcessor, sampleRate, self, window) => {\n             *             ${ sourceWithoutImportStatements }\n             *         }\n             *     );\n             * })(window, '_AWGS');\n             * ```\n             */\n            // tslint:disable-next-line:max-line-length\n            const wrappedSource = `${importStatements};((a,b)=>{(a[b]=a[b]||[]).push((AudioWorkletProcessor,global,registerProcessor,sampleRate,self,window)=>{${sourceWithoutImportStatements}\n})})(window,'_AWGS')`;\n            // @todo Evaluating the given source code is a possible security problem.\n            return evaluateSource(wrappedSource);\n        })\n            .then(() => {\n            const evaluateAudioWorkletGlobalScope = window._AWGS.pop();\n            if (evaluateAudioWorkletGlobalScope === undefined) {\n                // Bug #182 Chrome, Edge and Opera do throw an instance of a SyntaxError instead of a DOMException.\n                throw new SyntaxError();\n            }\n            exposeCurrentFrameAndCurrentTime(nativeContext.currentTime, nativeContext.sampleRate, () => evaluateAudioWorkletGlobalScope(class AudioWorkletProcessor {\n            }, undefined, (name, processorCtor) => {\n                if (name.trim() === '') {\n                    throw createNotSupportedError();\n                }\n                const nodeNameToProcessorConstructorMap = NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS.get(nativeContext);\n                if (nodeNameToProcessorConstructorMap !== undefined) {\n                    if (nodeNameToProcessorConstructorMap.has(name)) {\n                        throw createNotSupportedError();\n                    }\n                    verifyProcessorCtor(processorCtor);\n                    verifyParameterDescriptors(processorCtor.parameterDescriptors);\n                    nodeNameToProcessorConstructorMap.set(name, processorCtor);\n                }\n                else {\n                    verifyProcessorCtor(processorCtor);\n                    verifyParameterDescriptors(processorCtor.parameterDescriptors);\n                    NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS.set(nativeContext, new Map([[name, processorCtor]]));\n                }\n            }, nativeContext.sampleRate, undefined, undefined));\n        });\n        if (ongoingRequestsOfContext === undefined) {\n            ongoingRequests.set(context, new Map([[moduleURL, promise]]));\n        }\n        else {\n            ongoingRequestsOfContext.set(moduleURL, promise);\n        }\n        promise\n            .then(() => {\n            const rslvdRqstsFCntxt = resolvedRequests.get(context);\n            if (rslvdRqstsFCntxt === undefined) {\n                resolvedRequests.set(context, new Set([moduleURL]));\n            }\n            else {\n                rslvdRqstsFCntxt.add(moduleURL);\n            }\n        })\n            .finally(() => {\n            const ngngRqstsFCntxt = ongoingRequests.get(context);\n            if (ngngRqstsFCntxt !== undefined) {\n                ngngRqstsFCntxt.delete(moduleURL);\n            }\n        });\n        return promise;\n    };\n};\n//# sourceMappingURL=add-audio-worklet-module.js.map","export const getValueForKey = (map, key) => {\n    const value = map.get(key);\n    if (value === undefined) {\n        throw new Error('A value with the given key could not be found.');\n    }\n    return value;\n};\n//# sourceMappingURL=get-value-for-key.js.map","export const pickElementFromSet = (set, predicate) => {\n    const matchingElements = Array.from(set).filter(predicate);\n    if (matchingElements.length > 1) {\n        throw Error('More than one element was found.');\n    }\n    if (matchingElements.length === 0) {\n        throw Error('No element was found.');\n    }\n    const [matchingElement] = matchingElements;\n    set.delete(matchingElement);\n    return matchingElement;\n};\n//# sourceMappingURL=pick-element-from-set.js.map","import { getValueForKey } from './get-value-for-key';\nimport { pickElementFromSet } from './pick-element-from-set';\nexport const deletePassiveInputConnectionToAudioNode = (passiveInputs, source, output, input) => {\n    const passiveInputConnections = getValueForKey(passiveInputs, source);\n    const matchingConnection = pickElementFromSet(passiveInputConnections, (passiveInputConnection) => passiveInputConnection[0] === output && passiveInputConnection[1] === input);\n    if (passiveInputConnections.size === 0) {\n        passiveInputs.delete(source);\n    }\n    return matchingConnection;\n};\n//# sourceMappingURL=delete-passive-input-connection-to-audio-node.js.map","import { EVENT_LISTENERS } from '../globals';\nimport { getValueForKey } from './get-value-for-key';\nexport const getEventListenersOfAudioNode = (audioNode) => {\n    return getValueForKey(EVENT_LISTENERS, audioNode);\n};\n//# sourceMappingURL=get-event-listeners-of-audio-node.js.map","import { ACTIVE_AUDIO_NODE_STORE } from '../globals';\nimport { getEventListenersOfAudioNode } from './get-event-listeners-of-audio-node';\nexport const setInternalStateToActive = (audioNode) => {\n    if (ACTIVE_AUDIO_NODE_STORE.has(audioNode)) {\n        throw new Error('The AudioNode is already stored.');\n    }\n    ACTIVE_AUDIO_NODE_STORE.add(audioNode);\n    getEventListenersOfAudioNode(audioNode).forEach((eventListener) => eventListener(true));\n};\n//# sourceMappingURL=set-internal-state-to-active.js.map","export const isAudioWorkletNode = (audioNode) => {\n    return 'port' in audioNode;\n};\n//# sourceMappingURL=audio-worklet-node.js.map","import { ACTIVE_AUDIO_NODE_STORE } from '../globals';\nimport { getEventListenersOfAudioNode } from './get-event-listeners-of-audio-node';\nexport const setInternalStateToPassive = (audioNode) => {\n    if (!ACTIVE_AUDIO_NODE_STORE.has(audioNode)) {\n        throw new Error('The AudioNode is not stored.');\n    }\n    ACTIVE_AUDIO_NODE_STORE.delete(audioNode);\n    getEventListenersOfAudioNode(audioNode).forEach((eventListener) => eventListener(false));\n};\n//# sourceMappingURL=set-internal-state-to-passive.js.map","import { isAudioWorkletNode } from '../guards/audio-worklet-node';\nimport { setInternalStateToPassive } from './set-internal-state-to-passive';\n// Set the internalState of the audioNode to 'passive' if it is not an AudioWorkletNode and if it has no 'active' input connections.\nexport const setInternalStateToPassiveWhenNecessary = (audioNode, activeInputs) => {\n    if (!isAudioWorkletNode(audioNode) && activeInputs.every((connections) => connections.size === 0)) {\n        setInternalStateToPassive(audioNode);\n    }\n};\n//# sourceMappingURL=set-internal-state-to-passive-when-necessary.js.map","import { deletePassiveInputConnectionToAudioNode } from '../helpers/delete-passive-input-connection-to-audio-node';\nimport { setInternalStateToActive } from '../helpers/set-internal-state-to-active';\nimport { setInternalStateToPassiveWhenNecessary } from '../helpers/set-internal-state-to-passive-when-necessary';\nexport const createAddConnectionToAudioNode = (addActiveInputConnectionToAudioNode, addPassiveInputConnectionToAudioNode, connectNativeAudioNodeToNativeAudioNode, deleteActiveInputConnectionToAudioNode, disconnectNativeAudioNodeFromNativeAudioNode, getAudioNodeConnections, getAudioNodeTailTime, getEventListenersOfAudioNode, getNativeAudioNode, insertElementInSet, isActiveAudioNode, isPartOfACycle, isPassiveAudioNode) => {\n    return (source, destination, output, input, isOffline) => {\n        const { activeInputs, passiveInputs } = getAudioNodeConnections(destination);\n        const { outputs } = getAudioNodeConnections(source);\n        const eventListeners = getEventListenersOfAudioNode(source);\n        const eventListener = (isActive) => {\n            const nativeDestinationAudioNode = getNativeAudioNode(destination);\n            const nativeSourceAudioNode = getNativeAudioNode(source);\n            if (isActive) {\n                const partialConnection = deletePassiveInputConnectionToAudioNode(passiveInputs, source, output, input);\n                addActiveInputConnectionToAudioNode(activeInputs, source, partialConnection, false);\n                if (!isOffline && !isPartOfACycle(source)) {\n                    connectNativeAudioNodeToNativeAudioNode(nativeSourceAudioNode, nativeDestinationAudioNode, output, input);\n                }\n                if (isPassiveAudioNode(destination)) {\n                    setInternalStateToActive(destination);\n                }\n            }\n            else {\n                const partialConnection = deleteActiveInputConnectionToAudioNode(activeInputs, source, output, input);\n                addPassiveInputConnectionToAudioNode(passiveInputs, input, partialConnection, false);\n                if (!isOffline && !isPartOfACycle(source)) {\n                    disconnectNativeAudioNodeFromNativeAudioNode(nativeSourceAudioNode, nativeDestinationAudioNode, output, input);\n                }\n                const tailTime = getAudioNodeTailTime(destination);\n                if (tailTime === 0) {\n                    if (isActiveAudioNode(destination)) {\n                        setInternalStateToPassiveWhenNecessary(destination, activeInputs);\n                    }\n                }\n                else {\n                    setTimeout(() => {\n                        if (isActiveAudioNode(destination)) {\n                            setInternalStateToPassiveWhenNecessary(destination, activeInputs);\n                        }\n                    }, tailTime * 1000);\n                }\n            }\n        };\n        if (insertElementInSet(outputs, [destination, output, input], (outputConnection) => outputConnection[0] === destination && outputConnection[1] === output && outputConnection[2] === input, true)) {\n            eventListeners.add(eventListener);\n            if (isActiveAudioNode(source)) {\n                addActiveInputConnectionToAudioNode(activeInputs, source, [output, input, eventListener], true);\n            }\n            else {\n                addPassiveInputConnectionToAudioNode(passiveInputs, input, [source, output, eventListener], true);\n            }\n            return true;\n        }\n        return false;\n    };\n};\n//# sourceMappingURL=add-connection-to-audio-node.js.map","export const createAddPassiveInputConnectionToAudioNode = (insertElementInSet) => {\n    return (passiveInputs, input, [source, output, eventListener], ignoreDuplicates) => {\n        const passiveInputConnections = passiveInputs.get(source);\n        if (passiveInputConnections === undefined) {\n            passiveInputs.set(source, new Set([[output, input, eventListener]]));\n        }\n        else {\n            insertElementInSet(passiveInputConnections, [output, input, eventListener], (passiveInputConnection) => passiveInputConnection[0] === output && passiveInputConnection[1] === input, ignoreDuplicates);\n        }\n    };\n};\n//# sourceMappingURL=add-passive-input-connection-to-audio-node.js.map","export const createAddSilentConnection = (createNativeGainNode) => {\n    return (nativeContext, nativeAudioScheduledSourceNode) => {\n        const nativeGainNode = createNativeGainNode(nativeContext, {\n            channelCount: 1,\n            channelCountMode: 'explicit',\n            channelInterpretation: 'discrete',\n            gain: 0\n        });\n        nativeAudioScheduledSourceNode.connect(nativeGainNode).connect(nativeContext.destination);\n        const disconnect = () => {\n            nativeAudioScheduledSourceNode.removeEventListener('ended', disconnect);\n            nativeAudioScheduledSourceNode.disconnect(nativeGainNode);\n            nativeGainNode.disconnect();\n        };\n        nativeAudioScheduledSourceNode.addEventListener('ended', disconnect);\n    };\n};\n//# sourceMappingURL=add-silent-connection.js.map","export const createAddUnrenderedAudioWorkletNode = (getUnrenderedAudioWorkletNodes) => {\n    return (nativeContext, audioWorkletNode) => {\n        getUnrenderedAudioWorkletNodes(nativeContext).add(audioWorkletNode);\n    };\n};\n//# sourceMappingURL=add-unrendered-audio-worklet-node.js.map","const DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    fftSize: 2048,\n    maxDecibels: -30,\n    minDecibels: -100,\n    smoothingTimeConstant: 0.8\n};\nexport const createAnalyserNodeConstructor = (audionNodeConstructor, createAnalyserNodeRenderer, createIndexSizeError, createNativeAnalyserNode, getNativeContext, isNativeOfflineAudioContext) => {\n    return class AnalyserNode extends audionNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeAnalyserNode = createNativeAnalyserNode(nativeContext, mergedOptions);\n            const analyserNodeRenderer = ((isNativeOfflineAudioContext(nativeContext) ? createAnalyserNodeRenderer() : null));\n            super(context, false, nativeAnalyserNode, analyserNodeRenderer);\n            this._nativeAnalyserNode = nativeAnalyserNode;\n        }\n        get fftSize() {\n            return this._nativeAnalyserNode.fftSize;\n        }\n        set fftSize(value) {\n            this._nativeAnalyserNode.fftSize = value;\n        }\n        get frequencyBinCount() {\n            return this._nativeAnalyserNode.frequencyBinCount;\n        }\n        get maxDecibels() {\n            return this._nativeAnalyserNode.maxDecibels;\n        }\n        set maxDecibels(value) {\n            // Bug #118: Safari does not throw an error if maxDecibels is not more than minDecibels.\n            const maxDecibels = this._nativeAnalyserNode.maxDecibels;\n            this._nativeAnalyserNode.maxDecibels = value;\n            if (!(value > this._nativeAnalyserNode.minDecibels)) {\n                this._nativeAnalyserNode.maxDecibels = maxDecibels;\n                throw createIndexSizeError();\n            }\n        }\n        get minDecibels() {\n            return this._nativeAnalyserNode.minDecibels;\n        }\n        set minDecibels(value) {\n            // Bug #118: Safari does not throw an error if maxDecibels is not more than minDecibels.\n            const minDecibels = this._nativeAnalyserNode.minDecibels;\n            this._nativeAnalyserNode.minDecibels = value;\n            if (!(this._nativeAnalyserNode.maxDecibels > value)) {\n                this._nativeAnalyserNode.minDecibels = minDecibels;\n                throw createIndexSizeError();\n            }\n        }\n        get smoothingTimeConstant() {\n            return this._nativeAnalyserNode.smoothingTimeConstant;\n        }\n        set smoothingTimeConstant(value) {\n            this._nativeAnalyserNode.smoothingTimeConstant = value;\n        }\n        getByteFrequencyData(array) {\n            this._nativeAnalyserNode.getByteFrequencyData(array);\n        }\n        getByteTimeDomainData(array) {\n            this._nativeAnalyserNode.getByteTimeDomainData(array);\n        }\n        getFloatFrequencyData(array) {\n            this._nativeAnalyserNode.getFloatFrequencyData(array);\n        }\n        getFloatTimeDomainData(array) {\n            this._nativeAnalyserNode.getFloatTimeDomainData(array);\n        }\n    };\n};\n//# sourceMappingURL=analyser-node-constructor.js.map","export const isOwnedByContext = (nativeAudioNode, nativeContext) => {\n    return nativeAudioNode.context === nativeContext;\n};\n//# sourceMappingURL=is-owned-by-context.js.map","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createAnalyserNodeRendererFactory = (createNativeAnalyserNode, getNativeAudioNode, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeAnalyserNodes = new WeakMap();\n        const createAnalyserNode = async (proxy, nativeOfflineAudioContext, trace) => {\n            let nativeAnalyserNode = getNativeAudioNode(proxy);\n            // If the initially used nativeAnalyserNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeAnalyserNodeIsOwnedByContext = isOwnedByContext(nativeAnalyserNode, nativeOfflineAudioContext);\n            if (!nativeAnalyserNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeAnalyserNode.channelCount,\n                    channelCountMode: nativeAnalyserNode.channelCountMode,\n                    channelInterpretation: nativeAnalyserNode.channelInterpretation,\n                    fftSize: nativeAnalyserNode.fftSize,\n                    maxDecibels: nativeAnalyserNode.maxDecibels,\n                    minDecibels: nativeAnalyserNode.minDecibels,\n                    smoothingTimeConstant: nativeAnalyserNode.smoothingTimeConstant\n                };\n                nativeAnalyserNode = createNativeAnalyserNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeAnalyserNodes.set(nativeOfflineAudioContext, nativeAnalyserNode);\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAnalyserNode, trace);\n            return nativeAnalyserNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext, trace) {\n                const renderedNativeAnalyserNode = renderedNativeAnalyserNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeAnalyserNode !== undefined) {\n                    return Promise.resolve(renderedNativeAnalyserNode);\n                }\n                return createAnalyserNode(proxy, nativeOfflineAudioContext, trace);\n            }\n        };\n    };\n};\n//# sourceMappingURL=analyser-node-renderer-factory.js.map","export const testAudioBufferCopyChannelMethodsOutOfBoundsSupport = (nativeAudioBuffer) => {\n    try {\n        nativeAudioBuffer.copyToChannel(new Float32Array(1), 0, -1);\n    }\n    catch {\n        return false;\n    }\n    return true;\n};\n//# sourceMappingURL=test-audio-buffer-copy-channel-methods-out-of-bounds-support.js.map","export const createIndexSizeError = () => new DOMException('', 'IndexSizeError');\n//# sourceMappingURL=index-size-error.js.map","import { createIndexSizeError } from '../factories/index-size-error';\nexport const wrapAudioBufferGetChannelDataMethod = (audioBuffer) => {\n    audioBuffer.getChannelData = ((getChannelData) => {\n        return (channel) => {\n            try {\n                return getChannelData.call(audioBuffer, channel);\n            }\n            catch (err) {\n                if (err.code === 12) {\n                    throw createIndexSizeError();\n                }\n                throw err;\n            }\n        };\n    })(audioBuffer.getChannelData);\n};\n//# sourceMappingURL=wrap-audio-buffer-get-channel-data-method.js.map","import { testAudioBufferCopyChannelMethodsOutOfBoundsSupport } from '../helpers/test-audio-buffer-copy-channel-methods-out-of-bounds-support';\nimport { wrapAudioBufferGetChannelDataMethod } from '../helpers/wrap-audio-buffer-get-channel-data-method';\nconst DEFAULT_OPTIONS = {\n    numberOfChannels: 1\n};\nexport const createAudioBufferConstructor = (audioBufferStore, cacheTestResult, createNotSupportedError, nativeAudioBufferConstructor, nativeOfflineAudioContextConstructor, testNativeAudioBufferConstructorSupport, wrapAudioBufferCopyChannelMethods, wrapAudioBufferCopyChannelMethodsOutOfBounds) => {\n    let nativeOfflineAudioContext = null;\n    return class AudioBuffer {\n        constructor(options) {\n            if (nativeOfflineAudioContextConstructor === null) {\n                throw new Error('Missing the native OfflineAudioContext constructor.');\n            }\n            const { length, numberOfChannels, sampleRate } = { ...DEFAULT_OPTIONS, ...options };\n            if (nativeOfflineAudioContext === null) {\n                nativeOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n            }\n            /*\n             * Bug #99: Firefox does not throw a NotSupportedError when the numberOfChannels is zero. But it only does it when using the\n             * factory function. But since Firefox also supports the constructor everything should be fine.\n             */\n            const audioBuffer = nativeAudioBufferConstructor !== null &&\n                cacheTestResult(testNativeAudioBufferConstructorSupport, testNativeAudioBufferConstructorSupport)\n                ? new nativeAudioBufferConstructor({ length, numberOfChannels, sampleRate })\n                : nativeOfflineAudioContext.createBuffer(numberOfChannels, length, sampleRate);\n            // Bug #99: Safari does not throw an error when the numberOfChannels is zero.\n            if (audioBuffer.numberOfChannels === 0) {\n                throw createNotSupportedError();\n            }\n            // Bug #5: Safari does not support copyFromChannel() and copyToChannel().\n            // Bug #100: Safari does throw a wrong error when calling getChannelData() with an out-of-bounds value.\n            if (typeof audioBuffer.copyFromChannel !== 'function') {\n                wrapAudioBufferCopyChannelMethods(audioBuffer);\n                wrapAudioBufferGetChannelDataMethod(audioBuffer);\n                // Bug #157: Firefox does not allow the bufferOffset to be out-of-bounds.\n            }\n            else if (!cacheTestResult(testAudioBufferCopyChannelMethodsOutOfBoundsSupport, () => testAudioBufferCopyChannelMethodsOutOfBoundsSupport(audioBuffer))) {\n                wrapAudioBufferCopyChannelMethodsOutOfBounds(audioBuffer);\n            }\n            audioBufferStore.add(audioBuffer);\n            /*\n             * This does violate all good pratices but it is necessary to allow this AudioBuffer to be used with native\n             * (Offline)AudioContexts.\n             */\n            return audioBuffer;\n        }\n        static [Symbol.hasInstance](instance) {\n            return ((instance !== null && typeof instance === 'object' && Object.getPrototypeOf(instance) === AudioBuffer.prototype) ||\n                audioBufferStore.has(instance));\n        }\n    };\n};\n//# sourceMappingURL=audio-buffer-constructor.js.map","export const MOST_NEGATIVE_SINGLE_FLOAT = -3.4028234663852886e38;\nexport const MOST_POSITIVE_SINGLE_FLOAT = -MOST_NEGATIVE_SINGLE_FLOAT;\n//# sourceMappingURL=constants.js.map","import { ACTIVE_AUDIO_NODE_STORE } from '../globals';\nexport const isActiveAudioNode = (audioNode) => ACTIVE_AUDIO_NODE_STORE.has(audioNode);\n//# sourceMappingURL=is-active-audio-node.js.map","import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nimport { isActiveAudioNode } from '../helpers/is-active-audio-node';\nimport { setInternalStateToActive } from '../helpers/set-internal-state-to-active';\nimport { setInternalStateToPassive } from '../helpers/set-internal-state-to-passive';\nconst DEFAULT_OPTIONS = {\n    buffer: null,\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    // Bug #149: Safari does not yet support the detune AudioParam.\n    loop: false,\n    loopEnd: 0,\n    loopStart: 0,\n    playbackRate: 1\n};\nexport const createAudioBufferSourceNodeConstructor = (audioNodeConstructor, createAudioBufferSourceNodeRenderer, createAudioParam, createInvalidStateError, createNativeAudioBufferSourceNode, getNativeContext, isNativeOfflineAudioContext, wrapEventListener) => {\n    return class AudioBufferSourceNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeAudioBufferSourceNode = createNativeAudioBufferSourceNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const audioBufferSourceNodeRenderer = ((isOffline ? createAudioBufferSourceNodeRenderer() : null));\n            super(context, false, nativeAudioBufferSourceNode, audioBufferSourceNodeRenderer);\n            this._audioBufferSourceNodeRenderer = audioBufferSourceNodeRenderer;\n            this._isBufferNullified = false;\n            this._isBufferSet = mergedOptions.buffer !== null;\n            this._nativeAudioBufferSourceNode = nativeAudioBufferSourceNode;\n            this._onended = null;\n            // Bug #73: Safari does not export the correct values for maxValue and minValue.\n            this._playbackRate = createAudioParam(this, isOffline, nativeAudioBufferSourceNode.playbackRate, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n        }\n        get buffer() {\n            if (this._isBufferNullified) {\n                return null;\n            }\n            return this._nativeAudioBufferSourceNode.buffer;\n        }\n        set buffer(value) {\n            this._nativeAudioBufferSourceNode.buffer = value;\n            // Bug #72: Only Chrome, Edge & Opera do not allow to reassign the buffer yet.\n            if (value !== null) {\n                if (this._isBufferSet) {\n                    throw createInvalidStateError();\n                }\n                this._isBufferSet = true;\n            }\n        }\n        get loop() {\n            return this._nativeAudioBufferSourceNode.loop;\n        }\n        set loop(value) {\n            this._nativeAudioBufferSourceNode.loop = value;\n        }\n        get loopEnd() {\n            return this._nativeAudioBufferSourceNode.loopEnd;\n        }\n        set loopEnd(value) {\n            this._nativeAudioBufferSourceNode.loopEnd = value;\n        }\n        get loopStart() {\n            return this._nativeAudioBufferSourceNode.loopStart;\n        }\n        set loopStart(value) {\n            this._nativeAudioBufferSourceNode.loopStart = value;\n        }\n        get onended() {\n            return this._onended;\n        }\n        set onended(value) {\n            const wrappedListener = typeof value === 'function' ? wrapEventListener(this, value) : null;\n            this._nativeAudioBufferSourceNode.onended = wrappedListener;\n            const nativeOnEnded = this._nativeAudioBufferSourceNode.onended;\n            this._onended = nativeOnEnded !== null && nativeOnEnded === wrappedListener ? value : nativeOnEnded;\n        }\n        get playbackRate() {\n            return this._playbackRate;\n        }\n        start(when = 0, offset = 0, duration) {\n            this._nativeAudioBufferSourceNode.start(when, offset, duration);\n            if (this._audioBufferSourceNodeRenderer !== null) {\n                this._audioBufferSourceNodeRenderer.start = duration === undefined ? [when, offset] : [when, offset, duration];\n            }\n            if (this.context.state !== 'closed') {\n                setInternalStateToActive(this);\n                const resetInternalStateToPassive = () => {\n                    this._nativeAudioBufferSourceNode.removeEventListener('ended', resetInternalStateToPassive);\n                    if (isActiveAudioNode(this)) {\n                        setInternalStateToPassive(this);\n                    }\n                };\n                this._nativeAudioBufferSourceNode.addEventListener('ended', resetInternalStateToPassive);\n            }\n        }\n        stop(when = 0) {\n            this._nativeAudioBufferSourceNode.stop(when);\n            if (this._audioBufferSourceNodeRenderer !== null) {\n                this._audioBufferSourceNodeRenderer.stop = when;\n            }\n        }\n    };\n};\n//# sourceMappingURL=audio-buffer-source-node-constructor.js.map","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createAudioBufferSourceNodeRendererFactory = (connectAudioParam, createNativeAudioBufferSourceNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeAudioBufferSourceNodes = new WeakMap();\n        let start = null;\n        let stop = null;\n        const createAudioBufferSourceNode = async (proxy, nativeOfflineAudioContext, trace) => {\n            let nativeAudioBufferSourceNode = getNativeAudioNode(proxy);\n            /*\n             * If the initially used nativeAudioBufferSourceNode was not constructed on the same OfflineAudioContext it needs to be created\n             * again.\n             */\n            const nativeAudioBufferSourceNodeIsOwnedByContext = isOwnedByContext(nativeAudioBufferSourceNode, nativeOfflineAudioContext);\n            if (!nativeAudioBufferSourceNodeIsOwnedByContext) {\n                const options = {\n                    buffer: nativeAudioBufferSourceNode.buffer,\n                    channelCount: nativeAudioBufferSourceNode.channelCount,\n                    channelCountMode: nativeAudioBufferSourceNode.channelCountMode,\n                    channelInterpretation: nativeAudioBufferSourceNode.channelInterpretation,\n                    // Bug #149: Safari does not yet support the detune AudioParam.\n                    loop: nativeAudioBufferSourceNode.loop,\n                    loopEnd: nativeAudioBufferSourceNode.loopEnd,\n                    loopStart: nativeAudioBufferSourceNode.loopStart,\n                    playbackRate: nativeAudioBufferSourceNode.playbackRate.value\n                };\n                nativeAudioBufferSourceNode = createNativeAudioBufferSourceNode(nativeOfflineAudioContext, options);\n                if (start !== null) {\n                    nativeAudioBufferSourceNode.start(...start);\n                }\n                if (stop !== null) {\n                    nativeAudioBufferSourceNode.stop(stop);\n                }\n            }\n            renderedNativeAudioBufferSourceNodes.set(nativeOfflineAudioContext, nativeAudioBufferSourceNode);\n            if (!nativeAudioBufferSourceNodeIsOwnedByContext) {\n                // Bug #149: Safari does not yet support the detune AudioParam.\n                await renderAutomation(nativeOfflineAudioContext, proxy.playbackRate, nativeAudioBufferSourceNode.playbackRate, trace);\n            }\n            else {\n                // Bug #149: Safari does not yet support the detune AudioParam.\n                await connectAudioParam(nativeOfflineAudioContext, proxy.playbackRate, nativeAudioBufferSourceNode.playbackRate, trace);\n            }\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAudioBufferSourceNode, trace);\n            return nativeAudioBufferSourceNode;\n        };\n        return {\n            set start(value) {\n                start = value;\n            },\n            set stop(value) {\n                stop = value;\n            },\n            render(proxy, nativeOfflineAudioContext, trace) {\n                const renderedNativeAudioBufferSourceNode = renderedNativeAudioBufferSourceNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeAudioBufferSourceNode !== undefined) {\n                    return Promise.resolve(renderedNativeAudioBufferSourceNode);\n                }\n                return createAudioBufferSourceNode(proxy, nativeOfflineAudioContext, trace);\n            }\n        };\n    };\n};\n//# sourceMappingURL=audio-buffer-source-node-renderer-factory.js.map","export const isAudioBufferSourceNode = (audioNode) => {\n    return 'playbackRate' in audioNode;\n};\n//# sourceMappingURL=audio-buffer-source-node.js.map","export const isBiquadFilterNode = (audioNode) => {\n    return 'frequency' in audioNode && 'gain' in audioNode;\n};\n//# sourceMappingURL=biquad-filter-node.js.map","export const isConstantSourceNode = (audioNode) => {\n    return 'offset' in audioNode;\n};\n//# sourceMappingURL=constant-source-node.js.map","export const isGainNode = (audioNode) => {\n    return !('frequency' in audioNode) && 'gain' in audioNode;\n};\n//# sourceMappingURL=gain-node.js.map","export const isOscillatorNode = (audioNode) => {\n    return 'detune' in audioNode && 'frequency' in audioNode;\n};\n//# sourceMappingURL=oscillator-node.js.map","export const isStereoPannerNode = (audioNode) => {\n    return 'pan' in audioNode;\n};\n//# sourceMappingURL=stereo-panner-node.js.map","import { AUDIO_NODE_CONNECTIONS_STORE } from '../globals';\nimport { getValueForKey } from './get-value-for-key';\nexport const getAudioNodeConnections = (audioNode) => {\n    return getValueForKey(AUDIO_NODE_CONNECTIONS_STORE, audioNode);\n};\n//# sourceMappingURL=get-audio-node-connections.js.map","import { AUDIO_PARAM_CONNECTIONS_STORE } from '../globals';\nimport { getValueForKey } from './get-value-for-key';\nexport const getAudioParamConnections = (audioParam) => {\n    return getValueForKey(AUDIO_PARAM_CONNECTIONS_STORE, audioParam);\n};\n//# sourceMappingURL=get-audio-param-connections.js.map","import { isAudioBufferSourceNode } from '../guards/audio-buffer-source-node';\nimport { isAudioWorkletNode } from '../guards/audio-worklet-node';\nimport { isBiquadFilterNode } from '../guards/biquad-filter-node';\nimport { isConstantSourceNode } from '../guards/constant-source-node';\nimport { isGainNode } from '../guards/gain-node';\nimport { isOscillatorNode } from '../guards/oscillator-node';\nimport { isStereoPannerNode } from '../guards/stereo-panner-node';\nimport { getAudioNodeConnections } from './get-audio-node-connections';\nimport { getAudioParamConnections } from './get-audio-param-connections';\nimport { isActiveAudioNode } from './is-active-audio-node';\nimport { setInternalStateToPassive } from './set-internal-state-to-passive';\nexport const deactivateActiveAudioNodeInputConnections = (audioNode, trace) => {\n    const { activeInputs } = getAudioNodeConnections(audioNode);\n    activeInputs.forEach((connections) => connections.forEach(([source]) => {\n        if (!trace.includes(audioNode)) {\n            deactivateActiveAudioNodeInputConnections(source, [...trace, audioNode]);\n        }\n    }));\n    const audioParams = isAudioBufferSourceNode(audioNode)\n        ? [\n            // Bug #149: Safari does not yet support the detune AudioParam.\n            audioNode.playbackRate\n        ]\n        : isAudioWorkletNode(audioNode)\n            ? Array.from(audioNode.parameters.values())\n            : isBiquadFilterNode(audioNode)\n                ? [audioNode.Q, audioNode.detune, audioNode.frequency, audioNode.gain]\n                : isConstantSourceNode(audioNode)\n                    ? [audioNode.offset]\n                    : isGainNode(audioNode)\n                        ? [audioNode.gain]\n                        : isOscillatorNode(audioNode)\n                            ? [audioNode.detune, audioNode.frequency]\n                            : isStereoPannerNode(audioNode)\n                                ? [audioNode.pan]\n                                : [];\n    for (const audioParam of audioParams) {\n        const audioParamConnections = getAudioParamConnections(audioParam);\n        if (audioParamConnections !== undefined) {\n            audioParamConnections.activeInputs.forEach(([source]) => deactivateActiveAudioNodeInputConnections(source, trace));\n        }\n    }\n    if (isActiveAudioNode(audioNode)) {\n        setInternalStateToPassive(audioNode);\n    }\n};\n//# sourceMappingURL=deactivate-active-audio-node-input-connections.js.map","import { deactivateActiveAudioNodeInputConnections } from './deactivate-active-audio-node-input-connections';\nexport const deactivateAudioGraph = (context) => {\n    deactivateActiveAudioNodeInputConnections(context.destination, []);\n};\n//# sourceMappingURL=deactivate-audio-graph.js.map","export const isValidLatencyHint = (latencyHint) => {\n    return (latencyHint === undefined ||\n        typeof latencyHint === 'number' ||\n        (typeof latencyHint === 'string' && (latencyHint === 'balanced' || latencyHint === 'interactive' || latencyHint === 'playback')));\n};\n//# sourceMappingURL=is-valid-latency-hint.js.map","import { deactivateAudioGraph } from '../helpers/deactivate-audio-graph';\nimport { isValidLatencyHint } from '../helpers/is-valid-latency-hint';\nexport const createAudioContextConstructor = (baseAudioContextConstructor, createInvalidStateError, createNotSupportedError, createUnknownError, mediaElementAudioSourceNodeConstructor, mediaStreamAudioDestinationNodeConstructor, mediaStreamAudioSourceNodeConstructor, mediaStreamTrackAudioSourceNodeConstructor, nativeAudioContextConstructor) => {\n    return class AudioContext extends baseAudioContextConstructor {\n        constructor(options = {}) {\n            if (nativeAudioContextConstructor === null) {\n                throw new Error('Missing the native AudioContext constructor.');\n            }\n            const nativeAudioContext = new nativeAudioContextConstructor(options);\n            // Bug #131 Safari returns null when there are four other AudioContexts running already.\n            if (nativeAudioContext === null) {\n                throw createUnknownError();\n            }\n            // Bug #51 Only Chrome, Edge and Opera throw an error if the given latencyHint is invalid.\n            if (!isValidLatencyHint(options.latencyHint)) {\n                throw new TypeError(`The provided value '${options.latencyHint}' is not a valid enum value of type AudioContextLatencyCategory.`);\n            }\n            // Bug #150 Safari does not support setting the sampleRate.\n            if (options.sampleRate !== undefined && nativeAudioContext.sampleRate !== options.sampleRate) {\n                throw createNotSupportedError();\n            }\n            super(nativeAudioContext, 2);\n            const { latencyHint } = options;\n            const { sampleRate } = nativeAudioContext;\n            // @todo The values for 'balanced', 'interactive' and 'playback' are just copied from Chrome's implementation.\n            this._baseLatency =\n                typeof nativeAudioContext.baseLatency === 'number'\n                    ? nativeAudioContext.baseLatency\n                    : latencyHint === 'balanced'\n                        ? 512 / sampleRate\n                        : latencyHint === 'interactive' || latencyHint === undefined\n                            ? 256 / sampleRate\n                            : latencyHint === 'playback'\n                                ? 1024 / sampleRate\n                                : /*\n                                   * @todo The min (256) and max (16384) values are taken from the allowed bufferSize values of a\n                                   * ScriptProcessorNode.\n                                   */\n                                    (Math.max(2, Math.min(128, Math.round((latencyHint * sampleRate) / 128))) * 128) / sampleRate;\n            this._nativeAudioContext = nativeAudioContext;\n            // Bug #188: Safari will set the context's state to 'interrupted' in case the user switches tabs.\n            if (nativeAudioContextConstructor.name === 'webkitAudioContext') {\n                this._nativeGainNode = nativeAudioContext.createGain();\n                this._nativeOscillatorNode = nativeAudioContext.createOscillator();\n                this._nativeGainNode.gain.value = 1e-37;\n                this._nativeOscillatorNode.connect(this._nativeGainNode).connect(nativeAudioContext.destination);\n                this._nativeOscillatorNode.start();\n            }\n            else {\n                this._nativeGainNode = null;\n                this._nativeOscillatorNode = null;\n            }\n            this._state = null;\n            /*\n             * Bug #34: Chrome, Edge and Opera pretend to be running right away, but fire an onstatechange event when the state actually\n             * changes to 'running'.\n             */\n            if (nativeAudioContext.state === 'running') {\n                this._state = 'suspended';\n                const revokeState = () => {\n                    if (this._state === 'suspended') {\n                        this._state = null;\n                    }\n                    nativeAudioContext.removeEventListener('statechange', revokeState);\n                };\n                nativeAudioContext.addEventListener('statechange', revokeState);\n            }\n        }\n        get baseLatency() {\n            return this._baseLatency;\n        }\n        get state() {\n            return this._state !== null ? this._state : this._nativeAudioContext.state;\n        }\n        close() {\n            // Bug #35: Firefox does not throw an error if the AudioContext was closed before.\n            if (this.state === 'closed') {\n                return this._nativeAudioContext.close().then(() => {\n                    throw createInvalidStateError();\n                });\n            }\n            // Bug #34: If the state was set to suspended before it should be revoked now.\n            if (this._state === 'suspended') {\n                this._state = null;\n            }\n            return this._nativeAudioContext.close().then(() => {\n                if (this._nativeGainNode !== null && this._nativeOscillatorNode !== null) {\n                    this._nativeOscillatorNode.stop();\n                    this._nativeGainNode.disconnect();\n                    this._nativeOscillatorNode.disconnect();\n                }\n                deactivateAudioGraph(this);\n            });\n        }\n        createMediaElementSource(mediaElement) {\n            return new mediaElementAudioSourceNodeConstructor(this, { mediaElement });\n        }\n        createMediaStreamDestination() {\n            return new mediaStreamAudioDestinationNodeConstructor(this);\n        }\n        createMediaStreamSource(mediaStream) {\n            return new mediaStreamAudioSourceNodeConstructor(this, { mediaStream });\n        }\n        createMediaStreamTrackSource(mediaStreamTrack) {\n            return new mediaStreamTrackAudioSourceNodeConstructor(this, { mediaStreamTrack });\n        }\n        resume() {\n            if (this._state === 'suspended') {\n                return new Promise((resolve, reject) => {\n                    const resolvePromise = () => {\n                        this._nativeAudioContext.removeEventListener('statechange', resolvePromise);\n                        if (this._nativeAudioContext.state === 'running') {\n                            resolve();\n                        }\n                        else {\n                            this.resume().then(resolve, reject);\n                        }\n                    };\n                    this._nativeAudioContext.addEventListener('statechange', resolvePromise);\n                });\n            }\n            return this._nativeAudioContext.resume().catch((err) => {\n                // Bug #55: Chrome, Edge and Opera do throw an InvalidAccessError instead of an InvalidStateError.\n                // Bug #56: Safari invokes the catch handler but without an error.\n                if (err === undefined || err.code === 15) {\n                    throw createInvalidStateError();\n                }\n                throw err;\n            });\n        }\n        suspend() {\n            return this._nativeAudioContext.suspend().catch((err) => {\n                // Bug #56: Safari invokes the catch handler but without an error.\n                if (err === undefined) {\n                    throw createInvalidStateError();\n                }\n                throw err;\n            });\n        }\n    };\n};\n//# sourceMappingURL=audio-context-constructor.js.map","export const createAudioDestinationNodeConstructor = (audioNodeConstructor, createAudioDestinationNodeRenderer, createIndexSizeError, createInvalidStateError, createNativeAudioDestinationNode, getNativeContext, isNativeOfflineAudioContext, renderInputsOfAudioNode) => {\n    return class AudioDestinationNode extends audioNodeConstructor {\n        constructor(context, channelCount) {\n            const nativeContext = getNativeContext(context);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const nativeAudioDestinationNode = createNativeAudioDestinationNode(nativeContext, channelCount, isOffline);\n            const audioDestinationNodeRenderer = ((isOffline ? createAudioDestinationNodeRenderer(renderInputsOfAudioNode) : null));\n            super(context, false, nativeAudioDestinationNode, audioDestinationNodeRenderer);\n            this._isNodeOfNativeOfflineAudioContext = isOffline;\n            this._nativeAudioDestinationNode = nativeAudioDestinationNode;\n        }\n        get channelCount() {\n            return this._nativeAudioDestinationNode.channelCount;\n        }\n        set channelCount(value) {\n            // Bug #52: Chrome, Edge, Opera & Safari do not throw an exception at all.\n            // Bug #54: Firefox does throw an IndexSizeError.\n            if (this._isNodeOfNativeOfflineAudioContext) {\n                throw createInvalidStateError();\n            }\n            // Bug #47: The AudioDestinationNode in Safari does not initialize the maxChannelCount property correctly.\n            if (value > this._nativeAudioDestinationNode.maxChannelCount) {\n                throw createIndexSizeError();\n            }\n            this._nativeAudioDestinationNode.channelCount = value;\n        }\n        get channelCountMode() {\n            return this._nativeAudioDestinationNode.channelCountMode;\n        }\n        set channelCountMode(value) {\n            // Bug #53: No browser does throw an exception yet.\n            if (this._isNodeOfNativeOfflineAudioContext) {\n                throw createInvalidStateError();\n            }\n            this._nativeAudioDestinationNode.channelCountMode = value;\n        }\n        get maxChannelCount() {\n            return this._nativeAudioDestinationNode.maxChannelCount;\n        }\n    };\n};\n//# sourceMappingURL=audio-destination-node-constructor.js.map","export const createAudioDestinationNodeRenderer = (renderInputsOfAudioNode) => {\n    let nativeAudioDestinationNodePromise = null;\n    const createAudioDestinationNode = async (proxy, nativeOfflineAudioContext, trace) => {\n        const nativeAudioDestinationNode = nativeOfflineAudioContext.destination;\n        await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAudioDestinationNode, trace);\n        return nativeAudioDestinationNode;\n    };\n    return {\n        render(proxy, nativeOfflineAudioContext, trace) {\n            if (nativeAudioDestinationNodePromise === null) {\n                nativeAudioDestinationNodePromise = createAudioDestinationNode(proxy, nativeOfflineAudioContext, trace);\n            }\n            return nativeAudioDestinationNodePromise;\n        }\n    };\n};\n//# sourceMappingURL=audio-destination-node-renderer-factory.js.map","import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nexport const createAudioListenerFactory = (createAudioParam, createNativeChannelMergerNode, createNativeConstantSourceNode, createNativeScriptProcessorNode, isNativeOfflineAudioContext) => {\n    return (context, nativeContext) => {\n        const nativeListener = nativeContext.listener;\n        // Bug #117: Only Chrome, Edge & Opera support the new interface already.\n        const createFakeAudioParams = () => {\n            const channelMergerNode = createNativeChannelMergerNode(nativeContext, {\n                channelCount: 1,\n                channelCountMode: 'explicit',\n                channelInterpretation: 'speakers',\n                numberOfInputs: 9\n            });\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const scriptProcessorNode = createNativeScriptProcessorNode(nativeContext, 256, 9, 0);\n            const createFakeAudioParam = (input, value) => {\n                const constantSourceNode = createNativeConstantSourceNode(nativeContext, {\n                    channelCount: 1,\n                    channelCountMode: 'explicit',\n                    channelInterpretation: 'discrete',\n                    offset: value\n                });\n                constantSourceNode.connect(channelMergerNode, 0, input);\n                // @todo This should be stopped when the context is closed.\n                constantSourceNode.start();\n                Object.defineProperty(constantSourceNode.offset, 'defaultValue', {\n                    get() {\n                        return value;\n                    }\n                });\n                /*\n                 * Bug #62 & #74: Safari does not support ConstantSourceNodes and does not export the correct values for maxValue and\n                 * minValue for GainNodes.\n                 */\n                return createAudioParam({ context }, isOffline, constantSourceNode.offset, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n            };\n            let lastOrientation = [0, 0, -1, 0, 1, 0];\n            let lastPosition = [0, 0, 0];\n            // tslint:disable-next-line:deprecation\n            scriptProcessorNode.onaudioprocess = ({ inputBuffer }) => {\n                const orientation = [\n                    inputBuffer.getChannelData(0)[0],\n                    inputBuffer.getChannelData(1)[0],\n                    inputBuffer.getChannelData(2)[0],\n                    inputBuffer.getChannelData(3)[0],\n                    inputBuffer.getChannelData(4)[0],\n                    inputBuffer.getChannelData(5)[0]\n                ];\n                if (orientation.some((value, index) => value !== lastOrientation[index])) {\n                    nativeListener.setOrientation(...orientation); // tslint:disable-line:deprecation\n                    lastOrientation = orientation;\n                }\n                const positon = [\n                    inputBuffer.getChannelData(6)[0],\n                    inputBuffer.getChannelData(7)[0],\n                    inputBuffer.getChannelData(8)[0]\n                ];\n                if (positon.some((value, index) => value !== lastPosition[index])) {\n                    nativeListener.setPosition(...positon); // tslint:disable-line:deprecation\n                    lastPosition = positon;\n                }\n            };\n            channelMergerNode.connect(scriptProcessorNode);\n            return {\n                forwardX: createFakeAudioParam(0, 0),\n                forwardY: createFakeAudioParam(1, 0),\n                forwardZ: createFakeAudioParam(2, -1),\n                positionX: createFakeAudioParam(6, 0),\n                positionY: createFakeAudioParam(7, 0),\n                positionZ: createFakeAudioParam(8, 0),\n                upX: createFakeAudioParam(3, 0),\n                upY: createFakeAudioParam(4, 1),\n                upZ: createFakeAudioParam(5, 0)\n            };\n        };\n        const { forwardX, forwardY, forwardZ, positionX, positionY, positionZ, upX, upY, upZ } = nativeListener.forwardX === undefined ? createFakeAudioParams() : nativeListener;\n        return {\n            get forwardX() {\n                return forwardX;\n            },\n            get forwardY() {\n                return forwardY;\n            },\n            get forwardZ() {\n                return forwardZ;\n            },\n            get positionX() {\n                return positionX;\n            },\n            get positionY() {\n                return positionY;\n            },\n            get positionZ() {\n                return positionZ;\n            },\n            get upX() {\n                return upX;\n            },\n            get upY() {\n                return upY;\n            },\n            get upZ() {\n                return upZ;\n            }\n        };\n    };\n};\n//# sourceMappingURL=audio-listener-factory.js.map","export const isAudioNode = (audioNodeOrAudioParam) => {\n    return 'context' in audioNodeOrAudioParam;\n};\n//# sourceMappingURL=audio-node.js.map","import { isAudioNode } from './audio-node';\nexport const isAudioNodeOutputConnection = (outputConnection) => {\n    return isAudioNode(outputConnection[0]);\n};\n//# sourceMappingURL=audio-node-output-connection.js.map","export const insertElementInSet = (set, element, predicate, ignoreDuplicates) => {\n    for (const lmnt of set) {\n        if (predicate(lmnt)) {\n            if (ignoreDuplicates) {\n                return false;\n            }\n            throw Error('The set contains at least one similar element.');\n        }\n    }\n    set.add(element);\n    return true;\n};\n//# sourceMappingURL=insert-element-in-set.js.map","import { insertElementInSet } from './insert-element-in-set';\nexport const addActiveInputConnectionToAudioParam = (activeInputs, source, [output, eventListener], ignoreDuplicates) => {\n    insertElementInSet(activeInputs, [source, output, eventListener], (activeInputConnection) => activeInputConnection[0] === source && activeInputConnection[1] === output, ignoreDuplicates);\n};\n//# sourceMappingURL=add-active-input-connection-to-audio-param.js.map","import { insertElementInSet } from './insert-element-in-set';\nexport const addPassiveInputConnectionToAudioParam = (passiveInputs, [source, output, eventListener], ignoreDuplicates) => {\n    const passiveInputConnections = passiveInputs.get(source);\n    if (passiveInputConnections === undefined) {\n        passiveInputs.set(source, new Set([[output, eventListener]]));\n    }\n    else {\n        insertElementInSet(passiveInputConnections, [output, eventListener], (passiveInputConnection) => passiveInputConnection[0] === output, ignoreDuplicates);\n    }\n};\n//# sourceMappingURL=add-passive-input-connection-to-audio-param.js.map","export const isNativeAudioNodeFaker = (nativeAudioNodeOrNativeAudioNodeFaker) => {\n    return 'inputs' in nativeAudioNodeOrNativeAudioNodeFaker;\n};\n//# sourceMappingURL=native-audio-node-faker.js.map","import { isNativeAudioNodeFaker } from '../guards/native-audio-node-faker';\nexport const connectNativeAudioNodeToNativeAudioNode = (nativeSourceAudioNode, nativeDestinationAudioNode, output, input) => {\n    if (isNativeAudioNodeFaker(nativeDestinationAudioNode)) {\n        const fakeNativeDestinationAudioNode = nativeDestinationAudioNode.inputs[input];\n        nativeSourceAudioNode.connect(fakeNativeDestinationAudioNode, output, 0);\n        return [fakeNativeDestinationAudioNode, output, 0];\n    }\n    nativeSourceAudioNode.connect(nativeDestinationAudioNode, output, input);\n    return [nativeDestinationAudioNode, output, input];\n};\n//# sourceMappingURL=connect-native-audio-node-to-native-audio-node.js.map","export const deleteActiveInputConnection = (activeInputConnections, source, output) => {\n    for (const activeInputConnection of activeInputConnections) {\n        if (activeInputConnection[0] === source && activeInputConnection[1] === output) {\n            activeInputConnections.delete(activeInputConnection);\n            return activeInputConnection;\n        }\n    }\n    return null;\n};\n//# sourceMappingURL=delete-active-input-connection.js.map","import { pickElementFromSet } from './pick-element-from-set';\nexport const deleteActiveInputConnectionToAudioParam = (activeInputs, source, output) => {\n    return pickElementFromSet(activeInputs, (activeInputConnection) => activeInputConnection[0] === source && activeInputConnection[1] === output);\n};\n//# sourceMappingURL=delete-active-input-connection-to-audio-param.js.map","import { getEventListenersOfAudioNode } from './get-event-listeners-of-audio-node';\nexport const deleteEventListenerOfAudioNode = (audioNode, eventListener) => {\n    const eventListeners = getEventListenersOfAudioNode(audioNode);\n    if (!eventListeners.delete(eventListener)) {\n        throw new Error('Missing the expected event listener.');\n    }\n};\n//# sourceMappingURL=delete-event-listeners-of-audio-node.js.map","import { getValueForKey } from './get-value-for-key';\nimport { pickElementFromSet } from './pick-element-from-set';\nexport const deletePassiveInputConnectionToAudioParam = (passiveInputs, source, output) => {\n    const passiveInputConnections = getValueForKey(passiveInputs, source);\n    const matchingConnection = pickElementFromSet(passiveInputConnections, (passiveInputConnection) => passiveInputConnection[0] === output);\n    if (passiveInputConnections.size === 0) {\n        passiveInputs.delete(source);\n    }\n    return matchingConnection;\n};\n//# sourceMappingURL=delete-passive-input-connection-to-audio-param.js.map","import { isNativeAudioNodeFaker } from '../guards/native-audio-node-faker';\nexport const disconnectNativeAudioNodeFromNativeAudioNode = (nativeSourceAudioNode, nativeDestinationAudioNode, output, input) => {\n    if (isNativeAudioNodeFaker(nativeDestinationAudioNode)) {\n        nativeSourceAudioNode.disconnect(nativeDestinationAudioNode.inputs[input], output, 0);\n    }\n    else {\n        nativeSourceAudioNode.disconnect(nativeDestinationAudioNode, output, input);\n    }\n};\n//# sourceMappingURL=disconnect-native-audio-node-from-native-audio-node.js.map","import { AUDIO_NODE_STORE } from '../globals';\nimport { getValueForKey } from './get-value-for-key';\nexport const getNativeAudioNode = (audioNode) => {\n    return getValueForKey(AUDIO_NODE_STORE, audioNode);\n};\n//# sourceMappingURL=get-native-audio-node.js.map","import { AUDIO_PARAM_STORE } from '../globals';\nimport { getValueForKey } from './get-value-for-key';\nexport const getNativeAudioParam = (audioParam) => {\n    return getValueForKey(AUDIO_PARAM_STORE, audioParam);\n};\n//# sourceMappingURL=get-native-audio-param.js.map","import { CYCLE_COUNTERS } from '../globals';\nexport const isPartOfACycle = (audioNode) => {\n    return CYCLE_COUNTERS.has(audioNode);\n};\n//# sourceMappingURL=is-part-of-a-cycle.js.map","import { ACTIVE_AUDIO_NODE_STORE } from '../globals';\nexport const isPassiveAudioNode = (audioNode) => {\n    return !ACTIVE_AUDIO_NODE_STORE.has(audioNode);\n};\n//# sourceMappingURL=is-passive-audio-node.js.map","export const testAudioNodeDisconnectMethodSupport = (nativeAudioContext) => {\n    return new Promise((resolve) => {\n        const analyzer = nativeAudioContext.createScriptProcessor(256, 1, 1);\n        const dummy = nativeAudioContext.createGain();\n        // Bug #95: Safari does not play one sample buffers.\n        const ones = nativeAudioContext.createBuffer(1, 2, 44100);\n        const channelData = ones.getChannelData(0);\n        channelData[0] = 1;\n        channelData[1] = 1;\n        const source = nativeAudioContext.createBufferSource();\n        source.buffer = ones;\n        source.loop = true;\n        source.connect(analyzer).connect(nativeAudioContext.destination);\n        source.connect(dummy);\n        source.disconnect(dummy);\n        // tslint:disable-next-line:deprecation\n        analyzer.onaudioprocess = (event) => {\n            const chnnlDt = event.inputBuffer.getChannelData(0);\n            if (Array.prototype.some.call(chnnlDt, (sample) => sample === 1)) {\n                resolve(true);\n            }\n            else {\n                resolve(false);\n            }\n            source.stop();\n            analyzer.onaudioprocess = null; // tslint:disable-line:deprecation\n            source.disconnect(analyzer);\n            analyzer.disconnect(nativeAudioContext.destination);\n        };\n        source.start();\n    });\n};\n//# sourceMappingURL=test-audio-node-disconnect-method-support.js.map","export const visitEachAudioNodeOnce = (cycles, visitor) => {\n    const counts = new Map();\n    for (const cycle of cycles) {\n        for (const audioNode of cycle) {\n            const count = counts.get(audioNode);\n            counts.set(audioNode, count === undefined ? 1 : count + 1);\n        }\n    }\n    counts.forEach((count, audioNode) => visitor(audioNode, count));\n};\n//# sourceMappingURL=visit-each-audio-node-once.js.map","export const isNativeAudioNode = (nativeAudioNodeOrAudioParam) => {\n    return 'context' in nativeAudioNodeOrAudioParam;\n};\n//# sourceMappingURL=native-audio-node.js.map","import { isNativeAudioNode } from '../guards/native-audio-node';\nexport const wrapAudioNodeDisconnectMethod = (nativeAudioNode) => {\n    const connections = new Map();\n    nativeAudioNode.connect = ((connect) => {\n        // tslint:disable-next-line:invalid-void\n        return (destination, output = 0, input = 0) => {\n            const returnValue = isNativeAudioNode(destination) ? connect(destination, output, input) : connect(destination, output);\n            // Save the new connection only if the calls to connect above didn't throw an error.\n            const connectionsToDestination = connections.get(destination);\n            if (connectionsToDestination === undefined) {\n                connections.set(destination, [{ input, output }]);\n            }\n            else {\n                if (connectionsToDestination.every((connection) => connection.input !== input || connection.output !== output)) {\n                    connectionsToDestination.push({ input, output });\n                }\n            }\n            return returnValue;\n        };\n    })(nativeAudioNode.connect.bind(nativeAudioNode));\n    nativeAudioNode.disconnect = ((disconnect) => {\n        return (destinationOrOutput, output, input) => {\n            disconnect.apply(nativeAudioNode);\n            if (destinationOrOutput === undefined) {\n                connections.clear();\n            }\n            else if (typeof destinationOrOutput === 'number') {\n                for (const [destination, connectionsToDestination] of connections) {\n                    const filteredConnections = connectionsToDestination.filter((connection) => connection.output !== destinationOrOutput);\n                    if (filteredConnections.length === 0) {\n                        connections.delete(destination);\n                    }\n                    else {\n                        connections.set(destination, filteredConnections);\n                    }\n                }\n            }\n            else if (connections.has(destinationOrOutput)) {\n                if (output === undefined) {\n                    connections.delete(destinationOrOutput);\n                }\n                else {\n                    const connectionsToDestination = connections.get(destinationOrOutput);\n                    if (connectionsToDestination !== undefined) {\n                        const filteredConnections = connectionsToDestination.filter((connection) => connection.output !== output && (connection.input !== input || input === undefined));\n                        if (filteredConnections.length === 0) {\n                            connections.delete(destinationOrOutput);\n                        }\n                        else {\n                            connections.set(destinationOrOutput, filteredConnections);\n                        }\n                    }\n                }\n            }\n            for (const [destination, connectionsToDestination] of connections) {\n                connectionsToDestination.forEach((connection) => {\n                    if (isNativeAudioNode(destination)) {\n                        nativeAudioNode.connect(destination, connection.output, connection.input);\n                    }\n                    else {\n                        nativeAudioNode.connect(destination, connection.output);\n                    }\n                });\n            }\n        };\n    })(nativeAudioNode.disconnect);\n};\n//# sourceMappingURL=wrap-audio-node-disconnect-method.js.map","import { AUDIO_NODE_STORE, EVENT_LISTENERS } from '../globals';\nimport { isAudioNode } from '../guards/audio-node';\nimport { isAudioNodeOutputConnection } from '../guards/audio-node-output-connection';\nimport { addActiveInputConnectionToAudioParam } from '../helpers/add-active-input-connection-to-audio-param';\nimport { addPassiveInputConnectionToAudioParam } from '../helpers/add-passive-input-connection-to-audio-param';\nimport { connectNativeAudioNodeToNativeAudioNode } from '../helpers/connect-native-audio-node-to-native-audio-node';\nimport { deleteActiveInputConnection } from '../helpers/delete-active-input-connection';\nimport { deleteActiveInputConnectionToAudioParam } from '../helpers/delete-active-input-connection-to-audio-param';\nimport { deleteEventListenerOfAudioNode } from '../helpers/delete-event-listeners-of-audio-node';\nimport { deletePassiveInputConnectionToAudioNode } from '../helpers/delete-passive-input-connection-to-audio-node';\nimport { deletePassiveInputConnectionToAudioParam } from '../helpers/delete-passive-input-connection-to-audio-param';\nimport { disconnectNativeAudioNodeFromNativeAudioNode } from '../helpers/disconnect-native-audio-node-from-native-audio-node';\nimport { getAudioNodeConnections } from '../helpers/get-audio-node-connections';\nimport { getAudioParamConnections } from '../helpers/get-audio-param-connections';\nimport { getEventListenersOfAudioNode } from '../helpers/get-event-listeners-of-audio-node';\nimport { getNativeAudioNode } from '../helpers/get-native-audio-node';\nimport { getNativeAudioParam } from '../helpers/get-native-audio-param';\nimport { insertElementInSet } from '../helpers/insert-element-in-set';\nimport { isActiveAudioNode } from '../helpers/is-active-audio-node';\nimport { isPartOfACycle } from '../helpers/is-part-of-a-cycle';\nimport { isPassiveAudioNode } from '../helpers/is-passive-audio-node';\nimport { setInternalStateToActive } from '../helpers/set-internal-state-to-active';\nimport { setInternalStateToPassiveWhenNecessary } from '../helpers/set-internal-state-to-passive-when-necessary';\nimport { testAudioNodeDisconnectMethodSupport } from '../helpers/test-audio-node-disconnect-method-support';\nimport { visitEachAudioNodeOnce } from '../helpers/visit-each-audio-node-once';\nimport { wrapAudioNodeDisconnectMethod } from '../helpers/wrap-audio-node-disconnect-method';\nconst addConnectionToAudioParamOfAudioContext = (source, destination, output, isOffline) => {\n    const { activeInputs, passiveInputs } = getAudioParamConnections(destination);\n    const { outputs } = getAudioNodeConnections(source);\n    const eventListeners = getEventListenersOfAudioNode(source);\n    const eventListener = (isActive) => {\n        const nativeAudioNode = getNativeAudioNode(source);\n        const nativeAudioParam = getNativeAudioParam(destination);\n        if (isActive) {\n            const partialConnection = deletePassiveInputConnectionToAudioParam(passiveInputs, source, output);\n            addActiveInputConnectionToAudioParam(activeInputs, source, partialConnection, false);\n            if (!isOffline && !isPartOfACycle(source)) {\n                nativeAudioNode.connect(nativeAudioParam, output);\n            }\n        }\n        else {\n            const partialConnection = deleteActiveInputConnectionToAudioParam(activeInputs, source, output);\n            addPassiveInputConnectionToAudioParam(passiveInputs, partialConnection, false);\n            if (!isOffline && !isPartOfACycle(source)) {\n                nativeAudioNode.disconnect(nativeAudioParam, output);\n            }\n        }\n    };\n    if (insertElementInSet(outputs, [destination, output], (outputConnection) => outputConnection[0] === destination && outputConnection[1] === output, true)) {\n        eventListeners.add(eventListener);\n        if (isActiveAudioNode(source)) {\n            addActiveInputConnectionToAudioParam(activeInputs, source, [output, eventListener], true);\n        }\n        else {\n            addPassiveInputConnectionToAudioParam(passiveInputs, [source, output, eventListener], true);\n        }\n        return true;\n    }\n    return false;\n};\nconst deleteInputConnectionOfAudioNode = (source, destination, output, input) => {\n    const { activeInputs, passiveInputs } = getAudioNodeConnections(destination);\n    const activeInputConnection = deleteActiveInputConnection(activeInputs[input], source, output);\n    if (activeInputConnection === null) {\n        const passiveInputConnection = deletePassiveInputConnectionToAudioNode(passiveInputs, source, output, input);\n        return [passiveInputConnection[2], false];\n    }\n    return [activeInputConnection[2], true];\n};\nconst deleteInputConnectionOfAudioParam = (source, destination, output) => {\n    const { activeInputs, passiveInputs } = getAudioParamConnections(destination);\n    const activeInputConnection = deleteActiveInputConnection(activeInputs, source, output);\n    if (activeInputConnection === null) {\n        const passiveInputConnection = deletePassiveInputConnectionToAudioParam(passiveInputs, source, output);\n        return [passiveInputConnection[1], false];\n    }\n    return [activeInputConnection[2], true];\n};\nconst deleteInputsOfAudioNode = (source, isOffline, destination, output, input) => {\n    const [listener, isActive] = deleteInputConnectionOfAudioNode(source, destination, output, input);\n    if (listener !== null) {\n        deleteEventListenerOfAudioNode(source, listener);\n        if (isActive && !isOffline && !isPartOfACycle(source)) {\n            disconnectNativeAudioNodeFromNativeAudioNode(getNativeAudioNode(source), getNativeAudioNode(destination), output, input);\n        }\n    }\n    if (isActiveAudioNode(destination)) {\n        const { activeInputs } = getAudioNodeConnections(destination);\n        setInternalStateToPassiveWhenNecessary(destination, activeInputs);\n    }\n};\nconst deleteInputsOfAudioParam = (source, isOffline, destination, output) => {\n    const [listener, isActive] = deleteInputConnectionOfAudioParam(source, destination, output);\n    if (listener !== null) {\n        deleteEventListenerOfAudioNode(source, listener);\n        if (isActive && !isOffline && !isPartOfACycle(source)) {\n            getNativeAudioNode(source).disconnect(getNativeAudioParam(destination), output);\n        }\n    }\n};\nconst deleteAnyConnection = (source, isOffline) => {\n    const audioNodeConnectionsOfSource = getAudioNodeConnections(source);\n    const destinations = [];\n    for (const outputConnection of audioNodeConnectionsOfSource.outputs) {\n        if (isAudioNodeOutputConnection(outputConnection)) {\n            deleteInputsOfAudioNode(source, isOffline, ...outputConnection);\n        }\n        else {\n            deleteInputsOfAudioParam(source, isOffline, ...outputConnection);\n        }\n        destinations.push(outputConnection[0]);\n    }\n    audioNodeConnectionsOfSource.outputs.clear();\n    return destinations;\n};\nconst deleteConnectionAtOutput = (source, isOffline, output) => {\n    const audioNodeConnectionsOfSource = getAudioNodeConnections(source);\n    const destinations = [];\n    for (const outputConnection of audioNodeConnectionsOfSource.outputs) {\n        if (outputConnection[1] === output) {\n            if (isAudioNodeOutputConnection(outputConnection)) {\n                deleteInputsOfAudioNode(source, isOffline, ...outputConnection);\n            }\n            else {\n                deleteInputsOfAudioParam(source, isOffline, ...outputConnection);\n            }\n            destinations.push(outputConnection[0]);\n            audioNodeConnectionsOfSource.outputs.delete(outputConnection);\n        }\n    }\n    return destinations;\n};\nconst deleteConnectionToDestination = (source, isOffline, destination, output, input) => {\n    const audioNodeConnectionsOfSource = getAudioNodeConnections(source);\n    return Array.from(audioNodeConnectionsOfSource.outputs)\n        .filter((outputConnection) => outputConnection[0] === destination &&\n        (output === undefined || outputConnection[1] === output) &&\n        (input === undefined || outputConnection[2] === input))\n        .map((outputConnection) => {\n        if (isAudioNodeOutputConnection(outputConnection)) {\n            deleteInputsOfAudioNode(source, isOffline, ...outputConnection);\n        }\n        else {\n            deleteInputsOfAudioParam(source, isOffline, ...outputConnection);\n        }\n        audioNodeConnectionsOfSource.outputs.delete(outputConnection);\n        return outputConnection[0];\n    });\n};\nexport const createAudioNodeConstructor = (addAudioNodeConnections, addConnectionToAudioNode, cacheTestResult, createIncrementCycleCounter, createIndexSizeError, createInvalidAccessError, createNotSupportedError, decrementCycleCounter, detectCycles, eventTargetConstructor, getNativeContext, isNativeAudioContext, isNativeAudioNode, isNativeAudioParam, isNativeOfflineAudioContext) => {\n    return class AudioNode extends eventTargetConstructor {\n        constructor(context, isActive, nativeAudioNode, audioNodeRenderer) {\n            super(nativeAudioNode);\n            this._context = context;\n            this._nativeAudioNode = nativeAudioNode;\n            const nativeContext = getNativeContext(context);\n            // Bug #12: Safari does not support to disconnect a specific destination.\n            if (isNativeAudioContext(nativeContext) &&\n                true !==\n                    cacheTestResult(testAudioNodeDisconnectMethodSupport, () => {\n                        return testAudioNodeDisconnectMethodSupport(nativeContext);\n                    })) {\n                wrapAudioNodeDisconnectMethod(nativeAudioNode);\n            }\n            AUDIO_NODE_STORE.set(this, nativeAudioNode);\n            EVENT_LISTENERS.set(this, new Set());\n            if (context.state !== 'closed' && isActive) {\n                setInternalStateToActive(this);\n            }\n            addAudioNodeConnections(this, audioNodeRenderer, nativeAudioNode);\n        }\n        get channelCount() {\n            return this._nativeAudioNode.channelCount;\n        }\n        set channelCount(value) {\n            this._nativeAudioNode.channelCount = value;\n        }\n        get channelCountMode() {\n            return this._nativeAudioNode.channelCountMode;\n        }\n        set channelCountMode(value) {\n            this._nativeAudioNode.channelCountMode = value;\n        }\n        get channelInterpretation() {\n            return this._nativeAudioNode.channelInterpretation;\n        }\n        set channelInterpretation(value) {\n            this._nativeAudioNode.channelInterpretation = value;\n        }\n        get context() {\n            return this._context;\n        }\n        get numberOfInputs() {\n            return this._nativeAudioNode.numberOfInputs;\n        }\n        get numberOfOutputs() {\n            return this._nativeAudioNode.numberOfOutputs;\n        }\n        // tslint:disable-next-line:invalid-void\n        connect(destination, output = 0, input = 0) {\n            // Bug #174: Safari does expose a wrong numberOfOutputs for MediaStreamAudioDestinationNodes.\n            if (output < 0 || output >= this._nativeAudioNode.numberOfOutputs) {\n                throw createIndexSizeError();\n            }\n            const nativeContext = getNativeContext(this._context);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            if (isNativeAudioNode(destination) || isNativeAudioParam(destination)) {\n                throw createInvalidAccessError();\n            }\n            if (isAudioNode(destination)) {\n                const nativeDestinationAudioNode = getNativeAudioNode(destination);\n                try {\n                    const connection = connectNativeAudioNodeToNativeAudioNode(this._nativeAudioNode, nativeDestinationAudioNode, output, input);\n                    const isPassive = isPassiveAudioNode(this);\n                    if (isOffline || isPassive) {\n                        this._nativeAudioNode.disconnect(...connection);\n                    }\n                    if (this.context.state !== 'closed' && !isPassive && isPassiveAudioNode(destination)) {\n                        setInternalStateToActive(destination);\n                    }\n                }\n                catch (err) {\n                    // Bug #41: Safari does not throw the correct exception so far.\n                    if (err.code === 12) {\n                        throw createInvalidAccessError();\n                    }\n                    throw err;\n                }\n                const isNewConnectionToAudioNode = addConnectionToAudioNode(this, destination, output, input, isOffline);\n                // Bug #164: Only Firefox detects cycles so far.\n                if (isNewConnectionToAudioNode) {\n                    const cycles = detectCycles([this], destination);\n                    visitEachAudioNodeOnce(cycles, createIncrementCycleCounter(isOffline));\n                }\n                return destination;\n            }\n            const nativeAudioParam = getNativeAudioParam(destination);\n            /*\n             * Bug #147 & #153: Safari does not support to connect an input signal to the playbackRate AudioParam of an\n             * AudioBufferSourceNode. This can't be easily detected and that's why the outdated name property is used here to identify\n             * Safari.\n             */\n            if (nativeAudioParam.name === 'playbackRate') {\n                throw createNotSupportedError();\n            }\n            try {\n                this._nativeAudioNode.connect(nativeAudioParam, output);\n                if (isOffline || isPassiveAudioNode(this)) {\n                    this._nativeAudioNode.disconnect(nativeAudioParam, output);\n                }\n            }\n            catch (err) {\n                // Bug #58: Only Firefox does throw an InvalidStateError yet.\n                if (err.code === 12) {\n                    throw createInvalidAccessError();\n                }\n                throw err;\n            }\n            const isNewConnectionToAudioParam = addConnectionToAudioParamOfAudioContext(this, destination, output, isOffline);\n            // Bug #164: Only Firefox detects cycles so far.\n            if (isNewConnectionToAudioParam) {\n                const cycles = detectCycles([this], destination);\n                visitEachAudioNodeOnce(cycles, createIncrementCycleCounter(isOffline));\n            }\n        }\n        disconnect(destinationOrOutput, output, input) {\n            let destinations;\n            const nativeContext = getNativeContext(this._context);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            if (destinationOrOutput === undefined) {\n                destinations = deleteAnyConnection(this, isOffline);\n            }\n            else if (typeof destinationOrOutput === 'number') {\n                if (destinationOrOutput < 0 || destinationOrOutput >= this.numberOfOutputs) {\n                    throw createIndexSizeError();\n                }\n                destinations = deleteConnectionAtOutput(this, isOffline, destinationOrOutput);\n            }\n            else {\n                if (output !== undefined && (output < 0 || output >= this.numberOfOutputs)) {\n                    throw createIndexSizeError();\n                }\n                if (isAudioNode(destinationOrOutput) && input !== undefined && (input < 0 || input >= destinationOrOutput.numberOfInputs)) {\n                    throw createIndexSizeError();\n                }\n                destinations = deleteConnectionToDestination(this, isOffline, destinationOrOutput, output, input);\n                if (destinations.length === 0) {\n                    throw createInvalidAccessError();\n                }\n            }\n            // Bug #164: Only Firefox detects cycles so far.\n            for (const destination of destinations) {\n                const cycles = detectCycles([this], destination);\n                visitEachAudioNodeOnce(cycles, decrementCycleCounter);\n            }\n        }\n    };\n};\n//# sourceMappingURL=audio-node-constructor.js.map","import { AutomationEventList } from 'automation-events';\nexport const createAudioParamFactory = (addAudioParamConnections, audioParamAudioNodeStore, audioParamStore, createAudioParamRenderer, createCancelAndHoldAutomationEvent, createCancelScheduledValuesAutomationEvent, createExponentialRampToValueAutomationEvent, createLinearRampToValueAutomationEvent, createSetTargetAutomationEvent, createSetValueAutomationEvent, createSetValueCurveAutomationEvent, nativeAudioContextConstructor) => {\n    return (audioNode, isAudioParamOfOfflineAudioContext, nativeAudioParam, maxValue = null, minValue = null) => {\n        const automationEventList = new AutomationEventList(nativeAudioParam.defaultValue);\n        const audioParamRenderer = isAudioParamOfOfflineAudioContext ? createAudioParamRenderer(automationEventList) : null;\n        const audioParam = {\n            get defaultValue() {\n                return nativeAudioParam.defaultValue;\n            },\n            get maxValue() {\n                return maxValue === null ? nativeAudioParam.maxValue : maxValue;\n            },\n            get minValue() {\n                return minValue === null ? nativeAudioParam.minValue : minValue;\n            },\n            get value() {\n                return nativeAudioParam.value;\n            },\n            set value(value) {\n                nativeAudioParam.value = value;\n                // Bug #98: Firefox & Safari do not yet treat the value setter like a call to setValueAtTime().\n                audioParam.setValueAtTime(value, audioNode.context.currentTime);\n            },\n            cancelAndHoldAtTime(cancelTime) {\n                // Bug #28: Firefox & Safari do not yet implement cancelAndHoldAtTime().\n                if (typeof nativeAudioParam.cancelAndHoldAtTime === 'function') {\n                    if (audioParamRenderer === null) {\n                        automationEventList.flush(audioNode.context.currentTime);\n                    }\n                    automationEventList.add(createCancelAndHoldAutomationEvent(cancelTime));\n                    nativeAudioParam.cancelAndHoldAtTime(cancelTime);\n                }\n                else {\n                    const previousLastEvent = Array.from(automationEventList).pop();\n                    if (audioParamRenderer === null) {\n                        automationEventList.flush(audioNode.context.currentTime);\n                    }\n                    automationEventList.add(createCancelAndHoldAutomationEvent(cancelTime));\n                    const currentLastEvent = Array.from(automationEventList).pop();\n                    nativeAudioParam.cancelScheduledValues(cancelTime);\n                    if (previousLastEvent !== currentLastEvent && currentLastEvent !== undefined) {\n                        if (currentLastEvent.type === 'exponentialRampToValue') {\n                            nativeAudioParam.exponentialRampToValueAtTime(currentLastEvent.value, currentLastEvent.endTime);\n                        }\n                        else if (currentLastEvent.type === 'linearRampToValue') {\n                            nativeAudioParam.linearRampToValueAtTime(currentLastEvent.value, currentLastEvent.endTime);\n                        }\n                        else if (currentLastEvent.type === 'setValue') {\n                            nativeAudioParam.setValueAtTime(currentLastEvent.value, currentLastEvent.startTime);\n                        }\n                        else if (currentLastEvent.type === 'setValueCurve') {\n                            nativeAudioParam.setValueCurveAtTime(currentLastEvent.values, currentLastEvent.startTime, currentLastEvent.duration);\n                        }\n                    }\n                }\n                return audioParam;\n            },\n            cancelScheduledValues(cancelTime) {\n                if (audioParamRenderer === null) {\n                    automationEventList.flush(audioNode.context.currentTime);\n                }\n                automationEventList.add(createCancelScheduledValuesAutomationEvent(cancelTime));\n                nativeAudioParam.cancelScheduledValues(cancelTime);\n                return audioParam;\n            },\n            exponentialRampToValueAtTime(value, endTime) {\n                // Bug #45: Safari does not throw an error yet.\n                if (value === 0) {\n                    throw new RangeError();\n                }\n                // Bug #187: Safari does not throw an error yet.\n                if (!Number.isFinite(endTime) || endTime < 0) {\n                    throw new RangeError();\n                }\n                if (audioParamRenderer === null) {\n                    automationEventList.flush(audioNode.context.currentTime);\n                }\n                automationEventList.add(createExponentialRampToValueAutomationEvent(value, endTime));\n                nativeAudioParam.exponentialRampToValueAtTime(value, endTime);\n                return audioParam;\n            },\n            linearRampToValueAtTime(value, endTime) {\n                if (audioParamRenderer === null) {\n                    automationEventList.flush(audioNode.context.currentTime);\n                }\n                automationEventList.add(createLinearRampToValueAutomationEvent(value, endTime));\n                nativeAudioParam.linearRampToValueAtTime(value, endTime);\n                return audioParam;\n            },\n            setTargetAtTime(target, startTime, timeConstant) {\n                if (audioParamRenderer === null) {\n                    automationEventList.flush(audioNode.context.currentTime);\n                }\n                automationEventList.add(createSetTargetAutomationEvent(target, startTime, timeConstant));\n                nativeAudioParam.setTargetAtTime(target, startTime, timeConstant);\n                return audioParam;\n            },\n            setValueAtTime(value, startTime) {\n                if (audioParamRenderer === null) {\n                    automationEventList.flush(audioNode.context.currentTime);\n                }\n                automationEventList.add(createSetValueAutomationEvent(value, startTime));\n                nativeAudioParam.setValueAtTime(value, startTime);\n                return audioParam;\n            },\n            setValueCurveAtTime(values, startTime, duration) {\n                // Bug 183: Safari only accepts a Float32Array.\n                const convertedValues = values instanceof Float32Array ? values : new Float32Array(values);\n                /*\n                 * Bug #152: Safari does not correctly interpolate the values of the curve.\n                 * @todo Unfortunately there is no way to test for this behavior in a synchronous fashion which is why testing for the\n                 * existence of the webkitAudioContext is used as a workaround here.\n                 */\n                if (nativeAudioContextConstructor !== null && nativeAudioContextConstructor.name === 'webkitAudioContext') {\n                    const endTime = startTime + duration;\n                    const sampleRate = audioNode.context.sampleRate;\n                    const firstSample = Math.ceil(startTime * sampleRate);\n                    const lastSample = Math.floor(endTime * sampleRate);\n                    const numberOfInterpolatedValues = lastSample - firstSample;\n                    const interpolatedValues = new Float32Array(numberOfInterpolatedValues);\n                    for (let i = 0; i < numberOfInterpolatedValues; i += 1) {\n                        const theoreticIndex = ((convertedValues.length - 1) / duration) * ((firstSample + i) / sampleRate - startTime);\n                        const lowerIndex = Math.floor(theoreticIndex);\n                        const upperIndex = Math.ceil(theoreticIndex);\n                        interpolatedValues[i] =\n                            lowerIndex === upperIndex\n                                ? convertedValues[lowerIndex]\n                                : (1 - (theoreticIndex - lowerIndex)) * convertedValues[lowerIndex] +\n                                    (1 - (upperIndex - theoreticIndex)) * convertedValues[upperIndex];\n                    }\n                    if (audioParamRenderer === null) {\n                        automationEventList.flush(audioNode.context.currentTime);\n                    }\n                    automationEventList.add(createSetValueCurveAutomationEvent(interpolatedValues, startTime, duration));\n                    nativeAudioParam.setValueCurveAtTime(interpolatedValues, startTime, duration);\n                    const timeOfLastSample = lastSample / sampleRate;\n                    if (timeOfLastSample < endTime) {\n                        audioParam.setValueAtTime(interpolatedValues[interpolatedValues.length - 1], timeOfLastSample);\n                    }\n                    audioParam.setValueAtTime(convertedValues[convertedValues.length - 1], endTime);\n                }\n                else {\n                    if (audioParamRenderer === null) {\n                        automationEventList.flush(audioNode.context.currentTime);\n                    }\n                    automationEventList.add(createSetValueCurveAutomationEvent(convertedValues, startTime, duration));\n                    nativeAudioParam.setValueCurveAtTime(convertedValues, startTime, duration);\n                }\n                return audioParam;\n            }\n        };\n        audioParamStore.set(audioParam, nativeAudioParam);\n        audioParamAudioNodeStore.set(audioParam, audioNode);\n        addAudioParamConnections(audioParam, audioParamRenderer);\n        return audioParam;\n    };\n};\n//# sourceMappingURL=audio-param-factory.js.map","export const createAudioParamRenderer = (automationEventList) => {\n    return {\n        replay(audioParam) {\n            for (const automationEvent of automationEventList) {\n                if (automationEvent.type === 'exponentialRampToValue') {\n                    const { endTime, value } = automationEvent;\n                    audioParam.exponentialRampToValueAtTime(value, endTime);\n                }\n                else if (automationEvent.type === 'linearRampToValue') {\n                    const { endTime, value } = automationEvent;\n                    audioParam.linearRampToValueAtTime(value, endTime);\n                }\n                else if (automationEvent.type === 'setTarget') {\n                    const { startTime, target, timeConstant } = automationEvent;\n                    audioParam.setTargetAtTime(target, startTime, timeConstant);\n                }\n                else if (automationEvent.type === 'setValue') {\n                    const { startTime, value } = automationEvent;\n                    audioParam.setValueAtTime(value, startTime);\n                }\n                else if (automationEvent.type === 'setValueCurve') {\n                    const { duration, startTime, values } = automationEvent;\n                    audioParam.setValueCurveAtTime(values, startTime, duration);\n                }\n                else {\n                    throw new Error(\"Can't apply an unknown automation.\");\n                }\n            }\n        }\n    };\n};\n//# sourceMappingURL=audio-param-renderer.js.map","export class ReadOnlyMap {\n    constructor(parameters) {\n        this._map = new Map(parameters);\n    }\n    get size() {\n        return this._map.size;\n    }\n    entries() {\n        return this._map.entries();\n    }\n    forEach(callback, thisArg = null) {\n        return this._map.forEach((value, key) => callback.call(thisArg, value, key, this));\n    }\n    get(name) {\n        return this._map.get(name);\n    }\n    has(name) {\n        return this._map.has(name);\n    }\n    keys() {\n        return this._map.keys();\n    }\n    values() {\n        return this._map.values();\n    }\n}\n//# sourceMappingURL=read-only-map.js.map","import { NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS } from '../globals';\nimport { ReadOnlyMap } from '../read-only-map';\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    // Bug #61: The channelCountMode should be 'max' according to the spec but is set to 'explicit' to achieve consistent behavior.\n    channelCountMode: 'explicit',\n    channelInterpretation: 'speakers',\n    numberOfInputs: 1,\n    numberOfOutputs: 1,\n    parameterData: {},\n    processorOptions: {}\n};\nexport const createAudioWorkletNodeConstructor = (addUnrenderedAudioWorkletNode, audioNodeConstructor, createAudioParam, createAudioWorkletNodeRenderer, createNativeAudioWorkletNode, getAudioNodeConnections, getBackupOfflineAudioContext, getNativeContext, isNativeOfflineAudioContext, nativeAudioWorkletNodeConstructor, sanitizeAudioWorkletNodeOptions, setActiveAudioWorkletNodeInputs, wrapEventListener) => {\n    return class AudioWorkletNode extends audioNodeConstructor {\n        constructor(context, name, options) {\n            var _a;\n            const nativeContext = getNativeContext(context);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const mergedOptions = sanitizeAudioWorkletNodeOptions({ ...DEFAULT_OPTIONS, ...options });\n            const nodeNameToProcessorConstructorMap = NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS.get(nativeContext);\n            const processorConstructor = nodeNameToProcessorConstructorMap === null || nodeNameToProcessorConstructorMap === void 0 ? void 0 : nodeNameToProcessorConstructorMap.get(name);\n            // Bug #186: Chrome, Edge and Opera do not allow to create an AudioWorkletNode on a closed AudioContext.\n            const nativeContextOrBackupOfflineAudioContext = isOffline || nativeContext.state !== 'closed'\n                ? nativeContext\n                : (_a = getBackupOfflineAudioContext(nativeContext)) !== null && _a !== void 0 ? _a : nativeContext;\n            const nativeAudioWorkletNode = createNativeAudioWorkletNode(nativeContextOrBackupOfflineAudioContext, isOffline ? null : context.baseLatency, nativeAudioWorkletNodeConstructor, name, processorConstructor, mergedOptions);\n            const audioWorkletNodeRenderer = ((isOffline ? createAudioWorkletNodeRenderer(name, mergedOptions, processorConstructor) : null));\n            /*\n             * @todo Add a mechanism to switch an AudioWorkletNode to passive once the process() function of the AudioWorkletProcessor\n             * returns false.\n             */\n            super(context, true, nativeAudioWorkletNode, audioWorkletNodeRenderer);\n            const parameters = [];\n            nativeAudioWorkletNode.parameters.forEach((nativeAudioParam, nm) => {\n                const audioParam = createAudioParam(this, isOffline, nativeAudioParam);\n                parameters.push([nm, audioParam]);\n            });\n            this._nativeAudioWorkletNode = nativeAudioWorkletNode;\n            this._onprocessorerror = null;\n            this._parameters = new ReadOnlyMap(parameters);\n            /*\n             * Bug #86 & #87: Invoking the renderer of an AudioWorkletNode might be necessary if it has no direct or indirect connection to\n             * the destination.\n             */\n            if (isOffline) {\n                addUnrenderedAudioWorkletNode(nativeContext, this);\n            }\n            const { activeInputs } = getAudioNodeConnections(this);\n            setActiveAudioWorkletNodeInputs(nativeAudioWorkletNode, activeInputs);\n        }\n        get onprocessorerror() {\n            return this._onprocessorerror;\n        }\n        set onprocessorerror(value) {\n            const wrappedListener = typeof value === 'function' ? wrapEventListener(this, value) : null;\n            this._nativeAudioWorkletNode.onprocessorerror = wrappedListener;\n            const nativeOnProcessorError = this._nativeAudioWorkletNode.onprocessorerror;\n            this._onprocessorerror =\n                nativeOnProcessorError !== null && nativeOnProcessorError === wrappedListener\n                    ? value\n                    : nativeOnProcessorError;\n        }\n        get parameters() {\n            if (this._parameters === null) {\n                // @todo The definition that TypeScript uses of the AudioParamMap is lacking many methods.\n                return this._nativeAudioWorkletNode.parameters;\n            }\n            return this._parameters;\n        }\n        get port() {\n            return this._nativeAudioWorkletNode.port;\n        }\n    };\n};\n//# sourceMappingURL=audio-worklet-node-constructor.js.map","export function copyFromChannel(audioBuffer, \n// @todo There is currently no way to define something like { [ key: number | string ]: Float32Array }\nparent, key, channelNumber, bufferOffset) {\n    if (typeof audioBuffer.copyFromChannel === 'function') {\n        // The byteLength will be 0 when the ArrayBuffer was transferred.\n        if (parent[key].byteLength === 0) {\n            parent[key] = new Float32Array(128);\n        }\n        audioBuffer.copyFromChannel(parent[key], channelNumber, bufferOffset);\n        // Bug #5: Safari does not support copyFromChannel().\n    }\n    else {\n        const channelData = audioBuffer.getChannelData(channelNumber);\n        // The byteLength will be 0 when the ArrayBuffer was transferred.\n        if (parent[key].byteLength === 0) {\n            parent[key] = channelData.slice(bufferOffset, bufferOffset + 128);\n        }\n        else {\n            const slicedInput = new Float32Array(channelData.buffer, bufferOffset * Float32Array.BYTES_PER_ELEMENT, 128);\n            parent[key].set(slicedInput);\n        }\n    }\n}\n//# sourceMappingURL=copy-from-channel.js.map","export const copyToChannel = (audioBuffer, parent, key, channelNumber, bufferOffset) => {\n    if (typeof audioBuffer.copyToChannel === 'function') {\n        // The byteLength will be 0 when the ArrayBuffer was transferred.\n        if (parent[key].byteLength !== 0) {\n            audioBuffer.copyToChannel(parent[key], channelNumber, bufferOffset);\n        }\n        // Bug #5: Safari does not support copyToChannel().\n    }\n    else {\n        // The byteLength will be 0 when the ArrayBuffer was transferred.\n        if (parent[key].byteLength !== 0) {\n            audioBuffer.getChannelData(channelNumber).set(parent[key], bufferOffset);\n        }\n    }\n};\n//# sourceMappingURL=copy-to-channel.js.map","export const createNestedArrays = (x, y) => {\n    const arrays = [];\n    for (let i = 0; i < x; i += 1) {\n        const array = [];\n        const length = typeof y === 'number' ? y : y[i];\n        for (let j = 0; j < length; j += 1) {\n            array.push(new Float32Array(128));\n        }\n        arrays.push(array);\n    }\n    return arrays;\n};\n//# sourceMappingURL=create-nested-arrays.js.map","import { NODE_TO_PROCESSOR_MAPS } from '../globals';\nimport { getNativeAudioNode } from './get-native-audio-node';\nimport { getValueForKey } from './get-value-for-key';\nexport const getAudioWorkletProcessor = (nativeOfflineAudioContext, proxy) => {\n    const nodeToProcessorMap = getValueForKey(NODE_TO_PROCESSOR_MAPS, nativeOfflineAudioContext);\n    const nativeAudioWorkletNode = getNativeAudioNode(proxy);\n    return getValueForKey(nodeToProcessorMap, nativeAudioWorkletNode);\n};\n//# sourceMappingURL=get-audio-worklet-processor.js.map","import { copyFromChannel } from '../helpers/copy-from-channel';\nimport { copyToChannel } from '../helpers/copy-to-channel';\nimport { createNestedArrays } from '../helpers/create-nested-arrays';\nimport { getAudioNodeConnections } from '../helpers/get-audio-node-connections';\nimport { getAudioWorkletProcessor } from '../helpers/get-audio-worklet-processor';\nimport { isOwnedByContext } from '../helpers/is-owned-by-context';\nconst processBuffer = async (proxy, renderedBuffer, nativeOfflineAudioContext, options, outputChannelCount, processorConstructor, exposeCurrentFrameAndCurrentTime) => {\n    // Ceil the length to the next full render quantum.\n    // Bug #17: Safari does not yet expose the length.\n    const length = renderedBuffer === null ? Math.ceil(proxy.context.length / 128) * 128 : renderedBuffer.length;\n    const numberOfInputChannels = options.channelCount * options.numberOfInputs;\n    const numberOfOutputChannels = outputChannelCount.reduce((sum, value) => sum + value, 0);\n    const processedBuffer = numberOfOutputChannels === 0\n        ? null\n        : nativeOfflineAudioContext.createBuffer(numberOfOutputChannels, length, nativeOfflineAudioContext.sampleRate);\n    if (processorConstructor === undefined) {\n        throw new Error('Missing the processor constructor.');\n    }\n    const audioNodeConnections = getAudioNodeConnections(proxy);\n    const audioWorkletProcessor = await getAudioWorkletProcessor(nativeOfflineAudioContext, proxy);\n    const inputs = createNestedArrays(options.numberOfInputs, options.channelCount);\n    const outputs = createNestedArrays(options.numberOfOutputs, outputChannelCount);\n    const parameters = Array.from(proxy.parameters.keys()).reduce((prmtrs, name) => ({ ...prmtrs, [name]: new Float32Array(128) }), {});\n    for (let i = 0; i < length; i += 128) {\n        if (options.numberOfInputs > 0 && renderedBuffer !== null) {\n            for (let j = 0; j < options.numberOfInputs; j += 1) {\n                for (let k = 0; k < options.channelCount; k += 1) {\n                    copyFromChannel(renderedBuffer, inputs[j], k, k, i);\n                }\n            }\n        }\n        if (processorConstructor.parameterDescriptors !== undefined && renderedBuffer !== null) {\n            processorConstructor.parameterDescriptors.forEach(({ name }, index) => {\n                copyFromChannel(renderedBuffer, parameters, name, numberOfInputChannels + index, i);\n            });\n        }\n        for (let j = 0; j < options.numberOfInputs; j += 1) {\n            for (let k = 0; k < outputChannelCount[j]; k += 1) {\n                // The byteLength will be 0 when the ArrayBuffer was transferred.\n                if (outputs[j][k].byteLength === 0) {\n                    outputs[j][k] = new Float32Array(128);\n                }\n            }\n        }\n        try {\n            const potentiallyEmptyInputs = inputs.map((input, index) => {\n                if (audioNodeConnections.activeInputs[index].size === 0) {\n                    return [];\n                }\n                return input;\n            });\n            const activeSourceFlag = exposeCurrentFrameAndCurrentTime(i / nativeOfflineAudioContext.sampleRate, nativeOfflineAudioContext.sampleRate, () => audioWorkletProcessor.process(potentiallyEmptyInputs, outputs, parameters));\n            if (processedBuffer !== null) {\n                for (let j = 0, outputChannelSplitterNodeOutput = 0; j < options.numberOfOutputs; j += 1) {\n                    for (let k = 0; k < outputChannelCount[j]; k += 1) {\n                        copyToChannel(processedBuffer, outputs[j], k, outputChannelSplitterNodeOutput + k, i);\n                    }\n                    outputChannelSplitterNodeOutput += outputChannelCount[j];\n                }\n            }\n            if (!activeSourceFlag) {\n                break;\n            }\n        }\n        catch (error) {\n            proxy.dispatchEvent(new ErrorEvent('processorerror', {\n                colno: error.colno,\n                filename: error.filename,\n                lineno: error.lineno,\n                message: error.message\n            }));\n            break;\n        }\n    }\n    return processedBuffer;\n};\nexport const createAudioWorkletNodeRendererFactory = (connectAudioParam, connectMultipleOutputs, createNativeAudioBufferSourceNode, createNativeChannelMergerNode, createNativeChannelSplitterNode, createNativeConstantSourceNode, createNativeGainNode, deleteUnrenderedAudioWorkletNode, disconnectMultipleOutputs, exposeCurrentFrameAndCurrentTime, getNativeAudioNode, nativeAudioWorkletNodeConstructor, nativeOfflineAudioContextConstructor, renderAutomation, renderInputsOfAudioNode, renderNativeOfflineAudioContext) => {\n    return (name, options, processorConstructor) => {\n        const renderedNativeAudioNodes = new WeakMap();\n        let processedBufferPromise = null;\n        const createAudioNode = async (proxy, nativeOfflineAudioContext, trace) => {\n            let nativeAudioWorkletNode = getNativeAudioNode(proxy);\n            let nativeOutputNodes = null;\n            const nativeAudioWorkletNodeIsOwnedByContext = isOwnedByContext(nativeAudioWorkletNode, nativeOfflineAudioContext);\n            const outputChannelCount = Array.isArray(options.outputChannelCount)\n                ? options.outputChannelCount\n                : Array.from(options.outputChannelCount);\n            // Bug #61: Only Chrome, Edge, Firefox & Opera have an implementation of the AudioWorkletNode yet.\n            if (nativeAudioWorkletNodeConstructor === null) {\n                const numberOfOutputChannels = outputChannelCount.reduce((sum, value) => sum + value, 0);\n                const outputChannelSplitterNode = createNativeChannelSplitterNode(nativeOfflineAudioContext, {\n                    channelCount: Math.max(1, numberOfOutputChannels),\n                    channelCountMode: 'explicit',\n                    channelInterpretation: 'discrete',\n                    numberOfOutputs: Math.max(1, numberOfOutputChannels)\n                });\n                const outputChannelMergerNodes = [];\n                for (let i = 0; i < proxy.numberOfOutputs; i += 1) {\n                    outputChannelMergerNodes.push(createNativeChannelMergerNode(nativeOfflineAudioContext, {\n                        channelCount: 1,\n                        channelCountMode: 'explicit',\n                        channelInterpretation: 'speakers',\n                        numberOfInputs: outputChannelCount[i]\n                    }));\n                }\n                const outputGainNode = createNativeGainNode(nativeOfflineAudioContext, {\n                    channelCount: options.channelCount,\n                    channelCountMode: options.channelCountMode,\n                    channelInterpretation: options.channelInterpretation,\n                    gain: 1\n                });\n                outputGainNode.connect = connectMultipleOutputs.bind(null, outputChannelMergerNodes);\n                outputGainNode.disconnect = disconnectMultipleOutputs.bind(null, outputChannelMergerNodes);\n                nativeOutputNodes = [outputChannelSplitterNode, outputChannelMergerNodes, outputGainNode];\n            }\n            else if (!nativeAudioWorkletNodeIsOwnedByContext) {\n                nativeAudioWorkletNode = new nativeAudioWorkletNodeConstructor(nativeOfflineAudioContext, name);\n            }\n            renderedNativeAudioNodes.set(nativeOfflineAudioContext, nativeOutputNodes === null ? nativeAudioWorkletNode : nativeOutputNodes[2]);\n            if (nativeOutputNodes !== null) {\n                if (processedBufferPromise === null) {\n                    if (processorConstructor === undefined) {\n                        throw new Error('Missing the processor constructor.');\n                    }\n                    if (nativeOfflineAudioContextConstructor === null) {\n                        throw new Error('Missing the native OfflineAudioContext constructor.');\n                    }\n                    // Bug #47: The AudioDestinationNode in Safari gets not initialized correctly.\n                    const numberOfInputChannels = proxy.channelCount * proxy.numberOfInputs;\n                    const numberOfParameters = processorConstructor.parameterDescriptors === undefined ? 0 : processorConstructor.parameterDescriptors.length;\n                    const numberOfChannels = numberOfInputChannels + numberOfParameters;\n                    const renderBuffer = async () => {\n                        const partialOfflineAudioContext = new nativeOfflineAudioContextConstructor(numberOfChannels, \n                        // Ceil the length to the next full render quantum.\n                        // Bug #17: Safari does not yet expose the length.\n                        Math.ceil(proxy.context.length / 128) * 128, nativeOfflineAudioContext.sampleRate);\n                        const gainNodes = [];\n                        const inputChannelSplitterNodes = [];\n                        for (let i = 0; i < options.numberOfInputs; i += 1) {\n                            gainNodes.push(createNativeGainNode(partialOfflineAudioContext, {\n                                channelCount: options.channelCount,\n                                channelCountMode: options.channelCountMode,\n                                channelInterpretation: options.channelInterpretation,\n                                gain: 1\n                            }));\n                            inputChannelSplitterNodes.push(createNativeChannelSplitterNode(partialOfflineAudioContext, {\n                                channelCount: options.channelCount,\n                                channelCountMode: 'explicit',\n                                channelInterpretation: 'discrete',\n                                numberOfOutputs: options.channelCount\n                            }));\n                        }\n                        const constantSourceNodes = await Promise.all(Array.from(proxy.parameters.values()).map(async (audioParam) => {\n                            const constantSourceNode = createNativeConstantSourceNode(partialOfflineAudioContext, {\n                                channelCount: 1,\n                                channelCountMode: 'explicit',\n                                channelInterpretation: 'discrete',\n                                offset: audioParam.value\n                            });\n                            await renderAutomation(partialOfflineAudioContext, audioParam, constantSourceNode.offset, trace);\n                            return constantSourceNode;\n                        }));\n                        const inputChannelMergerNode = createNativeChannelMergerNode(partialOfflineAudioContext, {\n                            channelCount: 1,\n                            channelCountMode: 'explicit',\n                            channelInterpretation: 'speakers',\n                            numberOfInputs: Math.max(1, numberOfInputChannels + numberOfParameters)\n                        });\n                        for (let i = 0; i < options.numberOfInputs; i += 1) {\n                            gainNodes[i].connect(inputChannelSplitterNodes[i]);\n                            for (let j = 0; j < options.channelCount; j += 1) {\n                                inputChannelSplitterNodes[i].connect(inputChannelMergerNode, j, i * options.channelCount + j);\n                            }\n                        }\n                        for (const [index, constantSourceNode] of constantSourceNodes.entries()) {\n                            constantSourceNode.connect(inputChannelMergerNode, 0, numberOfInputChannels + index);\n                            constantSourceNode.start(0);\n                        }\n                        inputChannelMergerNode.connect(partialOfflineAudioContext.destination);\n                        await Promise.all(gainNodes.map((gainNode) => renderInputsOfAudioNode(proxy, partialOfflineAudioContext, gainNode, trace)));\n                        return renderNativeOfflineAudioContext(partialOfflineAudioContext);\n                    };\n                    processedBufferPromise = processBuffer(proxy, numberOfChannels === 0 ? null : await renderBuffer(), nativeOfflineAudioContext, options, outputChannelCount, processorConstructor, exposeCurrentFrameAndCurrentTime);\n                }\n                const processedBuffer = await processedBufferPromise;\n                const audioBufferSourceNode = createNativeAudioBufferSourceNode(nativeOfflineAudioContext, {\n                    buffer: null,\n                    channelCount: 2,\n                    channelCountMode: 'max',\n                    channelInterpretation: 'speakers',\n                    loop: false,\n                    loopEnd: 0,\n                    loopStart: 0,\n                    playbackRate: 1\n                });\n                const [outputChannelSplitterNode, outputChannelMergerNodes, outputGainNode] = nativeOutputNodes;\n                if (processedBuffer !== null) {\n                    audioBufferSourceNode.buffer = processedBuffer;\n                    audioBufferSourceNode.start(0);\n                }\n                audioBufferSourceNode.connect(outputChannelSplitterNode);\n                for (let i = 0, outputChannelSplitterNodeOutput = 0; i < proxy.numberOfOutputs; i += 1) {\n                    const outputChannelMergerNode = outputChannelMergerNodes[i];\n                    for (let j = 0; j < outputChannelCount[i]; j += 1) {\n                        outputChannelSplitterNode.connect(outputChannelMergerNode, outputChannelSplitterNodeOutput + j, j);\n                    }\n                    outputChannelSplitterNodeOutput += outputChannelCount[i];\n                }\n                return outputGainNode;\n            }\n            if (!nativeAudioWorkletNodeIsOwnedByContext) {\n                for (const [nm, audioParam] of proxy.parameters.entries()) {\n                    await renderAutomation(nativeOfflineAudioContext, audioParam, \n                    // @todo The definition that TypeScript uses of the AudioParamMap is lacking many methods.\n                    nativeAudioWorkletNode.parameters.get(nm), trace);\n                }\n            }\n            else {\n                for (const [nm, audioParam] of proxy.parameters.entries()) {\n                    await connectAudioParam(nativeOfflineAudioContext, audioParam, \n                    // @todo The definition that TypeScript uses of the AudioParamMap is lacking many methods.\n                    nativeAudioWorkletNode.parameters.get(nm), trace);\n                }\n            }\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAudioWorkletNode, trace);\n            return nativeAudioWorkletNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext, trace) {\n                deleteUnrenderedAudioWorkletNode(nativeOfflineAudioContext, proxy);\n                const renderedNativeAudioWorkletNodeOrGainNode = renderedNativeAudioNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeAudioWorkletNodeOrGainNode !== undefined) {\n                    return Promise.resolve(renderedNativeAudioWorkletNodeOrGainNode);\n                }\n                return createAudioNode(proxy, nativeOfflineAudioContext, trace);\n            }\n        };\n    };\n};\n//# sourceMappingURL=audio-worklet-node-renderer-factory.js.map","export const createBaseAudioContextConstructor = (addAudioWorkletModule, analyserNodeConstructor, audioBufferConstructor, audioBufferSourceNodeConstructor, biquadFilterNodeConstructor, channelMergerNodeConstructor, channelSplitterNodeConstructor, constantSourceNodeConstructor, convolverNodeConstructor, decodeAudioData, delayNodeConstructor, dynamicsCompressorNodeConstructor, gainNodeConstructor, iIRFilterNodeConstructor, minimalBaseAudioContextConstructor, oscillatorNodeConstructor, pannerNodeConstructor, periodicWaveConstructor, stereoPannerNodeConstructor, waveShaperNodeConstructor) => {\n    return class BaseAudioContext extends minimalBaseAudioContextConstructor {\n        constructor(_nativeContext, numberOfChannels) {\n            super(_nativeContext, numberOfChannels);\n            this._nativeContext = _nativeContext;\n            this._audioWorklet =\n                addAudioWorkletModule === undefined\n                    ? undefined\n                    : {\n                        addModule: (moduleURL, options) => {\n                            return addAudioWorkletModule(this, moduleURL, options);\n                        }\n                    };\n        }\n        get audioWorklet() {\n            return this._audioWorklet;\n        }\n        createAnalyser() {\n            return new analyserNodeConstructor(this);\n        }\n        createBiquadFilter() {\n            return new biquadFilterNodeConstructor(this);\n        }\n        createBuffer(numberOfChannels, length, sampleRate) {\n            return new audioBufferConstructor({ length, numberOfChannels, sampleRate });\n        }\n        createBufferSource() {\n            return new audioBufferSourceNodeConstructor(this);\n        }\n        createChannelMerger(numberOfInputs = 6) {\n            return new channelMergerNodeConstructor(this, { numberOfInputs });\n        }\n        createChannelSplitter(numberOfOutputs = 6) {\n            return new channelSplitterNodeConstructor(this, { numberOfOutputs });\n        }\n        createConstantSource() {\n            return new constantSourceNodeConstructor(this);\n        }\n        createConvolver() {\n            return new convolverNodeConstructor(this);\n        }\n        createDelay(maxDelayTime = 1) {\n            return new delayNodeConstructor(this, { maxDelayTime });\n        }\n        createDynamicsCompressor() {\n            return new dynamicsCompressorNodeConstructor(this);\n        }\n        createGain() {\n            return new gainNodeConstructor(this);\n        }\n        createIIRFilter(feedforward, feedback) {\n            return new iIRFilterNodeConstructor(this, { feedback, feedforward });\n        }\n        createOscillator() {\n            return new oscillatorNodeConstructor(this);\n        }\n        createPanner() {\n            return new pannerNodeConstructor(this);\n        }\n        createPeriodicWave(real, imag, constraints = { disableNormalization: false }) {\n            return new periodicWaveConstructor(this, { ...constraints, imag, real });\n        }\n        createStereoPanner() {\n            return new stereoPannerNodeConstructor(this);\n        }\n        createWaveShaper() {\n            return new waveShaperNodeConstructor(this);\n        }\n        decodeAudioData(audioData, successCallback, errorCallback) {\n            return decodeAudioData(this._nativeContext, audioData)\n                .then((audioBuffer) => {\n                if (typeof successCallback === 'function') {\n                    successCallback(audioBuffer);\n                }\n                return audioBuffer;\n            })\n                .catch((err) => {\n                if (typeof errorCallback === 'function') {\n                    errorCallback(err);\n                }\n                throw err;\n            });\n        }\n    };\n};\n//# sourceMappingURL=base-audio-context-constructor.js.map","import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nconst DEFAULT_OPTIONS = {\n    Q: 1,\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    detune: 0,\n    frequency: 350,\n    gain: 0,\n    type: 'lowpass'\n};\nexport const createBiquadFilterNodeConstructor = (audioNodeConstructor, createAudioParam, createBiquadFilterNodeRenderer, createInvalidAccessError, createNativeBiquadFilterNode, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime) => {\n    return class BiquadFilterNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeBiquadFilterNode = createNativeBiquadFilterNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const biquadFilterNodeRenderer = (isOffline ? createBiquadFilterNodeRenderer() : null);\n            super(context, false, nativeBiquadFilterNode, biquadFilterNodeRenderer);\n            // Bug #80: Safari does not export the correct values for maxValue and minValue.\n            this._Q = createAudioParam(this, isOffline, nativeBiquadFilterNode.Q, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n            // Bug #78: Firefox & Safari do not export the correct values for maxValue and minValue.\n            this._detune = createAudioParam(this, isOffline, nativeBiquadFilterNode.detune, 1200 * Math.log2(MOST_POSITIVE_SINGLE_FLOAT), -1200 * Math.log2(MOST_POSITIVE_SINGLE_FLOAT));\n            // Bug #77: Firefox & Safari do not export the correct value for minValue.\n            this._frequency = createAudioParam(this, isOffline, nativeBiquadFilterNode.frequency, context.sampleRate / 2, 0);\n            // Bug #79: Firefox & Safari do not export the correct values for maxValue and minValue.\n            this._gain = createAudioParam(this, isOffline, nativeBiquadFilterNode.gain, 40 * Math.log10(MOST_POSITIVE_SINGLE_FLOAT), MOST_NEGATIVE_SINGLE_FLOAT);\n            this._nativeBiquadFilterNode = nativeBiquadFilterNode;\n            // @todo Determine a meaningful tail-time instead of just using one second.\n            setAudioNodeTailTime(this, 1);\n        }\n        get detune() {\n            return this._detune;\n        }\n        get frequency() {\n            return this._frequency;\n        }\n        get gain() {\n            return this._gain;\n        }\n        get Q() {\n            return this._Q;\n        }\n        get type() {\n            return this._nativeBiquadFilterNode.type;\n        }\n        set type(value) {\n            this._nativeBiquadFilterNode.type = value;\n        }\n        getFrequencyResponse(frequencyHz, magResponse, phaseResponse) {\n            this._nativeBiquadFilterNode.getFrequencyResponse(frequencyHz, magResponse, phaseResponse);\n            // Bug #68: Safari does not throw an error if the parameters differ in their length.\n            if (frequencyHz.length !== magResponse.length || magResponse.length !== phaseResponse.length) {\n                throw createInvalidAccessError();\n            }\n        }\n    };\n};\n//# sourceMappingURL=biquad-filter-node-constructor.js.map","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createBiquadFilterNodeRendererFactory = (connectAudioParam, createNativeBiquadFilterNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeBiquadFilterNodes = new WeakMap();\n        const createBiquadFilterNode = async (proxy, nativeOfflineAudioContext, trace) => {\n            let nativeBiquadFilterNode = getNativeAudioNode(proxy);\n            /*\n             * If the initially used nativeBiquadFilterNode was not constructed on the same OfflineAudioContext it needs to be created\n             * again.\n             */\n            const nativeBiquadFilterNodeIsOwnedByContext = isOwnedByContext(nativeBiquadFilterNode, nativeOfflineAudioContext);\n            if (!nativeBiquadFilterNodeIsOwnedByContext) {\n                const options = {\n                    Q: nativeBiquadFilterNode.Q.value,\n                    channelCount: nativeBiquadFilterNode.channelCount,\n                    channelCountMode: nativeBiquadFilterNode.channelCountMode,\n                    channelInterpretation: nativeBiquadFilterNode.channelInterpretation,\n                    detune: nativeBiquadFilterNode.detune.value,\n                    frequency: nativeBiquadFilterNode.frequency.value,\n                    gain: nativeBiquadFilterNode.gain.value,\n                    type: nativeBiquadFilterNode.type\n                };\n                nativeBiquadFilterNode = createNativeBiquadFilterNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeBiquadFilterNodes.set(nativeOfflineAudioContext, nativeBiquadFilterNode);\n            if (!nativeBiquadFilterNodeIsOwnedByContext) {\n                await renderAutomation(nativeOfflineAudioContext, proxy.Q, nativeBiquadFilterNode.Q, trace);\n                await renderAutomation(nativeOfflineAudioContext, proxy.detune, nativeBiquadFilterNode.detune, trace);\n                await renderAutomation(nativeOfflineAudioContext, proxy.frequency, nativeBiquadFilterNode.frequency, trace);\n                await renderAutomation(nativeOfflineAudioContext, proxy.gain, nativeBiquadFilterNode.gain, trace);\n            }\n            else {\n                await connectAudioParam(nativeOfflineAudioContext, proxy.Q, nativeBiquadFilterNode.Q, trace);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.detune, nativeBiquadFilterNode.detune, trace);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.frequency, nativeBiquadFilterNode.frequency, trace);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.gain, nativeBiquadFilterNode.gain, trace);\n            }\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeBiquadFilterNode, trace);\n            return nativeBiquadFilterNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext, trace) {\n                const renderedNativeBiquadFilterNode = renderedNativeBiquadFilterNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeBiquadFilterNode !== undefined) {\n                    return Promise.resolve(renderedNativeBiquadFilterNode);\n                }\n                return createBiquadFilterNode(proxy, nativeOfflineAudioContext, trace);\n            }\n        };\n    };\n};\n//# sourceMappingURL=biquad-filter-node-renderer-factory.js.map","export const createCacheTestResult = (ongoingTests, testResults) => {\n    return (tester, test) => {\n        const cachedTestResult = testResults.get(tester);\n        if (cachedTestResult !== undefined) {\n            return cachedTestResult;\n        }\n        const ongoingTest = ongoingTests.get(tester);\n        if (ongoingTest !== undefined) {\n            return ongoingTest;\n        }\n        try {\n            const synchronousTestResult = test();\n            if (synchronousTestResult instanceof Promise) {\n                ongoingTests.set(tester, synchronousTestResult);\n                return synchronousTestResult\n                    .catch(() => false)\n                    .then((finalTestResult) => {\n                    ongoingTests.delete(tester);\n                    testResults.set(tester, finalTestResult);\n                    return finalTestResult;\n                });\n            }\n            testResults.set(tester, synchronousTestResult);\n            return synchronousTestResult;\n        }\n        catch {\n            testResults.set(tester, false);\n            return false;\n        }\n    };\n};\n//# sourceMappingURL=cache-test-result.js.map","const DEFAULT_OPTIONS = {\n    channelCount: 1,\n    channelCountMode: 'explicit',\n    channelInterpretation: 'speakers',\n    numberOfInputs: 6\n};\nexport const createChannelMergerNodeConstructor = (audioNodeConstructor, createChannelMergerNodeRenderer, createNativeChannelMergerNode, getNativeContext, isNativeOfflineAudioContext) => {\n    return class ChannelMergerNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeChannelMergerNode = createNativeChannelMergerNode(nativeContext, mergedOptions);\n            const channelMergerNodeRenderer = ((isNativeOfflineAudioContext(nativeContext) ? createChannelMergerNodeRenderer() : null));\n            super(context, false, nativeChannelMergerNode, channelMergerNodeRenderer);\n        }\n    };\n};\n//# sourceMappingURL=channel-merger-node-constructor.js.map","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createChannelMergerNodeRendererFactory = (createNativeChannelMergerNode, getNativeAudioNode, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeAudioNodes = new WeakMap();\n        const createAudioNode = async (proxy, nativeOfflineAudioContext, trace) => {\n            let nativeAudioNode = getNativeAudioNode(proxy);\n            // If the initially used nativeAudioNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeAudioNodeIsOwnedByContext = isOwnedByContext(nativeAudioNode, nativeOfflineAudioContext);\n            if (!nativeAudioNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeAudioNode.channelCount,\n                    channelCountMode: nativeAudioNode.channelCountMode,\n                    channelInterpretation: nativeAudioNode.channelInterpretation,\n                    numberOfInputs: nativeAudioNode.numberOfInputs\n                };\n                nativeAudioNode = createNativeChannelMergerNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeAudioNodes.set(nativeOfflineAudioContext, nativeAudioNode);\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAudioNode, trace);\n            return nativeAudioNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext, trace) {\n                const renderedNativeAudioNode = renderedNativeAudioNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeAudioNode !== undefined) {\n                    return Promise.resolve(renderedNativeAudioNode);\n                }\n                return createAudioNode(proxy, nativeOfflineAudioContext, trace);\n            }\n        };\n    };\n};\n//# sourceMappingURL=channel-merger-node-renderer-factory.js.map","const DEFAULT_OPTIONS = {\n    channelCount: 6,\n    channelCountMode: 'explicit',\n    channelInterpretation: 'discrete',\n    numberOfOutputs: 6\n};\nexport const createChannelSplitterNodeConstructor = (audioNodeConstructor, createChannelSplitterNodeRenderer, createNativeChannelSplitterNode, getNativeContext, isNativeOfflineAudioContext, sanitizeChannelSplitterOptions) => {\n    return class ChannelSplitterNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = sanitizeChannelSplitterOptions({ ...DEFAULT_OPTIONS, ...options });\n            const nativeChannelSplitterNode = createNativeChannelSplitterNode(nativeContext, mergedOptions);\n            const channelSplitterNodeRenderer = ((isNativeOfflineAudioContext(nativeContext) ? createChannelSplitterNodeRenderer() : null));\n            super(context, false, nativeChannelSplitterNode, channelSplitterNodeRenderer);\n        }\n    };\n};\n//# sourceMappingURL=channel-splitter-node-constructor.js.map","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createChannelSplitterNodeRendererFactory = (createNativeChannelSplitterNode, getNativeAudioNode, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeAudioNodes = new WeakMap();\n        const createAudioNode = async (proxy, nativeOfflineAudioContext, trace) => {\n            let nativeAudioNode = getNativeAudioNode(proxy);\n            // If the initially used nativeAudioNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeAudioNodeIsOwnedByContext = isOwnedByContext(nativeAudioNode, nativeOfflineAudioContext);\n            if (!nativeAudioNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeAudioNode.channelCount,\n                    channelCountMode: nativeAudioNode.channelCountMode,\n                    channelInterpretation: nativeAudioNode.channelInterpretation,\n                    numberOfOutputs: nativeAudioNode.numberOfOutputs\n                };\n                nativeAudioNode = createNativeChannelSplitterNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeAudioNodes.set(nativeOfflineAudioContext, nativeAudioNode);\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAudioNode, trace);\n            return nativeAudioNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext, trace) {\n                const renderedNativeAudioNode = renderedNativeAudioNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeAudioNode !== undefined) {\n                    return Promise.resolve(renderedNativeAudioNode);\n                }\n                return createAudioNode(proxy, nativeOfflineAudioContext, trace);\n            }\n        };\n    };\n};\n//# sourceMappingURL=channel-splitter-node-renderer-factory.js.map","export const createConnectAudioParam = (renderInputsOfAudioParam) => {\n    return (nativeOfflineAudioContext, audioParam, nativeAudioParam, trace) => {\n        return renderInputsOfAudioParam(audioParam, nativeOfflineAudioContext, nativeAudioParam, trace);\n    };\n};\n//# sourceMappingURL=connect-audio-param.js.map","import { isNativeAudioNode } from '../guards/native-audio-node';\nexport const createConnectMultipleOutputs = (createIndexSizeError) => {\n    return (outputAudioNodes, destination, output = 0, input = 0) => {\n        const outputAudioNode = outputAudioNodes[output];\n        if (outputAudioNode === undefined) {\n            throw createIndexSizeError();\n        }\n        if (isNativeAudioNode(destination)) {\n            return outputAudioNode.connect(destination, 0, input);\n        }\n        return outputAudioNode.connect(destination, 0);\n    };\n};\n//# sourceMappingURL=connect-multiple-outputs.js.map","export const createConnectedNativeAudioBufferSourceNodeFactory = (createNativeAudioBufferSourceNode) => {\n    return (nativeContext, nativeAudioNode) => {\n        const nativeAudioBufferSourceNode = createNativeAudioBufferSourceNode(nativeContext, {\n            buffer: null,\n            channelCount: 2,\n            channelCountMode: 'max',\n            channelInterpretation: 'speakers',\n            loop: false,\n            loopEnd: 0,\n            loopStart: 0,\n            playbackRate: 1\n        });\n        const nativeAudioBuffer = nativeContext.createBuffer(1, 2, 44100);\n        nativeAudioBufferSourceNode.buffer = nativeAudioBuffer;\n        nativeAudioBufferSourceNode.loop = true;\n        nativeAudioBufferSourceNode.connect(nativeAudioNode);\n        nativeAudioBufferSourceNode.start();\n        return () => {\n            nativeAudioBufferSourceNode.stop();\n            nativeAudioBufferSourceNode.disconnect(nativeAudioNode);\n        };\n    };\n};\n//# sourceMappingURL=connected-native-audio-buffer-source-node-factory.js.map","import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nimport { isActiveAudioNode } from '../helpers/is-active-audio-node';\nimport { setInternalStateToActive } from '../helpers/set-internal-state-to-active';\nimport { setInternalStateToPassive } from '../helpers/set-internal-state-to-passive';\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    offset: 1\n};\nexport const createConstantSourceNodeConstructor = (audioNodeConstructor, createAudioParam, createConstantSourceNodeRendererFactory, createNativeConstantSourceNode, getNativeContext, isNativeOfflineAudioContext, wrapEventListener) => {\n    return class ConstantSourceNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeConstantSourceNode = createNativeConstantSourceNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const constantSourceNodeRenderer = ((isOffline ? createConstantSourceNodeRendererFactory() : null));\n            super(context, false, nativeConstantSourceNode, constantSourceNodeRenderer);\n            this._constantSourceNodeRenderer = constantSourceNodeRenderer;\n            this._nativeConstantSourceNode = nativeConstantSourceNode;\n            /*\n             * Bug #62 & #74: Safari does not support ConstantSourceNodes and does not export the correct values for maxValue and minValue\n             * for GainNodes.\n             */\n            this._offset = createAudioParam(this, isOffline, nativeConstantSourceNode.offset, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n            this._onended = null;\n        }\n        get offset() {\n            return this._offset;\n        }\n        get onended() {\n            return this._onended;\n        }\n        set onended(value) {\n            const wrappedListener = typeof value === 'function' ? wrapEventListener(this, value) : null;\n            this._nativeConstantSourceNode.onended = wrappedListener;\n            const nativeOnEnded = this._nativeConstantSourceNode.onended;\n            this._onended = nativeOnEnded !== null && nativeOnEnded === wrappedListener ? value : nativeOnEnded;\n        }\n        start(when = 0) {\n            this._nativeConstantSourceNode.start(when);\n            if (this._constantSourceNodeRenderer !== null) {\n                this._constantSourceNodeRenderer.start = when;\n            }\n            if (this.context.state !== 'closed') {\n                setInternalStateToActive(this);\n                const resetInternalStateToPassive = () => {\n                    this._nativeConstantSourceNode.removeEventListener('ended', resetInternalStateToPassive);\n                    if (isActiveAudioNode(this)) {\n                        setInternalStateToPassive(this);\n                    }\n                };\n                this._nativeConstantSourceNode.addEventListener('ended', resetInternalStateToPassive);\n            }\n        }\n        stop(when = 0) {\n            this._nativeConstantSourceNode.stop(when);\n            if (this._constantSourceNodeRenderer !== null) {\n                this._constantSourceNodeRenderer.stop = when;\n            }\n        }\n    };\n};\n//# sourceMappingURL=constant-source-node-constructor.js.map","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createConstantSourceNodeRendererFactory = (connectAudioParam, createNativeConstantSourceNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeConstantSourceNodes = new WeakMap();\n        let start = null;\n        let stop = null;\n        const createConstantSourceNode = async (proxy, nativeOfflineAudioContext, trace) => {\n            let nativeConstantSourceNode = getNativeAudioNode(proxy);\n            /*\n             * If the initially used nativeConstantSourceNode was not constructed on the same OfflineAudioContext it needs to be created\n             * again.\n             */\n            const nativeConstantSourceNodeIsOwnedByContext = isOwnedByContext(nativeConstantSourceNode, nativeOfflineAudioContext);\n            if (!nativeConstantSourceNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeConstantSourceNode.channelCount,\n                    channelCountMode: nativeConstantSourceNode.channelCountMode,\n                    channelInterpretation: nativeConstantSourceNode.channelInterpretation,\n                    offset: nativeConstantSourceNode.offset.value\n                };\n                nativeConstantSourceNode = createNativeConstantSourceNode(nativeOfflineAudioContext, options);\n                if (start !== null) {\n                    nativeConstantSourceNode.start(start);\n                }\n                if (stop !== null) {\n                    nativeConstantSourceNode.stop(stop);\n                }\n            }\n            renderedNativeConstantSourceNodes.set(nativeOfflineAudioContext, nativeConstantSourceNode);\n            if (!nativeConstantSourceNodeIsOwnedByContext) {\n                await renderAutomation(nativeOfflineAudioContext, proxy.offset, nativeConstantSourceNode.offset, trace);\n            }\n            else {\n                await connectAudioParam(nativeOfflineAudioContext, proxy.offset, nativeConstantSourceNode.offset, trace);\n            }\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeConstantSourceNode, trace);\n            return nativeConstantSourceNode;\n        };\n        return {\n            set start(value) {\n                start = value;\n            },\n            set stop(value) {\n                stop = value;\n            },\n            render(proxy, nativeOfflineAudioContext, trace) {\n                const renderedNativeConstantSourceNode = renderedNativeConstantSourceNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeConstantSourceNode !== undefined) {\n                    return Promise.resolve(renderedNativeConstantSourceNode);\n                }\n                return createConstantSourceNode(proxy, nativeOfflineAudioContext, trace);\n            }\n        };\n    };\n};\n//# sourceMappingURL=constant-source-node-renderer-factory.js.map","export const createConvertNumberToUnsignedLong = (unit32Array) => {\n    return (value) => {\n        unit32Array[0] = value;\n        return unit32Array[0];\n    };\n};\n//# sourceMappingURL=convert-number-to-unsigned-long.js.map","const DEFAULT_OPTIONS = {\n    buffer: null,\n    channelCount: 2,\n    channelCountMode: 'clamped-max',\n    channelInterpretation: 'speakers',\n    disableNormalization: false\n};\nexport const createConvolverNodeConstructor = (audioNodeConstructor, createConvolverNodeRenderer, createNativeConvolverNode, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime) => {\n    return class ConvolverNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeConvolverNode = createNativeConvolverNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const convolverNodeRenderer = (isOffline ? createConvolverNodeRenderer() : null);\n            super(context, false, nativeConvolverNode, convolverNodeRenderer);\n            this._isBufferNullified = false;\n            this._nativeConvolverNode = nativeConvolverNode;\n            if (mergedOptions.buffer !== null) {\n                setAudioNodeTailTime(this, mergedOptions.buffer.duration);\n            }\n        }\n        get buffer() {\n            if (this._isBufferNullified) {\n                return null;\n            }\n            return this._nativeConvolverNode.buffer;\n        }\n        set buffer(value) {\n            this._nativeConvolverNode.buffer = value;\n            // Bug #115: Safari does not allow to set the buffer to null.\n            if (value === null && this._nativeConvolverNode.buffer !== null) {\n                const nativeContext = this._nativeConvolverNode.context;\n                this._nativeConvolverNode.buffer = nativeContext.createBuffer(1, 1, 44100);\n                this._isBufferNullified = true;\n                setAudioNodeTailTime(this, 0);\n            }\n            else {\n                this._isBufferNullified = false;\n                setAudioNodeTailTime(this, this._nativeConvolverNode.buffer === null ? 0 : this._nativeConvolverNode.buffer.duration);\n            }\n        }\n        get normalize() {\n            return this._nativeConvolverNode.normalize;\n        }\n        set normalize(value) {\n            this._nativeConvolverNode.normalize = value;\n        }\n    };\n};\n//# sourceMappingURL=convolver-node-constructor.js.map","import { isNativeAudioNodeFaker } from '../guards/native-audio-node-faker';\nimport { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createConvolverNodeRendererFactory = (createNativeConvolverNode, getNativeAudioNode, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeConvolverNodes = new WeakMap();\n        const createConvolverNode = async (proxy, nativeOfflineAudioContext, trace) => {\n            let nativeConvolverNode = getNativeAudioNode(proxy);\n            // If the initially used nativeConvolverNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeConvolverNodeIsOwnedByContext = isOwnedByContext(nativeConvolverNode, nativeOfflineAudioContext);\n            if (!nativeConvolverNodeIsOwnedByContext) {\n                const options = {\n                    buffer: nativeConvolverNode.buffer,\n                    channelCount: nativeConvolverNode.channelCount,\n                    channelCountMode: nativeConvolverNode.channelCountMode,\n                    channelInterpretation: nativeConvolverNode.channelInterpretation,\n                    disableNormalization: !nativeConvolverNode.normalize\n                };\n                nativeConvolverNode = createNativeConvolverNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeConvolverNodes.set(nativeOfflineAudioContext, nativeConvolverNode);\n            if (isNativeAudioNodeFaker(nativeConvolverNode)) {\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeConvolverNode.inputs[0], trace);\n            }\n            else {\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeConvolverNode, trace);\n            }\n            return nativeConvolverNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext, trace) {\n                const renderedNativeConvolverNode = renderedNativeConvolverNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeConvolverNode !== undefined) {\n                    return Promise.resolve(renderedNativeConvolverNode);\n                }\n                return createConvolverNode(proxy, nativeOfflineAudioContext, trace);\n            }\n        };\n    };\n};\n//# sourceMappingURL=convolver-node-renderer-factory.js.map","export const createCreateNativeOfflineAudioContext = (createNotSupportedError, nativeOfflineAudioContextConstructor) => {\n    return (numberOfChannels, length, sampleRate) => {\n        if (nativeOfflineAudioContextConstructor === null) {\n            throw new Error('Missing the native OfflineAudioContext constructor.');\n        }\n        try {\n            return new nativeOfflineAudioContextConstructor(numberOfChannels, length, sampleRate);\n        }\n        catch (err) {\n            // Bug #143, #144 & #146: Safari throws a SyntaxError when numberOfChannels, length or sampleRate are invalid.\n            if (err.name === 'SyntaxError') {\n                throw createNotSupportedError();\n            }\n            throw err;\n        }\n    };\n};\n//# sourceMappingURL=create-native-offline-audio-context.js.map","export const createDataCloneError = () => new DOMException('', 'DataCloneError');\n//# sourceMappingURL=data-clone-error.js.map","export const detachArrayBuffer = (arrayBuffer) => {\n    const { port1 } = new MessageChannel();\n    port1.postMessage(arrayBuffer, [arrayBuffer]);\n};\n//# sourceMappingURL=detach-array-buffer.js.map","import { detachArrayBuffer } from '../helpers/detach-array-buffer';\nimport { wrapAudioBufferGetChannelDataMethod } from '../helpers/wrap-audio-buffer-get-channel-data-method';\nexport const createDecodeAudioData = (audioBufferStore, cacheTestResult, createDataCloneError, createEncodingError, detachedArrayBuffers, getNativeContext, isNativeContext, testAudioBufferCopyChannelMethodsOutOfBoundsSupport, testPromiseSupport, wrapAudioBufferCopyChannelMethods, wrapAudioBufferCopyChannelMethodsOutOfBounds) => {\n    return (anyContext, audioData) => {\n        const nativeContext = isNativeContext(anyContext) ? anyContext : getNativeContext(anyContext);\n        // Bug #43: Only Chrome, Edge and Opera do throw a DataCloneError.\n        if (detachedArrayBuffers.has(audioData)) {\n            const err = createDataCloneError();\n            return Promise.reject(err);\n        }\n        // The audioData parameter maybe of a type which can't be added to a WeakSet.\n        try {\n            detachedArrayBuffers.add(audioData);\n        }\n        catch {\n            // Ignore errors.\n        }\n        // Bug #21: Safari does not support promises yet.\n        if (cacheTestResult(testPromiseSupport, () => testPromiseSupport(nativeContext))) {\n            return nativeContext.decodeAudioData(audioData).then((audioBuffer) => {\n                // Bug #157: Firefox does not allow the bufferOffset to be out-of-bounds.\n                if (!cacheTestResult(testAudioBufferCopyChannelMethodsOutOfBoundsSupport, () => testAudioBufferCopyChannelMethodsOutOfBoundsSupport(audioBuffer))) {\n                    wrapAudioBufferCopyChannelMethodsOutOfBounds(audioBuffer);\n                }\n                audioBufferStore.add(audioBuffer);\n                return audioBuffer;\n            });\n        }\n        // Bug #21: Safari does not return a Promise yet.\n        return new Promise((resolve, reject) => {\n            const complete = () => {\n                // Bug #133: Safari does neuter the ArrayBuffer.\n                try {\n                    detachArrayBuffer(audioData);\n                }\n                catch {\n                    // Ignore errors.\n                }\n            };\n            const fail = (err) => {\n                reject(err);\n                complete();\n            };\n            // Bug #26: Safari throws a synchronous error.\n            try {\n                // Bug #1: Safari requires a successCallback.\n                nativeContext.decodeAudioData(audioData, (audioBuffer) => {\n                    // Bug #5: Safari does not support copyFromChannel() and copyToChannel().\n                    // Bug #100: Safari does throw a wrong error when calling getChannelData() with an out-of-bounds value.\n                    if (typeof audioBuffer.copyFromChannel !== 'function') {\n                        wrapAudioBufferCopyChannelMethods(audioBuffer);\n                        wrapAudioBufferGetChannelDataMethod(audioBuffer);\n                    }\n                    audioBufferStore.add(audioBuffer);\n                    complete();\n                    resolve(audioBuffer);\n                }, (err) => {\n                    // Bug #4: Safari returns null instead of an error.\n                    if (err === null) {\n                        fail(createEncodingError());\n                    }\n                    else {\n                        fail(err);\n                    }\n                });\n            }\n            catch (err) {\n                fail(err);\n            }\n        });\n    };\n};\n//# sourceMappingURL=decode-audio-data.js.map","import { isAudioNodeOutputConnection } from '../guards/audio-node-output-connection';\nexport const createDecrementCycleCounter = (connectNativeAudioNodeToNativeAudioNode, cycleCounters, getAudioNodeConnections, getNativeAudioNode, getNativeAudioParam, getNativeContext, isActiveAudioNode, isNativeOfflineAudioContext) => {\n    return (audioNode, count) => {\n        const cycleCounter = cycleCounters.get(audioNode);\n        if (cycleCounter === undefined) {\n            throw new Error('Missing the expected cycle count.');\n        }\n        const nativeContext = getNativeContext(audioNode.context);\n        const isOffline = isNativeOfflineAudioContext(nativeContext);\n        if (cycleCounter === count) {\n            cycleCounters.delete(audioNode);\n            if (!isOffline && isActiveAudioNode(audioNode)) {\n                const nativeSourceAudioNode = getNativeAudioNode(audioNode);\n                const { outputs } = getAudioNodeConnections(audioNode);\n                for (const output of outputs) {\n                    if (isAudioNodeOutputConnection(output)) {\n                        const nativeDestinationAudioNode = getNativeAudioNode(output[0]);\n                        connectNativeAudioNodeToNativeAudioNode(nativeSourceAudioNode, nativeDestinationAudioNode, output[1], output[2]);\n                    }\n                    else {\n                        const nativeDestinationAudioParam = getNativeAudioParam(output[0]);\n                        nativeSourceAudioNode.connect(nativeDestinationAudioParam, output[1]);\n                    }\n                }\n            }\n        }\n        else {\n            cycleCounters.set(audioNode, cycleCounter - count);\n        }\n    };\n};\n//# sourceMappingURL=decrement-cycle-counter.js.map","const DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    delayTime: 0,\n    maxDelayTime: 1\n};\nexport const createDelayNodeConstructor = (audioNodeConstructor, createAudioParam, createDelayNodeRenderer, createNativeDelayNode, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime) => {\n    return class DelayNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeDelayNode = createNativeDelayNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const delayNodeRenderer = (isOffline ? createDelayNodeRenderer(mergedOptions.maxDelayTime) : null);\n            super(context, false, nativeDelayNode, delayNodeRenderer);\n            this._delayTime = createAudioParam(this, isOffline, nativeDelayNode.delayTime);\n            setAudioNodeTailTime(this, mergedOptions.maxDelayTime);\n        }\n        get delayTime() {\n            return this._delayTime;\n        }\n    };\n};\n//# sourceMappingURL=delay-node-constructor.js.map","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createDelayNodeRendererFactory = (connectAudioParam, createNativeDelayNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) => {\n    return (maxDelayTime) => {\n        const renderedNativeDelayNodes = new WeakMap();\n        const createDelayNode = async (proxy, nativeOfflineAudioContext, trace) => {\n            let nativeDelayNode = getNativeAudioNode(proxy);\n            // If the initially used nativeDelayNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeDelayNodeIsOwnedByContext = isOwnedByContext(nativeDelayNode, nativeOfflineAudioContext);\n            if (!nativeDelayNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeDelayNode.channelCount,\n                    channelCountMode: nativeDelayNode.channelCountMode,\n                    channelInterpretation: nativeDelayNode.channelInterpretation,\n                    delayTime: nativeDelayNode.delayTime.value,\n                    maxDelayTime\n                };\n                nativeDelayNode = createNativeDelayNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeDelayNodes.set(nativeOfflineAudioContext, nativeDelayNode);\n            if (!nativeDelayNodeIsOwnedByContext) {\n                await renderAutomation(nativeOfflineAudioContext, proxy.delayTime, nativeDelayNode.delayTime, trace);\n            }\n            else {\n                await connectAudioParam(nativeOfflineAudioContext, proxy.delayTime, nativeDelayNode.delayTime, trace);\n            }\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeDelayNode, trace);\n            return nativeDelayNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext, trace) {\n                const renderedNativeDelayNode = renderedNativeDelayNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeDelayNode !== undefined) {\n                    return Promise.resolve(renderedNativeDelayNode);\n                }\n                return createDelayNode(proxy, nativeOfflineAudioContext, trace);\n            }\n        };\n    };\n};\n//# sourceMappingURL=delay-node-renderer-factory.js.map","export const createDeleteActiveInputConnectionToAudioNode = (pickElementFromSet) => {\n    return (activeInputs, source, output, input) => {\n        return pickElementFromSet(activeInputs[input], (activeInputConnection) => activeInputConnection[0] === source && activeInputConnection[1] === output);\n    };\n};\n//# sourceMappingURL=delete-active-input-connection-to-audio-node.js.map","export const createDeleteUnrenderedAudioWorkletNode = (getUnrenderedAudioWorkletNodes) => {\n    return (nativeContext, audioWorkletNode) => {\n        getUnrenderedAudioWorkletNodes(nativeContext).delete(audioWorkletNode);\n    };\n};\n//# sourceMappingURL=delete-unrendered-audio-worklet-node.js.map","export const isDelayNode = (audioNode) => {\n    return 'delayTime' in audioNode;\n};\n//# sourceMappingURL=delay-node.js.map","import { isAudioNode } from '../guards/audio-node';\nimport { isDelayNode } from '../guards/delay-node';\nexport const createDetectCycles = (audioParamAudioNodeStore, getAudioNodeConnections, getValueForKey) => {\n    return function detectCycles(chain, nextLink) {\n        const audioNode = isAudioNode(nextLink) ? nextLink : getValueForKey(audioParamAudioNodeStore, nextLink);\n        if (isDelayNode(audioNode)) {\n            return [];\n        }\n        if (chain[0] === audioNode) {\n            return [chain];\n        }\n        if (chain.includes(audioNode)) {\n            return [];\n        }\n        const { outputs } = getAudioNodeConnections(audioNode);\n        return Array.from(outputs)\n            .map((outputConnection) => detectCycles([...chain, audioNode], outputConnection[0]))\n            .reduce((mergedCycles, nestedCycles) => mergedCycles.concat(nestedCycles), []);\n    };\n};\n//# sourceMappingURL=detect-cycles.js.map","import { isNativeAudioNode } from '../guards/native-audio-node';\nconst getOutputAudioNodeAtIndex = (createIndexSizeError, outputAudioNodes, output) => {\n    const outputAudioNode = outputAudioNodes[output];\n    if (outputAudioNode === undefined) {\n        throw createIndexSizeError();\n    }\n    return outputAudioNode;\n};\nexport const createDisconnectMultipleOutputs = (createIndexSizeError) => {\n    return (outputAudioNodes, destinationOrOutput = undefined, output = undefined, input = 0) => {\n        if (destinationOrOutput === undefined) {\n            return outputAudioNodes.forEach((outputAudioNode) => outputAudioNode.disconnect());\n        }\n        if (typeof destinationOrOutput === 'number') {\n            return getOutputAudioNodeAtIndex(createIndexSizeError, outputAudioNodes, destinationOrOutput).disconnect();\n        }\n        if (isNativeAudioNode(destinationOrOutput)) {\n            if (output === undefined) {\n                return outputAudioNodes.forEach((outputAudioNode) => outputAudioNode.disconnect(destinationOrOutput));\n            }\n            if (input === undefined) {\n                return getOutputAudioNodeAtIndex(createIndexSizeError, outputAudioNodes, output).disconnect(destinationOrOutput, 0);\n            }\n            return getOutputAudioNodeAtIndex(createIndexSizeError, outputAudioNodes, output).disconnect(destinationOrOutput, 0, input);\n        }\n        if (output === undefined) {\n            return outputAudioNodes.forEach((outputAudioNode) => outputAudioNode.disconnect(destinationOrOutput));\n        }\n        return getOutputAudioNodeAtIndex(createIndexSizeError, outputAudioNodes, output).disconnect(destinationOrOutput, 0);\n    };\n};\n//# sourceMappingURL=disconnect-multiple-outputs.js.map","const DEFAULT_OPTIONS = {\n    attack: 0.003,\n    channelCount: 2,\n    channelCountMode: 'clamped-max',\n    channelInterpretation: 'speakers',\n    knee: 30,\n    ratio: 12,\n    release: 0.25,\n    threshold: -24\n};\nexport const createDynamicsCompressorNodeConstructor = (audioNodeConstructor, createAudioParam, createDynamicsCompressorNodeRenderer, createNativeDynamicsCompressorNode, createNotSupportedError, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime) => {\n    return class DynamicsCompressorNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeDynamicsCompressorNode = createNativeDynamicsCompressorNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const dynamicsCompressorNodeRenderer = (isOffline ? createDynamicsCompressorNodeRenderer() : null);\n            super(context, false, nativeDynamicsCompressorNode, dynamicsCompressorNodeRenderer);\n            this._attack = createAudioParam(this, isOffline, nativeDynamicsCompressorNode.attack);\n            this._knee = createAudioParam(this, isOffline, nativeDynamicsCompressorNode.knee);\n            this._nativeDynamicsCompressorNode = nativeDynamicsCompressorNode;\n            this._ratio = createAudioParam(this, isOffline, nativeDynamicsCompressorNode.ratio);\n            this._release = createAudioParam(this, isOffline, nativeDynamicsCompressorNode.release);\n            this._threshold = createAudioParam(this, isOffline, nativeDynamicsCompressorNode.threshold);\n            setAudioNodeTailTime(this, 0.006);\n        }\n        get attack() {\n            return this._attack;\n        }\n        // Bug #108: Safari allows a channelCount of three and above which is why the getter and setter needs to be overwritten here.\n        get channelCount() {\n            return this._nativeDynamicsCompressorNode.channelCount;\n        }\n        set channelCount(value) {\n            const previousChannelCount = this._nativeDynamicsCompressorNode.channelCount;\n            this._nativeDynamicsCompressorNode.channelCount = value;\n            if (value > 2) {\n                this._nativeDynamicsCompressorNode.channelCount = previousChannelCount;\n                throw createNotSupportedError();\n            }\n        }\n        /*\n         * Bug #109: Only Chrome, Firefox and Opera disallow a channelCountMode of 'max' yet which is why the getter and setter needs to be\n         * overwritten here.\n         */\n        get channelCountMode() {\n            return this._nativeDynamicsCompressorNode.channelCountMode;\n        }\n        set channelCountMode(value) {\n            const previousChannelCount = this._nativeDynamicsCompressorNode.channelCountMode;\n            this._nativeDynamicsCompressorNode.channelCountMode = value;\n            if (value === 'max') {\n                this._nativeDynamicsCompressorNode.channelCountMode = previousChannelCount;\n                throw createNotSupportedError();\n            }\n        }\n        get knee() {\n            return this._knee;\n        }\n        get ratio() {\n            return this._ratio;\n        }\n        get reduction() {\n            // Bug #111: Safari returns an AudioParam instead of a number.\n            if (typeof this._nativeDynamicsCompressorNode.reduction.value === 'number') {\n                return this._nativeDynamicsCompressorNode.reduction.value;\n            }\n            return this._nativeDynamicsCompressorNode.reduction;\n        }\n        get release() {\n            return this._release;\n        }\n        get threshold() {\n            return this._threshold;\n        }\n    };\n};\n//# sourceMappingURL=dynamics-compressor-node-constructor.js.map","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createDynamicsCompressorNodeRendererFactory = (connectAudioParam, createNativeDynamicsCompressorNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeDynamicsCompressorNodes = new WeakMap();\n        const createDynamicsCompressorNode = async (proxy, nativeOfflineAudioContext, trace) => {\n            let nativeDynamicsCompressorNode = getNativeAudioNode(proxy);\n            /*\n             * If the initially used nativeDynamicsCompressorNode was not constructed on the same OfflineAudioContext it needs to be\n             * created again.\n             */\n            const nativeDynamicsCompressorNodeIsOwnedByContext = isOwnedByContext(nativeDynamicsCompressorNode, nativeOfflineAudioContext);\n            if (!nativeDynamicsCompressorNodeIsOwnedByContext) {\n                const options = {\n                    attack: nativeDynamicsCompressorNode.attack.value,\n                    channelCount: nativeDynamicsCompressorNode.channelCount,\n                    channelCountMode: nativeDynamicsCompressorNode.channelCountMode,\n                    channelInterpretation: nativeDynamicsCompressorNode.channelInterpretation,\n                    knee: nativeDynamicsCompressorNode.knee.value,\n                    ratio: nativeDynamicsCompressorNode.ratio.value,\n                    release: nativeDynamicsCompressorNode.release.value,\n                    threshold: nativeDynamicsCompressorNode.threshold.value\n                };\n                nativeDynamicsCompressorNode = createNativeDynamicsCompressorNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeDynamicsCompressorNodes.set(nativeOfflineAudioContext, nativeDynamicsCompressorNode);\n            if (!nativeDynamicsCompressorNodeIsOwnedByContext) {\n                await renderAutomation(nativeOfflineAudioContext, proxy.attack, nativeDynamicsCompressorNode.attack, trace);\n                await renderAutomation(nativeOfflineAudioContext, proxy.knee, nativeDynamicsCompressorNode.knee, trace);\n                await renderAutomation(nativeOfflineAudioContext, proxy.ratio, nativeDynamicsCompressorNode.ratio, trace);\n                await renderAutomation(nativeOfflineAudioContext, proxy.release, nativeDynamicsCompressorNode.release, trace);\n                await renderAutomation(nativeOfflineAudioContext, proxy.threshold, nativeDynamicsCompressorNode.threshold, trace);\n            }\n            else {\n                await connectAudioParam(nativeOfflineAudioContext, proxy.attack, nativeDynamicsCompressorNode.attack, trace);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.knee, nativeDynamicsCompressorNode.knee, trace);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.ratio, nativeDynamicsCompressorNode.ratio, trace);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.release, nativeDynamicsCompressorNode.release, trace);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.threshold, nativeDynamicsCompressorNode.threshold, trace);\n            }\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeDynamicsCompressorNode, trace);\n            return nativeDynamicsCompressorNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext, trace) {\n                const renderedNativeDynamicsCompressorNode = renderedNativeDynamicsCompressorNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeDynamicsCompressorNode !== undefined) {\n                    return Promise.resolve(renderedNativeDynamicsCompressorNode);\n                }\n                return createDynamicsCompressorNode(proxy, nativeOfflineAudioContext, trace);\n            }\n        };\n    };\n};\n//# sourceMappingURL=dynamics-compressor-node-renderer-factory.js.map","export const createEncodingError = () => new DOMException('', 'EncodingError');\n//# sourceMappingURL=encoding-error.js.map","export const createEvaluateSource = (window) => {\n    return (source) => new Promise((resolve, reject) => {\n        if (window === null) {\n            // Bug #182 Chrome, Edge and Opera do throw an instance of a SyntaxError instead of a DOMException.\n            reject(new SyntaxError());\n            return;\n        }\n        const head = window.document.head;\n        if (head === null) {\n            // Bug #182 Chrome, Edge and Opera do throw an instance of a SyntaxError instead of a DOMException.\n            reject(new SyntaxError());\n        }\n        else {\n            const script = window.document.createElement('script');\n            // @todo Safari doesn't like URLs with a type of 'application/javascript; charset=utf-8'.\n            const blob = new Blob([source], { type: 'application/javascript' });\n            const url = URL.createObjectURL(blob);\n            const originalOnErrorHandler = window.onerror;\n            const removeErrorEventListenerAndRevokeUrl = () => {\n                window.onerror = originalOnErrorHandler;\n                URL.revokeObjectURL(url);\n            };\n            window.onerror = (message, src, lineno, colno, error) => {\n                // @todo Edge thinks the source is the one of the html document.\n                if (src === url || (src === window.location.href && lineno === 1 && colno === 1)) {\n                    removeErrorEventListenerAndRevokeUrl();\n                    reject(error);\n                    return false;\n                }\n                if (originalOnErrorHandler !== null) {\n                    return originalOnErrorHandler(message, src, lineno, colno, error);\n                }\n            };\n            script.onerror = () => {\n                removeErrorEventListenerAndRevokeUrl();\n                // Bug #182 Chrome, Edge and Opera do throw an instance of a SyntaxError instead of a DOMException.\n                reject(new SyntaxError());\n            };\n            script.onload = () => {\n                removeErrorEventListenerAndRevokeUrl();\n                resolve();\n            };\n            script.src = url;\n            script.type = 'module';\n            head.appendChild(script);\n        }\n    });\n};\n//# sourceMappingURL=evaluate-source.js.map","export const createEventTargetConstructor = (wrapEventListener) => {\n    return class EventTarget {\n        constructor(_nativeEventTarget) {\n            this._nativeEventTarget = _nativeEventTarget;\n            this._listeners = new WeakMap();\n        }\n        addEventListener(type, listener, options) {\n            if (listener !== null) {\n                let wrappedEventListener = this._listeners.get(listener);\n                if (wrappedEventListener === undefined) {\n                    wrappedEventListener = wrapEventListener(this, listener);\n                    if (typeof listener === 'function') {\n                        this._listeners.set(listener, wrappedEventListener);\n                    }\n                }\n                this._nativeEventTarget.addEventListener(type, wrappedEventListener, options);\n            }\n        }\n        dispatchEvent(event) {\n            return this._nativeEventTarget.dispatchEvent(event);\n        }\n        removeEventListener(type, listener, options) {\n            const wrappedEventListener = listener === null ? undefined : this._listeners.get(listener);\n            this._nativeEventTarget.removeEventListener(type, wrappedEventListener === undefined ? null : wrappedEventListener, options);\n        }\n    };\n};\n//# sourceMappingURL=event-target-constructor.js.map","export const createExposeCurrentFrameAndCurrentTime = (window) => {\n    return (currentTime, sampleRate, fn) => {\n        Object.defineProperties(window, {\n            currentFrame: {\n                configurable: true,\n                get() {\n                    return Math.round(currentTime * sampleRate);\n                }\n            },\n            currentTime: {\n                configurable: true,\n                get() {\n                    return currentTime;\n                }\n            }\n        });\n        try {\n            return fn();\n        }\n        finally {\n            if (window !== null) {\n                delete window.currentFrame;\n                delete window.currentTime;\n            }\n        }\n    };\n};\n//# sourceMappingURL=expose-current-frame-and-current-time.js.map","export const createFetchSource = (createAbortError) => {\n    return async (url) => {\n        try {\n            const response = await fetch(url);\n            if (response.ok) {\n                return response.text();\n            }\n        }\n        catch {\n            // Ignore errors.\n        } // tslint:disable-line:no-empty\n        throw createAbortError();\n    };\n};\n//# sourceMappingURL=fetch-source.js.map","import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    gain: 1\n};\nexport const createGainNodeConstructor = (audioNodeConstructor, createAudioParam, createGainNodeRenderer, createNativeGainNode, getNativeContext, isNativeOfflineAudioContext) => {\n    return class GainNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeGainNode = createNativeGainNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const gainNodeRenderer = (isOffline ? createGainNodeRenderer() : null);\n            super(context, false, nativeGainNode, gainNodeRenderer);\n            // Bug #74: Safari does not export the correct values for maxValue and minValue.\n            this._gain = createAudioParam(this, isOffline, nativeGainNode.gain, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n        }\n        get gain() {\n            return this._gain;\n        }\n    };\n};\n//# sourceMappingURL=gain-node-constructor.js.map","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createGainNodeRendererFactory = (connectAudioParam, createNativeGainNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeGainNodes = new WeakMap();\n        const createGainNode = async (proxy, nativeOfflineAudioContext, trace) => {\n            let nativeGainNode = getNativeAudioNode(proxy);\n            // If the initially used nativeGainNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeGainNodeIsOwnedByContext = isOwnedByContext(nativeGainNode, nativeOfflineAudioContext);\n            if (!nativeGainNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeGainNode.channelCount,\n                    channelCountMode: nativeGainNode.channelCountMode,\n                    channelInterpretation: nativeGainNode.channelInterpretation,\n                    gain: nativeGainNode.gain.value\n                };\n                nativeGainNode = createNativeGainNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeGainNodes.set(nativeOfflineAudioContext, nativeGainNode);\n            if (!nativeGainNodeIsOwnedByContext) {\n                await renderAutomation(nativeOfflineAudioContext, proxy.gain, nativeGainNode.gain, trace);\n            }\n            else {\n                await connectAudioParam(nativeOfflineAudioContext, proxy.gain, nativeGainNode.gain, trace);\n            }\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeGainNode, trace);\n            return nativeGainNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext, trace) {\n                const renderedNativeGainNode = renderedNativeGainNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeGainNode !== undefined) {\n                    return Promise.resolve(renderedNativeGainNode);\n                }\n                return createGainNode(proxy, nativeOfflineAudioContext, trace);\n            }\n        };\n    };\n};\n//# sourceMappingURL=gain-node-renderer-factory.js.map","export const createGetActiveAudioWorkletNodeInputs = (activeAudioWorkletNodeInputsStore, getValueForKey) => {\n    return (nativeAudioWorkletNode) => getValueForKey(activeAudioWorkletNodeInputsStore, nativeAudioWorkletNode);\n};\n//# sourceMappingURL=get-active-audio-worklet-node-inputs.js.map","export const createGetAudioNodeRenderer = (getAudioNodeConnections) => {\n    return (audioNode) => {\n        const audioNodeConnections = getAudioNodeConnections(audioNode);\n        if (audioNodeConnections.renderer === null) {\n            throw new Error('Missing the renderer of the given AudioNode in the audio graph.');\n        }\n        return audioNodeConnections.renderer;\n    };\n};\n//# sourceMappingURL=get-audio-node-renderer.js.map","export const createGetAudioNodeTailTime = (audioNodeTailTimeStore) => {\n    return (audioNode) => { var _a; return (_a = audioNodeTailTimeStore.get(audioNode)) !== null && _a !== void 0 ? _a : 0; };\n};\n//# sourceMappingURL=get-audio-node-tail-time.js.map","export const createGetAudioParamRenderer = (getAudioParamConnections) => {\n    return (audioParam) => {\n        const audioParamConnections = getAudioParamConnections(audioParam);\n        if (audioParamConnections.renderer === null) {\n            throw new Error('Missing the renderer of the given AudioParam in the audio graph.');\n        }\n        return audioParamConnections.renderer;\n    };\n};\n//# sourceMappingURL=get-audio-param-renderer.js.map","export const createGetBackupOfflineAudioContext = (backupOfflineAudioContextStore) => {\n    return (nativeContext) => {\n        return backupOfflineAudioContextStore.get(nativeContext);\n    };\n};\n//# sourceMappingURL=get-backup-offline-audio-context.js.map","export const createInvalidStateError = () => new DOMException('', 'InvalidStateError');\n//# sourceMappingURL=invalid-state-error.js.map","import { createInvalidStateError } from './invalid-state-error';\nexport const createGetNativeContext = (contextStore) => {\n    return (context) => {\n        const nativeContext = contextStore.get(context);\n        if (nativeContext === undefined) {\n            throw createInvalidStateError();\n        }\n        return (nativeContext);\n    };\n};\n//# sourceMappingURL=get-native-context.js.map","export const createGetOrCreateBackupOfflineAudioContext = (backupOfflineAudioContextStore, nativeOfflineAudioContextConstructor) => {\n    return (nativeContext) => {\n        let backupOfflineAudioContext = backupOfflineAudioContextStore.get(nativeContext);\n        if (backupOfflineAudioContext !== undefined) {\n            return backupOfflineAudioContext;\n        }\n        if (nativeOfflineAudioContextConstructor === null) {\n            throw new Error('Missing the native OfflineAudioContext constructor.');\n        }\n        backupOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 8000);\n        backupOfflineAudioContextStore.set(nativeContext, backupOfflineAudioContext);\n        return backupOfflineAudioContext;\n    };\n};\n//# sourceMappingURL=get-or-create-backup-offline-audio-context.js.map","export const createGetUnrenderedAudioWorkletNodes = (unrenderedAudioWorkletNodeStore) => {\n    return (nativeContext) => {\n        const unrenderedAudioWorkletNodes = unrenderedAudioWorkletNodeStore.get(nativeContext);\n        if (unrenderedAudioWorkletNodes === undefined) {\n            throw new Error('The context has no set of AudioWorkletNodes.');\n        }\n        return unrenderedAudioWorkletNodes;\n    };\n};\n//# sourceMappingURL=get-unrendered-audio-worklet-nodes.js.map","export const createInvalidAccessError = () => new DOMException('', 'InvalidAccessError');\n//# sourceMappingURL=invalid-access-error.js.map","import { createInvalidAccessError } from '../factories/invalid-access-error';\nexport const wrapIIRFilterNodeGetFrequencyResponseMethod = (nativeIIRFilterNode) => {\n    nativeIIRFilterNode.getFrequencyResponse = ((getFrequencyResponse) => {\n        return (frequencyHz, magResponse, phaseResponse) => {\n            if (frequencyHz.length !== magResponse.length || magResponse.length !== phaseResponse.length) {\n                throw createInvalidAccessError();\n            }\n            return getFrequencyResponse.call(nativeIIRFilterNode, frequencyHz, magResponse, phaseResponse);\n        };\n    })(nativeIIRFilterNode.getFrequencyResponse);\n};\n//# sourceMappingURL=wrap-iir-filter-node-get-frequency-response-method.js.map","import { wrapIIRFilterNodeGetFrequencyResponseMethod } from '../helpers/wrap-iir-filter-node-get-frequency-response-method';\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers'\n};\nexport const createIIRFilterNodeConstructor = (audioNodeConstructor, createNativeIIRFilterNode, createIIRFilterNodeRenderer, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime) => {\n    return class IIRFilterNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeIIRFilterNode = createNativeIIRFilterNode(nativeContext, isOffline ? null : context.baseLatency, mergedOptions);\n            const iirFilterNodeRenderer = ((isOffline ? createIIRFilterNodeRenderer(mergedOptions.feedback, mergedOptions.feedforward) : null));\n            super(context, false, nativeIIRFilterNode, iirFilterNodeRenderer);\n            // Bug #23 & #24: FirefoxDeveloper does not throw an InvalidAccessError.\n            // @todo Write a test which allows other browsers to remain unpatched.\n            wrapIIRFilterNodeGetFrequencyResponseMethod(nativeIIRFilterNode);\n            this._nativeIIRFilterNode = nativeIIRFilterNode;\n            // @todo Determine a meaningful tail-time instead of just using one second.\n            setAudioNodeTailTime(this, 1);\n        }\n        getFrequencyResponse(frequencyHz, magResponse, phaseResponse) {\n            return this._nativeIIRFilterNode.getFrequencyResponse(frequencyHz, magResponse, phaseResponse);\n        }\n    };\n};\n//# sourceMappingURL=iir-filter-node-constructor.js.map","// This implementation as shamelessly inspired by source code of\n// tslint:disable-next-line:max-line-length\n// {@link https://chromium.googlesource.com/chromium/src.git/+/master/third_party/WebKit/Source/platform/audio/IIRFilter.cpp|Chromium's IIRFilter}.\nexport const filterBuffer = (feedback, feedbackLength, feedforward, feedforwardLength, minLength, xBuffer, yBuffer, bufferIndex, bufferLength, input, output) => {\n    const inputLength = input.length;\n    let i = bufferIndex;\n    for (let j = 0; j < inputLength; j += 1) {\n        let y = feedforward[0] * input[j];\n        for (let k = 1; k < minLength; k += 1) {\n            const x = (i - k) & (bufferLength - 1); // tslint:disable-line:no-bitwise\n            y += feedforward[k] * xBuffer[x];\n            y -= feedback[k] * yBuffer[x];\n        }\n        for (let k = minLength; k < feedforwardLength; k += 1) {\n            y += feedforward[k] * xBuffer[(i - k) & (bufferLength - 1)]; // tslint:disable-line:no-bitwise\n        }\n        for (let k = minLength; k < feedbackLength; k += 1) {\n            y -= feedback[k] * yBuffer[(i - k) & (bufferLength - 1)]; // tslint:disable-line:no-bitwise\n        }\n        xBuffer[i] = input[j];\n        yBuffer[i] = y;\n        i = (i + 1) & (bufferLength - 1); // tslint:disable-line:no-bitwise\n        output[j] = y;\n    }\n    return i;\n};\n//# sourceMappingURL=filter-buffer.js.map","import { filterBuffer } from '../helpers/filter-buffer';\nimport { isOwnedByContext } from '../helpers/is-owned-by-context';\nconst filterFullBuffer = (renderedBuffer, nativeOfflineAudioContext, feedback, feedforward) => {\n    const convertedFeedback = feedback instanceof Float64Array ? feedback : new Float64Array(feedback);\n    const convertedFeedforward = feedforward instanceof Float64Array ? feedforward : new Float64Array(feedforward);\n    const feedbackLength = convertedFeedback.length;\n    const feedforwardLength = convertedFeedforward.length;\n    const minLength = Math.min(feedbackLength, feedforwardLength);\n    if (convertedFeedback[0] !== 1) {\n        for (let i = 0; i < feedbackLength; i += 1) {\n            convertedFeedforward[i] /= convertedFeedback[0];\n        }\n        for (let i = 1; i < feedforwardLength; i += 1) {\n            convertedFeedback[i] /= convertedFeedback[0];\n        }\n    }\n    const bufferLength = 32;\n    const xBuffer = new Float32Array(bufferLength);\n    const yBuffer = new Float32Array(bufferLength);\n    const filteredBuffer = nativeOfflineAudioContext.createBuffer(renderedBuffer.numberOfChannels, renderedBuffer.length, renderedBuffer.sampleRate);\n    const numberOfChannels = renderedBuffer.numberOfChannels;\n    for (let i = 0; i < numberOfChannels; i += 1) {\n        const input = renderedBuffer.getChannelData(i);\n        const output = filteredBuffer.getChannelData(i);\n        xBuffer.fill(0);\n        yBuffer.fill(0);\n        filterBuffer(convertedFeedback, feedbackLength, convertedFeedforward, feedforwardLength, minLength, xBuffer, yBuffer, 0, bufferLength, input, output);\n    }\n    return filteredBuffer;\n};\nexport const createIIRFilterNodeRendererFactory = (createNativeAudioBufferSourceNode, getNativeAudioNode, nativeOfflineAudioContextConstructor, renderInputsOfAudioNode, renderNativeOfflineAudioContext) => {\n    return (feedback, feedforward) => {\n        const renderedNativeAudioNodes = new WeakMap();\n        let filteredBufferPromise = null;\n        const createAudioNode = async (proxy, nativeOfflineAudioContext, trace) => {\n            let nativeAudioBufferSourceNode = null;\n            let nativeIIRFilterNode = getNativeAudioNode(proxy);\n            // If the initially used nativeIIRFilterNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeIIRFilterNodeIsOwnedByContext = isOwnedByContext(nativeIIRFilterNode, nativeOfflineAudioContext);\n            // Bug #9: Safari does not support IIRFilterNodes.\n            if (nativeOfflineAudioContext.createIIRFilter === undefined) {\n                nativeAudioBufferSourceNode = createNativeAudioBufferSourceNode(nativeOfflineAudioContext, {\n                    buffer: null,\n                    channelCount: 2,\n                    channelCountMode: 'max',\n                    channelInterpretation: 'speakers',\n                    loop: false,\n                    loopEnd: 0,\n                    loopStart: 0,\n                    playbackRate: 1\n                });\n            }\n            else if (!nativeIIRFilterNodeIsOwnedByContext) {\n                // @todo TypeScript defines the parameters of createIIRFilter() as arrays of numbers.\n                nativeIIRFilterNode = nativeOfflineAudioContext.createIIRFilter(feedforward, feedback);\n            }\n            renderedNativeAudioNodes.set(nativeOfflineAudioContext, nativeAudioBufferSourceNode === null ? nativeIIRFilterNode : nativeAudioBufferSourceNode);\n            if (nativeAudioBufferSourceNode !== null) {\n                if (filteredBufferPromise === null) {\n                    if (nativeOfflineAudioContextConstructor === null) {\n                        throw new Error('Missing the native OfflineAudioContext constructor.');\n                    }\n                    const partialOfflineAudioContext = new nativeOfflineAudioContextConstructor(\n                    // Bug #47: The AudioDestinationNode in Safari gets not initialized correctly.\n                    proxy.context.destination.channelCount, \n                    // Bug #17: Safari does not yet expose the length.\n                    proxy.context.length, nativeOfflineAudioContext.sampleRate);\n                    filteredBufferPromise = (async () => {\n                        await renderInputsOfAudioNode(proxy, partialOfflineAudioContext, partialOfflineAudioContext.destination, trace);\n                        const renderedBuffer = await renderNativeOfflineAudioContext(partialOfflineAudioContext);\n                        return filterFullBuffer(renderedBuffer, nativeOfflineAudioContext, feedback, feedforward);\n                    })();\n                }\n                const filteredBuffer = await filteredBufferPromise;\n                nativeAudioBufferSourceNode.buffer = filteredBuffer;\n                nativeAudioBufferSourceNode.start(0);\n                return nativeAudioBufferSourceNode;\n            }\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeIIRFilterNode, trace);\n            return nativeIIRFilterNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext, trace) {\n                const renderedNativeAudioNode = renderedNativeAudioNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeAudioNode !== undefined) {\n                    return Promise.resolve(renderedNativeAudioNode);\n                }\n                return createAudioNode(proxy, nativeOfflineAudioContext, trace);\n            }\n        };\n    };\n};\n//# sourceMappingURL=iir-filter-node-renderer-factory.js.map","import { isAudioNodeOutputConnection } from '../guards/audio-node-output-connection';\nexport const createIncrementCycleCounterFactory = (cycleCounters, disconnectNativeAudioNodeFromNativeAudioNode, getAudioNodeConnections, getNativeAudioNode, getNativeAudioParam, isActiveAudioNode) => {\n    return (isOffline) => {\n        return (audioNode, count) => {\n            const cycleCounter = cycleCounters.get(audioNode);\n            if (cycleCounter === undefined) {\n                if (!isOffline && isActiveAudioNode(audioNode)) {\n                    const nativeSourceAudioNode = getNativeAudioNode(audioNode);\n                    const { outputs } = getAudioNodeConnections(audioNode);\n                    for (const output of outputs) {\n                        if (isAudioNodeOutputConnection(output)) {\n                            const nativeDestinationAudioNode = getNativeAudioNode(output[0]);\n                            disconnectNativeAudioNodeFromNativeAudioNode(nativeSourceAudioNode, nativeDestinationAudioNode, output[1], output[2]);\n                        }\n                        else {\n                            const nativeDestinationAudioParam = getNativeAudioParam(output[0]);\n                            nativeSourceAudioNode.disconnect(nativeDestinationAudioParam, output[1]);\n                        }\n                    }\n                }\n                cycleCounters.set(audioNode, count);\n            }\n            else {\n                cycleCounters.set(audioNode, cycleCounter + count);\n            }\n        };\n    };\n};\n//# sourceMappingURL=increment-cycle-counter-factory.js.map","export const createIsAnyAudioContext = (contextStore, isNativeAudioContext) => {\n    return (anything) => {\n        const nativeContext = contextStore.get(anything);\n        return isNativeAudioContext(nativeContext) || isNativeAudioContext(anything);\n    };\n};\n//# sourceMappingURL=is-any-audio-context.js.map","export const createIsAnyAudioNode = (audioNodeStore, isNativeAudioNode) => {\n    return (anything) => audioNodeStore.has(anything) || isNativeAudioNode(anything);\n};\n//# sourceMappingURL=is-any-audio-node.js.map","export const createIsAnyAudioParam = (audioParamStore, isNativeAudioParam) => {\n    return (anything) => audioParamStore.has(anything) || isNativeAudioParam(anything);\n};\n//# sourceMappingURL=is-any-audio-param.js.map","export const createIsAnyOfflineAudioContext = (contextStore, isNativeOfflineAudioContext) => {\n    return (anything) => {\n        const nativeContext = contextStore.get(anything);\n        return isNativeOfflineAudioContext(nativeContext) || isNativeOfflineAudioContext(anything);\n    };\n};\n//# sourceMappingURL=is-any-offline-audio-context.js.map","export const createIsNativeAudioContext = (nativeAudioContextConstructor) => {\n    return (anything) => {\n        return nativeAudioContextConstructor !== null && anything instanceof nativeAudioContextConstructor;\n    };\n};\n//# sourceMappingURL=is-native-audio-context.js.map","export const createIsNativeAudioNode = (window) => {\n    return (anything) => {\n        return window !== null && typeof window.AudioNode === 'function' && anything instanceof window.AudioNode;\n    };\n};\n//# sourceMappingURL=is-native-audio-node.js.map","export const createIsNativeAudioParam = (window) => {\n    return (anything) => {\n        return window !== null && typeof window.AudioParam === 'function' && anything instanceof window.AudioParam;\n    };\n};\n//# sourceMappingURL=is-native-audio-param.js.map","export const createIsNativeContext = (isNativeAudioContext, isNativeOfflineAudioContext) => {\n    return (anything) => {\n        return isNativeAudioContext(anything) || isNativeOfflineAudioContext(anything);\n    };\n};\n//# sourceMappingURL=is-native-context.js.map","export const createIsNativeOfflineAudioContext = (nativeOfflineAudioContextConstructor) => {\n    return (anything) => {\n        return nativeOfflineAudioContextConstructor !== null && anything instanceof nativeOfflineAudioContextConstructor;\n    };\n};\n//# sourceMappingURL=is-native-offline-audio-context.js.map","export const createIsSecureContext = (window) => window !== null && window.isSecureContext;\n//# sourceMappingURL=is-secure-context.js.map","export const createMediaElementAudioSourceNodeConstructor = (audioNodeConstructor, createNativeMediaElementAudioSourceNode, getNativeContext, isNativeOfflineAudioContext) => {\n    return class MediaElementAudioSourceNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const nativeMediaElementAudioSourceNode = createNativeMediaElementAudioSourceNode(nativeContext, options);\n            // Bug #171: Safari allows to create a MediaElementAudioSourceNode with an OfflineAudioContext.\n            if (isNativeOfflineAudioContext(nativeContext)) {\n                throw TypeError();\n            }\n            super(context, true, nativeMediaElementAudioSourceNode, null);\n            this._nativeMediaElementAudioSourceNode = nativeMediaElementAudioSourceNode;\n        }\n        get mediaElement() {\n            return this._nativeMediaElementAudioSourceNode.mediaElement;\n        }\n    };\n};\n//# sourceMappingURL=media-element-audio-source-node-constructor.js.map","const DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'explicit',\n    channelInterpretation: 'speakers'\n};\nexport const createMediaStreamAudioDestinationNodeConstructor = (audioNodeConstructor, createNativeMediaStreamAudioDestinationNode, getNativeContext, isNativeOfflineAudioContext) => {\n    return class MediaStreamAudioDestinationNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            // Bug #173: Safari allows to create a MediaStreamAudioDestinationNode with an OfflineAudioContext.\n            if (isNativeOfflineAudioContext(nativeContext)) {\n                throw new TypeError();\n            }\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeMediaStreamAudioDestinationNode = createNativeMediaStreamAudioDestinationNode(nativeContext, mergedOptions);\n            super(context, false, nativeMediaStreamAudioDestinationNode, null);\n            this._nativeMediaStreamAudioDestinationNode = nativeMediaStreamAudioDestinationNode;\n        }\n        get stream() {\n            return this._nativeMediaStreamAudioDestinationNode.stream;\n        }\n    };\n};\n//# sourceMappingURL=media-stream-audio-destination-node-constructor.js.map","export const createMediaStreamAudioSourceNodeConstructor = (audioNodeConstructor, createNativeMediaStreamAudioSourceNode, getNativeContext, isNativeOfflineAudioContext) => {\n    return class MediaStreamAudioSourceNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const nativeMediaStreamAudioSourceNode = createNativeMediaStreamAudioSourceNode(nativeContext, options);\n            // Bug #172: Safari allows to create a MediaStreamAudioSourceNode with an OfflineAudioContext.\n            if (isNativeOfflineAudioContext(nativeContext)) {\n                throw new TypeError();\n            }\n            super(context, true, nativeMediaStreamAudioSourceNode, null);\n            this._nativeMediaStreamAudioSourceNode = nativeMediaStreamAudioSourceNode;\n        }\n        get mediaStream() {\n            return this._nativeMediaStreamAudioSourceNode.mediaStream;\n        }\n    };\n};\n//# sourceMappingURL=media-stream-audio-source-node-constructor.js.map","export const createMediaStreamTrackAudioSourceNodeConstructor = (audioNodeConstructor, createNativeMediaStreamTrackAudioSourceNode, getNativeContext) => {\n    return class MediaStreamTrackAudioSourceNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const nativeMediaStreamTrackAudioSourceNode = createNativeMediaStreamTrackAudioSourceNode(nativeContext, options);\n            super(context, true, nativeMediaStreamTrackAudioSourceNode, null);\n        }\n    };\n};\n//# sourceMappingURL=media-stream-track-audio-source-node-constructor.js.map","import { deactivateAudioGraph } from '../helpers/deactivate-audio-graph';\nimport { isValidLatencyHint } from '../helpers/is-valid-latency-hint';\nexport const createMinimalAudioContextConstructor = (createInvalidStateError, createNotSupportedError, createUnknownError, minimalBaseAudioContextConstructor, nativeAudioContextConstructor) => {\n    return class MinimalAudioContext extends minimalBaseAudioContextConstructor {\n        constructor(options = {}) {\n            if (nativeAudioContextConstructor === null) {\n                throw new Error('Missing the native AudioContext constructor.');\n            }\n            const nativeAudioContext = new nativeAudioContextConstructor(options);\n            // Bug #131 Safari returns null when there are four other AudioContexts running already.\n            if (nativeAudioContext === null) {\n                throw createUnknownError();\n            }\n            // Bug #51 Only Chrome Edge, and Opera throw an error if the given latencyHint is invalid.\n            if (!isValidLatencyHint(options.latencyHint)) {\n                throw new TypeError(`The provided value '${options.latencyHint}' is not a valid enum value of type AudioContextLatencyCategory.`);\n            }\n            // Bug #150 Safari does not support setting the sampleRate.\n            if (options.sampleRate !== undefined && nativeAudioContext.sampleRate !== options.sampleRate) {\n                throw createNotSupportedError();\n            }\n            super(nativeAudioContext, 2);\n            const { latencyHint } = options;\n            const { sampleRate } = nativeAudioContext;\n            // @todo The values for 'balanced', 'interactive' and 'playback' are just copied from Chrome's implementation.\n            this._baseLatency =\n                typeof nativeAudioContext.baseLatency === 'number'\n                    ? nativeAudioContext.baseLatency\n                    : latencyHint === 'balanced'\n                        ? 512 / sampleRate\n                        : latencyHint === 'interactive' || latencyHint === undefined\n                            ? 256 / sampleRate\n                            : latencyHint === 'playback'\n                                ? 1024 / sampleRate\n                                : /*\n                                   * @todo The min (256) and max (16384) values are taken from the allowed bufferSize values of a\n                                   * ScriptProcessorNode.\n                                   */\n                                    (Math.max(2, Math.min(128, Math.round((latencyHint * sampleRate) / 128))) * 128) / sampleRate;\n            this._nativeAudioContext = nativeAudioContext;\n            // Bug #188: Safari will set the context's state to 'interrupted' in case the user switches tabs.\n            if (nativeAudioContextConstructor.name === 'webkitAudioContext') {\n                this._nativeGainNode = nativeAudioContext.createGain();\n                this._nativeOscillatorNode = nativeAudioContext.createOscillator();\n                this._nativeGainNode.gain.value = 1e-37;\n                this._nativeOscillatorNode.connect(this._nativeGainNode).connect(nativeAudioContext.destination);\n                this._nativeOscillatorNode.start();\n            }\n            else {\n                this._nativeGainNode = null;\n                this._nativeOscillatorNode = null;\n            }\n            this._state = null;\n            /*\n             * Bug #34: Chrome, Edge and Opera pretend to be running right away, but fire an onstatechange event when the state actually\n             * changes to 'running'.\n             */\n            if (nativeAudioContext.state === 'running') {\n                this._state = 'suspended';\n                const revokeState = () => {\n                    if (this._state === 'suspended') {\n                        this._state = null;\n                    }\n                    nativeAudioContext.removeEventListener('statechange', revokeState);\n                };\n                nativeAudioContext.addEventListener('statechange', revokeState);\n            }\n        }\n        get baseLatency() {\n            return this._baseLatency;\n        }\n        get state() {\n            return this._state !== null ? this._state : this._nativeAudioContext.state;\n        }\n        close() {\n            // Bug #35: Firefox does not throw an error if the AudioContext was closed before.\n            if (this.state === 'closed') {\n                return this._nativeAudioContext.close().then(() => {\n                    throw createInvalidStateError();\n                });\n            }\n            // Bug #34: If the state was set to suspended before it should be revoked now.\n            if (this._state === 'suspended') {\n                this._state = null;\n            }\n            return this._nativeAudioContext.close().then(() => {\n                if (this._nativeGainNode !== null && this._nativeOscillatorNode !== null) {\n                    this._nativeOscillatorNode.stop();\n                    this._nativeGainNode.disconnect();\n                    this._nativeOscillatorNode.disconnect();\n                }\n                deactivateAudioGraph(this);\n            });\n        }\n        resume() {\n            if (this._state === 'suspended') {\n                return new Promise((resolve, reject) => {\n                    const resolvePromise = () => {\n                        this._nativeAudioContext.removeEventListener('statechange', resolvePromise);\n                        if (this._nativeAudioContext.state === 'running') {\n                            resolve();\n                        }\n                        else {\n                            this.resume().then(resolve, reject);\n                        }\n                    };\n                    this._nativeAudioContext.addEventListener('statechange', resolvePromise);\n                });\n            }\n            return this._nativeAudioContext.resume().catch((err) => {\n                // Bug #55: Chrome, Edge and Opera do throw an InvalidAccessError instead of an InvalidStateError.\n                // Bug #56: Safari invokes the catch handler but without an error.\n                if (err === undefined || err.code === 15) {\n                    throw createInvalidStateError();\n                }\n                throw err;\n            });\n        }\n        suspend() {\n            return this._nativeAudioContext.suspend().catch((err) => {\n                // Bug #56: Safari invokes the catch handler but without an error.\n                if (err === undefined) {\n                    throw createInvalidStateError();\n                }\n                throw err;\n            });\n        }\n    };\n};\n//# sourceMappingURL=minimal-audio-context-constructor.js.map","import { CONTEXT_STORE } from '../globals';\nexport const createMinimalBaseAudioContextConstructor = (audioDestinationNodeConstructor, createAudioListener, eventTargetConstructor, isNativeOfflineAudioContext, unrenderedAudioWorkletNodeStore, wrapEventListener) => {\n    return class MinimalBaseAudioContext extends eventTargetConstructor {\n        constructor(_nativeContext, numberOfChannels) {\n            super(_nativeContext);\n            this._nativeContext = _nativeContext;\n            CONTEXT_STORE.set(this, _nativeContext);\n            if (isNativeOfflineAudioContext(_nativeContext)) {\n                unrenderedAudioWorkletNodeStore.set(_nativeContext, new Set());\n            }\n            this._destination = new audioDestinationNodeConstructor(this, numberOfChannels);\n            this._listener = createAudioListener(this, _nativeContext);\n            this._onstatechange = null;\n        }\n        get currentTime() {\n            return this._nativeContext.currentTime;\n        }\n        get destination() {\n            return this._destination;\n        }\n        get listener() {\n            return this._listener;\n        }\n        get onstatechange() {\n            return this._onstatechange;\n        }\n        set onstatechange(value) {\n            const wrappedListener = typeof value === 'function' ? wrapEventListener(this, value) : null;\n            this._nativeContext.onstatechange = wrappedListener;\n            const nativeOnStateChange = this._nativeContext.onstatechange;\n            this._onstatechange =\n                nativeOnStateChange !== null && nativeOnStateChange === wrappedListener\n                    ? value\n                    : nativeOnStateChange;\n        }\n        get sampleRate() {\n            return this._nativeContext.sampleRate;\n        }\n        get state() {\n            return this._nativeContext.state;\n        }\n    };\n};\n//# sourceMappingURL=minimal-base-audio-context-constructor.js.map","export const testPromiseSupport = (nativeContext) => {\n    // This 12 numbers represent the 48 bytes of an empty WAVE file with a single sample.\n    const uint32Array = new Uint32Array([1179011410, 40, 1163280727, 544501094, 16, 131073, 44100, 176400, 1048580, 1635017060, 4, 0]);\n    try {\n        // Bug #1: Safari requires a successCallback.\n        const promise = nativeContext.decodeAudioData(uint32Array.buffer, () => {\n            // Ignore the success callback.\n        });\n        if (promise === undefined) {\n            return false;\n        }\n        promise.catch(() => {\n            // Ignore rejected errors.\n        });\n        return true;\n    }\n    catch {\n        // Ignore errors.\n    }\n    return false;\n};\n//# sourceMappingURL=test-promise-support.js.map","import { deactivateAudioGraph } from '../helpers/deactivate-audio-graph';\nimport { testPromiseSupport } from '../helpers/test-promise-support';\nconst DEFAULT_OPTIONS = {\n    numberOfChannels: 1\n};\nexport const createMinimalOfflineAudioContextConstructor = (cacheTestResult, createInvalidStateError, createNativeOfflineAudioContext, minimalBaseAudioContextConstructor, startRendering) => {\n    return class MinimalOfflineAudioContext extends minimalBaseAudioContextConstructor {\n        constructor(options) {\n            const { length, numberOfChannels, sampleRate } = { ...DEFAULT_OPTIONS, ...options };\n            const nativeOfflineAudioContext = createNativeOfflineAudioContext(numberOfChannels, length, sampleRate);\n            // #21 Safari does not support promises and therefore would fire the statechange event before the promise can be resolved.\n            if (!cacheTestResult(testPromiseSupport, () => testPromiseSupport(nativeOfflineAudioContext))) {\n                nativeOfflineAudioContext.addEventListener('statechange', (() => {\n                    let i = 0;\n                    const delayStateChangeEvent = (event) => {\n                        if (this._state === 'running') {\n                            if (i > 0) {\n                                nativeOfflineAudioContext.removeEventListener('statechange', delayStateChangeEvent);\n                                event.stopImmediatePropagation();\n                                this._waitForThePromiseToSettle(event);\n                            }\n                            else {\n                                i += 1;\n                            }\n                        }\n                    };\n                    return delayStateChangeEvent;\n                })());\n            }\n            super(nativeOfflineAudioContext, numberOfChannels);\n            this._length = length;\n            this._nativeOfflineAudioContext = nativeOfflineAudioContext;\n            this._state = null;\n        }\n        get length() {\n            // Bug #17: Safari does not yet expose the length.\n            if (this._nativeOfflineAudioContext.length === undefined) {\n                return this._length;\n            }\n            return this._nativeOfflineAudioContext.length;\n        }\n        get state() {\n            return this._state === null ? this._nativeOfflineAudioContext.state : this._state;\n        }\n        startRendering() {\n            /*\n             * Bug #9 & #59: It is theoretically possible that startRendering() will first render a partialOfflineAudioContext. Therefore\n             * the state of the nativeOfflineAudioContext might no transition to running immediately.\n             */\n            if (this._state === 'running') {\n                return Promise.reject(createInvalidStateError());\n            }\n            this._state = 'running';\n            return startRendering(this.destination, this._nativeOfflineAudioContext).finally(() => {\n                this._state = null;\n                deactivateAudioGraph(this);\n            });\n        }\n        _waitForThePromiseToSettle(event) {\n            if (this._state === null) {\n                this._nativeOfflineAudioContext.dispatchEvent(event);\n            }\n            else {\n                setTimeout(() => this._waitForThePromiseToSettle(event));\n            }\n        }\n    };\n};\n//# sourceMappingURL=minimal-offline-audio-context-constructor.js.map","export const createMonitorConnections = (insertElementInSet, isNativeAudioNode) => {\n    return (nativeAudioNode, whenConnected, whenDisconnected) => {\n        const connections = new Set();\n        nativeAudioNode.connect = ((connect) => {\n            // tslint:disable-next-line:invalid-void\n            return (destination, output = 0, input = 0) => {\n                const wasDisconnected = connections.size === 0;\n                if (isNativeAudioNode(destination)) {\n                    // @todo TypeScript cannot infer the overloaded signature with 3 arguments yet.\n                    connect.call(nativeAudioNode, destination, output, input);\n                    insertElementInSet(connections, [destination, output, input], (connection) => connection[0] === destination && connection[1] === output && connection[2] === input, true);\n                    if (wasDisconnected) {\n                        whenConnected();\n                    }\n                    return destination;\n                }\n                connect.call(nativeAudioNode, destination, output);\n                insertElementInSet(connections, [destination, output], (connection) => connection[0] === destination && connection[1] === output, true);\n                if (wasDisconnected) {\n                    whenConnected();\n                }\n                return;\n            };\n        })(nativeAudioNode.connect);\n        nativeAudioNode.disconnect = ((disconnect) => {\n            return (destinationOrOutput, output, input) => {\n                const wasConnected = connections.size > 0;\n                if (destinationOrOutput === undefined) {\n                    disconnect.apply(nativeAudioNode);\n                    connections.clear();\n                }\n                else if (typeof destinationOrOutput === 'number') {\n                    // @todo TypeScript cannot infer the overloaded signature with 1 argument yet.\n                    disconnect.call(nativeAudioNode, destinationOrOutput);\n                    for (const connection of connections) {\n                        if (connection[1] === destinationOrOutput) {\n                            connections.delete(connection);\n                        }\n                    }\n                }\n                else {\n                    if (isNativeAudioNode(destinationOrOutput)) {\n                        // @todo TypeScript cannot infer the overloaded signature with 3 arguments yet.\n                        disconnect.call(nativeAudioNode, destinationOrOutput, output, input);\n                    }\n                    else {\n                        // @todo TypeScript cannot infer the overloaded signature with 2 arguments yet.\n                        disconnect.call(nativeAudioNode, destinationOrOutput, output);\n                    }\n                    for (const connection of connections) {\n                        if (connection[0] === destinationOrOutput &&\n                            (output === undefined || connection[1] === output) &&\n                            (input === undefined || connection[2] === input)) {\n                            connections.delete(connection);\n                        }\n                    }\n                }\n                const isDisconnected = connections.size === 0;\n                if (wasConnected && isDisconnected) {\n                    whenDisconnected();\n                }\n            };\n        })(nativeAudioNode.disconnect);\n        return nativeAudioNode;\n    };\n};\n//# sourceMappingURL=monitor-connections.js.map","export const assignNativeAudioNodeOption = (nativeAudioNode, options, option) => {\n    const value = options[option];\n    if (value !== undefined && value !== nativeAudioNode[option]) {\n        nativeAudioNode[option] = value;\n    }\n};\n//# sourceMappingURL=assign-native-audio-node-option.js.map","import { assignNativeAudioNodeOption } from './assign-native-audio-node-option';\nexport const assignNativeAudioNodeOptions = (nativeAudioNode, options) => {\n    assignNativeAudioNodeOption(nativeAudioNode, options, 'channelCount');\n    assignNativeAudioNodeOption(nativeAudioNode, options, 'channelCountMode');\n    assignNativeAudioNodeOption(nativeAudioNode, options, 'channelInterpretation');\n};\n//# sourceMappingURL=assign-native-audio-node-options.js.map","export const testAnalyserNodeGetFloatTimeDomainDataMethodSupport = (nativeAnalyserNode) => {\n    return typeof nativeAnalyserNode.getFloatTimeDomainData === 'function';\n};\n//# sourceMappingURL=test-analyser-node-get-float-time-domain-data-method-support.js.map","export const wrapAnalyserNodeGetFloatTimeDomainDataMethod = (nativeAnalyserNode) => {\n    nativeAnalyserNode.getFloatTimeDomainData = (array) => {\n        const byteTimeDomainData = new Uint8Array(array.length);\n        nativeAnalyserNode.getByteTimeDomainData(byteTimeDomainData);\n        const length = Math.max(byteTimeDomainData.length, nativeAnalyserNode.fftSize);\n        for (let i = 0; i < length; i += 1) {\n            array[i] = (byteTimeDomainData[i] - 128) * 0.0078125;\n        }\n        return array;\n    };\n};\n//# sourceMappingURL=wrap-analyser-node-get-float-time-domain-data-method.js.map","import { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { testAnalyserNodeGetFloatTimeDomainDataMethodSupport } from '../helpers/test-analyser-node-get-float-time-domain-data-method-support';\nimport { wrapAnalyserNodeGetFloatTimeDomainDataMethod } from '../helpers/wrap-analyser-node-get-float-time-domain-data-method';\nexport const createNativeAnalyserNodeFactory = (cacheTestResult, createIndexSizeError) => {\n    return (nativeContext, options) => {\n        const nativeAnalyserNode = nativeContext.createAnalyser();\n        // Bug #37: Firefox does not create an AnalyserNode with the default properties.\n        assignNativeAudioNodeOptions(nativeAnalyserNode, options);\n        // Bug #118: Safari does not throw an error if maxDecibels is not more than minDecibels.\n        if (!(options.maxDecibels > options.minDecibels)) {\n            throw createIndexSizeError();\n        }\n        assignNativeAudioNodeOption(nativeAnalyserNode, options, 'fftSize');\n        assignNativeAudioNodeOption(nativeAnalyserNode, options, 'maxDecibels');\n        assignNativeAudioNodeOption(nativeAnalyserNode, options, 'minDecibels');\n        assignNativeAudioNodeOption(nativeAnalyserNode, options, 'smoothingTimeConstant');\n        // Bug #36: Safari does not support getFloatTimeDomainData() yet.\n        if (!cacheTestResult(testAnalyserNodeGetFloatTimeDomainDataMethodSupport, () => testAnalyserNodeGetFloatTimeDomainDataMethodSupport(nativeAnalyserNode))) {\n            wrapAnalyserNodeGetFloatTimeDomainDataMethod(nativeAnalyserNode);\n        }\n        return nativeAnalyserNode;\n    };\n};\n//# sourceMappingURL=native-analyser-node-factory.js.map","export const createNativeAudioBufferConstructor = (window) => {\n    if (window === null) {\n        return null;\n    }\n    if (window.hasOwnProperty('AudioBuffer')) {\n        return window.AudioBuffer;\n    }\n    return null;\n};\n//# sourceMappingURL=native-audio-buffer-constructor.js.map","export const assignNativeAudioNodeAudioParamValue = (nativeAudioNode, options, audioParam) => {\n    const value = options[audioParam];\n    if (value !== undefined && value !== nativeAudioNode[audioParam].value) {\n        nativeAudioNode[audioParam].value = value;\n    }\n};\n//# sourceMappingURL=assign-native-audio-node-audio-param-value.js.map","import { createInvalidStateError } from '../factories/invalid-state-error';\nexport const wrapAudioBufferSourceNodeStartMethodConsecutiveCalls = (nativeAudioBufferSourceNode) => {\n    nativeAudioBufferSourceNode.start = ((start) => {\n        let isScheduled = false;\n        return (when = 0, offset = 0, duration) => {\n            if (isScheduled) {\n                throw createInvalidStateError();\n            }\n            start.call(nativeAudioBufferSourceNode, when, offset, duration);\n            isScheduled = true;\n        };\n    })(nativeAudioBufferSourceNode.start);\n};\n//# sourceMappingURL=wrap-audio-buffer-source-node-start-method-consecutive-calls.js.map","export const wrapAudioScheduledSourceNodeStartMethodNegativeParameters = (nativeAudioScheduledSourceNode) => {\n    nativeAudioScheduledSourceNode.start = ((start) => {\n        return (when = 0, offset = 0, duration) => {\n            if ((typeof duration === 'number' && duration < 0) || offset < 0 || when < 0) {\n                throw new RangeError(\"The parameters can't be negative.\");\n            }\n            // @todo TypeScript cannot infer the overloaded signature with 3 arguments yet.\n            start.call(nativeAudioScheduledSourceNode, when, offset, duration);\n        };\n    })(nativeAudioScheduledSourceNode.start);\n};\n//# sourceMappingURL=wrap-audio-scheduled-source-node-start-method-negative-parameters.js.map","export const wrapAudioScheduledSourceNodeStopMethodNegativeParameters = (nativeAudioScheduledSourceNode) => {\n    nativeAudioScheduledSourceNode.stop = ((stop) => {\n        return (when = 0) => {\n            if (when < 0) {\n                throw new RangeError(\"The parameter can't be negative.\");\n            }\n            stop.call(nativeAudioScheduledSourceNode, when);\n        };\n    })(nativeAudioScheduledSourceNode.stop);\n};\n//# sourceMappingURL=wrap-audio-scheduled-source-node-stop-method-negative-parameters.js.map","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { wrapAudioBufferSourceNodeStartMethodConsecutiveCalls } from '../helpers/wrap-audio-buffer-source-node-start-method-consecutive-calls';\nimport { wrapAudioScheduledSourceNodeStartMethodNegativeParameters } from '../helpers/wrap-audio-scheduled-source-node-start-method-negative-parameters';\nimport { wrapAudioScheduledSourceNodeStopMethodNegativeParameters } from '../helpers/wrap-audio-scheduled-source-node-stop-method-negative-parameters';\nexport const createNativeAudioBufferSourceNodeFactory = (addSilentConnection, cacheTestResult, testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport, testAudioBufferSourceNodeStartMethodOffsetClampingSupport, testAudioBufferSourceNodeStopMethodNullifiedBufferSupport, testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, wrapAudioBufferSourceNodeStartMethodOffsetClampling, wrapAudioBufferSourceNodeStopMethodNullifiedBuffer, wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls) => {\n    return (nativeContext, options) => {\n        const nativeAudioBufferSourceNode = nativeContext.createBufferSource();\n        assignNativeAudioNodeOptions(nativeAudioBufferSourceNode, options);\n        assignNativeAudioNodeAudioParamValue(nativeAudioBufferSourceNode, options, 'playbackRate');\n        assignNativeAudioNodeOption(nativeAudioBufferSourceNode, options, 'buffer');\n        // Bug #149: Safari does not yet support the detune AudioParam.\n        assignNativeAudioNodeOption(nativeAudioBufferSourceNode, options, 'loop');\n        assignNativeAudioNodeOption(nativeAudioBufferSourceNode, options, 'loopEnd');\n        assignNativeAudioNodeOption(nativeAudioBufferSourceNode, options, 'loopStart');\n        // Bug #69: Safari does allow calls to start() of an already scheduled AudioBufferSourceNode.\n        if (!cacheTestResult(testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport, () => testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport(nativeContext))) {\n            wrapAudioBufferSourceNodeStartMethodConsecutiveCalls(nativeAudioBufferSourceNode);\n        }\n        // Bug #154 & #155: Safari does not handle offsets which are equal to or greater than the duration of the buffer.\n        if (!cacheTestResult(testAudioBufferSourceNodeStartMethodOffsetClampingSupport, () => testAudioBufferSourceNodeStartMethodOffsetClampingSupport(nativeContext))) {\n            wrapAudioBufferSourceNodeStartMethodOffsetClampling(nativeAudioBufferSourceNode);\n        }\n        // Bug #162: Safari does throw an error when stop() is called on an AudioBufferSourceNode which has no buffer assigned to it.\n        if (!cacheTestResult(testAudioBufferSourceNodeStopMethodNullifiedBufferSupport, () => testAudioBufferSourceNodeStopMethodNullifiedBufferSupport(nativeContext))) {\n            wrapAudioBufferSourceNodeStopMethodNullifiedBuffer(nativeAudioBufferSourceNode, nativeContext);\n        }\n        // Bug #44: Safari does not throw a RangeError yet.\n        if (!cacheTestResult(testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, () => testAudioScheduledSourceNodeStartMethodNegativeParametersSupport(nativeContext))) {\n            wrapAudioScheduledSourceNodeStartMethodNegativeParameters(nativeAudioBufferSourceNode);\n        }\n        // Bug #19: Safari does not ignore calls to stop() of an already stopped AudioBufferSourceNode.\n        if (!cacheTestResult(testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport, () => testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport(nativeContext))) {\n            wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls(nativeAudioBufferSourceNode, nativeContext);\n        }\n        // Bug #44: Only Firefox does not throw a RangeError yet.\n        if (!cacheTestResult(testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, () => testAudioScheduledSourceNodeStopMethodNegativeParametersSupport(nativeContext))) {\n            wrapAudioScheduledSourceNodeStopMethodNegativeParameters(nativeAudioBufferSourceNode);\n        }\n        // Bug #175: Safari will not fire an ended event if the AudioBufferSourceNode is unconnected.\n        addSilentConnection(nativeContext, nativeAudioBufferSourceNode);\n        return nativeAudioBufferSourceNode;\n    };\n};\n//# sourceMappingURL=native-audio-buffer-source-node-factory.js.map","export const createNativeAudioContextConstructor = (window) => {\n    if (window === null) {\n        return null;\n    }\n    if (window.hasOwnProperty('AudioContext')) {\n        return window.AudioContext;\n    }\n    return window.hasOwnProperty('webkitAudioContext') ? window.webkitAudioContext : null;\n};\n//# sourceMappingURL=native-audio-context-constructor.js.map","export const createNativeAudioDestinationNodeFactory = (createNativeGainNode, overwriteAccessors) => {\n    return (nativeContext, channelCount, isNodeOfNativeOfflineAudioContext) => {\n        const nativeAudioDestinationNode = nativeContext.destination;\n        // Bug #132: Safari does not have the correct channelCount.\n        if (nativeAudioDestinationNode.channelCount !== channelCount) {\n            try {\n                nativeAudioDestinationNode.channelCount = channelCount;\n            }\n            catch {\n                // Bug #169: Safari throws an error on each attempt to change the channelCount.\n            }\n        }\n        // Bug #83: Safari does not have the correct channelCountMode.\n        if (isNodeOfNativeOfflineAudioContext && nativeAudioDestinationNode.channelCountMode !== 'explicit') {\n            nativeAudioDestinationNode.channelCountMode = 'explicit';\n        }\n        // Bug #47: The AudioDestinationNode in Safari does not initialize the maxChannelCount property correctly.\n        if (nativeAudioDestinationNode.maxChannelCount === 0) {\n            Object.defineProperty(nativeAudioDestinationNode, 'maxChannelCount', {\n                value: channelCount\n            });\n        }\n        // Bug #168: No browser does yet have an AudioDestinationNode with an output.\n        const gainNode = createNativeGainNode(nativeContext, {\n            channelCount,\n            channelCountMode: nativeAudioDestinationNode.channelCountMode,\n            channelInterpretation: nativeAudioDestinationNode.channelInterpretation,\n            gain: 1\n        });\n        overwriteAccessors(gainNode, 'channelCount', (get) => () => get.call(gainNode), (set) => (value) => {\n            set.call(gainNode, value);\n            try {\n                nativeAudioDestinationNode.channelCount = value;\n            }\n            catch (err) {\n                // Bug #169: Safari throws an error on each attempt to change the channelCount.\n                if (value > nativeAudioDestinationNode.maxChannelCount) {\n                    throw err;\n                }\n            }\n        });\n        overwriteAccessors(gainNode, 'channelCountMode', (get) => () => get.call(gainNode), (set) => (value) => {\n            set.call(gainNode, value);\n            nativeAudioDestinationNode.channelCountMode = value;\n        });\n        overwriteAccessors(gainNode, 'channelInterpretation', (get) => () => get.call(gainNode), (set) => (value) => {\n            set.call(gainNode, value);\n            nativeAudioDestinationNode.channelInterpretation = value;\n        });\n        Object.defineProperty(gainNode, 'maxChannelCount', {\n            get: () => nativeAudioDestinationNode.maxChannelCount\n        });\n        // @todo This should be disconnected when the context is closed.\n        gainNode.connect(nativeAudioDestinationNode);\n        return gainNode;\n    };\n};\n//# sourceMappingURL=native-audio-destination-node.js.map","export const createNativeAudioWorkletNodeConstructor = (window) => {\n    if (window === null) {\n        return null;\n    }\n    return window.hasOwnProperty('AudioWorkletNode') ? window.AudioWorkletNode : null;\n};\n//# sourceMappingURL=native-audio-worklet-node-constructor.js.map","export const testClonabilityOfAudioWorkletNodeOptions = (audioWorkletNodeOptions) => {\n    const { port1 } = new MessageChannel();\n    try {\n        // This will throw an error if the audioWorkletNodeOptions are not clonable.\n        port1.postMessage(audioWorkletNodeOptions);\n    }\n    finally {\n        port1.close();\n    }\n};\n//# sourceMappingURL=test-clonability-of-audio-worklet-node-options.js.map","import { testClonabilityOfAudioWorkletNodeOptions } from '../helpers/test-clonability-of-audio-worklet-node-options';\nexport const createNativeAudioWorkletNodeFactory = (createInvalidStateError, createNativeAudioWorkletNodeFaker, createNativeGainNode, createNotSupportedError, monitorConnections) => {\n    return (nativeContext, baseLatency, nativeAudioWorkletNodeConstructor, name, processorConstructor, options) => {\n        if (nativeAudioWorkletNodeConstructor !== null) {\n            try {\n                const nativeAudioWorkletNode = new nativeAudioWorkletNodeConstructor(nativeContext, name, options);\n                const patchedEventListeners = new Map();\n                let onprocessorerror = null;\n                Object.defineProperties(nativeAudioWorkletNode, {\n                    /*\n                     * Bug #61: Overwriting the property accessors for channelCount and channelCountMode is necessary as long as some\n                     * browsers have no native implementation to achieve a consistent behavior.\n                     */\n                    channelCount: {\n                        get: () => options.channelCount,\n                        set: () => {\n                            throw createInvalidStateError();\n                        }\n                    },\n                    channelCountMode: {\n                        get: () => 'explicit',\n                        set: () => {\n                            throw createInvalidStateError();\n                        }\n                    },\n                    // Bug #156: Chrome and Edge do not yet fire an ErrorEvent.\n                    onprocessorerror: {\n                        get: () => onprocessorerror,\n                        set: (value) => {\n                            if (typeof onprocessorerror === 'function') {\n                                nativeAudioWorkletNode.removeEventListener('processorerror', onprocessorerror);\n                            }\n                            onprocessorerror = typeof value === 'function' ? value : null;\n                            if (typeof onprocessorerror === 'function') {\n                                nativeAudioWorkletNode.addEventListener('processorerror', onprocessorerror);\n                            }\n                        }\n                    }\n                });\n                nativeAudioWorkletNode.addEventListener = ((addEventListener) => {\n                    return (...args) => {\n                        if (args[0] === 'processorerror') {\n                            const unpatchedEventListener = typeof args[1] === 'function'\n                                ? args[1]\n                                : typeof args[1] === 'object' && args[1] !== null && typeof args[1].handleEvent === 'function'\n                                    ? args[1].handleEvent\n                                    : null;\n                            if (unpatchedEventListener !== null) {\n                                const patchedEventListener = patchedEventListeners.get(args[1]);\n                                if (patchedEventListener !== undefined) {\n                                    args[1] = patchedEventListener;\n                                }\n                                else {\n                                    args[1] = (event) => {\n                                        // Bug #178: Chrome, Edge and Opera do fire an event of type error.\n                                        if (event.type === 'error') {\n                                            Object.defineProperties(event, {\n                                                type: { value: 'processorerror' }\n                                            });\n                                            unpatchedEventListener(event);\n                                        }\n                                        else {\n                                            unpatchedEventListener(new ErrorEvent(args[0], { ...event }));\n                                        }\n                                    };\n                                    patchedEventListeners.set(unpatchedEventListener, args[1]);\n                                }\n                            }\n                        }\n                        // Bug #178: Chrome, Edge and Opera do fire an event of type error.\n                        addEventListener.call(nativeAudioWorkletNode, 'error', args[1], args[2]);\n                        return addEventListener.call(nativeAudioWorkletNode, ...args);\n                    };\n                })(nativeAudioWorkletNode.addEventListener);\n                nativeAudioWorkletNode.removeEventListener = ((removeEventListener) => {\n                    return (...args) => {\n                        if (args[0] === 'processorerror') {\n                            const patchedEventListener = patchedEventListeners.get(args[1]);\n                            if (patchedEventListener !== undefined) {\n                                patchedEventListeners.delete(args[1]);\n                                args[1] = patchedEventListener;\n                            }\n                        }\n                        // Bug #178: Chrome, Edge and Opera do fire an event of type error.\n                        removeEventListener.call(nativeAudioWorkletNode, 'error', args[1], args[2]);\n                        return removeEventListener.call(nativeAudioWorkletNode, args[0], args[1], args[2]);\n                    };\n                })(nativeAudioWorkletNode.removeEventListener);\n                /*\n                 * Bug #86: Chrome and Edge do not invoke the process() function if the corresponding AudioWorkletNode is unconnected but\n                 * has an output.\n                 */\n                if (options.numberOfOutputs !== 0) {\n                    const nativeGainNode = createNativeGainNode(nativeContext, {\n                        channelCount: 1,\n                        channelCountMode: 'explicit',\n                        channelInterpretation: 'discrete',\n                        gain: 0\n                    });\n                    nativeAudioWorkletNode.connect(nativeGainNode).connect(nativeContext.destination);\n                    const whenConnected = () => nativeGainNode.disconnect();\n                    const whenDisconnected = () => nativeGainNode.connect(nativeContext.destination);\n                    // @todo Disconnect the connection when the process() function of the AudioWorkletNode returns false.\n                    return monitorConnections(nativeAudioWorkletNode, whenConnected, whenDisconnected);\n                }\n                return nativeAudioWorkletNode;\n            }\n            catch (err) {\n                // Bug #60: Chrome, Edge & Opera throw an InvalidStateError instead of a NotSupportedError.\n                if (err.code === 11) {\n                    throw createNotSupportedError();\n                }\n                throw err;\n            }\n        }\n        // Bug #61: Only Chrome & Opera have an implementation of the AudioWorkletNode yet.\n        if (processorConstructor === undefined) {\n            throw createNotSupportedError();\n        }\n        testClonabilityOfAudioWorkletNodeOptions(options);\n        return createNativeAudioWorkletNodeFaker(nativeContext, baseLatency, processorConstructor, options);\n    };\n};\n//# sourceMappingURL=native-audio-worklet-node-factory.js.map","export const computeBufferSize = (baseLatency, sampleRate) => {\n    if (baseLatency === null) {\n        return 512;\n    }\n    return Math.max(512, Math.min(16384, Math.pow(2, Math.round(Math.log2(baseLatency * sampleRate)))));\n};\n//# sourceMappingURL=compute-buffer-size.js.map","export const cloneAudioWorkletNodeOptions = (audioWorkletNodeOptions) => {\n    return new Promise((resolve, reject) => {\n        const { port1, port2 } = new MessageChannel();\n        port1.onmessage = ({ data }) => {\n            port1.close();\n            port2.close();\n            resolve(data);\n        };\n        port1.onmessageerror = ({ data }) => {\n            port1.close();\n            port2.close();\n            reject(data);\n        };\n        // This will throw an error if the audioWorkletNodeOptions are not clonable.\n        port2.postMessage(audioWorkletNodeOptions);\n    });\n};\n//# sourceMappingURL=clone-audio-worklet-node-options.js.map","import { cloneAudioWorkletNodeOptions } from './clone-audio-worklet-node-options';\nexport const createAudioWorkletProcessorPromise = async (processorConstructor, audioWorkletNodeOptions) => {\n    const clonedAudioWorkletNodeOptions = await cloneAudioWorkletNodeOptions(audioWorkletNodeOptions);\n    return new processorConstructor(clonedAudioWorkletNodeOptions);\n};\n//# sourceMappingURL=create-audio-worklet-processor-promise.js.map","import { NODE_TO_PROCESSOR_MAPS } from '../globals';\nimport { createAudioWorkletProcessorPromise } from './create-audio-worklet-processor-promise';\nexport const createAudioWorkletProcessor = (nativeContext, nativeAudioWorkletNode, processorConstructor, audioWorkletNodeOptions) => {\n    let nodeToProcessorMap = NODE_TO_PROCESSOR_MAPS.get(nativeContext);\n    if (nodeToProcessorMap === undefined) {\n        nodeToProcessorMap = new WeakMap();\n        NODE_TO_PROCESSOR_MAPS.set(nativeContext, nodeToProcessorMap);\n    }\n    const audioWorkletProcessorPromise = createAudioWorkletProcessorPromise(processorConstructor, audioWorkletNodeOptions);\n    nodeToProcessorMap.set(nativeAudioWorkletNode, audioWorkletProcessorPromise);\n    return audioWorkletProcessorPromise;\n};\n//# sourceMappingURL=create-audio-worklet-processor.js.map","import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nimport { computeBufferSize } from '../helpers/compute-buffer-size';\nimport { copyFromChannel } from '../helpers/copy-from-channel';\nimport { copyToChannel } from '../helpers/copy-to-channel';\nimport { createAudioWorkletProcessor } from '../helpers/create-audio-worklet-processor';\nimport { createNestedArrays } from '../helpers/create-nested-arrays';\nimport { ReadOnlyMap } from '../read-only-map';\nexport const createNativeAudioWorkletNodeFakerFactory = (connectMultipleOutputs, createIndexSizeError, createInvalidStateError, createNativeChannelMergerNode, createNativeChannelSplitterNode, createNativeConstantSourceNode, createNativeGainNode, createNativeScriptProcessorNode, createNotSupportedError, disconnectMultipleOutputs, exposeCurrentFrameAndCurrentTime, getActiveAudioWorkletNodeInputs, monitorConnections) => {\n    return (nativeContext, baseLatency, processorConstructor, options) => {\n        if (options.numberOfInputs === 0 && options.numberOfOutputs === 0) {\n            throw createNotSupportedError();\n        }\n        const outputChannelCount = Array.isArray(options.outputChannelCount)\n            ? options.outputChannelCount\n            : Array.from(options.outputChannelCount);\n        // @todo Check if any of the channelCount values is greater than the implementation's maximum number of channels.\n        if (outputChannelCount.some((channelCount) => channelCount < 1)) {\n            throw createNotSupportedError();\n        }\n        if (outputChannelCount.length !== options.numberOfOutputs) {\n            throw createIndexSizeError();\n        }\n        // Bug #61: This is not part of the standard but required for the faker to work.\n        if (options.channelCountMode !== 'explicit') {\n            throw createNotSupportedError();\n        }\n        const numberOfInputChannels = options.channelCount * options.numberOfInputs;\n        const numberOfOutputChannels = outputChannelCount.reduce((sum, value) => sum + value, 0);\n        const numberOfParameters = processorConstructor.parameterDescriptors === undefined ? 0 : processorConstructor.parameterDescriptors.length;\n        // Bug #61: This is not part of the standard but required for the faker to work.\n        if (numberOfInputChannels + numberOfParameters > 6 || numberOfOutputChannels > 6) {\n            throw createNotSupportedError();\n        }\n        const messageChannel = new MessageChannel();\n        const gainNodes = [];\n        const inputChannelSplitterNodes = [];\n        for (let i = 0; i < options.numberOfInputs; i += 1) {\n            gainNodes.push(createNativeGainNode(nativeContext, {\n                channelCount: options.channelCount,\n                channelCountMode: options.channelCountMode,\n                channelInterpretation: options.channelInterpretation,\n                gain: 1\n            }));\n            inputChannelSplitterNodes.push(createNativeChannelSplitterNode(nativeContext, {\n                channelCount: options.channelCount,\n                channelCountMode: 'explicit',\n                channelInterpretation: 'discrete',\n                numberOfOutputs: options.channelCount\n            }));\n        }\n        const constantSourceNodes = [];\n        if (processorConstructor.parameterDescriptors !== undefined) {\n            for (const { defaultValue, maxValue, minValue, name } of processorConstructor.parameterDescriptors) {\n                const constantSourceNode = createNativeConstantSourceNode(nativeContext, {\n                    channelCount: 1,\n                    channelCountMode: 'explicit',\n                    channelInterpretation: 'discrete',\n                    offset: options.parameterData[name] !== undefined\n                        ? options.parameterData[name]\n                        : defaultValue === undefined\n                            ? 0\n                            : defaultValue\n                });\n                Object.defineProperties(constantSourceNode.offset, {\n                    defaultValue: {\n                        get: () => (defaultValue === undefined ? 0 : defaultValue)\n                    },\n                    maxValue: {\n                        get: () => (maxValue === undefined ? MOST_POSITIVE_SINGLE_FLOAT : maxValue)\n                    },\n                    minValue: {\n                        get: () => (minValue === undefined ? MOST_NEGATIVE_SINGLE_FLOAT : minValue)\n                    }\n                });\n                constantSourceNodes.push(constantSourceNode);\n            }\n        }\n        const inputChannelMergerNode = createNativeChannelMergerNode(nativeContext, {\n            channelCount: 1,\n            channelCountMode: 'explicit',\n            channelInterpretation: 'speakers',\n            numberOfInputs: Math.max(1, numberOfInputChannels + numberOfParameters)\n        });\n        const bufferSize = computeBufferSize(baseLatency, nativeContext.sampleRate);\n        const scriptProcessorNode = createNativeScriptProcessorNode(nativeContext, bufferSize, numberOfInputChannels + numberOfParameters, \n        // Bug #87: Only Firefox will fire an AudioProcessingEvent if there is no connected output.\n        Math.max(1, numberOfOutputChannels));\n        const outputChannelSplitterNode = createNativeChannelSplitterNode(nativeContext, {\n            channelCount: Math.max(1, numberOfOutputChannels),\n            channelCountMode: 'explicit',\n            channelInterpretation: 'discrete',\n            numberOfOutputs: Math.max(1, numberOfOutputChannels)\n        });\n        const outputChannelMergerNodes = [];\n        for (let i = 0; i < options.numberOfOutputs; i += 1) {\n            outputChannelMergerNodes.push(createNativeChannelMergerNode(nativeContext, {\n                channelCount: 1,\n                channelCountMode: 'explicit',\n                channelInterpretation: 'speakers',\n                numberOfInputs: outputChannelCount[i]\n            }));\n        }\n        for (let i = 0; i < options.numberOfInputs; i += 1) {\n            gainNodes[i].connect(inputChannelSplitterNodes[i]);\n            for (let j = 0; j < options.channelCount; j += 1) {\n                inputChannelSplitterNodes[i].connect(inputChannelMergerNode, j, i * options.channelCount + j);\n            }\n        }\n        const parameterMap = new ReadOnlyMap(processorConstructor.parameterDescriptors === undefined\n            ? []\n            : processorConstructor.parameterDescriptors.map(({ name }, index) => {\n                const constantSourceNode = constantSourceNodes[index];\n                constantSourceNode.connect(inputChannelMergerNode, 0, numberOfInputChannels + index);\n                constantSourceNode.start(0);\n                return [name, constantSourceNode.offset];\n            }));\n        inputChannelMergerNode.connect(scriptProcessorNode);\n        let channelInterpretation = options.channelInterpretation;\n        let onprocessorerror = null;\n        // Bug #87: Expose at least one output to make this node connectable.\n        const outputAudioNodes = options.numberOfOutputs === 0 ? [scriptProcessorNode] : outputChannelMergerNodes;\n        const nativeAudioWorkletNodeFaker = {\n            get bufferSize() {\n                return bufferSize;\n            },\n            get channelCount() {\n                return options.channelCount;\n            },\n            set channelCount(_) {\n                // Bug #61: This is not part of the standard but required for the faker to work.\n                throw createInvalidStateError();\n            },\n            get channelCountMode() {\n                return options.channelCountMode;\n            },\n            set channelCountMode(_) {\n                // Bug #61: This is not part of the standard but required for the faker to work.\n                throw createInvalidStateError();\n            },\n            get channelInterpretation() {\n                return channelInterpretation;\n            },\n            set channelInterpretation(value) {\n                for (const gainNode of gainNodes) {\n                    gainNode.channelInterpretation = value;\n                }\n                channelInterpretation = value;\n            },\n            get context() {\n                return scriptProcessorNode.context;\n            },\n            get inputs() {\n                return gainNodes;\n            },\n            get numberOfInputs() {\n                return options.numberOfInputs;\n            },\n            get numberOfOutputs() {\n                return options.numberOfOutputs;\n            },\n            get onprocessorerror() {\n                return onprocessorerror;\n            },\n            set onprocessorerror(value) {\n                if (typeof onprocessorerror === 'function') {\n                    nativeAudioWorkletNodeFaker.removeEventListener('processorerror', onprocessorerror);\n                }\n                onprocessorerror = typeof value === 'function' ? value : null;\n                if (typeof onprocessorerror === 'function') {\n                    nativeAudioWorkletNodeFaker.addEventListener('processorerror', onprocessorerror);\n                }\n            },\n            get parameters() {\n                return parameterMap;\n            },\n            get port() {\n                return messageChannel.port2;\n            },\n            addEventListener(...args) {\n                return scriptProcessorNode.addEventListener(args[0], args[1], args[2]);\n            },\n            connect: connectMultipleOutputs.bind(null, outputAudioNodes),\n            disconnect: disconnectMultipleOutputs.bind(null, outputAudioNodes),\n            dispatchEvent(...args) {\n                return scriptProcessorNode.dispatchEvent(args[0]);\n            },\n            removeEventListener(...args) {\n                return scriptProcessorNode.removeEventListener(args[0], args[1], args[2]);\n            }\n        };\n        const patchedEventListeners = new Map();\n        messageChannel.port1.addEventListener = ((addEventListener) => {\n            return (...args) => {\n                if (args[0] === 'message') {\n                    const unpatchedEventListener = typeof args[1] === 'function'\n                        ? args[1]\n                        : typeof args[1] === 'object' && args[1] !== null && typeof args[1].handleEvent === 'function'\n                            ? args[1].handleEvent\n                            : null;\n                    if (unpatchedEventListener !== null) {\n                        const patchedEventListener = patchedEventListeners.get(args[1]);\n                        if (patchedEventListener !== undefined) {\n                            args[1] = patchedEventListener;\n                        }\n                        else {\n                            args[1] = (event) => {\n                                exposeCurrentFrameAndCurrentTime(nativeContext.currentTime, nativeContext.sampleRate, () => unpatchedEventListener(event));\n                            };\n                            patchedEventListeners.set(unpatchedEventListener, args[1]);\n                        }\n                    }\n                }\n                return addEventListener.call(messageChannel.port1, args[0], args[1], args[2]);\n            };\n        })(messageChannel.port1.addEventListener);\n        messageChannel.port1.removeEventListener = ((removeEventListener) => {\n            return (...args) => {\n                if (args[0] === 'message') {\n                    const patchedEventListener = patchedEventListeners.get(args[1]);\n                    if (patchedEventListener !== undefined) {\n                        patchedEventListeners.delete(args[1]);\n                        args[1] = patchedEventListener;\n                    }\n                }\n                return removeEventListener.call(messageChannel.port1, args[0], args[1], args[2]);\n            };\n        })(messageChannel.port1.removeEventListener);\n        let onmessage = null;\n        Object.defineProperty(messageChannel.port1, 'onmessage', {\n            get: () => onmessage,\n            set: (value) => {\n                if (typeof onmessage === 'function') {\n                    messageChannel.port1.removeEventListener('message', onmessage);\n                }\n                onmessage = typeof value === 'function' ? value : null;\n                if (typeof onmessage === 'function') {\n                    messageChannel.port1.addEventListener('message', onmessage);\n                    messageChannel.port1.start();\n                }\n            }\n        });\n        processorConstructor.prototype.port = messageChannel.port1;\n        let audioWorkletProcessor = null;\n        const audioWorkletProcessorPromise = createAudioWorkletProcessor(nativeContext, nativeAudioWorkletNodeFaker, processorConstructor, options);\n        audioWorkletProcessorPromise.then((dWrkltPrcssr) => (audioWorkletProcessor = dWrkltPrcssr));\n        const inputs = createNestedArrays(options.numberOfInputs, options.channelCount);\n        const outputs = createNestedArrays(options.numberOfOutputs, outputChannelCount);\n        const parameters = processorConstructor.parameterDescriptors === undefined\n            ? []\n            : processorConstructor.parameterDescriptors.reduce((prmtrs, { name }) => ({ ...prmtrs, [name]: new Float32Array(128) }), {});\n        let isActive = true;\n        const disconnectOutputsGraph = () => {\n            if (options.numberOfOutputs > 0) {\n                scriptProcessorNode.disconnect(outputChannelSplitterNode);\n            }\n            for (let i = 0, outputChannelSplitterNodeOutput = 0; i < options.numberOfOutputs; i += 1) {\n                const outputChannelMergerNode = outputChannelMergerNodes[i];\n                for (let j = 0; j < outputChannelCount[i]; j += 1) {\n                    outputChannelSplitterNode.disconnect(outputChannelMergerNode, outputChannelSplitterNodeOutput + j, j);\n                }\n                outputChannelSplitterNodeOutput += outputChannelCount[i];\n            }\n        };\n        const activeInputIndexes = new Map();\n        // tslint:disable-next-line:deprecation\n        scriptProcessorNode.onaudioprocess = ({ inputBuffer, outputBuffer }) => {\n            if (audioWorkletProcessor !== null) {\n                const activeInputs = getActiveAudioWorkletNodeInputs(nativeAudioWorkletNodeFaker);\n                for (let i = 0; i < bufferSize; i += 128) {\n                    for (let j = 0; j < options.numberOfInputs; j += 1) {\n                        for (let k = 0; k < options.channelCount; k += 1) {\n                            copyFromChannel(inputBuffer, inputs[j], k, k, i);\n                        }\n                    }\n                    if (processorConstructor.parameterDescriptors !== undefined) {\n                        processorConstructor.parameterDescriptors.forEach(({ name }, index) => {\n                            copyFromChannel(inputBuffer, parameters, name, numberOfInputChannels + index, i);\n                        });\n                    }\n                    for (let j = 0; j < options.numberOfInputs; j += 1) {\n                        for (let k = 0; k < outputChannelCount[j]; k += 1) {\n                            // The byteLength will be 0 when the ArrayBuffer was transferred.\n                            if (outputs[j][k].byteLength === 0) {\n                                outputs[j][k] = new Float32Array(128);\n                            }\n                        }\n                    }\n                    try {\n                        const potentiallyEmptyInputs = inputs.map((input, index) => {\n                            const activeInput = activeInputs[index];\n                            if (activeInput.size > 0) {\n                                activeInputIndexes.set(index, bufferSize / 128);\n                                return input;\n                            }\n                            const count = activeInputIndexes.get(index);\n                            if (count === undefined) {\n                                return [];\n                            }\n                            if (input.every((channelData) => channelData.every((sample) => sample === 0))) {\n                                if (count === 1) {\n                                    activeInputIndexes.delete(index);\n                                }\n                                else {\n                                    activeInputIndexes.set(index, count - 1);\n                                }\n                            }\n                            return input;\n                        });\n                        const activeSourceFlag = exposeCurrentFrameAndCurrentTime(nativeContext.currentTime + i / nativeContext.sampleRate, nativeContext.sampleRate, () => audioWorkletProcessor.process(potentiallyEmptyInputs, outputs, parameters));\n                        isActive = activeSourceFlag;\n                        for (let j = 0, outputChannelSplitterNodeOutput = 0; j < options.numberOfOutputs; j += 1) {\n                            for (let k = 0; k < outputChannelCount[j]; k += 1) {\n                                copyToChannel(outputBuffer, outputs[j], k, outputChannelSplitterNodeOutput + k, i);\n                            }\n                            outputChannelSplitterNodeOutput += outputChannelCount[j];\n                        }\n                    }\n                    catch (error) {\n                        isActive = false;\n                        nativeAudioWorkletNodeFaker.dispatchEvent(new ErrorEvent('processorerror', {\n                            colno: error.colno,\n                            filename: error.filename,\n                            lineno: error.lineno,\n                            message: error.message\n                        }));\n                    }\n                    if (!isActive) {\n                        for (let j = 0; j < options.numberOfInputs; j += 1) {\n                            gainNodes[j].disconnect(inputChannelSplitterNodes[j]);\n                            for (let k = 0; k < options.channelCount; k += 1) {\n                                inputChannelSplitterNodes[i].disconnect(inputChannelMergerNode, k, j * options.channelCount + k);\n                            }\n                        }\n                        if (processorConstructor.parameterDescriptors !== undefined) {\n                            const length = processorConstructor.parameterDescriptors.length;\n                            for (let j = 0; j < length; j += 1) {\n                                const constantSourceNode = constantSourceNodes[j];\n                                constantSourceNode.disconnect(inputChannelMergerNode, 0, numberOfInputChannels + j);\n                                constantSourceNode.stop();\n                            }\n                        }\n                        inputChannelMergerNode.disconnect(scriptProcessorNode);\n                        scriptProcessorNode.onaudioprocess = null; // tslint:disable-line:deprecation\n                        if (isConnected) {\n                            disconnectOutputsGraph();\n                        }\n                        else {\n                            disconnectFakeGraph();\n                        }\n                        break;\n                    }\n                }\n            }\n        };\n        let isConnected = false;\n        // Bug #87: Only Firefox will fire an AudioProcessingEvent if there is no connected output.\n        const nativeGainNode = createNativeGainNode(nativeContext, {\n            channelCount: 1,\n            channelCountMode: 'explicit',\n            channelInterpretation: 'discrete',\n            gain: 0\n        });\n        const connectFakeGraph = () => scriptProcessorNode.connect(nativeGainNode).connect(nativeContext.destination);\n        const disconnectFakeGraph = () => {\n            scriptProcessorNode.disconnect(nativeGainNode);\n            nativeGainNode.disconnect();\n        };\n        const whenConnected = () => {\n            if (isActive) {\n                disconnectFakeGraph();\n                if (options.numberOfOutputs > 0) {\n                    scriptProcessorNode.connect(outputChannelSplitterNode);\n                }\n                for (let i = 0, outputChannelSplitterNodeOutput = 0; i < options.numberOfOutputs; i += 1) {\n                    const outputChannelMergerNode = outputChannelMergerNodes[i];\n                    for (let j = 0; j < outputChannelCount[i]; j += 1) {\n                        outputChannelSplitterNode.connect(outputChannelMergerNode, outputChannelSplitterNodeOutput + j, j);\n                    }\n                    outputChannelSplitterNodeOutput += outputChannelCount[i];\n                }\n            }\n            isConnected = true;\n        };\n        const whenDisconnected = () => {\n            if (isActive) {\n                connectFakeGraph();\n                disconnectOutputsGraph();\n            }\n            isConnected = false;\n        };\n        connectFakeGraph();\n        return monitorConnections(nativeAudioWorkletNodeFaker, whenConnected, whenDisconnected);\n    };\n};\n//# sourceMappingURL=native-audio-worklet-node-faker-factory.js.map","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeBiquadFilterNode = (nativeContext, options) => {\n    const nativeBiquadFilterNode = nativeContext.createBiquadFilter();\n    assignNativeAudioNodeOptions(nativeBiquadFilterNode, options);\n    assignNativeAudioNodeAudioParamValue(nativeBiquadFilterNode, options, 'Q');\n    assignNativeAudioNodeAudioParamValue(nativeBiquadFilterNode, options, 'detune');\n    assignNativeAudioNodeAudioParamValue(nativeBiquadFilterNode, options, 'frequency');\n    assignNativeAudioNodeAudioParamValue(nativeBiquadFilterNode, options, 'gain');\n    assignNativeAudioNodeOption(nativeBiquadFilterNode, options, 'type');\n    return nativeBiquadFilterNode;\n};\n//# sourceMappingURL=native-biquad-filter-node.js.map","import { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeChannelMergerNodeFactory = (nativeAudioContextConstructor, wrapChannelMergerNode) => {\n    return (nativeContext, options) => {\n        const nativeChannelMergerNode = nativeContext.createChannelMerger(options.numberOfInputs);\n        /*\n         * Bug #20: Safari requires a connection of any kind to treat the input signal correctly.\n         * @todo Unfortunately there is no way to test for this behavior in a synchronous fashion which is why testing for the existence of\n         * the webkitAudioContext is used as a workaround here.\n         */\n        if (nativeAudioContextConstructor !== null && nativeAudioContextConstructor.name === 'webkitAudioContext') {\n            wrapChannelMergerNode(nativeContext, nativeChannelMergerNode);\n        }\n        assignNativeAudioNodeOptions(nativeChannelMergerNode, options);\n        return nativeChannelMergerNode;\n    };\n};\n//# sourceMappingURL=native-channel-merger-node-factory.js.map","import { createInvalidStateError } from '../factories/invalid-state-error';\nexport const wrapChannelSplitterNode = (channelSplitterNode) => {\n    const channelCount = channelSplitterNode.numberOfOutputs;\n    // Bug #97: Safari does not throw an error when attempting to change the channelCount to something other than its initial value.\n    Object.defineProperty(channelSplitterNode, 'channelCount', {\n        get: () => channelCount,\n        set: (value) => {\n            if (value !== channelCount) {\n                throw createInvalidStateError();\n            }\n        }\n    });\n    // Bug #30: Safari does not throw an error when attempting to change the channelCountMode to something other than explicit.\n    Object.defineProperty(channelSplitterNode, 'channelCountMode', {\n        get: () => 'explicit',\n        set: (value) => {\n            if (value !== 'explicit') {\n                throw createInvalidStateError();\n            }\n        }\n    });\n    // Bug #32: Safari does not throw an error when attempting to change the channelInterpretation to something other than discrete.\n    Object.defineProperty(channelSplitterNode, 'channelInterpretation', {\n        get: () => 'discrete',\n        set: (value) => {\n            if (value !== 'discrete') {\n                throw createInvalidStateError();\n            }\n        }\n    });\n};\n//# sourceMappingURL=wrap-channel-splitter-node.js.map","import { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { wrapChannelSplitterNode } from '../helpers/wrap-channel-splitter-node';\nexport const createNativeChannelSplitterNode = (nativeContext, options) => {\n    const nativeChannelSplitterNode = nativeContext.createChannelSplitter(options.numberOfOutputs);\n    // Bug #96: Safari does not have the correct channelCount.\n    // Bug #29: Safari does not have the correct channelCountMode.\n    // Bug #31: Safari does not have the correct channelInterpretation.\n    assignNativeAudioNodeOptions(nativeChannelSplitterNode, options);\n    // Bug #29, #30, #31, #32, #96 & #97: Only Chrome, Edge, Firefox & Opera partially support the spec yet.\n    wrapChannelSplitterNode(nativeChannelSplitterNode);\n    return nativeChannelSplitterNode;\n};\n//# sourceMappingURL=native-channel-splitter-node.js.map","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { wrapAudioScheduledSourceNodeStartMethodNegativeParameters } from '../helpers/wrap-audio-scheduled-source-node-start-method-negative-parameters';\nimport { wrapAudioScheduledSourceNodeStopMethodNegativeParameters } from '../helpers/wrap-audio-scheduled-source-node-stop-method-negative-parameters';\nexport const createNativeConstantSourceNodeFactory = (addSilentConnection, cacheTestResult, createNativeConstantSourceNodeFaker, testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport) => {\n    return (nativeContext, options) => {\n        // Bug #62: Safari does not support ConstantSourceNodes.\n        if (nativeContext.createConstantSource === undefined) {\n            return createNativeConstantSourceNodeFaker(nativeContext, options);\n        }\n        const nativeConstantSourceNode = nativeContext.createConstantSource();\n        assignNativeAudioNodeOptions(nativeConstantSourceNode, options);\n        assignNativeAudioNodeAudioParamValue(nativeConstantSourceNode, options, 'offset');\n        // Bug #44: Safari does not throw a RangeError yet.\n        if (!cacheTestResult(testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, () => testAudioScheduledSourceNodeStartMethodNegativeParametersSupport(nativeContext))) {\n            wrapAudioScheduledSourceNodeStartMethodNegativeParameters(nativeConstantSourceNode);\n        }\n        // Bug #44: Only Firefox does not throw a RangeError yet.\n        if (!cacheTestResult(testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, () => testAudioScheduledSourceNodeStopMethodNegativeParametersSupport(nativeContext))) {\n            wrapAudioScheduledSourceNodeStopMethodNegativeParameters(nativeConstantSourceNode);\n        }\n        // Bug #175: Safari will not fire an ended event if the ConstantSourceNode is unconnected.\n        addSilentConnection(nativeContext, nativeConstantSourceNode);\n        return nativeConstantSourceNode;\n    };\n};\n//# sourceMappingURL=native-constant-source-node-factory.js.map","export const interceptConnections = (original, interceptor) => {\n    original.connect = interceptor.connect.bind(interceptor);\n    original.disconnect = interceptor.disconnect.bind(interceptor);\n    return original;\n};\n//# sourceMappingURL=intercept-connections.js.map","import { interceptConnections } from '../helpers/intercept-connections';\nexport const createNativeConstantSourceNodeFakerFactory = (addSilentConnection, createNativeAudioBufferSourceNode, createNativeGainNode, monitorConnections) => {\n    return (nativeContext, { offset, ...audioNodeOptions }) => {\n        const audioBuffer = nativeContext.createBuffer(1, 2, 44100);\n        const audioBufferSourceNode = createNativeAudioBufferSourceNode(nativeContext, {\n            buffer: null,\n            channelCount: 2,\n            channelCountMode: 'max',\n            channelInterpretation: 'speakers',\n            loop: false,\n            loopEnd: 0,\n            loopStart: 0,\n            playbackRate: 1\n        });\n        const gainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions, gain: offset });\n        // Bug #5: Safari does not support copyFromChannel() and copyToChannel().\n        const channelData = audioBuffer.getChannelData(0);\n        // Bug #95: Safari does not play or loop one sample buffers.\n        channelData[0] = 1;\n        channelData[1] = 1;\n        audioBufferSourceNode.buffer = audioBuffer;\n        audioBufferSourceNode.loop = true;\n        const nativeConstantSourceNodeFaker = {\n            get bufferSize() {\n                return undefined;\n            },\n            get channelCount() {\n                return gainNode.channelCount;\n            },\n            set channelCount(value) {\n                gainNode.channelCount = value;\n            },\n            get channelCountMode() {\n                return gainNode.channelCountMode;\n            },\n            set channelCountMode(value) {\n                gainNode.channelCountMode = value;\n            },\n            get channelInterpretation() {\n                return gainNode.channelInterpretation;\n            },\n            set channelInterpretation(value) {\n                gainNode.channelInterpretation = value;\n            },\n            get context() {\n                return gainNode.context;\n            },\n            get inputs() {\n                return [];\n            },\n            get numberOfInputs() {\n                return audioBufferSourceNode.numberOfInputs;\n            },\n            get numberOfOutputs() {\n                return gainNode.numberOfOutputs;\n            },\n            get offset() {\n                return gainNode.gain;\n            },\n            get onended() {\n                return audioBufferSourceNode.onended;\n            },\n            set onended(value) {\n                audioBufferSourceNode.onended = value;\n            },\n            addEventListener(...args) {\n                return audioBufferSourceNode.addEventListener(args[0], args[1], args[2]);\n            },\n            dispatchEvent(...args) {\n                return audioBufferSourceNode.dispatchEvent(args[0]);\n            },\n            removeEventListener(...args) {\n                return audioBufferSourceNode.removeEventListener(args[0], args[1], args[2]);\n            },\n            start(when = 0) {\n                audioBufferSourceNode.start.call(audioBufferSourceNode, when);\n            },\n            stop(when = 0) {\n                audioBufferSourceNode.stop.call(audioBufferSourceNode, when);\n            }\n        };\n        const whenConnected = () => audioBufferSourceNode.connect(gainNode);\n        const whenDisconnected = () => audioBufferSourceNode.disconnect(gainNode);\n        // Bug #175: Safari will not fire an ended event if the AudioBufferSourceNode is unconnected.\n        addSilentConnection(nativeContext, audioBufferSourceNode);\n        return monitorConnections(interceptConnections(nativeConstantSourceNodeFaker, gainNode), whenConnected, whenDisconnected);\n    };\n};\n//# sourceMappingURL=native-constant-source-node-faker-factory.js.map","import { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeConvolverNodeFactory = (createNotSupportedError, overwriteAccessors) => {\n    return (nativeContext, options) => {\n        const nativeConvolverNode = nativeContext.createConvolver();\n        assignNativeAudioNodeOptions(nativeConvolverNode, options);\n        // The normalize property needs to be set before setting the buffer.\n        if (options.disableNormalization === nativeConvolverNode.normalize) {\n            nativeConvolverNode.normalize = !options.disableNormalization;\n        }\n        assignNativeAudioNodeOption(nativeConvolverNode, options, 'buffer');\n        // Bug #113: Safari does allow to set the channelCount to a value larger than 2.\n        if (options.channelCount > 2) {\n            throw createNotSupportedError();\n        }\n        overwriteAccessors(nativeConvolverNode, 'channelCount', (get) => () => get.call(nativeConvolverNode), (set) => (value) => {\n            if (value > 2) {\n                throw createNotSupportedError();\n            }\n            return set.call(nativeConvolverNode, value);\n        });\n        // Bug #114: Safari allows to set the channelCountMode to 'max'.\n        if (options.channelCountMode === 'max') {\n            throw createNotSupportedError();\n        }\n        overwriteAccessors(nativeConvolverNode, 'channelCountMode', (get) => () => get.call(nativeConvolverNode), (set) => (value) => {\n            if (value === 'max') {\n                throw createNotSupportedError();\n            }\n            return set.call(nativeConvolverNode, value);\n        });\n        return nativeConvolverNode;\n    };\n};\n//# sourceMappingURL=native-convolver-node-factory.js.map","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeDelayNode = (nativeContext, options) => {\n    const nativeDelayNode = nativeContext.createDelay(options.maxDelayTime);\n    assignNativeAudioNodeOptions(nativeDelayNode, options);\n    assignNativeAudioNodeAudioParamValue(nativeDelayNode, options, 'delayTime');\n    return nativeDelayNode;\n};\n//# sourceMappingURL=native-delay-node.js.map","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeDynamicsCompressorNodeFactory = (createNotSupportedError) => {\n    return (nativeContext, options) => {\n        const nativeDynamicsCompressorNode = nativeContext.createDynamicsCompressor();\n        assignNativeAudioNodeOptions(nativeDynamicsCompressorNode, options);\n        // Bug #108: Safari allows a channelCount of three and above.\n        if (options.channelCount > 2) {\n            throw createNotSupportedError();\n        }\n        // Bug #109: Only Chrome, Firefox and Opera disallow a channelCountMode of 'max'.\n        if (options.channelCountMode === 'max') {\n            throw createNotSupportedError();\n        }\n        assignNativeAudioNodeAudioParamValue(nativeDynamicsCompressorNode, options, 'attack');\n        assignNativeAudioNodeAudioParamValue(nativeDynamicsCompressorNode, options, 'knee');\n        assignNativeAudioNodeAudioParamValue(nativeDynamicsCompressorNode, options, 'ratio');\n        assignNativeAudioNodeAudioParamValue(nativeDynamicsCompressorNode, options, 'release');\n        assignNativeAudioNodeAudioParamValue(nativeDynamicsCompressorNode, options, 'threshold');\n        return nativeDynamicsCompressorNode;\n    };\n};\n//# sourceMappingURL=native-dynamics-compressor-node-factory.js.map","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeGainNode = (nativeContext, options) => {\n    const nativeGainNode = nativeContext.createGain();\n    assignNativeAudioNodeOptions(nativeGainNode, options);\n    assignNativeAudioNodeAudioParamValue(nativeGainNode, options, 'gain');\n    return nativeGainNode;\n};\n//# sourceMappingURL=native-gain-node.js.map","import { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeIIRFilterNodeFactory = (createNativeIIRFilterNodeFaker) => {\n    return (nativeContext, baseLatency, options) => {\n        // Bug #9: Safari does not support IIRFilterNodes.\n        if (nativeContext.createIIRFilter === undefined) {\n            return createNativeIIRFilterNodeFaker(nativeContext, baseLatency, options);\n        }\n        // @todo TypeScript defines the parameters of createIIRFilter() as arrays of numbers.\n        const nativeIIRFilterNode = nativeContext.createIIRFilter(options.feedforward, options.feedback);\n        assignNativeAudioNodeOptions(nativeIIRFilterNode, options);\n        return nativeIIRFilterNode;\n    };\n};\n//# sourceMappingURL=native-iir-filter-node-factory.js.map","import { computeBufferSize } from '../helpers/compute-buffer-size';\nimport { filterBuffer } from '../helpers/filter-buffer';\nimport { interceptConnections } from '../helpers/intercept-connections';\nfunction divide(a, b) {\n    const denominator = b[0] * b[0] + b[1] * b[1];\n    return [(a[0] * b[0] + a[1] * b[1]) / denominator, (a[1] * b[0] - a[0] * b[1]) / denominator];\n}\nfunction multiply(a, b) {\n    return [a[0] * b[0] - a[1] * b[1], a[0] * b[1] + a[1] * b[0]];\n}\nfunction evaluatePolynomial(coefficient, z) {\n    let result = [0, 0];\n    for (let i = coefficient.length - 1; i >= 0; i -= 1) {\n        result = multiply(result, z);\n        result[0] += coefficient[i];\n    }\n    return result;\n}\nexport const createNativeIIRFilterNodeFakerFactory = (createInvalidAccessError, createInvalidStateError, createNativeScriptProcessorNode, createNotSupportedError) => {\n    return (nativeContext, baseLatency, { channelCount, channelCountMode, channelInterpretation, feedback, feedforward }) => {\n        const bufferSize = computeBufferSize(baseLatency, nativeContext.sampleRate);\n        const convertedFeedback = feedback instanceof Float64Array ? feedback : new Float64Array(feedback);\n        const convertedFeedforward = feedforward instanceof Float64Array ? feedforward : new Float64Array(feedforward);\n        const feedbackLength = convertedFeedback.length;\n        const feedforwardLength = convertedFeedforward.length;\n        const minLength = Math.min(feedbackLength, feedforwardLength);\n        if (feedbackLength === 0 || feedbackLength > 20) {\n            throw createNotSupportedError();\n        }\n        if (convertedFeedback[0] === 0) {\n            throw createInvalidStateError();\n        }\n        if (feedforwardLength === 0 || feedforwardLength > 20) {\n            throw createNotSupportedError();\n        }\n        if (convertedFeedforward[0] === 0) {\n            throw createInvalidStateError();\n        }\n        if (convertedFeedback[0] !== 1) {\n            for (let i = 0; i < feedforwardLength; i += 1) {\n                convertedFeedforward[i] /= convertedFeedback[0];\n            }\n            for (let i = 1; i < feedbackLength; i += 1) {\n                convertedFeedback[i] /= convertedFeedback[0];\n            }\n        }\n        const scriptProcessorNode = createNativeScriptProcessorNode(nativeContext, bufferSize, channelCount, channelCount);\n        scriptProcessorNode.channelCount = channelCount;\n        scriptProcessorNode.channelCountMode = channelCountMode;\n        scriptProcessorNode.channelInterpretation = channelInterpretation;\n        const bufferLength = 32;\n        const bufferIndexes = [];\n        const xBuffers = [];\n        const yBuffers = [];\n        for (let i = 0; i < channelCount; i += 1) {\n            bufferIndexes.push(0);\n            const xBuffer = new Float32Array(bufferLength);\n            const yBuffer = new Float32Array(bufferLength);\n            xBuffer.fill(0);\n            yBuffer.fill(0);\n            xBuffers.push(xBuffer);\n            yBuffers.push(yBuffer);\n        }\n        // tslint:disable-next-line:deprecation\n        scriptProcessorNode.onaudioprocess = (event) => {\n            const inputBuffer = event.inputBuffer;\n            const outputBuffer = event.outputBuffer;\n            const numberOfChannels = inputBuffer.numberOfChannels;\n            for (let i = 0; i < numberOfChannels; i += 1) {\n                const input = inputBuffer.getChannelData(i);\n                const output = outputBuffer.getChannelData(i);\n                bufferIndexes[i] = filterBuffer(convertedFeedback, feedbackLength, convertedFeedforward, feedforwardLength, minLength, xBuffers[i], yBuffers[i], bufferIndexes[i], bufferLength, input, output);\n            }\n        };\n        const nyquist = nativeContext.sampleRate / 2;\n        const nativeIIRFilterNodeFaker = {\n            get bufferSize() {\n                return bufferSize;\n            },\n            get channelCount() {\n                return scriptProcessorNode.channelCount;\n            },\n            set channelCount(value) {\n                scriptProcessorNode.channelCount = value;\n            },\n            get channelCountMode() {\n                return scriptProcessorNode.channelCountMode;\n            },\n            set channelCountMode(value) {\n                scriptProcessorNode.channelCountMode = value;\n            },\n            get channelInterpretation() {\n                return scriptProcessorNode.channelInterpretation;\n            },\n            set channelInterpretation(value) {\n                scriptProcessorNode.channelInterpretation = value;\n            },\n            get context() {\n                return scriptProcessorNode.context;\n            },\n            get inputs() {\n                return [scriptProcessorNode];\n            },\n            get numberOfInputs() {\n                return scriptProcessorNode.numberOfInputs;\n            },\n            get numberOfOutputs() {\n                return scriptProcessorNode.numberOfOutputs;\n            },\n            addEventListener(...args) {\n                // @todo Dissallow adding an audioprocess listener.\n                return scriptProcessorNode.addEventListener(args[0], args[1], args[2]);\n            },\n            dispatchEvent(...args) {\n                return scriptProcessorNode.dispatchEvent(args[0]);\n            },\n            getFrequencyResponse(frequencyHz, magResponse, phaseResponse) {\n                if (frequencyHz.length !== magResponse.length || magResponse.length !== phaseResponse.length) {\n                    throw createInvalidAccessError();\n                }\n                const length = frequencyHz.length;\n                for (let i = 0; i < length; i += 1) {\n                    const omega = -Math.PI * (frequencyHz[i] / nyquist);\n                    const z = [Math.cos(omega), Math.sin(omega)];\n                    const numerator = evaluatePolynomial(convertedFeedforward, z);\n                    const denominator = evaluatePolynomial(convertedFeedback, z);\n                    const response = divide(numerator, denominator);\n                    magResponse[i] = Math.sqrt(response[0] * response[0] + response[1] * response[1]);\n                    phaseResponse[i] = Math.atan2(response[1], response[0]);\n                }\n            },\n            removeEventListener(...args) {\n                return scriptProcessorNode.removeEventListener(args[0], args[1], args[2]);\n            }\n        };\n        return interceptConnections(nativeIIRFilterNodeFaker, scriptProcessorNode);\n    };\n};\n//# sourceMappingURL=native-iir-filter-node-faker-factory.js.map","export const createNativeMediaElementAudioSourceNode = (nativeAudioContext, options) => {\n    return nativeAudioContext.createMediaElementSource(options.mediaElement);\n};\n//# sourceMappingURL=native-media-element-audio-source-node.js.map","import { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeMediaStreamAudioDestinationNode = (nativeAudioContext, options) => {\n    const nativeMediaStreamAudioDestinationNode = nativeAudioContext.createMediaStreamDestination();\n    assignNativeAudioNodeOptions(nativeMediaStreamAudioDestinationNode, options);\n    // Bug #174: Safari does expose a wrong numberOfOutputs.\n    if (nativeMediaStreamAudioDestinationNode.numberOfOutputs === 1) {\n        Object.defineProperty(nativeMediaStreamAudioDestinationNode, 'numberOfOutputs', { get: () => 0 });\n    }\n    return nativeMediaStreamAudioDestinationNode;\n};\n//# sourceMappingURL=native-media-stream-audio-destination-node.js.map","export const createNativeMediaStreamAudioSourceNode = (nativeAudioContext, { mediaStream }) => {\n    const audioStreamTracks = mediaStream.getAudioTracks();\n    /*\n     * Bug #151: Safari does not use the audio track as input anymore if it gets removed from the mediaStream after construction.\n     * Bug #159: Safari picks the first audio track if the MediaStream has more than one audio track.\n     */\n    audioStreamTracks.sort((a, b) => (a.id < b.id ? -1 : a.id > b.id ? 1 : 0));\n    const filteredAudioStreamTracks = audioStreamTracks.slice(0, 1);\n    const nativeMediaStreamAudioSourceNode = nativeAudioContext.createMediaStreamSource(new MediaStream(filteredAudioStreamTracks));\n    /*\n     * Bug #151 & #159: The given mediaStream gets reconstructed before it gets passed to the native node which is why the accessor needs\n     * to be overwritten as it would otherwise expose the reconstructed version.\n     */\n    Object.defineProperty(nativeMediaStreamAudioSourceNode, 'mediaStream', { value: mediaStream });\n    return nativeMediaStreamAudioSourceNode;\n};\n//# sourceMappingURL=native-media-stream-audio-source-node.js.map","export const createNativeMediaStreamTrackAudioSourceNodeFactory = (createInvalidStateError, isNativeOfflineAudioContext) => {\n    return (nativeAudioContext, { mediaStreamTrack }) => {\n        // Bug #121: Only Firefox does yet support the MediaStreamTrackAudioSourceNode.\n        if (typeof nativeAudioContext.createMediaStreamTrackSource === 'function') {\n            return nativeAudioContext.createMediaStreamTrackSource(mediaStreamTrack);\n        }\n        const mediaStream = new MediaStream([mediaStreamTrack]);\n        const nativeMediaStreamAudioSourceNode = nativeAudioContext.createMediaStreamSource(mediaStream);\n        // Bug #120: Firefox does not throw an error if the mediaStream has no audio track.\n        if (mediaStreamTrack.kind !== 'audio') {\n            throw createInvalidStateError();\n        }\n        // Bug #172: Safari allows to create a MediaStreamAudioSourceNode with an OfflineAudioContext.\n        if (isNativeOfflineAudioContext(nativeAudioContext)) {\n            throw new TypeError();\n        }\n        return nativeMediaStreamAudioSourceNode;\n    };\n};\n//# sourceMappingURL=native-media-stream-track-audio-source-node-factory.js.map","export const createNativeOfflineAudioContextConstructor = (window) => {\n    if (window === null) {\n        return null;\n    }\n    if (window.hasOwnProperty('OfflineAudioContext')) {\n        return window.OfflineAudioContext;\n    }\n    return window.hasOwnProperty('webkitOfflineAudioContext') ? window.webkitOfflineAudioContext : null;\n};\n//# sourceMappingURL=native-offline-audio-context-constructor.js.map","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { wrapAudioScheduledSourceNodeStartMethodNegativeParameters } from '../helpers/wrap-audio-scheduled-source-node-start-method-negative-parameters';\nimport { wrapAudioScheduledSourceNodeStopMethodNegativeParameters } from '../helpers/wrap-audio-scheduled-source-node-stop-method-negative-parameters';\nexport const createNativeOscillatorNodeFactory = (addSilentConnection, cacheTestResult, testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls) => {\n    return (nativeContext, options) => {\n        const nativeOscillatorNode = nativeContext.createOscillator();\n        assignNativeAudioNodeOptions(nativeOscillatorNode, options);\n        assignNativeAudioNodeAudioParamValue(nativeOscillatorNode, options, 'detune');\n        assignNativeAudioNodeAudioParamValue(nativeOscillatorNode, options, 'frequency');\n        if (options.periodicWave !== undefined) {\n            nativeOscillatorNode.setPeriodicWave(options.periodicWave);\n        }\n        else {\n            assignNativeAudioNodeOption(nativeOscillatorNode, options, 'type');\n        }\n        // Bug #44: Only Chrome, Edge & Opera throw a RangeError yet.\n        if (!cacheTestResult(testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, () => testAudioScheduledSourceNodeStartMethodNegativeParametersSupport(nativeContext))) {\n            wrapAudioScheduledSourceNodeStartMethodNegativeParameters(nativeOscillatorNode);\n        }\n        // Bug #19: Safari does not ignore calls to stop() of an already stopped AudioBufferSourceNode.\n        if (!cacheTestResult(testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport, () => testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport(nativeContext))) {\n            wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls(nativeOscillatorNode, nativeContext);\n        }\n        // Bug #44: Only Firefox does not throw a RangeError yet.\n        if (!cacheTestResult(testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, () => testAudioScheduledSourceNodeStopMethodNegativeParametersSupport(nativeContext))) {\n            wrapAudioScheduledSourceNodeStopMethodNegativeParameters(nativeOscillatorNode);\n        }\n        // Bug #175: Safari will not fire an ended event if the OscillatorNode is unconnected.\n        addSilentConnection(nativeContext, nativeOscillatorNode);\n        return nativeOscillatorNode;\n    };\n};\n//# sourceMappingURL=native-oscillator-node-factory.js.map","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativePannerNodeFactory = (createNativePannerNodeFaker) => {\n    return (nativeContext, options) => {\n        const nativePannerNode = nativeContext.createPanner();\n        // Bug #124: Safari does not support modifying the orientation and the position with AudioParams.\n        if (nativePannerNode.orientationX === undefined) {\n            return createNativePannerNodeFaker(nativeContext, options);\n        }\n        assignNativeAudioNodeOptions(nativePannerNode, options);\n        assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'orientationX');\n        assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'orientationY');\n        assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'orientationZ');\n        assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'positionX');\n        assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'positionY');\n        assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'positionZ');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'coneInnerAngle');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'coneOuterAngle');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'coneOuterGain');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'distanceModel');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'maxDistance');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'panningModel');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'refDistance');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'rolloffFactor');\n        return nativePannerNode;\n    };\n};\n//# sourceMappingURL=native-panner-node-factory.js.map","import { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { interceptConnections } from '../helpers/intercept-connections';\nexport const createNativePannerNodeFakerFactory = (connectNativeAudioNodeToNativeAudioNode, createInvalidStateError, createNativeChannelMergerNode, createNativeGainNode, createNativeScriptProcessorNode, createNativeWaveShaperNode, createNotSupportedError, disconnectNativeAudioNodeFromNativeAudioNode, monitorConnections) => {\n    return (nativeContext, { coneInnerAngle, coneOuterAngle, coneOuterGain, distanceModel, maxDistance, orientationX, orientationY, orientationZ, panningModel, positionX, positionY, positionZ, refDistance, rolloffFactor, ...audioNodeOptions }) => {\n        const pannerNode = nativeContext.createPanner();\n        // Bug #125: Safari does not throw an error yet.\n        if (audioNodeOptions.channelCount > 2) {\n            throw createNotSupportedError();\n        }\n        // Bug #126: Safari does not throw an error yet.\n        if (audioNodeOptions.channelCountMode === 'max') {\n            throw createNotSupportedError();\n        }\n        assignNativeAudioNodeOptions(pannerNode, audioNodeOptions);\n        const SINGLE_CHANNEL_OPTIONS = {\n            channelCount: 1,\n            channelCountMode: 'explicit',\n            channelInterpretation: 'discrete'\n        };\n        const channelMergerNode = createNativeChannelMergerNode(nativeContext, {\n            ...SINGLE_CHANNEL_OPTIONS,\n            channelInterpretation: 'speakers',\n            numberOfInputs: 6\n        });\n        const inputGainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions, gain: 1 });\n        const orientationXGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 1 });\n        const orientationYGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        const orientationZGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        const positionXGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        const positionYGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        const positionZGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        const scriptProcessorNode = createNativeScriptProcessorNode(nativeContext, 256, 6, 1);\n        const waveShaperNode = createNativeWaveShaperNode(nativeContext, {\n            ...SINGLE_CHANNEL_OPTIONS,\n            curve: new Float32Array([1, 1]),\n            oversample: 'none'\n        });\n        let lastOrientation = [orientationX, orientationY, orientationZ];\n        let lastPosition = [positionX, positionY, positionZ];\n        // tslint:disable-next-line:deprecation\n        scriptProcessorNode.onaudioprocess = ({ inputBuffer }) => {\n            const orientation = [\n                inputBuffer.getChannelData(0)[0],\n                inputBuffer.getChannelData(1)[0],\n                inputBuffer.getChannelData(2)[0]\n            ];\n            if (orientation.some((value, index) => value !== lastOrientation[index])) {\n                pannerNode.setOrientation(...orientation); // tslint:disable-line:deprecation\n                lastOrientation = orientation;\n            }\n            const positon = [\n                inputBuffer.getChannelData(3)[0],\n                inputBuffer.getChannelData(4)[0],\n                inputBuffer.getChannelData(5)[0]\n            ];\n            if (positon.some((value, index) => value !== lastPosition[index])) {\n                pannerNode.setPosition(...positon); // tslint:disable-line:deprecation\n                lastPosition = positon;\n            }\n        };\n        Object.defineProperty(orientationYGainNode.gain, 'defaultValue', { get: () => 0 });\n        Object.defineProperty(orientationZGainNode.gain, 'defaultValue', { get: () => 0 });\n        Object.defineProperty(positionXGainNode.gain, 'defaultValue', { get: () => 0 });\n        Object.defineProperty(positionYGainNode.gain, 'defaultValue', { get: () => 0 });\n        Object.defineProperty(positionZGainNode.gain, 'defaultValue', { get: () => 0 });\n        const nativePannerNodeFaker = {\n            get bufferSize() {\n                return undefined;\n            },\n            get channelCount() {\n                return pannerNode.channelCount;\n            },\n            set channelCount(value) {\n                // Bug #125: Safari does not throw an error yet.\n                if (value > 2) {\n                    throw createNotSupportedError();\n                }\n                inputGainNode.channelCount = value;\n                pannerNode.channelCount = value;\n            },\n            get channelCountMode() {\n                return pannerNode.channelCountMode;\n            },\n            set channelCountMode(value) {\n                // Bug #126: Safari does not throw an error yet.\n                if (value === 'max') {\n                    throw createNotSupportedError();\n                }\n                inputGainNode.channelCountMode = value;\n                pannerNode.channelCountMode = value;\n            },\n            get channelInterpretation() {\n                return pannerNode.channelInterpretation;\n            },\n            set channelInterpretation(value) {\n                inputGainNode.channelInterpretation = value;\n                pannerNode.channelInterpretation = value;\n            },\n            get coneInnerAngle() {\n                return pannerNode.coneInnerAngle;\n            },\n            set coneInnerAngle(value) {\n                pannerNode.coneInnerAngle = value;\n            },\n            get coneOuterAngle() {\n                return pannerNode.coneOuterAngle;\n            },\n            set coneOuterAngle(value) {\n                pannerNode.coneOuterAngle = value;\n            },\n            get coneOuterGain() {\n                return pannerNode.coneOuterGain;\n            },\n            set coneOuterGain(value) {\n                // Bug #127: Safari does not throw an InvalidStateError yet.\n                if (value < 0 || value > 1) {\n                    throw createInvalidStateError();\n                }\n                pannerNode.coneOuterGain = value;\n            },\n            get context() {\n                return pannerNode.context;\n            },\n            get distanceModel() {\n                return pannerNode.distanceModel;\n            },\n            set distanceModel(value) {\n                pannerNode.distanceModel = value;\n            },\n            get inputs() {\n                return [inputGainNode];\n            },\n            get maxDistance() {\n                return pannerNode.maxDistance;\n            },\n            set maxDistance(value) {\n                // Bug #128: Safari does not throw an error yet.\n                if (value < 0) {\n                    throw new RangeError();\n                }\n                pannerNode.maxDistance = value;\n            },\n            get numberOfInputs() {\n                return pannerNode.numberOfInputs;\n            },\n            get numberOfOutputs() {\n                return pannerNode.numberOfOutputs;\n            },\n            get orientationX() {\n                return orientationXGainNode.gain;\n            },\n            get orientationY() {\n                return orientationYGainNode.gain;\n            },\n            get orientationZ() {\n                return orientationZGainNode.gain;\n            },\n            get panningModel() {\n                return pannerNode.panningModel;\n            },\n            set panningModel(value) {\n                pannerNode.panningModel = value;\n            },\n            get positionX() {\n                return positionXGainNode.gain;\n            },\n            get positionY() {\n                return positionYGainNode.gain;\n            },\n            get positionZ() {\n                return positionZGainNode.gain;\n            },\n            get refDistance() {\n                return pannerNode.refDistance;\n            },\n            set refDistance(value) {\n                // Bug #129: Safari does not throw an error yet.\n                if (value < 0) {\n                    throw new RangeError();\n                }\n                pannerNode.refDistance = value;\n            },\n            get rolloffFactor() {\n                return pannerNode.rolloffFactor;\n            },\n            set rolloffFactor(value) {\n                // Bug #130: Safari does not throw an error yet.\n                if (value < 0) {\n                    throw new RangeError();\n                }\n                pannerNode.rolloffFactor = value;\n            },\n            addEventListener(...args) {\n                return inputGainNode.addEventListener(args[0], args[1], args[2]);\n            },\n            dispatchEvent(...args) {\n                return inputGainNode.dispatchEvent(args[0]);\n            },\n            removeEventListener(...args) {\n                return inputGainNode.removeEventListener(args[0], args[1], args[2]);\n            }\n        };\n        if (coneInnerAngle !== nativePannerNodeFaker.coneInnerAngle) {\n            nativePannerNodeFaker.coneInnerAngle = coneInnerAngle;\n        }\n        if (coneOuterAngle !== nativePannerNodeFaker.coneOuterAngle) {\n            nativePannerNodeFaker.coneOuterAngle = coneOuterAngle;\n        }\n        if (coneOuterGain !== nativePannerNodeFaker.coneOuterGain) {\n            nativePannerNodeFaker.coneOuterGain = coneOuterGain;\n        }\n        if (distanceModel !== nativePannerNodeFaker.distanceModel) {\n            nativePannerNodeFaker.distanceModel = distanceModel;\n        }\n        if (maxDistance !== nativePannerNodeFaker.maxDistance) {\n            nativePannerNodeFaker.maxDistance = maxDistance;\n        }\n        if (orientationX !== nativePannerNodeFaker.orientationX.value) {\n            nativePannerNodeFaker.orientationX.value = orientationX;\n        }\n        if (orientationY !== nativePannerNodeFaker.orientationY.value) {\n            nativePannerNodeFaker.orientationY.value = orientationY;\n        }\n        if (orientationZ !== nativePannerNodeFaker.orientationZ.value) {\n            nativePannerNodeFaker.orientationZ.value = orientationZ;\n        }\n        if (panningModel !== nativePannerNodeFaker.panningModel) {\n            nativePannerNodeFaker.panningModel = panningModel;\n        }\n        if (positionX !== nativePannerNodeFaker.positionX.value) {\n            nativePannerNodeFaker.positionX.value = positionX;\n        }\n        if (positionY !== nativePannerNodeFaker.positionY.value) {\n            nativePannerNodeFaker.positionY.value = positionY;\n        }\n        if (positionZ !== nativePannerNodeFaker.positionZ.value) {\n            nativePannerNodeFaker.positionZ.value = positionZ;\n        }\n        if (refDistance !== nativePannerNodeFaker.refDistance) {\n            nativePannerNodeFaker.refDistance = refDistance;\n        }\n        if (rolloffFactor !== nativePannerNodeFaker.rolloffFactor) {\n            nativePannerNodeFaker.rolloffFactor = rolloffFactor;\n        }\n        if (lastOrientation[0] !== 1 || lastOrientation[1] !== 0 || lastOrientation[2] !== 0) {\n            pannerNode.setOrientation(...lastOrientation); // tslint:disable-line:deprecation\n        }\n        if (lastPosition[0] !== 0 || lastPosition[1] !== 0 || lastPosition[2] !== 0) {\n            pannerNode.setPosition(...lastPosition); // tslint:disable-line:deprecation\n        }\n        const whenConnected = () => {\n            inputGainNode.connect(pannerNode);\n            // Bug #119: Safari does not fully support the WaveShaperNode.\n            connectNativeAudioNodeToNativeAudioNode(inputGainNode, waveShaperNode, 0, 0);\n            waveShaperNode.connect(orientationXGainNode).connect(channelMergerNode, 0, 0);\n            waveShaperNode.connect(orientationYGainNode).connect(channelMergerNode, 0, 1);\n            waveShaperNode.connect(orientationZGainNode).connect(channelMergerNode, 0, 2);\n            waveShaperNode.connect(positionXGainNode).connect(channelMergerNode, 0, 3);\n            waveShaperNode.connect(positionYGainNode).connect(channelMergerNode, 0, 4);\n            waveShaperNode.connect(positionZGainNode).connect(channelMergerNode, 0, 5);\n            channelMergerNode.connect(scriptProcessorNode).connect(nativeContext.destination);\n        };\n        const whenDisconnected = () => {\n            inputGainNode.disconnect(pannerNode);\n            // Bug #119: Safari does not fully support the WaveShaperNode.\n            disconnectNativeAudioNodeFromNativeAudioNode(inputGainNode, waveShaperNode, 0, 0);\n            waveShaperNode.disconnect(orientationXGainNode);\n            orientationXGainNode.disconnect(channelMergerNode);\n            waveShaperNode.disconnect(orientationYGainNode);\n            orientationYGainNode.disconnect(channelMergerNode);\n            waveShaperNode.disconnect(orientationZGainNode);\n            orientationZGainNode.disconnect(channelMergerNode);\n            waveShaperNode.disconnect(positionXGainNode);\n            positionXGainNode.disconnect(channelMergerNode);\n            waveShaperNode.disconnect(positionYGainNode);\n            positionYGainNode.disconnect(channelMergerNode);\n            waveShaperNode.disconnect(positionZGainNode);\n            positionZGainNode.disconnect(channelMergerNode);\n            channelMergerNode.disconnect(scriptProcessorNode);\n            scriptProcessorNode.disconnect(nativeContext.destination);\n        };\n        return monitorConnections(interceptConnections(nativePannerNodeFaker, pannerNode), whenConnected, whenDisconnected);\n    };\n};\n//# sourceMappingURL=native-panner-node-faker-factory.js.map","export const createNativePeriodicWaveFactory = (createIndexSizeError) => {\n    return (nativeContext, { disableNormalization, imag, real }) => {\n        // Bug #180: Safari does not allow to use ordinary arrays.\n        const convertedImag = imag instanceof Float32Array ? imag : new Float32Array(imag);\n        const convertedReal = real instanceof Float32Array ? real : new Float32Array(real);\n        const nativePeriodicWave = nativeContext.createPeriodicWave(convertedReal, convertedImag, { disableNormalization });\n        // Bug #181: Only Firefox does throw an IndexSizeError so far if the given arrays have less than two values.\n        if (Array.from(imag).length < 2) {\n            throw createIndexSizeError();\n        }\n        return nativePeriodicWave;\n    };\n};\n//# sourceMappingURL=native-periodic-wave-factory.js.map","export const createNativeScriptProcessorNode = (nativeContext, bufferSize, numberOfInputChannels, numberOfOutputChannels) => {\n    return nativeContext.createScriptProcessor(bufferSize, numberOfInputChannels, numberOfOutputChannels);\n};\n//# sourceMappingURL=native-script-processor-node.js.map","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeStereoPannerNodeFactory = (createNativeStereoPannerNodeFaker, createNotSupportedError) => {\n    return (nativeContext, options) => {\n        const channelCountMode = options.channelCountMode;\n        /*\n         * Bug #105: The channelCountMode of 'clamped-max' should be supported. However it is not possible to write a polyfill for Safari\n         * which supports it and therefore it can't be supported at all.\n         */\n        if (channelCountMode === 'clamped-max') {\n            throw createNotSupportedError();\n        }\n        // Bug #105: Safari does not support the StereoPannerNode.\n        if (nativeContext.createStereoPanner === undefined) {\n            return createNativeStereoPannerNodeFaker(nativeContext, options);\n        }\n        const nativeStereoPannerNode = nativeContext.createStereoPanner();\n        assignNativeAudioNodeOptions(nativeStereoPannerNode, options);\n        assignNativeAudioNodeAudioParamValue(nativeStereoPannerNode, options, 'pan');\n        /*\n         * Bug #105: The channelCountMode of 'clamped-max' should be supported. However it is not possible to write a polyfill for Safari\n         * which supports it and therefore it can't be supported at all.\n         */\n        Object.defineProperty(nativeStereoPannerNode, 'channelCountMode', {\n            get: () => channelCountMode,\n            set: (value) => {\n                if (value !== channelCountMode) {\n                    throw createNotSupportedError();\n                }\n            }\n        });\n        return nativeStereoPannerNode;\n    };\n};\n//# sourceMappingURL=native-stereo-panner-node-factory.js.map","import { interceptConnections } from '../helpers/intercept-connections';\nexport const createNativeStereoPannerNodeFakerFactory = (createNativeChannelMergerNode, createNativeChannelSplitterNode, createNativeGainNode, createNativeWaveShaperNode, createNotSupportedError, monitorConnections) => {\n    // The curve has a size of 14bit plus 1 value to have an exact representation for zero. This value has been determined experimentally.\n    const CURVE_SIZE = 16385;\n    const DC_CURVE = new Float32Array([1, 1]);\n    const HALF_PI = Math.PI / 2;\n    const SINGLE_CHANNEL_OPTIONS = { channelCount: 1, channelCountMode: 'explicit', channelInterpretation: 'discrete' };\n    const SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS = { ...SINGLE_CHANNEL_OPTIONS, oversample: 'none' };\n    const buildInternalGraphForMono = (nativeContext, inputGainNode, panGainNode, channelMergerNode) => {\n        const leftWaveShaperCurve = new Float32Array(CURVE_SIZE);\n        const rightWaveShaperCurve = new Float32Array(CURVE_SIZE);\n        for (let i = 0; i < CURVE_SIZE; i += 1) {\n            const x = (i / (CURVE_SIZE - 1)) * HALF_PI;\n            leftWaveShaperCurve[i] = Math.cos(x);\n            rightWaveShaperCurve[i] = Math.sin(x);\n        }\n        const leftGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        // Bug #119: Safari does not fully support the WaveShaperNode.\n        const leftWaveShaperNode = (createNativeWaveShaperNode(nativeContext, { ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS, curve: leftWaveShaperCurve }));\n        // Bug #119: Safari does not fully support the WaveShaperNode.\n        const panWaveShaperNode = (createNativeWaveShaperNode(nativeContext, { ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS, curve: DC_CURVE }));\n        const rightGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        // Bug #119: Safari does not fully support the WaveShaperNode.\n        const rightWaveShaperNode = (createNativeWaveShaperNode(nativeContext, { ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS, curve: rightWaveShaperCurve }));\n        return {\n            connectGraph() {\n                inputGainNode.connect(leftGainNode);\n                inputGainNode.connect(panWaveShaperNode.inputs[0]);\n                inputGainNode.connect(rightGainNode);\n                panWaveShaperNode.connect(panGainNode);\n                panGainNode.connect(leftWaveShaperNode.inputs[0]);\n                panGainNode.connect(rightWaveShaperNode.inputs[0]);\n                leftWaveShaperNode.connect(leftGainNode.gain);\n                rightWaveShaperNode.connect(rightGainNode.gain);\n                leftGainNode.connect(channelMergerNode, 0, 0);\n                rightGainNode.connect(channelMergerNode, 0, 1);\n            },\n            disconnectGraph() {\n                inputGainNode.disconnect(leftGainNode);\n                inputGainNode.disconnect(panWaveShaperNode.inputs[0]);\n                inputGainNode.disconnect(rightGainNode);\n                panWaveShaperNode.disconnect(panGainNode);\n                panGainNode.disconnect(leftWaveShaperNode.inputs[0]);\n                panGainNode.disconnect(rightWaveShaperNode.inputs[0]);\n                leftWaveShaperNode.disconnect(leftGainNode.gain);\n                rightWaveShaperNode.disconnect(rightGainNode.gain);\n                leftGainNode.disconnect(channelMergerNode, 0, 0);\n                rightGainNode.disconnect(channelMergerNode, 0, 1);\n            }\n        };\n    };\n    const buildInternalGraphForStereo = (nativeContext, inputGainNode, panGainNode, channelMergerNode) => {\n        const leftInputForLeftOutputWaveShaperCurve = new Float32Array(CURVE_SIZE);\n        const leftInputForRightOutputWaveShaperCurve = new Float32Array(CURVE_SIZE);\n        const rightInputForLeftOutputWaveShaperCurve = new Float32Array(CURVE_SIZE);\n        const rightInputForRightOutputWaveShaperCurve = new Float32Array(CURVE_SIZE);\n        const centerIndex = Math.floor(CURVE_SIZE / 2);\n        for (let i = 0; i < CURVE_SIZE; i += 1) {\n            if (i > centerIndex) {\n                const x = ((i - centerIndex) / (CURVE_SIZE - 1 - centerIndex)) * HALF_PI;\n                leftInputForLeftOutputWaveShaperCurve[i] = Math.cos(x);\n                leftInputForRightOutputWaveShaperCurve[i] = Math.sin(x);\n                rightInputForLeftOutputWaveShaperCurve[i] = 0;\n                rightInputForRightOutputWaveShaperCurve[i] = 1;\n            }\n            else {\n                const x = (i / (CURVE_SIZE - 1 - centerIndex)) * HALF_PI;\n                leftInputForLeftOutputWaveShaperCurve[i] = 1;\n                leftInputForRightOutputWaveShaperCurve[i] = 0;\n                rightInputForLeftOutputWaveShaperCurve[i] = Math.cos(x);\n                rightInputForRightOutputWaveShaperCurve[i] = Math.sin(x);\n            }\n        }\n        const channelSplitterNode = createNativeChannelSplitterNode(nativeContext, {\n            channelCount: 2,\n            channelCountMode: 'explicit',\n            channelInterpretation: 'discrete',\n            numberOfOutputs: 2\n        });\n        const leftInputForLeftOutputGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        // Bug #119: Safari does not fully support the WaveShaperNode.\n        const leftInputForLeftOutputWaveShaperNode = createNativeWaveShaperNode(nativeContext, {\n            ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS,\n            curve: leftInputForLeftOutputWaveShaperCurve\n        });\n        const leftInputForRightOutputGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        // Bug #119: Safari does not fully support the WaveShaperNode.\n        const leftInputForRightOutputWaveShaperNode = createNativeWaveShaperNode(nativeContext, {\n            ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS,\n            curve: leftInputForRightOutputWaveShaperCurve\n        });\n        // Bug #119: Safari does not fully support the WaveShaperNode.\n        const panWaveShaperNode = (createNativeWaveShaperNode(nativeContext, { ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS, curve: DC_CURVE }));\n        const rightInputForLeftOutputGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        // Bug #119: Safari does not fully support the WaveShaperNode.\n        const rightInputForLeftOutputWaveShaperNode = createNativeWaveShaperNode(nativeContext, {\n            ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS,\n            curve: rightInputForLeftOutputWaveShaperCurve\n        });\n        const rightInputForRightOutputGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        // Bug #119: Safari does not fully support the WaveShaperNode.\n        const rightInputForRightOutputWaveShaperNode = createNativeWaveShaperNode(nativeContext, {\n            ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS,\n            curve: rightInputForRightOutputWaveShaperCurve\n        });\n        return {\n            connectGraph() {\n                inputGainNode.connect(channelSplitterNode);\n                inputGainNode.connect(panWaveShaperNode.inputs[0]);\n                channelSplitterNode.connect(leftInputForLeftOutputGainNode, 0);\n                channelSplitterNode.connect(leftInputForRightOutputGainNode, 0);\n                channelSplitterNode.connect(rightInputForLeftOutputGainNode, 1);\n                channelSplitterNode.connect(rightInputForRightOutputGainNode, 1);\n                panWaveShaperNode.connect(panGainNode);\n                panGainNode.connect(leftInputForLeftOutputWaveShaperNode.inputs[0]);\n                panGainNode.connect(leftInputForRightOutputWaveShaperNode.inputs[0]);\n                panGainNode.connect(rightInputForLeftOutputWaveShaperNode.inputs[0]);\n                panGainNode.connect(rightInputForRightOutputWaveShaperNode.inputs[0]);\n                leftInputForLeftOutputWaveShaperNode.connect(leftInputForLeftOutputGainNode.gain);\n                leftInputForRightOutputWaveShaperNode.connect(leftInputForRightOutputGainNode.gain);\n                rightInputForLeftOutputWaveShaperNode.connect(rightInputForLeftOutputGainNode.gain);\n                rightInputForRightOutputWaveShaperNode.connect(rightInputForRightOutputGainNode.gain);\n                leftInputForLeftOutputGainNode.connect(channelMergerNode, 0, 0);\n                rightInputForLeftOutputGainNode.connect(channelMergerNode, 0, 0);\n                leftInputForRightOutputGainNode.connect(channelMergerNode, 0, 1);\n                rightInputForRightOutputGainNode.connect(channelMergerNode, 0, 1);\n            },\n            disconnectGraph() {\n                inputGainNode.disconnect(channelSplitterNode);\n                inputGainNode.disconnect(panWaveShaperNode.inputs[0]);\n                channelSplitterNode.disconnect(leftInputForLeftOutputGainNode, 0);\n                channelSplitterNode.disconnect(leftInputForRightOutputGainNode, 0);\n                channelSplitterNode.disconnect(rightInputForLeftOutputGainNode, 1);\n                channelSplitterNode.disconnect(rightInputForRightOutputGainNode, 1);\n                panWaveShaperNode.disconnect(panGainNode);\n                panGainNode.disconnect(leftInputForLeftOutputWaveShaperNode.inputs[0]);\n                panGainNode.disconnect(leftInputForRightOutputWaveShaperNode.inputs[0]);\n                panGainNode.disconnect(rightInputForLeftOutputWaveShaperNode.inputs[0]);\n                panGainNode.disconnect(rightInputForRightOutputWaveShaperNode.inputs[0]);\n                leftInputForLeftOutputWaveShaperNode.disconnect(leftInputForLeftOutputGainNode.gain);\n                leftInputForRightOutputWaveShaperNode.disconnect(leftInputForRightOutputGainNode.gain);\n                rightInputForLeftOutputWaveShaperNode.disconnect(rightInputForLeftOutputGainNode.gain);\n                rightInputForRightOutputWaveShaperNode.disconnect(rightInputForRightOutputGainNode.gain);\n                leftInputForLeftOutputGainNode.disconnect(channelMergerNode, 0, 0);\n                rightInputForLeftOutputGainNode.disconnect(channelMergerNode, 0, 0);\n                leftInputForRightOutputGainNode.disconnect(channelMergerNode, 0, 1);\n                rightInputForRightOutputGainNode.disconnect(channelMergerNode, 0, 1);\n            }\n        };\n    };\n    const buildInternalGraph = (nativeContext, channelCount, inputGainNode, panGainNode, channelMergerNode) => {\n        if (channelCount === 1) {\n            return buildInternalGraphForMono(nativeContext, inputGainNode, panGainNode, channelMergerNode);\n        }\n        if (channelCount === 2) {\n            return buildInternalGraphForStereo(nativeContext, inputGainNode, panGainNode, channelMergerNode);\n        }\n        throw createNotSupportedError();\n    };\n    return (nativeContext, { channelCount, channelCountMode, pan, ...audioNodeOptions }) => {\n        if (channelCountMode === 'max') {\n            throw createNotSupportedError();\n        }\n        const channelMergerNode = createNativeChannelMergerNode(nativeContext, {\n            ...audioNodeOptions,\n            channelCount: 1,\n            channelCountMode,\n            numberOfInputs: 2\n        });\n        const inputGainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions, channelCount, channelCountMode, gain: 1 });\n        const panGainNode = createNativeGainNode(nativeContext, {\n            channelCount: 1,\n            channelCountMode: 'explicit',\n            channelInterpretation: 'discrete',\n            gain: pan\n        });\n        let { connectGraph, disconnectGraph } = buildInternalGraph(nativeContext, channelCount, inputGainNode, panGainNode, channelMergerNode);\n        Object.defineProperty(panGainNode.gain, 'defaultValue', { get: () => 0 });\n        Object.defineProperty(panGainNode.gain, 'minValue', { get: () => -1 });\n        const nativeStereoPannerNodeFakerFactory = {\n            get bufferSize() {\n                return undefined;\n            },\n            get channelCount() {\n                return inputGainNode.channelCount;\n            },\n            set channelCount(value) {\n                if (inputGainNode.channelCount !== value) {\n                    if (isConnected) {\n                        disconnectGraph();\n                    }\n                    ({ connectGraph, disconnectGraph } = buildInternalGraph(nativeContext, value, inputGainNode, panGainNode, channelMergerNode));\n                    if (isConnected) {\n                        connectGraph();\n                    }\n                }\n                inputGainNode.channelCount = value;\n            },\n            get channelCountMode() {\n                return inputGainNode.channelCountMode;\n            },\n            set channelCountMode(value) {\n                if (value === 'clamped-max' || value === 'max') {\n                    throw createNotSupportedError();\n                }\n                inputGainNode.channelCountMode = value;\n            },\n            get channelInterpretation() {\n                return inputGainNode.channelInterpretation;\n            },\n            set channelInterpretation(value) {\n                inputGainNode.channelInterpretation = value;\n            },\n            get context() {\n                return inputGainNode.context;\n            },\n            get inputs() {\n                return [inputGainNode];\n            },\n            get numberOfInputs() {\n                return inputGainNode.numberOfInputs;\n            },\n            get numberOfOutputs() {\n                return inputGainNode.numberOfOutputs;\n            },\n            get pan() {\n                return panGainNode.gain;\n            },\n            addEventListener(...args) {\n                return inputGainNode.addEventListener(args[0], args[1], args[2]);\n            },\n            dispatchEvent(...args) {\n                return inputGainNode.dispatchEvent(args[0]);\n            },\n            removeEventListener(...args) {\n                return inputGainNode.removeEventListener(args[0], args[1], args[2]);\n            }\n        };\n        let isConnected = false;\n        const whenConnected = () => {\n            connectGraph();\n            isConnected = true;\n        };\n        const whenDisconnected = () => {\n            disconnectGraph();\n            isConnected = false;\n        };\n        return monitorConnections(interceptConnections(nativeStereoPannerNodeFakerFactory, channelMergerNode), whenConnected, whenDisconnected);\n    };\n};\n//# sourceMappingURL=native-stereo-panner-node-faker-factory.js.map","import { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeWaveShaperNodeFactory = (createConnectedNativeAudioBufferSourceNode, createInvalidStateError, createNativeWaveShaperNodeFaker, isDCCurve, monitorConnections, nativeAudioContextConstructor, overwriteAccessors) => {\n    return (nativeContext, options) => {\n        const nativeWaveShaperNode = nativeContext.createWaveShaper();\n        /*\n         * Bug #119: Safari does not correctly map the values.\n         * @todo Unfortunately there is no way to test for this behavior in a synchronous fashion which is why testing for the existence of\n         * the webkitAudioContext is used as a workaround here.\n         */\n        if (nativeAudioContextConstructor !== null && nativeAudioContextConstructor.name === 'webkitAudioContext') {\n            return createNativeWaveShaperNodeFaker(nativeContext, options);\n        }\n        assignNativeAudioNodeOptions(nativeWaveShaperNode, options);\n        const curve = options.curve === null || options.curve instanceof Float32Array ? options.curve : new Float32Array(options.curve);\n        // Bug #104: Chrome, Edge and Opera will throw an InvalidAccessError when the curve has less than two samples.\n        if (curve !== null && curve.length < 2) {\n            throw createInvalidStateError();\n        }\n        // Only values of type Float32Array can be assigned to the curve property.\n        assignNativeAudioNodeOption(nativeWaveShaperNode, { curve }, 'curve');\n        assignNativeAudioNodeOption(nativeWaveShaperNode, options, 'oversample');\n        let disconnectNativeAudioBufferSourceNode = null;\n        let isConnected = false;\n        overwriteAccessors(nativeWaveShaperNode, 'curve', (get) => () => get.call(nativeWaveShaperNode), (set) => (value) => {\n            set.call(nativeWaveShaperNode, value);\n            if (isConnected) {\n                if (isDCCurve(value) && disconnectNativeAudioBufferSourceNode === null) {\n                    disconnectNativeAudioBufferSourceNode = createConnectedNativeAudioBufferSourceNode(nativeContext, nativeWaveShaperNode);\n                }\n                else if (!isDCCurve(value) && disconnectNativeAudioBufferSourceNode !== null) {\n                    disconnectNativeAudioBufferSourceNode();\n                    disconnectNativeAudioBufferSourceNode = null;\n                }\n            }\n            return value;\n        });\n        const whenConnected = () => {\n            isConnected = true;\n            if (isDCCurve(nativeWaveShaperNode.curve)) {\n                disconnectNativeAudioBufferSourceNode = createConnectedNativeAudioBufferSourceNode(nativeContext, nativeWaveShaperNode);\n            }\n        };\n        const whenDisconnected = () => {\n            isConnected = false;\n            if (disconnectNativeAudioBufferSourceNode !== null) {\n                disconnectNativeAudioBufferSourceNode();\n                disconnectNativeAudioBufferSourceNode = null;\n            }\n        };\n        return monitorConnections(nativeWaveShaperNode, whenConnected, whenDisconnected);\n    };\n};\n//# sourceMappingURL=native-wave-shaper-node-factory.js.map","import { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { interceptConnections } from '../helpers/intercept-connections';\nexport const createNativeWaveShaperNodeFakerFactory = (createConnectedNativeAudioBufferSourceNode, createInvalidStateError, createNativeGainNode, isDCCurve, monitorConnections) => {\n    return (nativeContext, { curve, oversample, ...audioNodeOptions }) => {\n        const negativeWaveShaperNode = nativeContext.createWaveShaper();\n        const positiveWaveShaperNode = nativeContext.createWaveShaper();\n        assignNativeAudioNodeOptions(negativeWaveShaperNode, audioNodeOptions);\n        assignNativeAudioNodeOptions(positiveWaveShaperNode, audioNodeOptions);\n        const inputGainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions, gain: 1 });\n        const invertGainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions, gain: -1 });\n        const outputGainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions, gain: 1 });\n        const revertGainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions, gain: -1 });\n        let disconnectNativeAudioBufferSourceNode = null;\n        let isConnected = false;\n        let unmodifiedCurve = null;\n        const nativeWaveShaperNodeFaker = {\n            get bufferSize() {\n                return undefined;\n            },\n            get channelCount() {\n                return negativeWaveShaperNode.channelCount;\n            },\n            set channelCount(value) {\n                inputGainNode.channelCount = value;\n                invertGainNode.channelCount = value;\n                negativeWaveShaperNode.channelCount = value;\n                outputGainNode.channelCount = value;\n                positiveWaveShaperNode.channelCount = value;\n                revertGainNode.channelCount = value;\n            },\n            get channelCountMode() {\n                return negativeWaveShaperNode.channelCountMode;\n            },\n            set channelCountMode(value) {\n                inputGainNode.channelCountMode = value;\n                invertGainNode.channelCountMode = value;\n                negativeWaveShaperNode.channelCountMode = value;\n                outputGainNode.channelCountMode = value;\n                positiveWaveShaperNode.channelCountMode = value;\n                revertGainNode.channelCountMode = value;\n            },\n            get channelInterpretation() {\n                return negativeWaveShaperNode.channelInterpretation;\n            },\n            set channelInterpretation(value) {\n                inputGainNode.channelInterpretation = value;\n                invertGainNode.channelInterpretation = value;\n                negativeWaveShaperNode.channelInterpretation = value;\n                outputGainNode.channelInterpretation = value;\n                positiveWaveShaperNode.channelInterpretation = value;\n                revertGainNode.channelInterpretation = value;\n            },\n            get context() {\n                return negativeWaveShaperNode.context;\n            },\n            get curve() {\n                return unmodifiedCurve;\n            },\n            set curve(value) {\n                // Bug #102: Safari does not throw an InvalidStateError when the curve has less than two samples.\n                if (value !== null && value.length < 2) {\n                    throw createInvalidStateError();\n                }\n                if (value === null) {\n                    negativeWaveShaperNode.curve = value;\n                    positiveWaveShaperNode.curve = value;\n                }\n                else {\n                    const curveLength = value.length;\n                    const negativeCurve = new Float32Array(curveLength + 2 - (curveLength % 2));\n                    const positiveCurve = new Float32Array(curveLength + 2 - (curveLength % 2));\n                    negativeCurve[0] = value[0];\n                    positiveCurve[0] = -value[curveLength - 1];\n                    const length = Math.ceil((curveLength + 1) / 2);\n                    const centerIndex = (curveLength + 1) / 2 - 1;\n                    for (let i = 1; i < length; i += 1) {\n                        const theoreticIndex = (i / length) * centerIndex;\n                        const lowerIndex = Math.floor(theoreticIndex);\n                        const upperIndex = Math.ceil(theoreticIndex);\n                        negativeCurve[i] =\n                            lowerIndex === upperIndex\n                                ? value[lowerIndex]\n                                : (1 - (theoreticIndex - lowerIndex)) * value[lowerIndex] +\n                                    (1 - (upperIndex - theoreticIndex)) * value[upperIndex];\n                        positiveCurve[i] =\n                            lowerIndex === upperIndex\n                                ? -value[curveLength - 1 - lowerIndex]\n                                : -((1 - (theoreticIndex - lowerIndex)) * value[curveLength - 1 - lowerIndex]) -\n                                    (1 - (upperIndex - theoreticIndex)) * value[curveLength - 1 - upperIndex];\n                    }\n                    negativeCurve[length] = curveLength % 2 === 1 ? value[length - 1] : (value[length - 2] + value[length - 1]) / 2;\n                    negativeWaveShaperNode.curve = negativeCurve;\n                    positiveWaveShaperNode.curve = positiveCurve;\n                }\n                unmodifiedCurve = value;\n                if (isConnected) {\n                    if (isDCCurve(unmodifiedCurve) && disconnectNativeAudioBufferSourceNode === null) {\n                        disconnectNativeAudioBufferSourceNode = createConnectedNativeAudioBufferSourceNode(nativeContext, inputGainNode);\n                    }\n                    else if (disconnectNativeAudioBufferSourceNode !== null) {\n                        disconnectNativeAudioBufferSourceNode();\n                        disconnectNativeAudioBufferSourceNode = null;\n                    }\n                }\n            },\n            get inputs() {\n                return [inputGainNode];\n            },\n            get numberOfInputs() {\n                return negativeWaveShaperNode.numberOfInputs;\n            },\n            get numberOfOutputs() {\n                return negativeWaveShaperNode.numberOfOutputs;\n            },\n            get oversample() {\n                return negativeWaveShaperNode.oversample;\n            },\n            set oversample(value) {\n                negativeWaveShaperNode.oversample = value;\n                positiveWaveShaperNode.oversample = value;\n            },\n            addEventListener(...args) {\n                return inputGainNode.addEventListener(args[0], args[1], args[2]);\n            },\n            dispatchEvent(...args) {\n                return inputGainNode.dispatchEvent(args[0]);\n            },\n            removeEventListener(...args) {\n                return inputGainNode.removeEventListener(args[0], args[1], args[2]);\n            }\n        };\n        if (curve !== null) {\n            // Only values of type Float32Array can be assigned to the curve property.\n            nativeWaveShaperNodeFaker.curve = curve instanceof Float32Array ? curve : new Float32Array(curve);\n        }\n        if (oversample !== nativeWaveShaperNodeFaker.oversample) {\n            nativeWaveShaperNodeFaker.oversample = oversample;\n        }\n        const whenConnected = () => {\n            inputGainNode.connect(negativeWaveShaperNode).connect(outputGainNode);\n            inputGainNode.connect(invertGainNode).connect(positiveWaveShaperNode).connect(revertGainNode).connect(outputGainNode);\n            isConnected = true;\n            if (isDCCurve(unmodifiedCurve)) {\n                disconnectNativeAudioBufferSourceNode = createConnectedNativeAudioBufferSourceNode(nativeContext, inputGainNode);\n            }\n        };\n        const whenDisconnected = () => {\n            inputGainNode.disconnect(negativeWaveShaperNode);\n            negativeWaveShaperNode.disconnect(outputGainNode);\n            inputGainNode.disconnect(invertGainNode);\n            invertGainNode.disconnect(positiveWaveShaperNode);\n            positiveWaveShaperNode.disconnect(revertGainNode);\n            revertGainNode.disconnect(outputGainNode);\n            isConnected = false;\n            if (disconnectNativeAudioBufferSourceNode !== null) {\n                disconnectNativeAudioBufferSourceNode();\n                disconnectNativeAudioBufferSourceNode = null;\n            }\n        };\n        return monitorConnections(interceptConnections(nativeWaveShaperNodeFaker, outputGainNode), whenConnected, whenDisconnected);\n    };\n};\n//# sourceMappingURL=native-wave-shaper-node-faker-factory.js.map","export const createNotSupportedError = () => new DOMException('', 'NotSupportedError');\n//# sourceMappingURL=not-supported-error.js.map","import { deactivateAudioGraph } from '../helpers/deactivate-audio-graph';\nimport { testPromiseSupport } from '../helpers/test-promise-support';\nconst DEFAULT_OPTIONS = {\n    numberOfChannels: 1\n};\nexport const createOfflineAudioContextConstructor = (baseAudioContextConstructor, cacheTestResult, createInvalidStateError, createNativeOfflineAudioContext, startRendering) => {\n    return class OfflineAudioContext extends baseAudioContextConstructor {\n        constructor(a, b, c) {\n            let options;\n            if (typeof a === 'number' && b !== undefined && c !== undefined) {\n                options = { length: b, numberOfChannels: a, sampleRate: c };\n            }\n            else if (typeof a === 'object') {\n                options = a;\n            }\n            else {\n                throw new Error('The given parameters are not valid.');\n            }\n            const { length, numberOfChannels, sampleRate } = { ...DEFAULT_OPTIONS, ...options };\n            const nativeOfflineAudioContext = createNativeOfflineAudioContext(numberOfChannels, length, sampleRate);\n            // #21 Safari does not support promises and therefore would fire the statechange event before the promise can be resolved.\n            if (!cacheTestResult(testPromiseSupport, () => testPromiseSupport(nativeOfflineAudioContext))) {\n                nativeOfflineAudioContext.addEventListener('statechange', (() => {\n                    let i = 0;\n                    const delayStateChangeEvent = (event) => {\n                        if (this._state === 'running') {\n                            if (i > 0) {\n                                nativeOfflineAudioContext.removeEventListener('statechange', delayStateChangeEvent);\n                                event.stopImmediatePropagation();\n                                this._waitForThePromiseToSettle(event);\n                            }\n                            else {\n                                i += 1;\n                            }\n                        }\n                    };\n                    return delayStateChangeEvent;\n                })());\n            }\n            super(nativeOfflineAudioContext, numberOfChannels);\n            this._length = length;\n            this._nativeOfflineAudioContext = nativeOfflineAudioContext;\n            this._state = null;\n        }\n        get length() {\n            // Bug #17: Safari does not yet expose the length.\n            if (this._nativeOfflineAudioContext.length === undefined) {\n                return this._length;\n            }\n            return this._nativeOfflineAudioContext.length;\n        }\n        get state() {\n            return this._state === null ? this._nativeOfflineAudioContext.state : this._state;\n        }\n        startRendering() {\n            /*\n             * Bug #9 & #59: It is theoretically possible that startRendering() will first render a partialOfflineAudioContext. Therefore\n             * the state of the nativeOfflineAudioContext might no transition to running immediately.\n             */\n            if (this._state === 'running') {\n                return Promise.reject(createInvalidStateError());\n            }\n            this._state = 'running';\n            return startRendering(this.destination, this._nativeOfflineAudioContext).finally(() => {\n                this._state = null;\n                deactivateAudioGraph(this);\n            });\n        }\n        _waitForThePromiseToSettle(event) {\n            if (this._state === null) {\n                this._nativeOfflineAudioContext.dispatchEvent(event);\n            }\n            else {\n                setTimeout(() => this._waitForThePromiseToSettle(event));\n            }\n        }\n    };\n};\n//# sourceMappingURL=offline-audio-context-constructor.js.map","import { isActiveAudioNode } from '../helpers/is-active-audio-node';\nimport { setInternalStateToActive } from '../helpers/set-internal-state-to-active';\nimport { setInternalStateToPassive } from '../helpers/set-internal-state-to-passive';\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    detune: 0,\n    frequency: 440,\n    periodicWave: undefined,\n    type: 'sine'\n};\nexport const createOscillatorNodeConstructor = (audioNodeConstructor, createAudioParam, createNativeOscillatorNode, createOscillatorNodeRenderer, getNativeContext, isNativeOfflineAudioContext, wrapEventListener) => {\n    return class OscillatorNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeOscillatorNode = createNativeOscillatorNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const oscillatorNodeRenderer = (isOffline ? createOscillatorNodeRenderer() : null);\n            const nyquist = context.sampleRate / 2;\n            super(context, false, nativeOscillatorNode, oscillatorNodeRenderer);\n            // Bug #81: Firefox & Safari do not export the correct values for maxValue and minValue.\n            this._detune = createAudioParam(this, isOffline, nativeOscillatorNode.detune, 153600, -153600);\n            // Bug #76: Safari does not export the correct values for maxValue and minValue.\n            this._frequency = createAudioParam(this, isOffline, nativeOscillatorNode.frequency, nyquist, -nyquist);\n            this._nativeOscillatorNode = nativeOscillatorNode;\n            this._onended = null;\n            this._oscillatorNodeRenderer = oscillatorNodeRenderer;\n            if (this._oscillatorNodeRenderer !== null && mergedOptions.periodicWave !== undefined) {\n                this._oscillatorNodeRenderer.periodicWave =\n                    mergedOptions.periodicWave;\n            }\n        }\n        get detune() {\n            return this._detune;\n        }\n        get frequency() {\n            return this._frequency;\n        }\n        get onended() {\n            return this._onended;\n        }\n        set onended(value) {\n            const wrappedListener = typeof value === 'function' ? wrapEventListener(this, value) : null;\n            this._nativeOscillatorNode.onended = wrappedListener;\n            const nativeOnEnded = this._nativeOscillatorNode.onended;\n            this._onended = nativeOnEnded !== null && nativeOnEnded === wrappedListener ? value : nativeOnEnded;\n        }\n        get type() {\n            return this._nativeOscillatorNode.type;\n        }\n        set type(value) {\n            this._nativeOscillatorNode.type = value;\n            if (this._oscillatorNodeRenderer !== null) {\n                this._oscillatorNodeRenderer.periodicWave = null;\n            }\n        }\n        setPeriodicWave(periodicWave) {\n            this._nativeOscillatorNode.setPeriodicWave(periodicWave);\n            if (this._oscillatorNodeRenderer !== null) {\n                this._oscillatorNodeRenderer.periodicWave = periodicWave;\n            }\n        }\n        start(when = 0) {\n            this._nativeOscillatorNode.start(when);\n            if (this._oscillatorNodeRenderer !== null) {\n                this._oscillatorNodeRenderer.start = when;\n            }\n            if (this.context.state !== 'closed') {\n                setInternalStateToActive(this);\n                const resetInternalStateToPassive = () => {\n                    this._nativeOscillatorNode.removeEventListener('ended', resetInternalStateToPassive);\n                    if (isActiveAudioNode(this)) {\n                        setInternalStateToPassive(this);\n                    }\n                };\n                this._nativeOscillatorNode.addEventListener('ended', resetInternalStateToPassive);\n            }\n        }\n        stop(when = 0) {\n            this._nativeOscillatorNode.stop(when);\n            if (this._oscillatorNodeRenderer !== null) {\n                this._oscillatorNodeRenderer.stop = when;\n            }\n        }\n    };\n};\n//# sourceMappingURL=oscillator-node-constructor.js.map","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createOscillatorNodeRendererFactory = (connectAudioParam, createNativeOscillatorNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeOscillatorNodes = new WeakMap();\n        let periodicWave = null;\n        let start = null;\n        let stop = null;\n        const createOscillatorNode = async (proxy, nativeOfflineAudioContext, trace) => {\n            let nativeOscillatorNode = getNativeAudioNode(proxy);\n            // If the initially used nativeOscillatorNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeOscillatorNodeIsOwnedByContext = isOwnedByContext(nativeOscillatorNode, nativeOfflineAudioContext);\n            if (!nativeOscillatorNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeOscillatorNode.channelCount,\n                    channelCountMode: nativeOscillatorNode.channelCountMode,\n                    channelInterpretation: nativeOscillatorNode.channelInterpretation,\n                    detune: nativeOscillatorNode.detune.value,\n                    frequency: nativeOscillatorNode.frequency.value,\n                    periodicWave: periodicWave === null ? undefined : periodicWave,\n                    type: nativeOscillatorNode.type\n                };\n                nativeOscillatorNode = createNativeOscillatorNode(nativeOfflineAudioContext, options);\n                if (start !== null) {\n                    nativeOscillatorNode.start(start);\n                }\n                if (stop !== null) {\n                    nativeOscillatorNode.stop(stop);\n                }\n            }\n            renderedNativeOscillatorNodes.set(nativeOfflineAudioContext, nativeOscillatorNode);\n            if (!nativeOscillatorNodeIsOwnedByContext) {\n                await renderAutomation(nativeOfflineAudioContext, proxy.detune, nativeOscillatorNode.detune, trace);\n                await renderAutomation(nativeOfflineAudioContext, proxy.frequency, nativeOscillatorNode.frequency, trace);\n            }\n            else {\n                await connectAudioParam(nativeOfflineAudioContext, proxy.detune, nativeOscillatorNode.detune, trace);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.frequency, nativeOscillatorNode.frequency, trace);\n            }\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeOscillatorNode, trace);\n            return nativeOscillatorNode;\n        };\n        return {\n            set periodicWave(value) {\n                periodicWave = value;\n            },\n            set start(value) {\n                start = value;\n            },\n            set stop(value) {\n                stop = value;\n            },\n            render(proxy, nativeOfflineAudioContext, trace) {\n                const renderedNativeOscillatorNode = renderedNativeOscillatorNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeOscillatorNode !== undefined) {\n                    return Promise.resolve(renderedNativeOscillatorNode);\n                }\n                return createOscillatorNode(proxy, nativeOfflineAudioContext, trace);\n            }\n        };\n    };\n};\n//# sourceMappingURL=oscillator-node-renderer-factory.js.map","import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'clamped-max',\n    channelInterpretation: 'speakers',\n    coneInnerAngle: 360,\n    coneOuterAngle: 360,\n    coneOuterGain: 0,\n    distanceModel: 'inverse',\n    maxDistance: 10000,\n    orientationX: 1,\n    orientationY: 0,\n    orientationZ: 0,\n    panningModel: 'equalpower',\n    positionX: 0,\n    positionY: 0,\n    positionZ: 0,\n    refDistance: 1,\n    rolloffFactor: 1\n};\nexport const createPannerNodeConstructor = (audioNodeConstructor, createAudioParam, createNativePannerNode, createPannerNodeRenderer, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime) => {\n    return class PannerNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativePannerNode = createNativePannerNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const pannerNodeRenderer = (isOffline ? createPannerNodeRenderer() : null);\n            super(context, false, nativePannerNode, pannerNodeRenderer);\n            this._nativePannerNode = nativePannerNode;\n            // Bug #74: Safari does not export the correct values for maxValue and minValue.\n            this._orientationX = createAudioParam(this, isOffline, nativePannerNode.orientationX, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n            this._orientationY = createAudioParam(this, isOffline, nativePannerNode.orientationY, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n            this._orientationZ = createAudioParam(this, isOffline, nativePannerNode.orientationZ, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n            this._positionX = createAudioParam(this, isOffline, nativePannerNode.positionX, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n            this._positionY = createAudioParam(this, isOffline, nativePannerNode.positionY, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n            this._positionZ = createAudioParam(this, isOffline, nativePannerNode.positionZ, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n            // @todo Determine a meaningful tail-time instead of just using one second.\n            setAudioNodeTailTime(this, 1);\n        }\n        get coneInnerAngle() {\n            return this._nativePannerNode.coneInnerAngle;\n        }\n        set coneInnerAngle(value) {\n            this._nativePannerNode.coneInnerAngle = value;\n        }\n        get coneOuterAngle() {\n            return this._nativePannerNode.coneOuterAngle;\n        }\n        set coneOuterAngle(value) {\n            this._nativePannerNode.coneOuterAngle = value;\n        }\n        get coneOuterGain() {\n            return this._nativePannerNode.coneOuterGain;\n        }\n        set coneOuterGain(value) {\n            this._nativePannerNode.coneOuterGain = value;\n        }\n        get distanceModel() {\n            return this._nativePannerNode.distanceModel;\n        }\n        set distanceModel(value) {\n            this._nativePannerNode.distanceModel = value;\n        }\n        get maxDistance() {\n            return this._nativePannerNode.maxDistance;\n        }\n        set maxDistance(value) {\n            this._nativePannerNode.maxDistance = value;\n        }\n        get orientationX() {\n            return this._orientationX;\n        }\n        get orientationY() {\n            return this._orientationY;\n        }\n        get orientationZ() {\n            return this._orientationZ;\n        }\n        get panningModel() {\n            return this._nativePannerNode.panningModel;\n        }\n        set panningModel(value) {\n            this._nativePannerNode.panningModel = value;\n        }\n        get positionX() {\n            return this._positionX;\n        }\n        get positionY() {\n            return this._positionY;\n        }\n        get positionZ() {\n            return this._positionZ;\n        }\n        get refDistance() {\n            return this._nativePannerNode.refDistance;\n        }\n        set refDistance(value) {\n            this._nativePannerNode.refDistance = value;\n        }\n        get rolloffFactor() {\n            return this._nativePannerNode.rolloffFactor;\n        }\n        set rolloffFactor(value) {\n            this._nativePannerNode.rolloffFactor = value;\n        }\n    };\n};\n//# sourceMappingURL=panner-node-constructor.js.map","import { isNativeAudioNodeFaker } from '../guards/native-audio-node-faker';\nimport { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createPannerNodeRendererFactory = (connectAudioParam, createNativeChannelMergerNode, createNativeConstantSourceNode, createNativeGainNode, createNativePannerNode, getNativeAudioNode, nativeOfflineAudioContextConstructor, renderAutomation, renderInputsOfAudioNode, renderNativeOfflineAudioContext) => {\n    return () => {\n        const renderedNativeAudioNodes = new WeakMap();\n        let renderedBufferPromise = null;\n        const createAudioNode = async (proxy, nativeOfflineAudioContext, trace) => {\n            let nativeGainNode = null;\n            let nativePannerNode = getNativeAudioNode(proxy);\n            const commonAudioNodeOptions = {\n                channelCount: nativePannerNode.channelCount,\n                channelCountMode: nativePannerNode.channelCountMode,\n                channelInterpretation: nativePannerNode.channelInterpretation\n            };\n            const commonNativePannerNodeOptions = {\n                ...commonAudioNodeOptions,\n                coneInnerAngle: nativePannerNode.coneInnerAngle,\n                coneOuterAngle: nativePannerNode.coneOuterAngle,\n                coneOuterGain: nativePannerNode.coneOuterGain,\n                distanceModel: nativePannerNode.distanceModel,\n                maxDistance: nativePannerNode.maxDistance,\n                panningModel: nativePannerNode.panningModel,\n                refDistance: nativePannerNode.refDistance,\n                rolloffFactor: nativePannerNode.rolloffFactor\n            };\n            // If the initially used nativePannerNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativePannerNodeIsOwnedByContext = isOwnedByContext(nativePannerNode, nativeOfflineAudioContext);\n            // Bug #124: Safari does not support modifying the orientation and the position with AudioParams.\n            if ('bufferSize' in nativePannerNode) {\n                nativeGainNode = createNativeGainNode(nativeOfflineAudioContext, { ...commonAudioNodeOptions, gain: 1 });\n            }\n            else if (!nativePannerNodeIsOwnedByContext) {\n                const options = {\n                    ...commonNativePannerNodeOptions,\n                    orientationX: nativePannerNode.orientationX.value,\n                    orientationY: nativePannerNode.orientationY.value,\n                    orientationZ: nativePannerNode.orientationZ.value,\n                    positionX: nativePannerNode.positionX.value,\n                    positionY: nativePannerNode.positionY.value,\n                    positionZ: nativePannerNode.positionZ.value\n                };\n                nativePannerNode = createNativePannerNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeAudioNodes.set(nativeOfflineAudioContext, nativeGainNode === null ? nativePannerNode : nativeGainNode);\n            if (nativeGainNode !== null) {\n                if (renderedBufferPromise === null) {\n                    if (nativeOfflineAudioContextConstructor === null) {\n                        throw new Error('Missing the native OfflineAudioContext constructor.');\n                    }\n                    const partialOfflineAudioContext = new nativeOfflineAudioContextConstructor(6, \n                    // Bug #17: Safari does not yet expose the length.\n                    proxy.context.length, nativeOfflineAudioContext.sampleRate);\n                    const nativeChannelMergerNode = createNativeChannelMergerNode(partialOfflineAudioContext, {\n                        channelCount: 1,\n                        channelCountMode: 'explicit',\n                        channelInterpretation: 'speakers',\n                        numberOfInputs: 6\n                    });\n                    nativeChannelMergerNode.connect(partialOfflineAudioContext.destination);\n                    renderedBufferPromise = (async () => {\n                        const nativeConstantSourceNodes = await Promise.all([\n                            proxy.orientationX,\n                            proxy.orientationY,\n                            proxy.orientationZ,\n                            proxy.positionX,\n                            proxy.positionY,\n                            proxy.positionZ\n                        ].map(async (audioParam, index) => {\n                            const nativeConstantSourceNode = createNativeConstantSourceNode(partialOfflineAudioContext, {\n                                channelCount: 1,\n                                channelCountMode: 'explicit',\n                                channelInterpretation: 'discrete',\n                                offset: index === 0 ? 1 : 0\n                            });\n                            await renderAutomation(partialOfflineAudioContext, audioParam, nativeConstantSourceNode.offset, trace);\n                            return nativeConstantSourceNode;\n                        }));\n                        for (let i = 0; i < 6; i += 1) {\n                            nativeConstantSourceNodes[i].connect(nativeChannelMergerNode, 0, i);\n                            nativeConstantSourceNodes[i].start(0);\n                        }\n                        return renderNativeOfflineAudioContext(partialOfflineAudioContext);\n                    })();\n                }\n                const renderedBuffer = await renderedBufferPromise;\n                const inputGainNode = createNativeGainNode(nativeOfflineAudioContext, { ...commonAudioNodeOptions, gain: 1 });\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, inputGainNode, trace);\n                const channelDatas = [];\n                for (let i = 0; i < renderedBuffer.numberOfChannels; i += 1) {\n                    channelDatas.push(renderedBuffer.getChannelData(i));\n                }\n                let lastOrientation = [channelDatas[0][0], channelDatas[1][0], channelDatas[2][0]];\n                let lastPosition = [channelDatas[3][0], channelDatas[4][0], channelDatas[5][0]];\n                let gateGainNode = createNativeGainNode(nativeOfflineAudioContext, { ...commonAudioNodeOptions, gain: 1 });\n                let partialPannerNode = createNativePannerNode(nativeOfflineAudioContext, {\n                    ...commonNativePannerNodeOptions,\n                    orientationX: lastOrientation[0],\n                    orientationY: lastOrientation[1],\n                    orientationZ: lastOrientation[2],\n                    positionX: lastPosition[0],\n                    positionY: lastPosition[1],\n                    positionZ: lastPosition[2]\n                });\n                inputGainNode.connect(gateGainNode).connect(partialPannerNode.inputs[0]);\n                partialPannerNode.connect(nativeGainNode);\n                for (let i = 128; i < renderedBuffer.length; i += 128) {\n                    const orientation = [channelDatas[0][i], channelDatas[1][i], channelDatas[2][i]];\n                    const positon = [channelDatas[3][i], channelDatas[4][i], channelDatas[5][i]];\n                    if (orientation.some((value, index) => value !== lastOrientation[index]) ||\n                        positon.some((value, index) => value !== lastPosition[index])) {\n                        lastOrientation = orientation;\n                        lastPosition = positon;\n                        const currentTime = i / nativeOfflineAudioContext.sampleRate;\n                        gateGainNode.gain.setValueAtTime(0, currentTime);\n                        gateGainNode = createNativeGainNode(nativeOfflineAudioContext, { ...commonAudioNodeOptions, gain: 0 });\n                        partialPannerNode = createNativePannerNode(nativeOfflineAudioContext, {\n                            ...commonNativePannerNodeOptions,\n                            orientationX: lastOrientation[0],\n                            orientationY: lastOrientation[1],\n                            orientationZ: lastOrientation[2],\n                            positionX: lastPosition[0],\n                            positionY: lastPosition[1],\n                            positionZ: lastPosition[2]\n                        });\n                        gateGainNode.gain.setValueAtTime(1, currentTime);\n                        inputGainNode.connect(gateGainNode).connect(partialPannerNode.inputs[0]);\n                        partialPannerNode.connect(nativeGainNode);\n                    }\n                }\n                return nativeGainNode;\n            }\n            if (!nativePannerNodeIsOwnedByContext) {\n                await renderAutomation(nativeOfflineAudioContext, proxy.orientationX, nativePannerNode.orientationX, trace);\n                await renderAutomation(nativeOfflineAudioContext, proxy.orientationY, nativePannerNode.orientationY, trace);\n                await renderAutomation(nativeOfflineAudioContext, proxy.orientationZ, nativePannerNode.orientationZ, trace);\n                await renderAutomation(nativeOfflineAudioContext, proxy.positionX, nativePannerNode.positionX, trace);\n                await renderAutomation(nativeOfflineAudioContext, proxy.positionY, nativePannerNode.positionY, trace);\n                await renderAutomation(nativeOfflineAudioContext, proxy.positionZ, nativePannerNode.positionZ, trace);\n            }\n            else {\n                await connectAudioParam(nativeOfflineAudioContext, proxy.orientationX, nativePannerNode.orientationX, trace);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.orientationY, nativePannerNode.orientationY, trace);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.orientationZ, nativePannerNode.orientationZ, trace);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.positionX, nativePannerNode.positionX, trace);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.positionY, nativePannerNode.positionY, trace);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.positionZ, nativePannerNode.positionZ, trace);\n            }\n            if (isNativeAudioNodeFaker(nativePannerNode)) {\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativePannerNode.inputs[0], trace);\n            }\n            else {\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativePannerNode, trace);\n            }\n            return nativePannerNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext, trace) {\n                const renderedNativeGainNodeOrNativePannerNode = renderedNativeAudioNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeGainNodeOrNativePannerNode !== undefined) {\n                    return Promise.resolve(renderedNativeGainNodeOrNativePannerNode);\n                }\n                return createAudioNode(proxy, nativeOfflineAudioContext, trace);\n            }\n        };\n    };\n};\n//# sourceMappingURL=panner-node-renderer-factory.js.map","const DEFAULT_OPTIONS = {\n    disableNormalization: false\n};\nexport const createPeriodicWaveConstructor = (createNativePeriodicWave, getNativeContext, periodicWaveStore, sanitizePeriodicWaveOptions) => {\n    return class PeriodicWave {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = sanitizePeriodicWaveOptions({ ...DEFAULT_OPTIONS, ...options });\n            const periodicWave = createNativePeriodicWave(nativeContext, mergedOptions);\n            periodicWaveStore.add(periodicWave);\n            // This does violate all good pratices but it is used here to simplify the handling of periodic waves.\n            return periodicWave;\n        }\n        static [Symbol.hasInstance](instance) {\n            return ((instance !== null && typeof instance === 'object' && Object.getPrototypeOf(instance) === PeriodicWave.prototype) ||\n                periodicWaveStore.has(instance));\n        }\n    };\n};\n//# sourceMappingURL=periodic-wave-constructor.js.map","export const createRenderAutomation = (getAudioParamRenderer, renderInputsOfAudioParam) => {\n    return (nativeOfflineAudioContext, audioParam, nativeAudioParam, trace) => {\n        const audioParamRenderer = getAudioParamRenderer(audioParam);\n        audioParamRenderer.replay(nativeAudioParam);\n        return renderInputsOfAudioParam(audioParam, nativeOfflineAudioContext, nativeAudioParam, trace);\n    };\n};\n//# sourceMappingURL=render-automation.js.map","export const createRenderInputsOfAudioNode = (getAudioNodeConnections, getAudioNodeRenderer, isPartOfACycle) => {\n    return async (audioNode, nativeOfflineAudioContext, nativeAudioNode, trace) => {\n        const audioNodeConnections = getAudioNodeConnections(audioNode);\n        const nextTrace = [...trace, audioNode];\n        await Promise.all(audioNodeConnections.activeInputs\n            .map((connections, input) => Array.from(connections)\n            .filter(([source]) => !nextTrace.includes(source))\n            .map(async ([source, output]) => {\n            const audioNodeRenderer = getAudioNodeRenderer(source);\n            const renderedNativeAudioNode = await audioNodeRenderer.render(source, nativeOfflineAudioContext, nextTrace);\n            const destination = audioNode.context.destination;\n            if (!isPartOfACycle(source) && (audioNode !== destination || !isPartOfACycle(audioNode))) {\n                renderedNativeAudioNode.connect(nativeAudioNode, output, input);\n            }\n        }))\n            .reduce((allRenderingPromises, renderingPromises) => [...allRenderingPromises, ...renderingPromises], []));\n    };\n};\n//# sourceMappingURL=render-inputs-of-audio-node.js.map","export const createRenderInputsOfAudioParam = (getAudioNodeRenderer, getAudioParamConnections, isPartOfACycle) => {\n    return async (audioParam, nativeOfflineAudioContext, nativeAudioParam, trace) => {\n        const audioParamConnections = getAudioParamConnections(audioParam);\n        await Promise.all(Array.from(audioParamConnections.activeInputs).map(async ([source, output]) => {\n            const audioNodeRenderer = getAudioNodeRenderer(source);\n            const renderedNativeAudioNode = await audioNodeRenderer.render(source, nativeOfflineAudioContext, trace);\n            if (!isPartOfACycle(source)) {\n                renderedNativeAudioNode.connect(nativeAudioParam, output);\n            }\n        }));\n    };\n};\n//# sourceMappingURL=render-inputs-of-audio-param.js.map","import { testPromiseSupport } from '../helpers/test-promise-support';\nexport const createRenderNativeOfflineAudioContext = (cacheTestResult, createNativeGainNode, createNativeScriptProcessorNode, testOfflineAudioContextCurrentTimeSupport) => {\n    return (nativeOfflineAudioContext) => {\n        // Bug #21: Safari does not support promises yet.\n        if (cacheTestResult(testPromiseSupport, () => testPromiseSupport(nativeOfflineAudioContext))) {\n            // Bug #158: Chrome and Edge do not advance currentTime if it is not accessed while rendering the audio.\n            return Promise.resolve(cacheTestResult(testOfflineAudioContextCurrentTimeSupport, testOfflineAudioContextCurrentTimeSupport)).then((isOfflineAudioContextCurrentTimeSupported) => {\n                if (!isOfflineAudioContextCurrentTimeSupported) {\n                    const scriptProcessorNode = createNativeScriptProcessorNode(nativeOfflineAudioContext, 512, 0, 1);\n                    nativeOfflineAudioContext.oncomplete = () => {\n                        scriptProcessorNode.onaudioprocess = null; // tslint:disable-line:deprecation\n                        scriptProcessorNode.disconnect();\n                    };\n                    scriptProcessorNode.onaudioprocess = () => nativeOfflineAudioContext.currentTime; // tslint:disable-line:deprecation\n                    scriptProcessorNode.connect(nativeOfflineAudioContext.destination);\n                }\n                return nativeOfflineAudioContext.startRendering();\n            });\n        }\n        return new Promise((resolve) => {\n            // Bug #48: Safari does not render an OfflineAudioContext without any connected node.\n            const gainNode = createNativeGainNode(nativeOfflineAudioContext, {\n                channelCount: 1,\n                channelCountMode: 'explicit',\n                channelInterpretation: 'discrete',\n                gain: 0\n            });\n            nativeOfflineAudioContext.oncomplete = (event) => {\n                gainNode.disconnect();\n                resolve(event.renderedBuffer);\n            };\n            gainNode.connect(nativeOfflineAudioContext.destination);\n            nativeOfflineAudioContext.startRendering();\n        });\n    };\n};\n//# sourceMappingURL=render-native-offline-audio-context.js.map","export const createSetActiveAudioWorkletNodeInputs = (activeAudioWorkletNodeInputsStore) => {\n    return (nativeAudioWorkletNode, activeInputs) => {\n        activeAudioWorkletNodeInputsStore.set(nativeAudioWorkletNode, activeInputs);\n    };\n};\n//# sourceMappingURL=set-active-audio-worklet-node-inputs.js.map","export const createSetAudioNodeTailTime = (audioNodeTailTimeStore) => {\n    return (audioNode, tailTime) => audioNodeTailTimeStore.set(audioNode, tailTime);\n};\n//# sourceMappingURL=set-audio-node-tail-time.js.map","import { wrapAudioBufferGetChannelDataMethod } from '../helpers/wrap-audio-buffer-get-channel-data-method';\nexport const createStartRendering = (audioBufferStore, cacheTestResult, getAudioNodeRenderer, getUnrenderedAudioWorkletNodes, renderNativeOfflineAudioContext, testAudioBufferCopyChannelMethodsOutOfBoundsSupport, wrapAudioBufferCopyChannelMethods, wrapAudioBufferCopyChannelMethodsOutOfBounds) => {\n    const trace = [];\n    return (destination, nativeOfflineAudioContext) => getAudioNodeRenderer(destination)\n        .render(destination, nativeOfflineAudioContext, trace)\n        /*\n         * Bug #86 & #87: Invoking the renderer of an AudioWorkletNode might be necessary if it has no direct or indirect connection to the\n         * destination.\n         */\n        .then(() => Promise.all(Array.from(getUnrenderedAudioWorkletNodes(nativeOfflineAudioContext)).map((audioWorkletNode) => getAudioNodeRenderer(audioWorkletNode).render(audioWorkletNode, nativeOfflineAudioContext, trace))))\n        .then(() => renderNativeOfflineAudioContext(nativeOfflineAudioContext))\n        .then((audioBuffer) => {\n        // Bug #5: Safari does not support copyFromChannel() and copyToChannel().\n        // Bug #100: Safari does throw a wrong error when calling getChannelData() with an out-of-bounds value.\n        if (typeof audioBuffer.copyFromChannel !== 'function') {\n            wrapAudioBufferCopyChannelMethods(audioBuffer);\n            wrapAudioBufferGetChannelDataMethod(audioBuffer);\n            // Bug #157: Firefox does not allow the bufferOffset to be out-of-bounds.\n        }\n        else if (!cacheTestResult(testAudioBufferCopyChannelMethodsOutOfBoundsSupport, () => testAudioBufferCopyChannelMethodsOutOfBoundsSupport(audioBuffer))) {\n            wrapAudioBufferCopyChannelMethodsOutOfBounds(audioBuffer);\n        }\n        audioBufferStore.add(audioBuffer);\n        return audioBuffer;\n    });\n};\n//# sourceMappingURL=start-rendering.js.map","const DEFAULT_OPTIONS = {\n    channelCount: 2,\n    /*\n     * Bug #105: The channelCountMode should be 'clamped-max' according to the spec but is set to 'explicit' to achieve consistent\n     * behavior.\n     */\n    channelCountMode: 'explicit',\n    channelInterpretation: 'speakers',\n    pan: 0\n};\nexport const createStereoPannerNodeConstructor = (audioNodeConstructor, createAudioParam, createNativeStereoPannerNode, createStereoPannerNodeRenderer, getNativeContext, isNativeOfflineAudioContext) => {\n    return class StereoPannerNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeStereoPannerNode = createNativeStereoPannerNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const stereoPannerNodeRenderer = (isOffline ? createStereoPannerNodeRenderer() : null);\n            super(context, false, nativeStereoPannerNode, stereoPannerNodeRenderer);\n            this._pan = createAudioParam(this, isOffline, nativeStereoPannerNode.pan);\n        }\n        get pan() {\n            return this._pan;\n        }\n    };\n};\n//# sourceMappingURL=stereo-panner-node-constructor.js.map","import { isNativeAudioNodeFaker } from '../guards/native-audio-node-faker';\nimport { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createStereoPannerNodeRendererFactory = (connectAudioParam, createNativeStereoPannerNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeStereoPannerNodes = new WeakMap();\n        const createStereoPannerNode = async (proxy, nativeOfflineAudioContext, trace) => {\n            let nativeStereoPannerNode = getNativeAudioNode(proxy);\n            /*\n             * If the initially used nativeStereoPannerNode was not constructed on the same OfflineAudioContext it needs to be created\n             * again.\n             */\n            const nativeStereoPannerNodeIsOwnedByContext = isOwnedByContext(nativeStereoPannerNode, nativeOfflineAudioContext);\n            if (!nativeStereoPannerNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeStereoPannerNode.channelCount,\n                    channelCountMode: nativeStereoPannerNode.channelCountMode,\n                    channelInterpretation: nativeStereoPannerNode.channelInterpretation,\n                    pan: nativeStereoPannerNode.pan.value\n                };\n                nativeStereoPannerNode = createNativeStereoPannerNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeStereoPannerNodes.set(nativeOfflineAudioContext, nativeStereoPannerNode);\n            if (!nativeStereoPannerNodeIsOwnedByContext) {\n                await renderAutomation(nativeOfflineAudioContext, proxy.pan, nativeStereoPannerNode.pan, trace);\n            }\n            else {\n                await connectAudioParam(nativeOfflineAudioContext, proxy.pan, nativeStereoPannerNode.pan, trace);\n            }\n            if (isNativeAudioNodeFaker(nativeStereoPannerNode)) {\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeStereoPannerNode.inputs[0], trace);\n            }\n            else {\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeStereoPannerNode, trace);\n            }\n            return nativeStereoPannerNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext, trace) {\n                const renderedNativeStereoPannerNode = renderedNativeStereoPannerNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeStereoPannerNode !== undefined) {\n                    return Promise.resolve(renderedNativeStereoPannerNode);\n                }\n                return createStereoPannerNode(proxy, nativeOfflineAudioContext, trace);\n            }\n        };\n    };\n};\n//# sourceMappingURL=stereo-panner-node-renderer-factory.js.map","// Bug #33: Safari exposes an AudioBuffer but it can't be used as a constructor.\nexport const createTestAudioBufferConstructorSupport = (nativeAudioBufferConstructor) => {\n    return () => {\n        if (nativeAudioBufferConstructor === null) {\n            return false;\n        }\n        try {\n            new nativeAudioBufferConstructor({ length: 1, sampleRate: 44100 }); // tslint:disable-line:no-unused-expression\n        }\n        catch {\n            return false;\n        }\n        return true;\n    };\n};\n//# sourceMappingURL=test-audio-buffer-constructor-support.js.map","// Bug #179: Firefox does not allow to transfer any buffer which has been passed to the process() method as an argument.\nexport const createTestAudioWorkletProcessorPostMessageSupport = (nativeAudioWorkletNodeConstructor, nativeOfflineAudioContextConstructor) => {\n    return async () => {\n        // Bug #61: If there is no native AudioWorkletNode it gets faked and therefore it is no problem if the it doesn't exist.\n        if (nativeAudioWorkletNodeConstructor === null) {\n            return true;\n        }\n        if (nativeOfflineAudioContextConstructor === null) {\n            return false;\n        }\n        const blob = new Blob(['class A extends AudioWorkletProcessor{process(i){this.port.postMessage(i,[i[0][0].buffer])}}registerProcessor(\"a\",A)'], {\n            type: 'application/javascript; charset=utf-8'\n        });\n        const offlineAudioContext = new nativeOfflineAudioContextConstructor(1, 128, 8000);\n        const url = URL.createObjectURL(blob);\n        let isEmittingMessageEvents = false;\n        let isEmittingProcessorErrorEvents = false;\n        try {\n            await offlineAudioContext.audioWorklet.addModule(url);\n            const audioWorkletNode = new nativeAudioWorkletNodeConstructor(offlineAudioContext, 'a', { numberOfOutputs: 0 });\n            const oscillator = offlineAudioContext.createOscillator();\n            audioWorkletNode.port.onmessage = () => (isEmittingMessageEvents = true);\n            audioWorkletNode.onprocessorerror = () => (isEmittingProcessorErrorEvents = true);\n            oscillator.connect(audioWorkletNode);\n            await offlineAudioContext.startRendering();\n        }\n        catch {\n            // Ignore errors.\n        }\n        finally {\n            URL.revokeObjectURL(url);\n        }\n        return isEmittingMessageEvents && !isEmittingProcessorErrorEvents;\n    };\n};\n//# sourceMappingURL=test-audio-worklet-processor-post-message-support.js.map","export const createTestOfflineAudioContextCurrentTimeSupport = (createNativeGainNode, nativeOfflineAudioContextConstructor) => {\n    return () => {\n        if (nativeOfflineAudioContextConstructor === null) {\n            return Promise.resolve(false);\n        }\n        const nativeOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n        // Bug #48: Safari does not render an OfflineAudioContext without any connected node.\n        const gainNode = createNativeGainNode(nativeOfflineAudioContext, {\n            channelCount: 1,\n            channelCountMode: 'explicit',\n            channelInterpretation: 'discrete',\n            gain: 0\n        });\n        // Bug #21: Safari does not support promises yet.\n        return new Promise((resolve) => {\n            nativeOfflineAudioContext.oncomplete = () => {\n                gainNode.disconnect();\n                resolve(nativeOfflineAudioContext.currentTime !== 0);\n            };\n            nativeOfflineAudioContext.startRendering();\n        });\n    };\n};\n//# sourceMappingURL=test-offline-audio-context-current-time-support.js.map","export const createUnknownError = () => new DOMException('', 'UnknownError');\n//# sourceMappingURL=unknown-error.js.map","const DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    curve: null,\n    oversample: 'none'\n};\nexport const createWaveShaperNodeConstructor = (audioNodeConstructor, createInvalidStateError, createNativeWaveShaperNode, createWaveShaperNodeRenderer, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime) => {\n    return class WaveShaperNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeWaveShaperNode = createNativeWaveShaperNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const waveShaperNodeRenderer = (isOffline ? createWaveShaperNodeRenderer() : null);\n            // @todo Add a mechanism to only switch a WaveShaperNode to active while it is connected.\n            super(context, true, nativeWaveShaperNode, waveShaperNodeRenderer);\n            this._isCurveNullified = false;\n            this._nativeWaveShaperNode = nativeWaveShaperNode;\n            // @todo Determine a meaningful tail-time instead of just using one second.\n            setAudioNodeTailTime(this, 1);\n        }\n        get curve() {\n            if (this._isCurveNullified) {\n                return null;\n            }\n            return this._nativeWaveShaperNode.curve;\n        }\n        set curve(value) {\n            // Bug #103: Safari does not allow to set the curve to null.\n            if (value === null) {\n                this._isCurveNullified = true;\n                this._nativeWaveShaperNode.curve = new Float32Array([0, 0]);\n            }\n            else {\n                // Bug #102: Safari does not throw an InvalidStateError when the curve has less than two samples.\n                // Bug #104: Chrome, Edge and Opera will throw an InvalidAccessError when the curve has less than two samples.\n                if (value.length < 2) {\n                    throw createInvalidStateError();\n                }\n                this._isCurveNullified = false;\n                this._nativeWaveShaperNode.curve = value;\n            }\n        }\n        get oversample() {\n            return this._nativeWaveShaperNode.oversample;\n        }\n        set oversample(value) {\n            this._nativeWaveShaperNode.oversample = value;\n        }\n    };\n};\n//# sourceMappingURL=wave-shaper-node-constructor.js.map","import { isNativeAudioNodeFaker } from '../guards/native-audio-node-faker';\nimport { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createWaveShaperNodeRendererFactory = (createNativeWaveShaperNode, getNativeAudioNode, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeWaveShaperNodes = new WeakMap();\n        const createWaveShaperNode = async (proxy, nativeOfflineAudioContext, trace) => {\n            let nativeWaveShaperNode = getNativeAudioNode(proxy);\n            // If the initially used nativeWaveShaperNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeWaveShaperNodeIsOwnedByContext = isOwnedByContext(nativeWaveShaperNode, nativeOfflineAudioContext);\n            if (!nativeWaveShaperNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeWaveShaperNode.channelCount,\n                    channelCountMode: nativeWaveShaperNode.channelCountMode,\n                    channelInterpretation: nativeWaveShaperNode.channelInterpretation,\n                    curve: nativeWaveShaperNode.curve,\n                    oversample: nativeWaveShaperNode.oversample\n                };\n                nativeWaveShaperNode = createNativeWaveShaperNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeWaveShaperNodes.set(nativeOfflineAudioContext, nativeWaveShaperNode);\n            if (isNativeAudioNodeFaker(nativeWaveShaperNode)) {\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeWaveShaperNode.inputs[0], trace);\n            }\n            else {\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeWaveShaperNode, trace);\n            }\n            return nativeWaveShaperNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext, trace) {\n                const renderedNativeWaveShaperNode = renderedNativeWaveShaperNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeWaveShaperNode !== undefined) {\n                    return Promise.resolve(renderedNativeWaveShaperNode);\n                }\n                return createWaveShaperNode(proxy, nativeOfflineAudioContext, trace);\n            }\n        };\n    };\n};\n//# sourceMappingURL=wave-shaper-node-renderer-factory.js.map","export const createWindow = () => (typeof window === 'undefined' ? null : window);\n//# sourceMappingURL=window.js.map","export const createWrapAudioBufferCopyChannelMethods = (convertNumberToUnsignedLong, createIndexSizeError) => {\n    return (audioBuffer) => {\n        audioBuffer.copyFromChannel = (destination, channelNumberAsNumber, bufferOffsetAsNumber = 0) => {\n            const bufferOffset = convertNumberToUnsignedLong(bufferOffsetAsNumber);\n            const channelNumber = convertNumberToUnsignedLong(channelNumberAsNumber);\n            if (channelNumber >= audioBuffer.numberOfChannels) {\n                throw createIndexSizeError();\n            }\n            const audioBufferLength = audioBuffer.length;\n            const channelData = audioBuffer.getChannelData(channelNumber);\n            const destinationLength = destination.length;\n            for (let i = bufferOffset < 0 ? -bufferOffset : 0; i + bufferOffset < audioBufferLength && i < destinationLength; i += 1) {\n                destination[i] = channelData[i + bufferOffset];\n            }\n        };\n        audioBuffer.copyToChannel = (source, channelNumberAsNumber, bufferOffsetAsNumber = 0) => {\n            const bufferOffset = convertNumberToUnsignedLong(bufferOffsetAsNumber);\n            const channelNumber = convertNumberToUnsignedLong(channelNumberAsNumber);\n            if (channelNumber >= audioBuffer.numberOfChannels) {\n                throw createIndexSizeError();\n            }\n            const audioBufferLength = audioBuffer.length;\n            const channelData = audioBuffer.getChannelData(channelNumber);\n            const sourceLength = source.length;\n            for (let i = bufferOffset < 0 ? -bufferOffset : 0; i + bufferOffset < audioBufferLength && i < sourceLength; i += 1) {\n                channelData[i + bufferOffset] = source[i];\n            }\n        };\n    };\n};\n//# sourceMappingURL=wrap-audio-buffer-copy-channel-methods.js.map","export const createWrapAudioBufferCopyChannelMethodsOutOfBounds = (convertNumberToUnsignedLong) => {\n    return (audioBuffer) => {\n        audioBuffer.copyFromChannel = ((copyFromChannel) => {\n            return (destination, channelNumberAsNumber, bufferOffsetAsNumber = 0) => {\n                const bufferOffset = convertNumberToUnsignedLong(bufferOffsetAsNumber);\n                const channelNumber = convertNumberToUnsignedLong(channelNumberAsNumber);\n                if (bufferOffset < audioBuffer.length) {\n                    return copyFromChannel.call(audioBuffer, destination, channelNumber, bufferOffset);\n                }\n            };\n        })(audioBuffer.copyFromChannel);\n        audioBuffer.copyToChannel = ((copyToChannel) => {\n            return (source, channelNumberAsNumber, bufferOffsetAsNumber = 0) => {\n                const bufferOffset = convertNumberToUnsignedLong(bufferOffsetAsNumber);\n                const channelNumber = convertNumberToUnsignedLong(channelNumberAsNumber);\n                if (bufferOffset < audioBuffer.length) {\n                    return copyToChannel.call(audioBuffer, source, channelNumber, bufferOffset);\n                }\n            };\n        })(audioBuffer.copyToChannel);\n    };\n};\n//# sourceMappingURL=wrap-audio-buffer-copy-channel-methods-out-of-bounds.js.map","export const createWrapAudioBufferSourceNodeStopMethodNullifiedBuffer = (overwriteAccessors) => {\n    return (nativeAudioBufferSourceNode, nativeContext) => {\n        const nullifiedBuffer = nativeContext.createBuffer(1, 1, 44100);\n        if (nativeAudioBufferSourceNode.buffer === null) {\n            nativeAudioBufferSourceNode.buffer = nullifiedBuffer;\n        }\n        overwriteAccessors(nativeAudioBufferSourceNode, 'buffer', (get) => () => {\n            const value = get.call(nativeAudioBufferSourceNode);\n            return value === nullifiedBuffer ? null : value;\n        }, (set) => (value) => {\n            return set.call(nativeAudioBufferSourceNode, value === null ? nullifiedBuffer : value);\n        });\n    };\n};\n//# sourceMappingURL=wrap-audio-buffer-source-node-stop-method-nullified-buffer.js.map","export const createWrapChannelMergerNode = (createInvalidStateError, monitorConnections) => {\n    return (nativeContext, channelMergerNode) => {\n        // Bug #15: Safari does not return the default properties.\n        channelMergerNode.channelCount = 1;\n        channelMergerNode.channelCountMode = 'explicit';\n        // Bug #16: Safari does not throw an error when setting a different channelCount or channelCountMode.\n        Object.defineProperty(channelMergerNode, 'channelCount', {\n            get: () => 1,\n            set: () => {\n                throw createInvalidStateError();\n            }\n        });\n        Object.defineProperty(channelMergerNode, 'channelCountMode', {\n            get: () => 'explicit',\n            set: () => {\n                throw createInvalidStateError();\n            }\n        });\n        // Bug #20: Safari requires a connection of any kind to treat the input signal correctly.\n        const audioBufferSourceNode = nativeContext.createBufferSource();\n        const whenConnected = () => {\n            const length = channelMergerNode.numberOfInputs;\n            for (let i = 0; i < length; i += 1) {\n                audioBufferSourceNode.connect(channelMergerNode, 0, i);\n            }\n        };\n        const whenDisconnected = () => audioBufferSourceNode.disconnect(channelMergerNode);\n        monitorConnections(channelMergerNode, whenConnected, whenDisconnected);\n    };\n};\n//# sourceMappingURL=wrap-channel-merger-node.js.map","export const isDCCurve = (curve) => {\n    if (curve === null) {\n        return false;\n    }\n    const length = curve.length;\n    if (length % 2 !== 0) {\n        return curve[Math.floor(length / 2)] !== 0;\n    }\n    return curve[length / 2 - 1] + curve[length / 2] !== 0;\n};\n//# sourceMappingURL=is-dc-curve.js.map","export const overwriteAccessors = (object, property, createGetter, createSetter) => {\n    let prototype = Object.getPrototypeOf(object);\n    while (!prototype.hasOwnProperty(property)) {\n        prototype = Object.getPrototypeOf(prototype);\n    }\n    const { get, set } = Object.getOwnPropertyDescriptor(prototype, property);\n    Object.defineProperty(object, property, { get: createGetter(get), set: createSetter(set) });\n};\n//# sourceMappingURL=overwrite-accessors.js.map","export const sanitizeAudioWorkletNodeOptions = (options) => {\n    return {\n        ...options,\n        outputChannelCount: options.outputChannelCount !== undefined\n            ? options.outputChannelCount\n            : options.numberOfInputs === 1 && options.numberOfOutputs === 1\n                ? /*\n                   * Bug #61: This should be the computedNumberOfChannels, but unfortunately that is almost impossible to fake. That's why\n                   * the channelCountMode is required to be 'explicit' as long as there is not a native implementation in every browser. That\n                   * makes sure the computedNumberOfChannels is equivilant to the channelCount which makes it much easier to compute.\n                   */\n                    [options.channelCount]\n                : Array.from({ length: options.numberOfOutputs }, () => 1)\n    };\n};\n//# sourceMappingURL=sanitize-audio-worklet-node-options.js.map","export const sanitizeChannelSplitterOptions = (options) => {\n    return { ...options, channelCount: options.numberOfOutputs };\n};\n//# sourceMappingURL=sanitize-channel-splitter-options.js.map","export const sanitizePeriodicWaveOptions = (options) => {\n    const { imag, real } = options;\n    if (imag === undefined) {\n        if (real === undefined) {\n            return { ...options, imag: [0, 0], real: [0, 0] };\n        }\n        return { ...options, imag: Array.from(real, () => 0), real };\n    }\n    if (real === undefined) {\n        return { ...options, imag, real: Array.from(imag, () => 0) };\n    }\n    return { ...options, imag, real };\n};\n//# sourceMappingURL=sanitize-periodic-wave-options.js.map","export const testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport = (nativeContext) => {\n    const nativeAudioBufferSourceNode = nativeContext.createBufferSource();\n    nativeAudioBufferSourceNode.start();\n    try {\n        nativeAudioBufferSourceNode.start();\n    }\n    catch {\n        return true;\n    }\n    return false;\n};\n//# sourceMappingURL=test-audio-buffer-source-node-start-method-consecutive-calls-support.js.map","export const testAudioBufferSourceNodeStartMethodOffsetClampingSupport = (nativeContext) => {\n    const nativeAudioBufferSourceNode = nativeContext.createBufferSource();\n    const nativeAudioBuffer = nativeContext.createBuffer(1, 1, 44100);\n    nativeAudioBufferSourceNode.buffer = nativeAudioBuffer;\n    try {\n        nativeAudioBufferSourceNode.start(0, 1);\n    }\n    catch {\n        return false;\n    }\n    return true;\n};\n//# sourceMappingURL=test-audio-buffer-source-node-start-method-offset-clamping-support.js.map","export const testAudioBufferSourceNodeStopMethodNullifiedBufferSupport = (nativeContext) => {\n    const nativeAudioBufferSourceNode = nativeContext.createBufferSource();\n    nativeAudioBufferSourceNode.start();\n    try {\n        nativeAudioBufferSourceNode.stop();\n    }\n    catch {\n        return false;\n    }\n    return true;\n};\n//# sourceMappingURL=test-audio-buffer-source-node-stop-method-nullified-buffer-support.js.map","export const testAudioScheduledSourceNodeStartMethodNegativeParametersSupport = (nativeContext) => {\n    const nativeAudioBufferSourceNode = nativeContext.createOscillator();\n    try {\n        nativeAudioBufferSourceNode.start(-1);\n    }\n    catch (err) {\n        return err instanceof RangeError;\n    }\n    return false;\n};\n//# sourceMappingURL=test-audio-scheduled-source-node-start-method-negative-parameters-support.js.map","export const testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport = (nativeContext) => {\n    const nativeAudioBuffer = nativeContext.createBuffer(1, 1, 44100);\n    const nativeAudioBufferSourceNode = nativeContext.createBufferSource();\n    nativeAudioBufferSourceNode.buffer = nativeAudioBuffer;\n    nativeAudioBufferSourceNode.start();\n    nativeAudioBufferSourceNode.stop();\n    try {\n        nativeAudioBufferSourceNode.stop();\n        return true;\n    }\n    catch {\n        return false;\n    }\n};\n//# sourceMappingURL=test-audio-scheduled-source-node-stop-method-consecutive-calls-support.js.map","export const testAudioScheduledSourceNodeStopMethodNegativeParametersSupport = (nativeContext) => {\n    const nativeAudioBufferSourceNode = nativeContext.createOscillator();\n    try {\n        nativeAudioBufferSourceNode.stop(-1);\n    }\n    catch (err) {\n        return err instanceof RangeError;\n    }\n    return false;\n};\n//# sourceMappingURL=test-audio-scheduled-source-node-stop-method-negative-parameters-support.js.map","export const wrapAudioBufferSourceNodeStartMethodOffsetClamping = (nativeAudioBufferSourceNode) => {\n    nativeAudioBufferSourceNode.start = ((start) => {\n        return (when = 0, offset = 0, duration) => {\n            const buffer = nativeAudioBufferSourceNode.buffer;\n            // Bug #154: Safari does not clamp the offset if it is equal to or greater than the duration of the buffer.\n            const clampedOffset = buffer === null ? offset : Math.min(buffer.duration, offset);\n            // Bug #155: Safari does not handle the offset correctly if it would cause the buffer to be not be played at all.\n            if (buffer !== null && clampedOffset > buffer.duration - 0.5 / nativeAudioBufferSourceNode.context.sampleRate) {\n                start.call(nativeAudioBufferSourceNode, when, 0, 0);\n            }\n            else {\n                start.call(nativeAudioBufferSourceNode, when, clampedOffset, duration);\n            }\n        };\n    })(nativeAudioBufferSourceNode.start);\n};\n//# sourceMappingURL=wrap-audio-buffer-source-node-start-method-offset-clamping.js.map","import { interceptConnections } from './intercept-connections';\nexport const wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls = (nativeAudioScheduledSourceNode, nativeContext) => {\n    const nativeGainNode = nativeContext.createGain();\n    nativeAudioScheduledSourceNode.connect(nativeGainNode);\n    const disconnectGainNode = ((disconnect) => {\n        return () => {\n            // @todo TypeScript cannot infer the overloaded signature with 1 argument yet.\n            disconnect.call(nativeAudioScheduledSourceNode, nativeGainNode);\n            nativeAudioScheduledSourceNode.removeEventListener('ended', disconnectGainNode);\n        };\n    })(nativeAudioScheduledSourceNode.disconnect);\n    nativeAudioScheduledSourceNode.addEventListener('ended', disconnectGainNode);\n    interceptConnections(nativeAudioScheduledSourceNode, nativeGainNode);\n    nativeAudioScheduledSourceNode.stop = ((stop) => {\n        let isStopped = false;\n        return (when = 0) => {\n            if (isStopped) {\n                try {\n                    stop.call(nativeAudioScheduledSourceNode, when);\n                }\n                catch {\n                    nativeGainNode.gain.setValueAtTime(0, when);\n                }\n            }\n            else {\n                stop.call(nativeAudioScheduledSourceNode, when);\n                isStopped = true;\n            }\n        };\n    })(nativeAudioScheduledSourceNode.stop);\n};\n//# sourceMappingURL=wrap-audio-scheduled-source-node-stop-method-consecutive-calls.js.map","export const wrapEventListener = (target, eventListener) => {\n    return (event) => {\n        const descriptor = { value: target };\n        Object.defineProperties(event, {\n            currentTarget: descriptor,\n            target: descriptor\n        });\n        if (typeof eventListener === 'function') {\n            return eventListener.call(target, event);\n        }\n        return eventListener.handleEvent.call(target, event);\n    };\n};\n//# sourceMappingURL=wrap-event-listener.js.map","import { createCancelAndHoldAutomationEvent, createCancelScheduledValuesAutomationEvent, createExponentialRampToValueAutomationEvent, createLinearRampToValueAutomationEvent, createSetTargetAutomationEvent, createSetValueAutomationEvent, createSetValueCurveAutomationEvent } from 'automation-events';\nimport { createAbortError } from './factories/abort-error';\nimport { createAddActiveInputConnectionToAudioNode } from './factories/add-active-input-connection-to-audio-node';\nimport { createAddAudioNodeConnections } from './factories/add-audio-node-connections';\nimport { createAddAudioParamConnections } from './factories/add-audio-param-connections';\nimport { createAddAudioWorkletModule } from './factories/add-audio-worklet-module';\nimport { createAddConnectionToAudioNode } from './factories/add-connection-to-audio-node';\nimport { createAddPassiveInputConnectionToAudioNode } from './factories/add-passive-input-connection-to-audio-node';\nimport { createAddSilentConnection } from './factories/add-silent-connection';\nimport { createAddUnrenderedAudioWorkletNode } from './factories/add-unrendered-audio-worklet-node';\nimport { createAnalyserNodeConstructor } from './factories/analyser-node-constructor';\nimport { createAnalyserNodeRendererFactory } from './factories/analyser-node-renderer-factory';\nimport { createAudioBufferConstructor } from './factories/audio-buffer-constructor';\nimport { createAudioBufferSourceNodeConstructor } from './factories/audio-buffer-source-node-constructor';\nimport { createAudioBufferSourceNodeRendererFactory } from './factories/audio-buffer-source-node-renderer-factory';\nimport { createAudioContextConstructor } from './factories/audio-context-constructor';\nimport { createAudioDestinationNodeConstructor } from './factories/audio-destination-node-constructor';\nimport { createAudioDestinationNodeRenderer } from './factories/audio-destination-node-renderer-factory';\nimport { createAudioListenerFactory } from './factories/audio-listener-factory';\nimport { createAudioNodeConstructor } from './factories/audio-node-constructor';\nimport { createAudioParamFactory } from './factories/audio-param-factory';\nimport { createAudioParamRenderer } from './factories/audio-param-renderer';\nimport { createAudioWorkletNodeConstructor } from './factories/audio-worklet-node-constructor';\nimport { createAudioWorkletNodeRendererFactory } from './factories/audio-worklet-node-renderer-factory';\nimport { createBaseAudioContextConstructor } from './factories/base-audio-context-constructor';\nimport { createBiquadFilterNodeConstructor } from './factories/biquad-filter-node-constructor';\nimport { createBiquadFilterNodeRendererFactory } from './factories/biquad-filter-node-renderer-factory';\nimport { createCacheTestResult } from './factories/cache-test-result';\nimport { createChannelMergerNodeConstructor } from './factories/channel-merger-node-constructor';\nimport { createChannelMergerNodeRendererFactory } from './factories/channel-merger-node-renderer-factory';\nimport { createChannelSplitterNodeConstructor } from './factories/channel-splitter-node-constructor';\nimport { createChannelSplitterNodeRendererFactory } from './factories/channel-splitter-node-renderer-factory';\nimport { createConnectAudioParam } from './factories/connect-audio-param';\nimport { createConnectMultipleOutputs } from './factories/connect-multiple-outputs';\nimport { createConnectedNativeAudioBufferSourceNodeFactory } from './factories/connected-native-audio-buffer-source-node-factory';\nimport { createConstantSourceNodeConstructor } from './factories/constant-source-node-constructor';\nimport { createConstantSourceNodeRendererFactory } from './factories/constant-source-node-renderer-factory';\nimport { createConvertNumberToUnsignedLong } from './factories/convert-number-to-unsigned-long';\nimport { createConvolverNodeConstructor } from './factories/convolver-node-constructor';\nimport { createConvolverNodeRendererFactory } from './factories/convolver-node-renderer-factory';\nimport { createCreateNativeOfflineAudioContext } from './factories/create-native-offline-audio-context';\nimport { createDataCloneError } from './factories/data-clone-error';\nimport { createDecodeAudioData } from './factories/decode-audio-data';\nimport { createDecrementCycleCounter } from './factories/decrement-cycle-counter';\nimport { createDelayNodeConstructor } from './factories/delay-node-constructor';\nimport { createDelayNodeRendererFactory } from './factories/delay-node-renderer-factory';\nimport { createDeleteActiveInputConnectionToAudioNode } from './factories/delete-active-input-connection-to-audio-node';\nimport { createDeleteUnrenderedAudioWorkletNode } from './factories/delete-unrendered-audio-worklet-node';\nimport { createDetectCycles } from './factories/detect-cycles';\nimport { createDisconnectMultipleOutputs } from './factories/disconnect-multiple-outputs';\nimport { createDynamicsCompressorNodeConstructor } from './factories/dynamics-compressor-node-constructor';\nimport { createDynamicsCompressorNodeRendererFactory } from './factories/dynamics-compressor-node-renderer-factory';\nimport { createEncodingError } from './factories/encoding-error';\nimport { createEvaluateSource } from './factories/evaluate-source';\nimport { createEventTargetConstructor } from './factories/event-target-constructor';\nimport { createExposeCurrentFrameAndCurrentTime } from './factories/expose-current-frame-and-current-time';\nimport { createFetchSource } from './factories/fetch-source';\nimport { createGainNodeConstructor } from './factories/gain-node-constructor';\nimport { createGainNodeRendererFactory } from './factories/gain-node-renderer-factory';\nimport { createGetActiveAudioWorkletNodeInputs } from './factories/get-active-audio-worklet-node-inputs';\nimport { createGetAudioNodeRenderer } from './factories/get-audio-node-renderer';\nimport { createGetAudioNodeTailTime } from './factories/get-audio-node-tail-time';\nimport { createGetAudioParamRenderer } from './factories/get-audio-param-renderer';\nimport { createGetBackupOfflineAudioContext } from './factories/get-backup-offline-audio-context';\nimport { createGetNativeContext } from './factories/get-native-context';\nimport { createGetOrCreateBackupOfflineAudioContext } from './factories/get-or-create-backup-offline-audio-context';\nimport { createGetUnrenderedAudioWorkletNodes } from './factories/get-unrendered-audio-worklet-nodes';\nimport { createIIRFilterNodeConstructor } from './factories/iir-filter-node-constructor';\nimport { createIIRFilterNodeRendererFactory } from './factories/iir-filter-node-renderer-factory';\nimport { createIncrementCycleCounterFactory } from './factories/increment-cycle-counter-factory';\nimport { createIndexSizeError } from './factories/index-size-error';\nimport { createInvalidAccessError } from './factories/invalid-access-error';\nimport { createInvalidStateError } from './factories/invalid-state-error';\nimport { createIsAnyAudioContext } from './factories/is-any-audio-context';\nimport { createIsAnyAudioNode } from './factories/is-any-audio-node';\nimport { createIsAnyAudioParam } from './factories/is-any-audio-param';\nimport { createIsAnyOfflineAudioContext } from './factories/is-any-offline-audio-context';\nimport { createIsNativeAudioContext } from './factories/is-native-audio-context';\nimport { createIsNativeAudioNode } from './factories/is-native-audio-node';\nimport { createIsNativeAudioParam } from './factories/is-native-audio-param';\nimport { createIsNativeContext } from './factories/is-native-context';\nimport { createIsNativeOfflineAudioContext } from './factories/is-native-offline-audio-context';\nimport { createIsSecureContext } from './factories/is-secure-context';\nimport { createIsSupportedPromise } from './factories/is-supported-promise';\nimport { createMediaElementAudioSourceNodeConstructor } from './factories/media-element-audio-source-node-constructor';\nimport { createMediaStreamAudioDestinationNodeConstructor } from './factories/media-stream-audio-destination-node-constructor';\nimport { createMediaStreamAudioSourceNodeConstructor } from './factories/media-stream-audio-source-node-constructor';\nimport { createMediaStreamTrackAudioSourceNodeConstructor } from './factories/media-stream-track-audio-source-node-constructor';\nimport { createMinimalAudioContextConstructor } from './factories/minimal-audio-context-constructor';\nimport { createMinimalBaseAudioContextConstructor } from './factories/minimal-base-audio-context-constructor';\nimport { createMinimalOfflineAudioContextConstructor } from './factories/minimal-offline-audio-context-constructor';\nimport { createMonitorConnections } from './factories/monitor-connections';\nimport { createNativeAnalyserNodeFactory } from './factories/native-analyser-node-factory';\nimport { createNativeAudioBufferConstructor } from './factories/native-audio-buffer-constructor';\nimport { createNativeAudioBufferSourceNodeFactory } from './factories/native-audio-buffer-source-node-factory';\nimport { createNativeAudioContextConstructor } from './factories/native-audio-context-constructor';\nimport { createNativeAudioDestinationNodeFactory } from './factories/native-audio-destination-node';\nimport { createNativeAudioWorkletNodeConstructor } from './factories/native-audio-worklet-node-constructor';\nimport { createNativeAudioWorkletNodeFactory } from './factories/native-audio-worklet-node-factory';\nimport { createNativeAudioWorkletNodeFakerFactory } from './factories/native-audio-worklet-node-faker-factory';\nimport { createNativeBiquadFilterNode } from './factories/native-biquad-filter-node';\nimport { createNativeChannelMergerNodeFactory } from './factories/native-channel-merger-node-factory';\nimport { createNativeChannelSplitterNode } from './factories/native-channel-splitter-node';\nimport { createNativeConstantSourceNodeFactory } from './factories/native-constant-source-node-factory';\nimport { createNativeConstantSourceNodeFakerFactory } from './factories/native-constant-source-node-faker-factory';\nimport { createNativeConvolverNodeFactory } from './factories/native-convolver-node-factory';\nimport { createNativeDelayNode } from './factories/native-delay-node';\nimport { createNativeDynamicsCompressorNodeFactory } from './factories/native-dynamics-compressor-node-factory';\nimport { createNativeGainNode } from './factories/native-gain-node';\nimport { createNativeIIRFilterNodeFactory } from './factories/native-iir-filter-node-factory';\nimport { createNativeIIRFilterNodeFakerFactory } from './factories/native-iir-filter-node-faker-factory';\nimport { createNativeMediaElementAudioSourceNode } from './factories/native-media-element-audio-source-node';\nimport { createNativeMediaStreamAudioDestinationNode } from './factories/native-media-stream-audio-destination-node';\nimport { createNativeMediaStreamAudioSourceNode } from './factories/native-media-stream-audio-source-node';\nimport { createNativeMediaStreamTrackAudioSourceNodeFactory } from './factories/native-media-stream-track-audio-source-node-factory';\nimport { createNativeOfflineAudioContextConstructor } from './factories/native-offline-audio-context-constructor';\nimport { createNativeOscillatorNodeFactory } from './factories/native-oscillator-node-factory';\nimport { createNativePannerNodeFactory } from './factories/native-panner-node-factory';\nimport { createNativePannerNodeFakerFactory } from './factories/native-panner-node-faker-factory';\nimport { createNativePeriodicWaveFactory } from './factories/native-periodic-wave-factory';\nimport { createNativeScriptProcessorNode } from './factories/native-script-processor-node';\nimport { createNativeStereoPannerNodeFactory } from './factories/native-stereo-panner-node-factory';\nimport { createNativeStereoPannerNodeFakerFactory } from './factories/native-stereo-panner-node-faker-factory';\nimport { createNativeWaveShaperNodeFactory } from './factories/native-wave-shaper-node-factory';\nimport { createNativeWaveShaperNodeFakerFactory } from './factories/native-wave-shaper-node-faker-factory';\nimport { createNotSupportedError } from './factories/not-supported-error';\nimport { createOfflineAudioContextConstructor } from './factories/offline-audio-context-constructor';\nimport { createOscillatorNodeConstructor } from './factories/oscillator-node-constructor';\nimport { createOscillatorNodeRendererFactory } from './factories/oscillator-node-renderer-factory';\nimport { createPannerNodeConstructor } from './factories/panner-node-constructor';\nimport { createPannerNodeRendererFactory } from './factories/panner-node-renderer-factory';\nimport { createPeriodicWaveConstructor } from './factories/periodic-wave-constructor';\nimport { createRenderAutomation } from './factories/render-automation';\nimport { createRenderInputsOfAudioNode } from './factories/render-inputs-of-audio-node';\nimport { createRenderInputsOfAudioParam } from './factories/render-inputs-of-audio-param';\nimport { createRenderNativeOfflineAudioContext } from './factories/render-native-offline-audio-context';\nimport { createSetActiveAudioWorkletNodeInputs } from './factories/set-active-audio-worklet-node-inputs';\nimport { createSetAudioNodeTailTime } from './factories/set-audio-node-tail-time';\nimport { createStartRendering } from './factories/start-rendering';\nimport { createStereoPannerNodeConstructor } from './factories/stereo-panner-node-constructor';\nimport { createStereoPannerNodeRendererFactory } from './factories/stereo-panner-node-renderer-factory';\nimport { createTestAudioBufferConstructorSupport } from './factories/test-audio-buffer-constructor-support';\nimport { createTestAudioBufferCopyChannelMethodsSubarraySupport } from './factories/test-audio-buffer-copy-channel-methods-subarray-support';\nimport { createTestAudioContextCloseMethodSupport } from './factories/test-audio-context-close-method-support';\nimport { createTestAudioContextDecodeAudioDataMethodTypeErrorSupport } from './factories/test-audio-context-decode-audio-data-method-type-error-support';\nimport { createTestAudioContextOptionsSupport } from './factories/test-audio-context-options-support';\nimport { createTestAudioNodeConnectMethodSupport } from './factories/test-audio-node-connect-method-support';\nimport { createTestAudioWorkletProcessorNoOutputsSupport } from './factories/test-audio-worklet-processor-no-outputs-support';\nimport { createTestAudioWorkletProcessorPostMessageSupport } from './factories/test-audio-worklet-processor-post-message-support';\nimport { createTestChannelMergerNodeChannelCountSupport } from './factories/test-channel-merger-node-channel-count-support';\nimport { createTestConstantSourceNodeAccurateSchedulingSupport } from './factories/test-constant-source-node-accurate-scheduling-support';\nimport { createTestConvolverNodeBufferReassignabilitySupport } from './factories/test-convolver-node-buffer-reassignability-support';\nimport { createTestConvolverNodeChannelCountSupport } from './factories/test-convolver-node-channel-count-support';\nimport { createTestIsSecureContextSupport } from './factories/test-is-secure-context-support';\nimport { createTestMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport } from './factories/test-media-stream-audio-source-node-media-stream-without-audio-track-support';\nimport { createTestOfflineAudioContextCurrentTimeSupport } from './factories/test-offline-audio-context-current-time-support';\nimport { createTestStereoPannerNodeDefaultValueSupport } from './factories/test-stereo-panner-node-default-value-support';\nimport { createUnknownError } from './factories/unknown-error';\nimport { createWaveShaperNodeConstructor } from './factories/wave-shaper-node-constructor';\nimport { createWaveShaperNodeRendererFactory } from './factories/wave-shaper-node-renderer-factory';\nimport { createWindow } from './factories/window';\nimport { createWrapAudioBufferCopyChannelMethods } from './factories/wrap-audio-buffer-copy-channel-methods';\nimport { createWrapAudioBufferCopyChannelMethodsOutOfBounds } from './factories/wrap-audio-buffer-copy-channel-methods-out-of-bounds';\nimport { createWrapAudioBufferSourceNodeStopMethodNullifiedBuffer } from './factories/wrap-audio-buffer-source-node-stop-method-nullified-buffer';\nimport { createWrapChannelMergerNode } from './factories/wrap-channel-merger-node';\nimport { AUDIO_NODE_CONNECTIONS_STORE, AUDIO_NODE_STORE, AUDIO_PARAM_CONNECTIONS_STORE, AUDIO_PARAM_STORE, CONTEXT_STORE, CYCLE_COUNTERS } from './globals';\nimport { connectNativeAudioNodeToNativeAudioNode } from './helpers/connect-native-audio-node-to-native-audio-node';\nimport { disconnectNativeAudioNodeFromNativeAudioNode } from './helpers/disconnect-native-audio-node-from-native-audio-node';\nimport { getAudioNodeConnections } from './helpers/get-audio-node-connections';\nimport { getAudioParamConnections } from './helpers/get-audio-param-connections';\nimport { getEventListenersOfAudioNode } from './helpers/get-event-listeners-of-audio-node';\nimport { getNativeAudioNode } from './helpers/get-native-audio-node';\nimport { getNativeAudioParam } from './helpers/get-native-audio-param';\nimport { getValueForKey } from './helpers/get-value-for-key';\nimport { insertElementInSet } from './helpers/insert-element-in-set';\nimport { isActiveAudioNode } from './helpers/is-active-audio-node';\nimport { isDCCurve } from './helpers/is-dc-curve';\nimport { isPartOfACycle } from './helpers/is-part-of-a-cycle';\nimport { isPassiveAudioNode } from './helpers/is-passive-audio-node';\nimport { overwriteAccessors } from './helpers/overwrite-accessors';\nimport { pickElementFromSet } from './helpers/pick-element-from-set';\nimport { sanitizeAudioWorkletNodeOptions } from './helpers/sanitize-audio-worklet-node-options';\nimport { sanitizeChannelSplitterOptions } from './helpers/sanitize-channel-splitter-options';\nimport { sanitizePeriodicWaveOptions } from './helpers/sanitize-periodic-wave-options';\nimport { testAudioBufferCopyChannelMethodsOutOfBoundsSupport } from './helpers/test-audio-buffer-copy-channel-methods-out-of-bounds-support';\nimport { testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport } from './helpers/test-audio-buffer-source-node-start-method-consecutive-calls-support';\nimport { testAudioBufferSourceNodeStartMethodOffsetClampingSupport } from './helpers/test-audio-buffer-source-node-start-method-offset-clamping-support';\nimport { testAudioBufferSourceNodeStopMethodNullifiedBufferSupport } from './helpers/test-audio-buffer-source-node-stop-method-nullified-buffer-support';\nimport { testAudioScheduledSourceNodeStartMethodNegativeParametersSupport } from './helpers/test-audio-scheduled-source-node-start-method-negative-parameters-support';\nimport { testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport } from './helpers/test-audio-scheduled-source-node-stop-method-consecutive-calls-support';\nimport { testAudioScheduledSourceNodeStopMethodNegativeParametersSupport } from './helpers/test-audio-scheduled-source-node-stop-method-negative-parameters-support';\nimport { testDomExceptionConstructorSupport } from './helpers/test-dom-exception-constructor-support';\nimport { testPromiseSupport } from './helpers/test-promise-support';\nimport { testTransferablesSupport } from './helpers/test-transferables-support';\nimport { wrapAudioBufferSourceNodeStartMethodOffsetClamping } from './helpers/wrap-audio-buffer-source-node-start-method-offset-clamping';\nimport { wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls } from './helpers/wrap-audio-scheduled-source-node-stop-method-consecutive-calls';\nimport { wrapEventListener } from './helpers/wrap-event-listener';\n/*\n * @todo Explicitly referencing the barrel file seems to be necessary when enabling the\n * isolatedModules compiler option.\n */\nexport * from './interfaces/index';\nexport * from './types/index';\nconst addActiveInputConnectionToAudioNode = createAddActiveInputConnectionToAudioNode(insertElementInSet);\nconst addPassiveInputConnectionToAudioNode = createAddPassiveInputConnectionToAudioNode(insertElementInSet);\nconst deleteActiveInputConnectionToAudioNode = createDeleteActiveInputConnectionToAudioNode(pickElementFromSet);\nconst audioNodeTailTimeStore = new WeakMap();\nconst getAudioNodeTailTime = createGetAudioNodeTailTime(audioNodeTailTimeStore);\nconst cacheTestResult = createCacheTestResult(new Map(), new WeakMap());\nconst window = createWindow();\nconst createNativeAnalyserNode = createNativeAnalyserNodeFactory(cacheTestResult, createIndexSizeError);\nconst getAudioNodeRenderer = createGetAudioNodeRenderer(getAudioNodeConnections);\nconst renderInputsOfAudioNode = createRenderInputsOfAudioNode(getAudioNodeConnections, getAudioNodeRenderer, isPartOfACycle);\nconst createAnalyserNodeRenderer = createAnalyserNodeRendererFactory(createNativeAnalyserNode, getNativeAudioNode, renderInputsOfAudioNode);\nconst getNativeContext = createGetNativeContext(CONTEXT_STORE);\nconst nativeOfflineAudioContextConstructor = createNativeOfflineAudioContextConstructor(window);\nconst isNativeOfflineAudioContext = createIsNativeOfflineAudioContext(nativeOfflineAudioContextConstructor);\nconst audioParamAudioNodeStore = new WeakMap();\nconst eventTargetConstructor = createEventTargetConstructor(wrapEventListener);\nconst nativeAudioContextConstructor = createNativeAudioContextConstructor(window);\nconst isNativeAudioContext = createIsNativeAudioContext(nativeAudioContextConstructor);\nconst isNativeAudioNode = createIsNativeAudioNode(window);\nconst isNativeAudioParam = createIsNativeAudioParam(window);\nconst audioNodeConstructor = createAudioNodeConstructor(createAddAudioNodeConnections(AUDIO_NODE_CONNECTIONS_STORE), createAddConnectionToAudioNode(addActiveInputConnectionToAudioNode, addPassiveInputConnectionToAudioNode, connectNativeAudioNodeToNativeAudioNode, deleteActiveInputConnectionToAudioNode, disconnectNativeAudioNodeFromNativeAudioNode, getAudioNodeConnections, getAudioNodeTailTime, getEventListenersOfAudioNode, getNativeAudioNode, insertElementInSet, isActiveAudioNode, isPartOfACycle, isPassiveAudioNode), cacheTestResult, createIncrementCycleCounterFactory(CYCLE_COUNTERS, disconnectNativeAudioNodeFromNativeAudioNode, getAudioNodeConnections, getNativeAudioNode, getNativeAudioParam, isActiveAudioNode), createIndexSizeError, createInvalidAccessError, createNotSupportedError, createDecrementCycleCounter(connectNativeAudioNodeToNativeAudioNode, CYCLE_COUNTERS, getAudioNodeConnections, getNativeAudioNode, getNativeAudioParam, getNativeContext, isActiveAudioNode, isNativeOfflineAudioContext), createDetectCycles(audioParamAudioNodeStore, getAudioNodeConnections, getValueForKey), eventTargetConstructor, getNativeContext, isNativeAudioContext, isNativeAudioNode, isNativeAudioParam, isNativeOfflineAudioContext);\nconst analyserNodeConstructor = createAnalyserNodeConstructor(audioNodeConstructor, createAnalyserNodeRenderer, createIndexSizeError, createNativeAnalyserNode, getNativeContext, isNativeOfflineAudioContext);\nexport { analyserNodeConstructor as AnalyserNode };\nconst audioBufferStore = new WeakSet();\nconst nativeAudioBufferConstructor = createNativeAudioBufferConstructor(window);\nconst convertNumberToUnsignedLong = createConvertNumberToUnsignedLong(new Uint32Array(1));\nconst wrapAudioBufferCopyChannelMethods = createWrapAudioBufferCopyChannelMethods(convertNumberToUnsignedLong, createIndexSizeError);\nconst wrapAudioBufferCopyChannelMethodsOutOfBounds = createWrapAudioBufferCopyChannelMethodsOutOfBounds(convertNumberToUnsignedLong);\nconst audioBufferConstructor = createAudioBufferConstructor(audioBufferStore, cacheTestResult, createNotSupportedError, nativeAudioBufferConstructor, nativeOfflineAudioContextConstructor, createTestAudioBufferConstructorSupport(nativeAudioBufferConstructor), wrapAudioBufferCopyChannelMethods, wrapAudioBufferCopyChannelMethodsOutOfBounds);\nexport { audioBufferConstructor as AudioBuffer };\nconst addSilentConnection = createAddSilentConnection(createNativeGainNode);\nconst renderInputsOfAudioParam = createRenderInputsOfAudioParam(getAudioNodeRenderer, getAudioParamConnections, isPartOfACycle);\nconst connectAudioParam = createConnectAudioParam(renderInputsOfAudioParam);\nconst createNativeAudioBufferSourceNode = createNativeAudioBufferSourceNodeFactory(addSilentConnection, cacheTestResult, testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport, testAudioBufferSourceNodeStartMethodOffsetClampingSupport, testAudioBufferSourceNodeStopMethodNullifiedBufferSupport, testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, wrapAudioBufferSourceNodeStartMethodOffsetClamping, createWrapAudioBufferSourceNodeStopMethodNullifiedBuffer(overwriteAccessors), wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls);\nconst renderAutomation = createRenderAutomation(createGetAudioParamRenderer(getAudioParamConnections), renderInputsOfAudioParam);\nconst createAudioBufferSourceNodeRenderer = createAudioBufferSourceNodeRendererFactory(connectAudioParam, createNativeAudioBufferSourceNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst createAudioParam = createAudioParamFactory(createAddAudioParamConnections(AUDIO_PARAM_CONNECTIONS_STORE), audioParamAudioNodeStore, AUDIO_PARAM_STORE, createAudioParamRenderer, createCancelAndHoldAutomationEvent, createCancelScheduledValuesAutomationEvent, createExponentialRampToValueAutomationEvent, createLinearRampToValueAutomationEvent, createSetTargetAutomationEvent, createSetValueAutomationEvent, createSetValueCurveAutomationEvent, nativeAudioContextConstructor);\nconst audioBufferSourceNodeConstructor = createAudioBufferSourceNodeConstructor(audioNodeConstructor, createAudioBufferSourceNodeRenderer, createAudioParam, createInvalidStateError, createNativeAudioBufferSourceNode, getNativeContext, isNativeOfflineAudioContext, wrapEventListener);\nexport { audioBufferSourceNodeConstructor as AudioBufferSourceNode };\nconst audioDestinationNodeConstructor = createAudioDestinationNodeConstructor(audioNodeConstructor, createAudioDestinationNodeRenderer, createIndexSizeError, createInvalidStateError, createNativeAudioDestinationNodeFactory(createNativeGainNode, overwriteAccessors), getNativeContext, isNativeOfflineAudioContext, renderInputsOfAudioNode);\nconst createBiquadFilterNodeRenderer = createBiquadFilterNodeRendererFactory(connectAudioParam, createNativeBiquadFilterNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst setAudioNodeTailTime = createSetAudioNodeTailTime(audioNodeTailTimeStore);\nconst biquadFilterNodeConstructor = createBiquadFilterNodeConstructor(audioNodeConstructor, createAudioParam, createBiquadFilterNodeRenderer, createInvalidAccessError, createNativeBiquadFilterNode, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime);\nconst monitorConnections = createMonitorConnections(insertElementInSet, isNativeAudioNode);\nconst wrapChannelMergerNode = createWrapChannelMergerNode(createInvalidStateError, monitorConnections);\nconst createNativeChannelMergerNode = createNativeChannelMergerNodeFactory(nativeAudioContextConstructor, wrapChannelMergerNode);\nconst createChannelMergerNodeRenderer = createChannelMergerNodeRendererFactory(createNativeChannelMergerNode, getNativeAudioNode, renderInputsOfAudioNode);\nconst channelMergerNodeConstructor = createChannelMergerNodeConstructor(audioNodeConstructor, createChannelMergerNodeRenderer, createNativeChannelMergerNode, getNativeContext, isNativeOfflineAudioContext);\nconst createChannelSplitterNodeRenderer = createChannelSplitterNodeRendererFactory(createNativeChannelSplitterNode, getNativeAudioNode, renderInputsOfAudioNode);\nconst channelSplitterNodeConstructor = createChannelSplitterNodeConstructor(audioNodeConstructor, createChannelSplitterNodeRenderer, createNativeChannelSplitterNode, getNativeContext, isNativeOfflineAudioContext, sanitizeChannelSplitterOptions);\nconst createNativeConstantSourceNodeFaker = createNativeConstantSourceNodeFakerFactory(addSilentConnection, createNativeAudioBufferSourceNode, createNativeGainNode, monitorConnections);\nconst createNativeConstantSourceNode = createNativeConstantSourceNodeFactory(addSilentConnection, cacheTestResult, createNativeConstantSourceNodeFaker, testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport);\nconst createConstantSourceNodeRenderer = createConstantSourceNodeRendererFactory(connectAudioParam, createNativeConstantSourceNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst constantSourceNodeConstructor = createConstantSourceNodeConstructor(audioNodeConstructor, createAudioParam, createConstantSourceNodeRenderer, createNativeConstantSourceNode, getNativeContext, isNativeOfflineAudioContext, wrapEventListener);\nconst createNativeConvolverNode = createNativeConvolverNodeFactory(createNotSupportedError, overwriteAccessors);\nconst createConvolverNodeRenderer = createConvolverNodeRendererFactory(createNativeConvolverNode, getNativeAudioNode, renderInputsOfAudioNode);\nconst convolverNodeConstructor = createConvolverNodeConstructor(audioNodeConstructor, createConvolverNodeRenderer, createNativeConvolverNode, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime);\nconst createDelayNodeRenderer = createDelayNodeRendererFactory(connectAudioParam, createNativeDelayNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst delayNodeConstructor = createDelayNodeConstructor(audioNodeConstructor, createAudioParam, createDelayNodeRenderer, createNativeDelayNode, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime);\nconst createNativeDynamicsCompressorNode = createNativeDynamicsCompressorNodeFactory(createNotSupportedError);\nconst createDynamicsCompressorNodeRenderer = createDynamicsCompressorNodeRendererFactory(connectAudioParam, createNativeDynamicsCompressorNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst dynamicsCompressorNodeConstructor = createDynamicsCompressorNodeConstructor(audioNodeConstructor, createAudioParam, createDynamicsCompressorNodeRenderer, createNativeDynamicsCompressorNode, createNotSupportedError, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime);\nconst createGainNodeRenderer = createGainNodeRendererFactory(connectAudioParam, createNativeGainNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst gainNodeConstructor = createGainNodeConstructor(audioNodeConstructor, createAudioParam, createGainNodeRenderer, createNativeGainNode, getNativeContext, isNativeOfflineAudioContext);\nconst createNativeIIRFilterNodeFaker = createNativeIIRFilterNodeFakerFactory(createInvalidAccessError, createInvalidStateError, createNativeScriptProcessorNode, createNotSupportedError);\nconst renderNativeOfflineAudioContext = createRenderNativeOfflineAudioContext(cacheTestResult, createNativeGainNode, createNativeScriptProcessorNode, createTestOfflineAudioContextCurrentTimeSupport(createNativeGainNode, nativeOfflineAudioContextConstructor));\nconst createIIRFilterNodeRenderer = createIIRFilterNodeRendererFactory(createNativeAudioBufferSourceNode, getNativeAudioNode, nativeOfflineAudioContextConstructor, renderInputsOfAudioNode, renderNativeOfflineAudioContext);\nconst createNativeIIRFilterNode = createNativeIIRFilterNodeFactory(createNativeIIRFilterNodeFaker);\nconst iIRFilterNodeConstructor = createIIRFilterNodeConstructor(audioNodeConstructor, createNativeIIRFilterNode, createIIRFilterNodeRenderer, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime);\nconst createAudioListener = createAudioListenerFactory(createAudioParam, createNativeChannelMergerNode, createNativeConstantSourceNode, createNativeScriptProcessorNode, isNativeOfflineAudioContext);\nconst unrenderedAudioWorkletNodeStore = new WeakMap();\nconst minimalBaseAudioContextConstructor = createMinimalBaseAudioContextConstructor(audioDestinationNodeConstructor, createAudioListener, eventTargetConstructor, isNativeOfflineAudioContext, unrenderedAudioWorkletNodeStore, wrapEventListener);\nconst createNativeOscillatorNode = createNativeOscillatorNodeFactory(addSilentConnection, cacheTestResult, testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls);\nconst createOscillatorNodeRenderer = createOscillatorNodeRendererFactory(connectAudioParam, createNativeOscillatorNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst oscillatorNodeConstructor = createOscillatorNodeConstructor(audioNodeConstructor, createAudioParam, createNativeOscillatorNode, createOscillatorNodeRenderer, getNativeContext, isNativeOfflineAudioContext, wrapEventListener);\nconst createConnectedNativeAudioBufferSourceNode = createConnectedNativeAudioBufferSourceNodeFactory(createNativeAudioBufferSourceNode);\nconst createNativeWaveShaperNodeFaker = createNativeWaveShaperNodeFakerFactory(createConnectedNativeAudioBufferSourceNode, createInvalidStateError, createNativeGainNode, isDCCurve, monitorConnections);\nconst createNativeWaveShaperNode = createNativeWaveShaperNodeFactory(createConnectedNativeAudioBufferSourceNode, createInvalidStateError, createNativeWaveShaperNodeFaker, isDCCurve, monitorConnections, nativeAudioContextConstructor, overwriteAccessors);\nconst createNativePannerNodeFaker = createNativePannerNodeFakerFactory(connectNativeAudioNodeToNativeAudioNode, createInvalidStateError, createNativeChannelMergerNode, createNativeGainNode, createNativeScriptProcessorNode, createNativeWaveShaperNode, createNotSupportedError, disconnectNativeAudioNodeFromNativeAudioNode, monitorConnections);\nconst createNativePannerNode = createNativePannerNodeFactory(createNativePannerNodeFaker);\nconst createPannerNodeRenderer = createPannerNodeRendererFactory(connectAudioParam, createNativeChannelMergerNode, createNativeConstantSourceNode, createNativeGainNode, createNativePannerNode, getNativeAudioNode, nativeOfflineAudioContextConstructor, renderAutomation, renderInputsOfAudioNode, renderNativeOfflineAudioContext);\nconst pannerNodeConstructor = createPannerNodeConstructor(audioNodeConstructor, createAudioParam, createNativePannerNode, createPannerNodeRenderer, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime);\nconst createNativePeriodicWave = createNativePeriodicWaveFactory(createIndexSizeError);\nconst periodicWaveConstructor = createPeriodicWaveConstructor(createNativePeriodicWave, getNativeContext, new WeakSet(), sanitizePeriodicWaveOptions);\nconst nativeStereoPannerNodeFakerFactory = createNativeStereoPannerNodeFakerFactory(createNativeChannelMergerNode, createNativeChannelSplitterNode, createNativeGainNode, createNativeWaveShaperNode, createNotSupportedError, monitorConnections);\nconst createNativeStereoPannerNode = createNativeStereoPannerNodeFactory(nativeStereoPannerNodeFakerFactory, createNotSupportedError);\nconst createStereoPannerNodeRenderer = createStereoPannerNodeRendererFactory(connectAudioParam, createNativeStereoPannerNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst stereoPannerNodeConstructor = createStereoPannerNodeConstructor(audioNodeConstructor, createAudioParam, createNativeStereoPannerNode, createStereoPannerNodeRenderer, getNativeContext, isNativeOfflineAudioContext);\nconst createWaveShaperNodeRenderer = createWaveShaperNodeRendererFactory(createNativeWaveShaperNode, getNativeAudioNode, renderInputsOfAudioNode);\nconst waveShaperNodeConstructor = createWaveShaperNodeConstructor(audioNodeConstructor, createInvalidStateError, createNativeWaveShaperNode, createWaveShaperNodeRenderer, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime);\nconst isSecureContext = createIsSecureContext(window);\nconst exposeCurrentFrameAndCurrentTime = createExposeCurrentFrameAndCurrentTime(window);\nconst backupOfflineAudioContextStore = new WeakMap();\nconst getOrCreateBackupOfflineAudioContext = createGetOrCreateBackupOfflineAudioContext(backupOfflineAudioContextStore, nativeOfflineAudioContextConstructor);\nconst nativeAudioWorkletNodeConstructor = createNativeAudioWorkletNodeConstructor(window);\n// The addAudioWorkletModule() function is only available in a SecureContext.\nexport const addAudioWorkletModule = isSecureContext\n    ? createAddAudioWorkletModule(cacheTestResult, createNotSupportedError, createEvaluateSource(window), exposeCurrentFrameAndCurrentTime, createFetchSource(createAbortError), getNativeContext, getOrCreateBackupOfflineAudioContext, isNativeOfflineAudioContext, new WeakMap(), new WeakMap(), createTestAudioWorkletProcessorPostMessageSupport(nativeAudioWorkletNodeConstructor, nativeOfflineAudioContextConstructor), \n    // @todo window is guaranteed to be defined because isSecureContext checks that as well.\n    window)\n    : undefined;\nconst isNativeContext = createIsNativeContext(isNativeAudioContext, isNativeOfflineAudioContext);\nexport const decodeAudioData = createDecodeAudioData(audioBufferStore, cacheTestResult, createDataCloneError, createEncodingError, new WeakSet(), getNativeContext, isNativeContext, testAudioBufferCopyChannelMethodsOutOfBoundsSupport, testPromiseSupport, wrapAudioBufferCopyChannelMethods, wrapAudioBufferCopyChannelMethodsOutOfBounds);\nconst baseAudioContextConstructor = createBaseAudioContextConstructor(addAudioWorkletModule, analyserNodeConstructor, audioBufferConstructor, audioBufferSourceNodeConstructor, biquadFilterNodeConstructor, channelMergerNodeConstructor, channelSplitterNodeConstructor, constantSourceNodeConstructor, convolverNodeConstructor, decodeAudioData, delayNodeConstructor, dynamicsCompressorNodeConstructor, gainNodeConstructor, iIRFilterNodeConstructor, minimalBaseAudioContextConstructor, oscillatorNodeConstructor, pannerNodeConstructor, periodicWaveConstructor, stereoPannerNodeConstructor, waveShaperNodeConstructor);\nconst mediaElementAudioSourceNodeConstructor = createMediaElementAudioSourceNodeConstructor(audioNodeConstructor, createNativeMediaElementAudioSourceNode, getNativeContext, isNativeOfflineAudioContext);\nconst mediaStreamAudioDestinationNodeConstructor = createMediaStreamAudioDestinationNodeConstructor(audioNodeConstructor, createNativeMediaStreamAudioDestinationNode, getNativeContext, isNativeOfflineAudioContext);\nconst mediaStreamAudioSourceNodeConstructor = createMediaStreamAudioSourceNodeConstructor(audioNodeConstructor, createNativeMediaStreamAudioSourceNode, getNativeContext, isNativeOfflineAudioContext);\nconst createNativeMediaStreamTrackAudioSourceNode = createNativeMediaStreamTrackAudioSourceNodeFactory(createInvalidStateError, isNativeOfflineAudioContext);\nconst mediaStreamTrackAudioSourceNodeConstructor = createMediaStreamTrackAudioSourceNodeConstructor(audioNodeConstructor, createNativeMediaStreamTrackAudioSourceNode, getNativeContext);\nconst audioContextConstructor = createAudioContextConstructor(baseAudioContextConstructor, createInvalidStateError, createNotSupportedError, createUnknownError, mediaElementAudioSourceNodeConstructor, mediaStreamAudioDestinationNodeConstructor, mediaStreamAudioSourceNodeConstructor, mediaStreamTrackAudioSourceNodeConstructor, nativeAudioContextConstructor);\nexport { audioContextConstructor as AudioContext };\nconst getUnrenderedAudioWorkletNodes = createGetUnrenderedAudioWorkletNodes(unrenderedAudioWorkletNodeStore);\nconst addUnrenderedAudioWorkletNode = createAddUnrenderedAudioWorkletNode(getUnrenderedAudioWorkletNodes);\nconst connectMultipleOutputs = createConnectMultipleOutputs(createIndexSizeError);\nconst deleteUnrenderedAudioWorkletNode = createDeleteUnrenderedAudioWorkletNode(getUnrenderedAudioWorkletNodes);\nconst disconnectMultipleOutputs = createDisconnectMultipleOutputs(createIndexSizeError);\nconst activeAudioWorkletNodeInputsStore = new WeakMap();\nconst getActiveAudioWorkletNodeInputs = createGetActiveAudioWorkletNodeInputs(activeAudioWorkletNodeInputsStore, getValueForKey);\nconst createNativeAudioWorkletNodeFaker = createNativeAudioWorkletNodeFakerFactory(connectMultipleOutputs, createIndexSizeError, createInvalidStateError, createNativeChannelMergerNode, createNativeChannelSplitterNode, createNativeConstantSourceNode, createNativeGainNode, createNativeScriptProcessorNode, createNotSupportedError, disconnectMultipleOutputs, exposeCurrentFrameAndCurrentTime, getActiveAudioWorkletNodeInputs, monitorConnections);\nconst createNativeAudioWorkletNode = createNativeAudioWorkletNodeFactory(createInvalidStateError, createNativeAudioWorkletNodeFaker, createNativeGainNode, createNotSupportedError, monitorConnections);\nconst createAudioWorkletNodeRenderer = createAudioWorkletNodeRendererFactory(connectAudioParam, connectMultipleOutputs, createNativeAudioBufferSourceNode, createNativeChannelMergerNode, createNativeChannelSplitterNode, createNativeConstantSourceNode, createNativeGainNode, deleteUnrenderedAudioWorkletNode, disconnectMultipleOutputs, exposeCurrentFrameAndCurrentTime, getNativeAudioNode, nativeAudioWorkletNodeConstructor, nativeOfflineAudioContextConstructor, renderAutomation, renderInputsOfAudioNode, renderNativeOfflineAudioContext);\nconst getBackupOfflineAudioContext = createGetBackupOfflineAudioContext(backupOfflineAudioContextStore);\nconst setActiveAudioWorkletNodeInputs = createSetActiveAudioWorkletNodeInputs(activeAudioWorkletNodeInputsStore);\n// The AudioWorkletNode constructor is only available in a SecureContext.\nconst audioWorkletNodeConstructor = isSecureContext\n    ? createAudioWorkletNodeConstructor(addUnrenderedAudioWorkletNode, audioNodeConstructor, createAudioParam, createAudioWorkletNodeRenderer, createNativeAudioWorkletNode, getAudioNodeConnections, getBackupOfflineAudioContext, getNativeContext, isNativeOfflineAudioContext, nativeAudioWorkletNodeConstructor, sanitizeAudioWorkletNodeOptions, setActiveAudioWorkletNodeInputs, wrapEventListener)\n    : undefined;\nexport { audioWorkletNodeConstructor as AudioWorkletNode };\nexport { biquadFilterNodeConstructor as BiquadFilterNode };\nexport { channelMergerNodeConstructor as ChannelMergerNode };\nexport { channelSplitterNodeConstructor as ChannelSplitterNode };\nexport { convolverNodeConstructor as ConvolverNode };\nexport { constantSourceNodeConstructor as ConstantSourceNode };\nexport { delayNodeConstructor as DelayNode };\nexport { dynamicsCompressorNodeConstructor as DynamicsCompressorNode };\nexport { gainNodeConstructor as GainNode };\nexport { iIRFilterNodeConstructor as IIRFilterNode };\nexport { mediaElementAudioSourceNodeConstructor as MediaElementAudioSourceNode };\nexport { mediaStreamAudioDestinationNodeConstructor as MediaStreamAudioDestinationNode };\nexport { mediaStreamAudioSourceNodeConstructor as MediaStreamAudioSourceNode };\nexport { mediaStreamTrackAudioSourceNodeConstructor as MediaStreamTrackAudioSourceNode };\nconst minimalAudioContextConstructor = createMinimalAudioContextConstructor(createInvalidStateError, createNotSupportedError, createUnknownError, minimalBaseAudioContextConstructor, nativeAudioContextConstructor);\nexport { minimalAudioContextConstructor as MinimalAudioContext };\nconst createNativeOfflineAudioContext = createCreateNativeOfflineAudioContext(createNotSupportedError, nativeOfflineAudioContextConstructor);\nconst startRendering = createStartRendering(audioBufferStore, cacheTestResult, getAudioNodeRenderer, getUnrenderedAudioWorkletNodes, renderNativeOfflineAudioContext, testAudioBufferCopyChannelMethodsOutOfBoundsSupport, wrapAudioBufferCopyChannelMethods, wrapAudioBufferCopyChannelMethodsOutOfBounds);\nconst minimalOfflineAudioContextConstructor = createMinimalOfflineAudioContextConstructor(cacheTestResult, createInvalidStateError, createNativeOfflineAudioContext, minimalBaseAudioContextConstructor, startRendering);\nexport { minimalOfflineAudioContextConstructor as MinimalOfflineAudioContext };\nconst offlineAudioContextConstructor = createOfflineAudioContextConstructor(baseAudioContextConstructor, cacheTestResult, createInvalidStateError, createNativeOfflineAudioContext, startRendering);\nexport { offlineAudioContextConstructor as OfflineAudioContext };\nexport { oscillatorNodeConstructor as OscillatorNode };\nexport { pannerNodeConstructor as PannerNode };\nexport { periodicWaveConstructor as PeriodicWave };\nexport { stereoPannerNodeConstructor as StereoPannerNode };\nexport { waveShaperNodeConstructor as WaveShaperNode };\nexport const isAnyAudioContext = createIsAnyAudioContext(CONTEXT_STORE, isNativeAudioContext);\nexport const isAnyAudioNode = createIsAnyAudioNode(AUDIO_NODE_STORE, isNativeAudioNode);\nexport const isAnyAudioParam = createIsAnyAudioParam(AUDIO_PARAM_STORE, isNativeAudioParam);\nexport const isAnyOfflineAudioContext = createIsAnyOfflineAudioContext(CONTEXT_STORE, isNativeOfflineAudioContext);\nexport const isSupported = () => createIsSupportedPromise(cacheTestResult, createTestAudioBufferCopyChannelMethodsSubarraySupport(nativeOfflineAudioContextConstructor), createTestAudioContextCloseMethodSupport(nativeAudioContextConstructor), createTestAudioContextDecodeAudioDataMethodTypeErrorSupport(nativeOfflineAudioContextConstructor), createTestAudioContextOptionsSupport(nativeAudioContextConstructor), createTestAudioNodeConnectMethodSupport(nativeOfflineAudioContextConstructor), createTestAudioWorkletProcessorNoOutputsSupport(nativeAudioWorkletNodeConstructor, nativeOfflineAudioContextConstructor), createTestChannelMergerNodeChannelCountSupport(nativeOfflineAudioContextConstructor), createTestConstantSourceNodeAccurateSchedulingSupport(nativeOfflineAudioContextConstructor), createTestConvolverNodeBufferReassignabilitySupport(nativeOfflineAudioContextConstructor), createTestConvolverNodeChannelCountSupport(nativeOfflineAudioContextConstructor), testDomExceptionConstructorSupport, createTestIsSecureContextSupport(window), createTestMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport(nativeAudioContextConstructor), createTestStereoPannerNodeDefaultValueSupport(nativeOfflineAudioContextConstructor), testTransferablesSupport);\n//# sourceMappingURL=module.js.map","/**\n * Assert that the statement is true, otherwise invoke the error.\n * @param statement\n * @param error The message which is passed into an Error\n */\nexport function assert(statement, error) {\n    if (!statement) {\n        throw new Error(error);\n    }\n}\n/**\n * Make sure that the given value is within the range\n */\nexport function assertRange(value, gte, lte = Infinity) {\n    if (!(gte <= value && value <= lte)) {\n        throw new RangeError(`Value must be within [${gte}, ${lte}], got: ${value}`);\n    }\n}\n/**\n * Make sure that the given value is within the range\n */\nexport function assertContextRunning(context) {\n    // add a warning if the context is not started\n    if (!context.isOffline && context.state !== \"running\") {\n        warn(\"The AudioContext is \\\"suspended\\\". Invoke Tone.start() from a user action to start the audio.\");\n    }\n}\n/**\n * The default logger is the console\n */\nlet defaultLogger = console;\n/**\n * Set the logging interface\n */\nexport function setLogger(logger) {\n    defaultLogger = logger;\n}\n/**\n * Log anything\n */\nexport function log(...args) {\n    defaultLogger.log(...args);\n}\n/**\n * Warn anything\n */\nexport function warn(...args) {\n    defaultLogger.warn(...args);\n}\n//# sourceMappingURL=Debug.js.map","/**\n * Test if the arg is undefined\n */\nexport function isUndef(arg) {\n    return typeof arg === \"undefined\";\n}\n/**\n * Test if the arg is not undefined\n */\nexport function isDefined(arg) {\n    return !isUndef(arg);\n}\n/**\n * Test if the arg is a function\n */\nexport function isFunction(arg) {\n    return typeof arg === \"function\";\n}\n/**\n * Test if the argument is a number.\n */\nexport function isNumber(arg) {\n    return (typeof arg === \"number\");\n}\n/**\n * Test if the given argument is an object literal (i.e. `{}`);\n */\nexport function isObject(arg) {\n    return (Object.prototype.toString.call(arg) === \"[object Object]\" && arg.constructor === Object);\n}\n/**\n * Test if the argument is a boolean.\n */\nexport function isBoolean(arg) {\n    return (typeof arg === \"boolean\");\n}\n/**\n * Test if the argument is an Array\n */\nexport function isArray(arg) {\n    return (Array.isArray(arg));\n}\n/**\n * Test if the argument is a string.\n */\nexport function isString(arg) {\n    return (typeof arg === \"string\");\n}\n/**\n * Test if the argument is in the form of a note in scientific pitch notation.\n * e.g. \"C4\"\n */\nexport function isNote(arg) {\n    return isString(arg) && /^([a-g]{1}(?:b|#|x|bb)?)(-?[0-9]+)/i.test(arg);\n}\n//# sourceMappingURL=TypeCheck.js.map","import { AudioContext as stdAudioContext, AudioWorkletNode as stdAudioWorkletNode, OfflineAudioContext as stdOfflineAudioContext } from \"standardized-audio-context\";\nimport { assert } from \"../util/Debug\";\nimport { isDefined } from \"../util/TypeCheck\";\n/**\n * Create a new AudioContext\n */\nexport function createAudioContext(options) {\n    return new stdAudioContext(options);\n}\n/**\n * Create a new OfflineAudioContext\n */\nexport function createOfflineAudioContext(channels, length, sampleRate) {\n    return new stdOfflineAudioContext(channels, length, sampleRate);\n}\n/**\n * A reference to the window object\n * @hidden\n */\nexport const theWindow = typeof self === \"object\" ? self : null;\n/**\n * If the browser has a window object which has an AudioContext\n * @hidden\n */\nexport const hasAudioContext = theWindow &&\n    (theWindow.hasOwnProperty(\"AudioContext\") || theWindow.hasOwnProperty(\"webkitAudioContext\"));\nexport function createAudioWorkletNode(context, name, options) {\n    assert(isDefined(stdAudioWorkletNode), \"This node only works in a secure context (https or localhost)\");\n    // @ts-ignore\n    return new stdAudioWorkletNode(context, name, options);\n}\n/**\n * This promise resolves to a boolean which indicates if the\n * functionality is supported within the currently used browse.\n * Taken from [standardized-audio-context](https://github.com/chrisguttandin/standardized-audio-context#issupported)\n */\nexport { isSupported as supported } from \"standardized-audio-context\";\n//# sourceMappingURL=AudioContext.js.map","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","/**\n * A class which provides a reliable callback using either\n * a Web Worker, or if that isn't supported, falls back to setTimeout.\n */\nexport class Ticker {\n    constructor(callback, type, updateInterval) {\n        this._callback = callback;\n        this._type = type;\n        this._updateInterval = updateInterval;\n        // create the clock source for the first time\n        this._createClock();\n    }\n    /**\n     * Generate a web worker\n     */\n    _createWorker() {\n        const blob = new Blob([\n            /* javascript */ `\n\t\t\t// the initial timeout time\n\t\t\tlet timeoutTime =  ${(this._updateInterval * 1000).toFixed(1)};\n\t\t\t// onmessage callback\n\t\t\tself.onmessage = function(msg){\n\t\t\t\ttimeoutTime = parseInt(msg.data);\n\t\t\t};\n\t\t\t// the tick function which posts a message\n\t\t\t// and schedules a new tick\n\t\t\tfunction tick(){\n\t\t\t\tsetTimeout(tick, timeoutTime);\n\t\t\t\tself.postMessage('tick');\n\t\t\t}\n\t\t\t// call tick initially\n\t\t\ttick();\n\t\t\t`\n        ], { type: \"text/javascript\" });\n        const blobUrl = URL.createObjectURL(blob);\n        const worker = new Worker(blobUrl);\n        worker.onmessage = this._callback.bind(this);\n        this._worker = worker;\n    }\n    /**\n     * Create a timeout loop\n     */\n    _createTimeout() {\n        this._timeout = setTimeout(() => {\n            this._createTimeout();\n            this._callback();\n        }, this._updateInterval * 1000);\n    }\n    /**\n     * Create the clock source.\n     */\n    _createClock() {\n        if (this._type === \"worker\") {\n            try {\n                this._createWorker();\n            }\n            catch (e) {\n                // workers not supported, fallback to timeout\n                this._type = \"timeout\";\n                this._createClock();\n            }\n        }\n        else if (this._type === \"timeout\") {\n            this._createTimeout();\n        }\n    }\n    /**\n     * Clean up the current clock source\n     */\n    _disposeClock() {\n        if (this._timeout) {\n            clearTimeout(this._timeout);\n            this._timeout = 0;\n        }\n        if (this._worker) {\n            this._worker.terminate();\n            this._worker.onmessage = null;\n        }\n    }\n    /**\n     * The rate in seconds the ticker will update\n     */\n    get updateInterval() {\n        return this._updateInterval;\n    }\n    set updateInterval(interval) {\n        this._updateInterval = Math.max(interval, 128 / 44100);\n        if (this._type === \"worker\") {\n            this._worker.postMessage(Math.max(interval * 1000, 1));\n        }\n    }\n    /**\n     * The type of the ticker, either a worker or a timeout\n     */\n    get type() {\n        return this._type;\n    }\n    set type(type) {\n        this._disposeClock();\n        this._type = type;\n        this._createClock();\n    }\n    /**\n     * Clean up\n     */\n    dispose() {\n        this._disposeClock();\n    }\n}\n//# sourceMappingURL=Ticker.js.map","import { isAnyAudioContext, isAnyAudioNode, isAnyAudioParam, isAnyOfflineAudioContext, } from \"standardized-audio-context\";\n/**\n * Test if the given value is an instanceof AudioParam\n */\nexport function isAudioParam(arg) {\n    return isAnyAudioParam(arg);\n}\n/**\n * Test if the given value is an instanceof AudioNode\n */\nexport function isAudioNode(arg) {\n    return isAnyAudioNode(arg);\n}\n/**\n * Test if the arg is instanceof an OfflineAudioContext\n */\nexport function isOfflineAudioContext(arg) {\n    return isAnyOfflineAudioContext(arg);\n}\n/**\n * Test if the arg is an instanceof AudioContext\n */\nexport function isAudioContext(arg) {\n    return isAnyAudioContext(arg);\n}\n/**\n * Test if the arg is instanceof an AudioBuffer\n */\nexport function isAudioBuffer(arg) {\n    return arg instanceof AudioBuffer;\n}\n//# sourceMappingURL=AdvancedTypeCheck.js.map","import { isAudioBuffer, isAudioNode, isAudioParam } from \"./AdvancedTypeCheck\";\nimport { isDefined, isObject, isUndef } from \"./TypeCheck\";\n/**\n * Some objects should not be merged\n */\nfunction noCopy(key, arg) {\n    return key === \"value\" || isAudioParam(arg) || isAudioNode(arg) || isAudioBuffer(arg);\n}\nexport function deepMerge(target, ...sources) {\n    if (!sources.length) {\n        return target;\n    }\n    const source = sources.shift();\n    if (isObject(target) && isObject(source)) {\n        for (const key in source) {\n            if (noCopy(key, source[key])) {\n                target[key] = source[key];\n            }\n            else if (isObject(source[key])) {\n                if (!target[key]) {\n                    Object.assign(target, { [key]: {} });\n                }\n                deepMerge(target[key], source[key]);\n            }\n            else {\n                Object.assign(target, { [key]: source[key] });\n            }\n        }\n    }\n    // @ts-ignore\n    return deepMerge(target, ...sources);\n}\n/**\n * Returns true if the two arrays have the same value for each of the elements\n */\nexport function deepEquals(arrayA, arrayB) {\n    return arrayA.length === arrayB.length && arrayA.every((element, index) => arrayB[index] === element);\n}\n/**\n * Convert an args array into an object.\n */\nexport function optionsFromArguments(defaults, argsArray, keys = [], objKey) {\n    const opts = {};\n    const args = Array.from(argsArray);\n    // if the first argument is an object and has an object key\n    if (isObject(args[0]) && objKey && !Reflect.has(args[0], objKey)) {\n        // if it's not part of the defaults\n        const partOfDefaults = Object.keys(args[0]).some(key => Reflect.has(defaults, key));\n        if (!partOfDefaults) {\n            // merge that key\n            deepMerge(opts, { [objKey]: args[0] });\n            // remove the obj key from the keys\n            keys.splice(keys.indexOf(objKey), 1);\n            // shift the first argument off\n            args.shift();\n        }\n    }\n    if (args.length === 1 && isObject(args[0])) {\n        deepMerge(opts, args[0]);\n    }\n    else {\n        for (let i = 0; i < keys.length; i++) {\n            if (isDefined(args[i])) {\n                opts[keys[i]] = args[i];\n            }\n        }\n    }\n    return deepMerge(defaults, opts);\n}\n/**\n * Return this instances default values by calling Constructor.getDefaults()\n */\nexport function getDefaultsFromInstance(instance) {\n    return instance.constructor.getDefaults();\n}\n/**\n * Returns the fallback if the given object is undefined.\n * Take an array of arguments and return a formatted options object.\n */\nexport function defaultArg(given, fallback) {\n    if (isUndef(given)) {\n        return fallback;\n    }\n    else {\n        return given;\n    }\n}\n/**\n * Remove all of the properties belonging to omit from obj.\n */\nexport function omitFromObject(obj, omit) {\n    omit.forEach(prop => {\n        if (Reflect.has(obj, prop)) {\n            delete obj[prop];\n        }\n    });\n    return obj;\n}\n//# sourceMappingURL=Defaults.js.map","/**\n * Tone.js\n * @author Yotam Mann\n * @license http://opensource.org/licenses/MIT MIT License\n * @copyright 2014-2019 Yotam Mann\n */\nimport { version } from \"../version\";\nimport { theWindow } from \"./context/AudioContext\";\nimport { log } from \"./util/Debug\";\n/**\n * @class  Tone is the base class of all other classes.\n * @category Core\n * @constructor\n */\nexport class Tone {\n    constructor() {\n        //-------------------------------------\n        // \tDEBUGGING\n        //-------------------------------------\n        /**\n         * Set this debug flag to log all events that happen in this class.\n         */\n        this.debug = false;\n        //-------------------------------------\n        // \tDISPOSING\n        //-------------------------------------\n        /**\n         * Indicates if the instance was disposed\n         */\n        this._wasDisposed = false;\n    }\n    /**\n     * Returns all of the default options belonging to the class.\n     */\n    static getDefaults() {\n        return {};\n    }\n    /**\n     * Prints the outputs to the console log for debugging purposes.\n     * Prints the contents only if either the object has a property\n     * called `debug` set to true, or a variable called TONE_DEBUG_CLASS\n     * is set to the name of the class.\n     * @example\n     * const osc = new Tone.Oscillator();\n     * // prints all logs originating from this oscillator\n     * osc.debug = true;\n     * // calls to start/stop will print in the console\n     * osc.start();\n     */\n    log(...args) {\n        // if the object is either set to debug = true\n        // or if there is a string on the Tone.global.with the class name\n        if (this.debug || (theWindow && this.toString() === theWindow.TONE_DEBUG_CLASS)) {\n            log(this, ...args);\n        }\n    }\n    /**\n     * disconnect and dispose.\n     */\n    dispose() {\n        this._wasDisposed = true;\n        return this;\n    }\n    /**\n     * Indicates if the instance was disposed. 'Disposing' an\n     * instance means that all of the Web Audio nodes that were\n     * created for the instance are disconnected and freed for garbage collection.\n     */\n    get disposed() {\n        return this._wasDisposed;\n    }\n    /**\n     * Convert the class to a string\n     * @example\n     * const osc = new Tone.Oscillator();\n     * console.log(osc.toString());\n     */\n    toString() {\n        return this.name;\n    }\n}\n/**\n * The version number semver\n */\nTone.version = version;\n//# sourceMappingURL=Tone.js.map","/**\n * The threshold for correctness for operators. Less than one sample even\n * at very high sampling rates (e.g. `1e-6 < 1 / 192000`).\n */\nconst EPSILON = 1e-6;\n/**\n * Test if A is greater than B\n */\nexport function GT(a, b) {\n    return a > b + EPSILON;\n}\n/**\n * Test if A is greater than or equal to B\n */\nexport function GTE(a, b) {\n    return GT(a, b) || EQ(a, b);\n}\n/**\n * Test if A is less than B\n */\nexport function LT(a, b) {\n    return a + EPSILON < b;\n}\n/**\n * Test if A is less than B\n */\nexport function EQ(a, b) {\n    return Math.abs(a - b) < EPSILON;\n}\n/**\n * Clamp the value within the given range\n */\nexport function clamp(value, min, max) {\n    return Math.max(Math.min(value, max), min);\n}\n//# sourceMappingURL=Math.js.map","import { Tone } from \"../Tone\";\nimport { optionsFromArguments } from \"./Defaults\";\nimport { assert } from \"./Debug\";\nimport { EQ, GT, GTE, LT } from \"./Math\";\n/**\n * A Timeline class for scheduling and maintaining state\n * along a timeline. All events must have a \"time\" property.\n * Internally, events are stored in time order for fast\n * retrieval.\n */\nexport class Timeline extends Tone {\n    constructor() {\n        super();\n        this.name = \"Timeline\";\n        /**\n         * The array of scheduled timeline events\n         */\n        this._timeline = [];\n        const options = optionsFromArguments(Timeline.getDefaults(), arguments, [\"memory\"]);\n        this.memory = options.memory;\n        this.increasing = options.increasing;\n    }\n    static getDefaults() {\n        return {\n            memory: Infinity,\n            increasing: false,\n        };\n    }\n    /**\n     * The number of items in the timeline.\n     */\n    get length() {\n        return this._timeline.length;\n    }\n    /**\n     * Insert an event object onto the timeline. Events must have a \"time\" attribute.\n     * @param event  The event object to insert into the timeline.\n     */\n    add(event) {\n        // the event needs to have a time attribute\n        assert(Reflect.has(event, \"time\"), \"Timeline: events must have a time attribute\");\n        event.time = event.time.valueOf();\n        if (this.increasing && this.length) {\n            const lastValue = this._timeline[this.length - 1];\n            assert(GTE(event.time, lastValue.time), \"The time must be greater than or equal to the last scheduled time\");\n            this._timeline.push(event);\n        }\n        else {\n            const index = this._search(event.time);\n            this._timeline.splice(index + 1, 0, event);\n        }\n        // if the length is more than the memory, remove the previous ones\n        if (this.length > this.memory) {\n            const diff = this.length - this.memory;\n            this._timeline.splice(0, diff);\n        }\n        return this;\n    }\n    /**\n     * Remove an event from the timeline.\n     * @param  {Object}  event  The event object to remove from the list.\n     * @returns {Timeline} this\n     */\n    remove(event) {\n        const index = this._timeline.indexOf(event);\n        if (index !== -1) {\n            this._timeline.splice(index, 1);\n        }\n        return this;\n    }\n    /**\n     * Get the nearest event whose time is less than or equal to the given time.\n     * @param  time  The time to query.\n     */\n    get(time, param = \"time\") {\n        const index = this._search(time, param);\n        if (index !== -1) {\n            return this._timeline[index];\n        }\n        else {\n            return null;\n        }\n    }\n    /**\n     * Return the first event in the timeline without removing it\n     * @returns {Object} The first event object\n     */\n    peek() {\n        return this._timeline[0];\n    }\n    /**\n     * Return the first event in the timeline and remove it\n     */\n    shift() {\n        return this._timeline.shift();\n    }\n    /**\n     * Get the event which is scheduled after the given time.\n     * @param  time  The time to query.\n     */\n    getAfter(time, param = \"time\") {\n        const index = this._search(time, param);\n        if (index + 1 < this._timeline.length) {\n            return this._timeline[index + 1];\n        }\n        else {\n            return null;\n        }\n    }\n    /**\n     * Get the event before the event at the given time.\n     * @param  time  The time to query.\n     */\n    getBefore(time) {\n        const len = this._timeline.length;\n        // if it's after the last item, return the last item\n        if (len > 0 && this._timeline[len - 1].time < time) {\n            return this._timeline[len - 1];\n        }\n        const index = this._search(time);\n        if (index - 1 >= 0) {\n            return this._timeline[index - 1];\n        }\n        else {\n            return null;\n        }\n    }\n    /**\n     * Cancel events at and after the given time\n     * @param  after  The time to query.\n     */\n    cancel(after) {\n        if (this._timeline.length > 1) {\n            let index = this._search(after);\n            if (index >= 0) {\n                if (EQ(this._timeline[index].time, after)) {\n                    // get the first item with that time\n                    for (let i = index; i >= 0; i--) {\n                        if (EQ(this._timeline[i].time, after)) {\n                            index = i;\n                        }\n                        else {\n                            break;\n                        }\n                    }\n                    this._timeline = this._timeline.slice(0, index);\n                }\n                else {\n                    this._timeline = this._timeline.slice(0, index + 1);\n                }\n            }\n            else {\n                this._timeline = [];\n            }\n        }\n        else if (this._timeline.length === 1) {\n            // the first item's time\n            if (GTE(this._timeline[0].time, after)) {\n                this._timeline = [];\n            }\n        }\n        return this;\n    }\n    /**\n     * Cancel events before or equal to the given time.\n     * @param  time  The time to cancel before.\n     */\n    cancelBefore(time) {\n        const index = this._search(time);\n        if (index >= 0) {\n            this._timeline = this._timeline.slice(index + 1);\n        }\n        return this;\n    }\n    /**\n     * Returns the previous event if there is one. null otherwise\n     * @param  event The event to find the previous one of\n     * @return The event right before the given event\n     */\n    previousEvent(event) {\n        const index = this._timeline.indexOf(event);\n        if (index > 0) {\n            return this._timeline[index - 1];\n        }\n        else {\n            return null;\n        }\n    }\n    /**\n     * Does a binary search on the timeline array and returns the\n     * nearest event index whose time is after or equal to the given time.\n     * If a time is searched before the first index in the timeline, -1 is returned.\n     * If the time is after the end, the index of the last item is returned.\n     */\n    _search(time, param = \"time\") {\n        if (this._timeline.length === 0) {\n            return -1;\n        }\n        let beginning = 0;\n        const len = this._timeline.length;\n        let end = len;\n        if (len > 0 && this._timeline[len - 1][param] <= time) {\n            return len - 1;\n        }\n        while (beginning < end) {\n            // calculate the midpoint for roughly equal partition\n            let midPoint = Math.floor(beginning + (end - beginning) / 2);\n            const event = this._timeline[midPoint];\n            const nextEvent = this._timeline[midPoint + 1];\n            if (EQ(event[param], time)) {\n                // choose the last one that has the same time\n                for (let i = midPoint; i < this._timeline.length; i++) {\n                    const testEvent = this._timeline[i];\n                    if (EQ(testEvent[param], time)) {\n                        midPoint = i;\n                    }\n                    else {\n                        break;\n                    }\n                }\n                return midPoint;\n            }\n            else if (LT(event[param], time) && GT(nextEvent[param], time)) {\n                return midPoint;\n            }\n            else if (GT(event[param], time)) {\n                // search lower\n                end = midPoint;\n            }\n            else {\n                // search upper\n                beginning = midPoint + 1;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Internal iterator. Applies extra safety checks for\n     * removing items from the array.\n     */\n    _iterate(callback, lowerBound = 0, upperBound = this._timeline.length - 1) {\n        this._timeline.slice(lowerBound, upperBound + 1).forEach(callback);\n    }\n    /**\n     * Iterate over everything in the array\n     * @param  callback The callback to invoke with every item\n     */\n    forEach(callback) {\n        this._iterate(callback);\n        return this;\n    }\n    /**\n     * Iterate over everything in the array at or before the given time.\n     * @param  time The time to check if items are before\n     * @param  callback The callback to invoke with every item\n     */\n    forEachBefore(time, callback) {\n        // iterate over the items in reverse so that removing an item doesn't break things\n        const upperBound = this._search(time);\n        if (upperBound !== -1) {\n            this._iterate(callback, 0, upperBound);\n        }\n        return this;\n    }\n    /**\n     * Iterate over everything in the array after the given time.\n     * @param  time The time to check if items are before\n     * @param  callback The callback to invoke with every item\n     */\n    forEachAfter(time, callback) {\n        // iterate over the items in reverse so that removing an item doesn't break things\n        const lowerBound = this._search(time);\n        this._iterate(callback, lowerBound + 1);\n        return this;\n    }\n    /**\n     * Iterate over everything in the array between the startTime and endTime.\n     * The timerange is inclusive of the startTime, but exclusive of the endTime.\n     * range = [startTime, endTime).\n     * @param  startTime The time to check if items are before\n     * @param  endTime The end of the test interval.\n     * @param  callback The callback to invoke with every item\n     */\n    forEachBetween(startTime, endTime, callback) {\n        let lowerBound = this._search(startTime);\n        let upperBound = this._search(endTime);\n        if (lowerBound !== -1 && upperBound !== -1) {\n            if (this._timeline[lowerBound].time !== startTime) {\n                lowerBound += 1;\n            }\n            // exclusive of the end time\n            if (this._timeline[upperBound].time === endTime) {\n                upperBound -= 1;\n            }\n            this._iterate(callback, lowerBound, upperBound);\n        }\n        else if (lowerBound === -1) {\n            this._iterate(callback, 0, upperBound);\n        }\n        return this;\n    }\n    /**\n     * Iterate over everything in the array at or after the given time. Similar to\n     * forEachAfter, but includes the item(s) at the given time.\n     * @param  time The time to check if items are before\n     * @param  callback The callback to invoke with every item\n     */\n    forEachFrom(time, callback) {\n        // iterate over the items in reverse so that removing an item doesn't break things\n        let lowerBound = this._search(time);\n        // work backwards until the event time is less than time\n        while (lowerBound >= 0 && this._timeline[lowerBound].time >= time) {\n            lowerBound--;\n        }\n        this._iterate(callback, lowerBound + 1);\n        return this;\n    }\n    /**\n     * Iterate over everything in the array at the given time\n     * @param  time The time to check if items are before\n     * @param  callback The callback to invoke with every item\n     */\n    forEachAtTime(time, callback) {\n        // iterate over the items in reverse so that removing an item doesn't break things\n        const upperBound = this._search(time);\n        if (upperBound !== -1 && EQ(this._timeline[upperBound].time, time)) {\n            let lowerBound = upperBound;\n            for (let i = upperBound; i >= 0; i--) {\n                if (EQ(this._timeline[i].time, time)) {\n                    lowerBound = i;\n                }\n                else {\n                    break;\n                }\n            }\n            this._iterate(event => {\n                callback(event);\n            }, lowerBound, upperBound);\n        }\n        return this;\n    }\n    /**\n     * Clean up.\n     */\n    dispose() {\n        super.dispose();\n        this._timeline = [];\n        return this;\n    }\n}\n//# sourceMappingURL=Timeline.js.map","//-------------------------------------\n// INITIALIZING NEW CONTEXT\n//-------------------------------------\n/**\n * Array of callbacks to invoke when a new context is created\n */\nconst notifyNewContext = [];\n/**\n * Used internally to setup a new Context\n */\nexport function onContextInit(cb) {\n    notifyNewContext.push(cb);\n}\n/**\n * Invoke any classes which need to also be initialized when a new context is created.\n */\nexport function initializeContext(ctx) {\n    // add any additional modules\n    notifyNewContext.forEach(cb => cb(ctx));\n}\n/**\n * Array of callbacks to invoke when a new context is created\n */\nconst notifyCloseContext = [];\n/**\n * Used internally to tear down a Context\n */\nexport function onContextClose(cb) {\n    notifyCloseContext.push(cb);\n}\nexport function closeContext(ctx) {\n    // add any additional modules\n    notifyCloseContext.forEach(cb => cb(ctx));\n}\n//# sourceMappingURL=ContextInitialization.js.map","import { Tone } from \"../Tone\";\nimport { isUndef } from \"./TypeCheck\";\n/**\n * Emitter gives classes which extend it\n * the ability to listen for and emit events.\n * Inspiration and reference from Jerome Etienne's [MicroEvent](https://github.com/jeromeetienne/microevent.js).\n * MIT (c) 2011 Jerome Etienne.\n * @category Core\n */\nexport class Emitter extends Tone {\n    constructor() {\n        super(...arguments);\n        this.name = \"Emitter\";\n    }\n    /**\n     * Bind a callback to a specific event.\n     * @param  event     The name of the event to listen for.\n     * @param  callback  The callback to invoke when the event is emitted\n     */\n    on(event, callback) {\n        // split the event\n        const events = event.split(/\\W+/);\n        events.forEach(eventName => {\n            if (isUndef(this._events)) {\n                this._events = {};\n            }\n            if (!this._events.hasOwnProperty(eventName)) {\n                this._events[eventName] = [];\n            }\n            this._events[eventName].push(callback);\n        });\n        return this;\n    }\n    /**\n     * Bind a callback which is only invoked once\n     * @param  event     The name of the event to listen for.\n     * @param  callback  The callback to invoke when the event is emitted\n     */\n    once(event, callback) {\n        const boundCallback = (...args) => {\n            // invoke the callback\n            callback(...args);\n            // remove the event\n            this.off(event, boundCallback);\n        };\n        this.on(event, boundCallback);\n        return this;\n    }\n    /**\n     * Remove the event listener.\n     * @param  event     The event to stop listening to.\n     * @param  callback  The callback which was bound to the event with Emitter.on.\n     *                   If no callback is given, all callbacks events are removed.\n     */\n    off(event, callback) {\n        const events = event.split(/\\W+/);\n        events.forEach(eventName => {\n            if (isUndef(this._events)) {\n                this._events = {};\n            }\n            if (this._events.hasOwnProperty(event)) {\n                if (isUndef(callback)) {\n                    this._events[event] = [];\n                }\n                else {\n                    const eventList = this._events[event];\n                    for (let i = eventList.length - 1; i >= 0; i--) {\n                        if (eventList[i] === callback) {\n                            eventList.splice(i, 1);\n                        }\n                    }\n                }\n            }\n        });\n        return this;\n    }\n    /**\n     * Invoke all of the callbacks bound to the event\n     * with any arguments passed in.\n     * @param  event  The name of the event.\n     * @param args The arguments to pass to the functions listening.\n     */\n    emit(event, ...args) {\n        if (this._events) {\n            if (this._events.hasOwnProperty(event)) {\n                const eventList = this._events[event].slice(0);\n                for (let i = 0, len = eventList.length; i < len; i++) {\n                    eventList[i].apply(this, args);\n                }\n            }\n        }\n        return this;\n    }\n    /**\n     * Add Emitter functions (on/off/emit) to the object\n     */\n    static mixin(constr) {\n        // instance._events = {};\n        [\"on\", \"once\", \"off\", \"emit\"].forEach(name => {\n            const property = Object.getOwnPropertyDescriptor(Emitter.prototype, name);\n            Object.defineProperty(constr.prototype, name, property);\n        });\n    }\n    /**\n     * Clean up\n     */\n    dispose() {\n        super.dispose();\n        this._events = undefined;\n        return this;\n    }\n}\n//# sourceMappingURL=Emitter.js.map","import { Emitter } from \"../util/Emitter\";\nexport class BaseContext extends Emitter {\n    constructor() {\n        super(...arguments);\n        this.isOffline = false;\n    }\n}\n//# sourceMappingURL=BaseContext.js.map","import { __awaiter } from \"tslib\";\nimport { Ticker } from \"../clock/Ticker\";\nimport { isAudioContext } from \"../util/AdvancedTypeCheck\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { Timeline } from \"../util/Timeline\";\nimport { isDefined, isString } from \"../util/TypeCheck\";\nimport { createAudioContext, createAudioWorkletNode } from \"./AudioContext\";\nimport { closeContext, initializeContext } from \"./ContextInitialization\";\nimport { BaseContext } from \"./BaseContext\";\nimport { assert } from \"../util/Debug\";\n/**\n * Wrapper around the native AudioContext.\n * @category Core\n */\nexport class Context extends BaseContext {\n    constructor() {\n        super();\n        this.name = \"Context\";\n        /**\n         * An object containing all of the constants AudioBufferSourceNodes\n         */\n        this._constants = new Map();\n        /**\n         * All of the setTimeout events.\n         */\n        this._timeouts = new Timeline();\n        /**\n         * The timeout id counter\n         */\n        this._timeoutIds = 0;\n        /**\n         * Private indicator if the context has been initialized\n         */\n        this._initialized = false;\n        /**\n         * Indicates if the context is an OfflineAudioContext or an AudioContext\n         */\n        this.isOffline = false;\n        //--------------------------------------------\n        // AUDIO WORKLET\n        //--------------------------------------------\n        /**\n         * Maps a module name to promise of the addModule method\n         */\n        this._workletModules = new Map();\n        const options = optionsFromArguments(Context.getDefaults(), arguments, [\"context\"]);\n        if (options.context) {\n            this._context = options.context;\n        }\n        else {\n            this._context = createAudioContext({\n                latencyHint: options.latencyHint,\n            });\n        }\n        this._ticker = new Ticker(this.emit.bind(this, \"tick\"), options.clockSource, options.updateInterval);\n        this.on(\"tick\", this._timeoutLoop.bind(this));\n        // fwd events from the context\n        this._context.onstatechange = () => {\n            this.emit(\"statechange\", this.state);\n        };\n        this._setLatencyHint(options.latencyHint);\n        this.lookAhead = options.lookAhead;\n    }\n    static getDefaults() {\n        return {\n            clockSource: \"worker\",\n            latencyHint: \"interactive\",\n            lookAhead: 0.1,\n            updateInterval: 0.05,\n        };\n    }\n    /**\n     * Finish setting up the context. **You usually do not need to do this manually.**\n     */\n    initialize() {\n        if (!this._initialized) {\n            // add any additional modules\n            initializeContext(this);\n            this._initialized = true;\n        }\n        return this;\n    }\n    //---------------------------\n    // BASE AUDIO CONTEXT METHODS\n    //---------------------------\n    createAnalyser() {\n        return this._context.createAnalyser();\n    }\n    createOscillator() {\n        return this._context.createOscillator();\n    }\n    createBufferSource() {\n        return this._context.createBufferSource();\n    }\n    createBiquadFilter() {\n        return this._context.createBiquadFilter();\n    }\n    createBuffer(numberOfChannels, length, sampleRate) {\n        return this._context.createBuffer(numberOfChannels, length, sampleRate);\n    }\n    createChannelMerger(numberOfInputs) {\n        return this._context.createChannelMerger(numberOfInputs);\n    }\n    createChannelSplitter(numberOfOutputs) {\n        return this._context.createChannelSplitter(numberOfOutputs);\n    }\n    createConstantSource() {\n        return this._context.createConstantSource();\n    }\n    createConvolver() {\n        return this._context.createConvolver();\n    }\n    createDelay(maxDelayTime) {\n        return this._context.createDelay(maxDelayTime);\n    }\n    createDynamicsCompressor() {\n        return this._context.createDynamicsCompressor();\n    }\n    createGain() {\n        return this._context.createGain();\n    }\n    createIIRFilter(feedForward, feedback) {\n        // @ts-ignore\n        return this._context.createIIRFilter(feedForward, feedback);\n    }\n    createPanner() {\n        return this._context.createPanner();\n    }\n    createPeriodicWave(real, imag, constraints) {\n        return this._context.createPeriodicWave(real, imag, constraints);\n    }\n    createStereoPanner() {\n        return this._context.createStereoPanner();\n    }\n    createWaveShaper() {\n        return this._context.createWaveShaper();\n    }\n    createMediaStreamSource(stream) {\n        assert(isAudioContext(this._context), \"Not available if OfflineAudioContext\");\n        const context = this._context;\n        return context.createMediaStreamSource(stream);\n    }\n    createMediaStreamDestination() {\n        assert(isAudioContext(this._context), \"Not available if OfflineAudioContext\");\n        const context = this._context;\n        return context.createMediaStreamDestination();\n    }\n    decodeAudioData(audioData) {\n        return this._context.decodeAudioData(audioData);\n    }\n    /**\n     * The current time in seconds of the AudioContext.\n     */\n    get currentTime() {\n        return this._context.currentTime;\n    }\n    /**\n     * The current time in seconds of the AudioContext.\n     */\n    get state() {\n        return this._context.state;\n    }\n    /**\n     * The current time in seconds of the AudioContext.\n     */\n    get sampleRate() {\n        return this._context.sampleRate;\n    }\n    /**\n     * The listener\n     */\n    get listener() {\n        this.initialize();\n        return this._listener;\n    }\n    set listener(l) {\n        assert(!this._initialized, \"The listener cannot be set after initialization.\");\n        this._listener = l;\n    }\n    /**\n     * There is only one Transport per Context. It is created on initialization.\n     */\n    get transport() {\n        this.initialize();\n        return this._transport;\n    }\n    set transport(t) {\n        assert(!this._initialized, \"The transport cannot be set after initialization.\");\n        this._transport = t;\n    }\n    /**\n     * This is the Draw object for the context which is useful for synchronizing the draw frame with the Tone.js clock.\n     */\n    get draw() {\n        this.initialize();\n        return this._draw;\n    }\n    set draw(d) {\n        assert(!this._initialized, \"Draw cannot be set after initialization.\");\n        this._draw = d;\n    }\n    /**\n     * A reference to the Context's destination node.\n     */\n    get destination() {\n        this.initialize();\n        return this._destination;\n    }\n    set destination(d) {\n        assert(!this._initialized, \"The destination cannot be set after initialization.\");\n        this._destination = d;\n    }\n    /**\n     * Create an audio worklet node from a name and options. The module\n     * must first be loaded using [[addAudioWorkletModule]].\n     */\n    createAudioWorkletNode(name, options) {\n        return createAudioWorkletNode(this.rawContext, name, options);\n    }\n    /**\n     * Add an AudioWorkletProcessor module\n     * @param url The url of the module\n     * @param name The name of the module\n     */\n    addAudioWorkletModule(url, name) {\n        return __awaiter(this, void 0, void 0, function* () {\n            assert(isDefined(this.rawContext.audioWorklet), \"AudioWorkletNode is only available in a secure context (https or localhost)\");\n            if (!this._workletModules.has(name)) {\n                this._workletModules.set(name, this.rawContext.audioWorklet.addModule(url));\n            }\n            yield this._workletModules.get(name);\n        });\n    }\n    /**\n     * Returns a promise which resolves when all of the worklets have been loaded on this context\n     */\n    workletsAreReady() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const promises = [];\n            this._workletModules.forEach(promise => promises.push(promise));\n            yield Promise.all(promises);\n        });\n    }\n    //---------------------------\n    // TICKER\n    //---------------------------\n    /**\n     * How often the interval callback is invoked.\n     * This number corresponds to how responsive the scheduling\n     * can be. context.updateInterval + context.lookAhead gives you the\n     * total latency between scheduling an event and hearing it.\n     */\n    get updateInterval() {\n        return this._ticker.updateInterval;\n    }\n    set updateInterval(interval) {\n        this._ticker.updateInterval = interval;\n    }\n    /**\n     * What the source of the clock is, either \"worker\" (default),\n     * \"timeout\", or \"offline\" (none).\n     */\n    get clockSource() {\n        return this._ticker.type;\n    }\n    set clockSource(type) {\n        this._ticker.type = type;\n    }\n    /**\n     * The type of playback, which affects tradeoffs between audio\n     * output latency and responsiveness.\n     * In addition to setting the value in seconds, the latencyHint also\n     * accepts the strings \"interactive\" (prioritizes low latency),\n     * \"playback\" (prioritizes sustained playback), \"balanced\" (balances\n     * latency and performance).\n     * @example\n     * // prioritize sustained playback\n     * const context = new Tone.Context({ latencyHint: \"playback\" });\n     * // set this context as the global Context\n     * Tone.setContext(context);\n     * // the global context is gettable with Tone.getContext()\n     * console.log(Tone.getContext().latencyHint);\n     */\n    get latencyHint() {\n        return this._latencyHint;\n    }\n    /**\n     * Update the lookAhead and updateInterval based on the latencyHint\n     */\n    _setLatencyHint(hint) {\n        let lookAheadValue = 0;\n        this._latencyHint = hint;\n        if (isString(hint)) {\n            switch (hint) {\n                case \"interactive\":\n                    lookAheadValue = 0.1;\n                    break;\n                case \"playback\":\n                    lookAheadValue = 0.5;\n                    break;\n                case \"balanced\":\n                    lookAheadValue = 0.25;\n                    break;\n            }\n        }\n        this.lookAhead = lookAheadValue;\n        this.updateInterval = lookAheadValue / 2;\n    }\n    /**\n     * The unwrapped AudioContext or OfflineAudioContext\n     */\n    get rawContext() {\n        return this._context;\n    }\n    /**\n     * The current audio context time plus a short [[lookAhead]].\n     */\n    now() {\n        return this._context.currentTime + this.lookAhead;\n    }\n    /**\n     * The current audio context time without the [[lookAhead]].\n     * In most cases it is better to use [[now]] instead of [[immediate]] since\n     * with [[now]] the [[lookAhead]] is applied equally to _all_ components including internal components,\n     * to making sure that everything is scheduled in sync. Mixing [[now]] and [[immediate]]\n     * can cause some timing issues. If no lookAhead is desired, you can set the [[lookAhead]] to `0`.\n     */\n    immediate() {\n        return this._context.currentTime;\n    }\n    /**\n     * Starts the audio context from a suspended state. This is required\n     * to initially start the AudioContext. See [[Tone.start]]\n     */\n    resume() {\n        if (this._context.state === \"suspended\" && isAudioContext(this._context)) {\n            return this._context.resume();\n        }\n        else {\n            return Promise.resolve();\n        }\n    }\n    /**\n     * Close the context. Once closed, the context can no longer be used and\n     * any AudioNodes created from the context will be silent.\n     */\n    close() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (isAudioContext(this._context)) {\n                yield this._context.close();\n            }\n            if (this._initialized) {\n                closeContext(this);\n            }\n        });\n    }\n    /**\n     * **Internal** Generate a looped buffer at some constant value.\n     */\n    getConstant(val) {\n        if (this._constants.has(val)) {\n            return this._constants.get(val);\n        }\n        else {\n            const buffer = this._context.createBuffer(1, 128, this._context.sampleRate);\n            const arr = buffer.getChannelData(0);\n            for (let i = 0; i < arr.length; i++) {\n                arr[i] = val;\n            }\n            const constant = this._context.createBufferSource();\n            constant.channelCount = 1;\n            constant.channelCountMode = \"explicit\";\n            constant.buffer = buffer;\n            constant.loop = true;\n            constant.start(0);\n            this._constants.set(val, constant);\n            return constant;\n        }\n    }\n    /**\n     * Clean up. Also closes the audio context.\n     */\n    dispose() {\n        super.dispose();\n        this._ticker.dispose();\n        this._timeouts.dispose();\n        Object.keys(this._constants).map(val => this._constants[val].disconnect());\n        return this;\n    }\n    //---------------------------\n    // TIMEOUTS\n    //---------------------------\n    /**\n     * The private loop which keeps track of the context scheduled timeouts\n     * Is invoked from the clock source\n     */\n    _timeoutLoop() {\n        const now = this.now();\n        let firstEvent = this._timeouts.peek();\n        while (this._timeouts.length && firstEvent && firstEvent.time <= now) {\n            // invoke the callback\n            firstEvent.callback();\n            // shift the first event off\n            this._timeouts.shift();\n            // get the next one\n            firstEvent = this._timeouts.peek();\n        }\n    }\n    /**\n     * A setTimeout which is guaranteed by the clock source.\n     * Also runs in the offline context.\n     * @param  fn       The callback to invoke\n     * @param  timeout  The timeout in seconds\n     * @returns ID to use when invoking Context.clearTimeout\n     */\n    setTimeout(fn, timeout) {\n        this._timeoutIds++;\n        const now = this.now();\n        this._timeouts.add({\n            callback: fn,\n            id: this._timeoutIds,\n            time: now + timeout,\n        });\n        return this._timeoutIds;\n    }\n    /**\n     * Clears a previously scheduled timeout with Tone.context.setTimeout\n     * @param  id  The ID returned from setTimeout\n     */\n    clearTimeout(id) {\n        this._timeouts.forEach(event => {\n            if (event.id === id) {\n                this._timeouts.remove(event);\n            }\n        });\n        return this;\n    }\n    /**\n     * Clear the function scheduled by [[setInterval]]\n     */\n    clearInterval(id) {\n        return this.clearTimeout(id);\n    }\n    /**\n     * Adds a repeating event to the context's callback clock\n     */\n    setInterval(fn, interval) {\n        const id = ++this._timeoutIds;\n        const intervalFn = () => {\n            const now = this.now();\n            this._timeouts.add({\n                callback: () => {\n                    // invoke the callback\n                    fn();\n                    // invoke the event to repeat it\n                    intervalFn();\n                },\n                id,\n                time: now + interval,\n            });\n        };\n        // kick it off\n        intervalFn();\n        return id;\n    }\n}\n//# sourceMappingURL=Context.js.map","import { __awaiter } from \"tslib\";\nimport { BaseContext } from \"./BaseContext\";\nexport class DummyContext extends BaseContext {\n    constructor() {\n        super(...arguments);\n        this.lookAhead = 0;\n        this.latencyHint = 0;\n        this.isOffline = false;\n    }\n    //---------------------------\n    // BASE AUDIO CONTEXT METHODS\n    //---------------------------\n    createAnalyser() {\n        return {};\n    }\n    createOscillator() {\n        return {};\n    }\n    createBufferSource() {\n        return {};\n    }\n    createBiquadFilter() {\n        return {};\n    }\n    createBuffer(_numberOfChannels, _length, _sampleRate) {\n        return {};\n    }\n    createChannelMerger(_numberOfInputs) {\n        return {};\n    }\n    createChannelSplitter(_numberOfOutputs) {\n        return {};\n    }\n    createConstantSource() {\n        return {};\n    }\n    createConvolver() {\n        return {};\n    }\n    createDelay(_maxDelayTime) {\n        return {};\n    }\n    createDynamicsCompressor() {\n        return {};\n    }\n    createGain() {\n        return {};\n    }\n    createIIRFilter(_feedForward, _feedback) {\n        return {};\n    }\n    createPanner() {\n        return {};\n    }\n    createPeriodicWave(_real, _imag, _constraints) {\n        return {};\n    }\n    createStereoPanner() {\n        return {};\n    }\n    createWaveShaper() {\n        return {};\n    }\n    createMediaStreamSource(_stream) {\n        return {};\n    }\n    createMediaStreamDestination() {\n        return {};\n    }\n    decodeAudioData(_audioData) {\n        return Promise.resolve({});\n    }\n    //---------------------------\n    // TONE AUDIO CONTEXT METHODS\n    //---------------------------\n    createAudioWorkletNode(_name, _options) {\n        return {};\n    }\n    get rawContext() {\n        return {};\n    }\n    addAudioWorkletModule(_url, _name) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return Promise.resolve();\n        });\n    }\n    resume() {\n        return Promise.resolve();\n    }\n    setTimeout(_fn, _timeout) {\n        return 0;\n    }\n    clearTimeout(_id) {\n        return this;\n    }\n    setInterval(_fn, _interval) {\n        return 0;\n    }\n    clearInterval(_id) {\n        return this;\n    }\n    getConstant(_val) {\n        return {};\n    }\n    get currentTime() {\n        return 0;\n    }\n    get state() {\n        return {};\n    }\n    get sampleRate() {\n        return 0;\n    }\n    get listener() {\n        return {};\n    }\n    get transport() {\n        return {};\n    }\n    get draw() {\n        return {};\n    }\n    set draw(_d) { }\n    get destination() {\n        return {};\n    }\n    set destination(_d) { }\n    now() {\n        return 0;\n    }\n    immediate() {\n        return 0;\n    }\n}\n//# sourceMappingURL=DummyContext.js.map","import { isArray } from \"./TypeCheck\";\n/**\n * Make the property not writable using `defineProperty`. Internal use only.\n */\nexport function readOnly(target, property) {\n    if (isArray(property)) {\n        property.forEach(str => readOnly(target, str));\n    }\n    else {\n        Object.defineProperty(target, property, {\n            enumerable: true,\n            writable: false,\n        });\n    }\n}\n/**\n * Make an attribute writeable. Internal use only.\n */\nexport function writable(target, property) {\n    if (isArray(property)) {\n        property.forEach(str => writable(target, str));\n    }\n    else {\n        Object.defineProperty(target, property, {\n            writable: true,\n        });\n    }\n}\nexport const noOp = () => {\n    // no operation here!\n};\n//# sourceMappingURL=Interface.js.map","import { __awaiter } from \"tslib\";\nimport { getContext } from \"../Global\";\nimport { Tone } from \"../Tone\";\nimport { isAudioBuffer } from \"../util/AdvancedTypeCheck\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { noOp } from \"../util/Interface\";\nimport { isArray, isNumber, isString } from \"../util/TypeCheck\";\nimport { assert } from \"../util/Debug\";\n/**\n * AudioBuffer loading and storage. ToneAudioBuffer is used internally by all\n * classes that make requests for audio files such as Tone.Player,\n * Tone.Sampler and Tone.Convolver.\n * Aside from load callbacks from individual buffers, ToneAudioBuffer\n * provides events which keep track of the loading progress\n * of _all_ of the buffers. These are ToneAudioBuffer.on(\"load\" / \"progress\" / \"error\")\n * @example\n * const buffer = new Tone.ToneAudioBuffer(\"https://tonejs.github.io/audio/casio/A1.mp3\", () => {\n * \tconsole.log(\"loaded\");\n * });\n * @category Core\n */\nexport class ToneAudioBuffer extends Tone {\n    constructor() {\n        super();\n        this.name = \"ToneAudioBuffer\";\n        /**\n         * Callback when the buffer is loaded.\n         */\n        this.onload = noOp;\n        const options = optionsFromArguments(ToneAudioBuffer.getDefaults(), arguments, [\"url\", \"onload\", \"onerror\"]);\n        this.reverse = options.reverse;\n        this.onload = options.onload;\n        if (options.url && isAudioBuffer(options.url) || options.url instanceof ToneAudioBuffer) {\n            this.set(options.url);\n        }\n        else if (isString(options.url)) {\n            // initiate the download\n            this.load(options.url).catch(options.onerror);\n        }\n    }\n    static getDefaults() {\n        return {\n            onerror: noOp,\n            onload: noOp,\n            reverse: false,\n        };\n    }\n    /**\n     * The sample rate of the AudioBuffer\n     */\n    get sampleRate() {\n        if (this._buffer) {\n            return this._buffer.sampleRate;\n        }\n        else {\n            return getContext().sampleRate;\n        }\n    }\n    /**\n     * Pass in an AudioBuffer or ToneAudioBuffer to set the value of this buffer.\n     */\n    set(buffer) {\n        if (buffer instanceof ToneAudioBuffer) {\n            // if it's loaded, set it\n            if (buffer.loaded) {\n                this._buffer = buffer.get();\n            }\n            else {\n                // otherwise when it's loaded, invoke it's callback\n                buffer.onload = () => {\n                    this.set(buffer);\n                    this.onload(this);\n                };\n            }\n        }\n        else {\n            this._buffer = buffer;\n        }\n        // reverse it initially\n        if (this._reversed) {\n            this._reverse();\n        }\n        return this;\n    }\n    /**\n     * The audio buffer stored in the object.\n     */\n    get() {\n        return this._buffer;\n    }\n    /**\n     * Makes an fetch request for the selected url then decodes the file as an audio buffer.\n     * Invokes the callback once the audio buffer loads.\n     * @param url The url of the buffer to load. filetype support depends on the browser.\n     * @returns A Promise which resolves with this ToneAudioBuffer\n     */\n    load(url) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const doneLoading = ToneAudioBuffer.load(url).then(audioBuffer => {\n                this.set(audioBuffer);\n                // invoke the onload method\n                this.onload(this);\n            });\n            ToneAudioBuffer.downloads.push(doneLoading);\n            try {\n                yield doneLoading;\n            }\n            finally {\n                // remove the downloaded file\n                const index = ToneAudioBuffer.downloads.indexOf(doneLoading);\n                ToneAudioBuffer.downloads.splice(index, 1);\n            }\n            return this;\n        });\n    }\n    /**\n     * clean up\n     */\n    dispose() {\n        super.dispose();\n        this._buffer = undefined;\n        return this;\n    }\n    /**\n     * Set the audio buffer from the array.\n     * To create a multichannel AudioBuffer, pass in a multidimensional array.\n     * @param array The array to fill the audio buffer\n     */\n    fromArray(array) {\n        const isMultidimensional = isArray(array) && array[0].length > 0;\n        const channels = isMultidimensional ? array.length : 1;\n        const len = isMultidimensional ? array[0].length : array.length;\n        const context = getContext();\n        const buffer = context.createBuffer(channels, len, context.sampleRate);\n        const multiChannelArray = !isMultidimensional && channels === 1 ?\n            [array] : array;\n        for (let c = 0; c < channels; c++) {\n            buffer.copyToChannel(multiChannelArray[c], c);\n        }\n        this._buffer = buffer;\n        return this;\n    }\n    /**\n     * Sums multiple channels into 1 channel\n     * @param chanNum Optionally only copy a single channel from the array.\n     */\n    toMono(chanNum) {\n        if (isNumber(chanNum)) {\n            this.fromArray(this.toArray(chanNum));\n        }\n        else {\n            let outputArray = new Float32Array(this.length);\n            const numChannels = this.numberOfChannels;\n            for (let channel = 0; channel < numChannels; channel++) {\n                const channelArray = this.toArray(channel);\n                for (let i = 0; i < channelArray.length; i++) {\n                    outputArray[i] += channelArray[i];\n                }\n            }\n            // divide by the number of channels\n            outputArray = outputArray.map(sample => sample / numChannels);\n            this.fromArray(outputArray);\n        }\n        return this;\n    }\n    /**\n     * Get the buffer as an array. Single channel buffers will return a 1-dimensional\n     * Float32Array, and multichannel buffers will return multidimensional arrays.\n     * @param channel Optionally only copy a single channel from the array.\n     */\n    toArray(channel) {\n        if (isNumber(channel)) {\n            return this.getChannelData(channel);\n        }\n        else if (this.numberOfChannels === 1) {\n            return this.toArray(0);\n        }\n        else {\n            const ret = [];\n            for (let c = 0; c < this.numberOfChannels; c++) {\n                ret[c] = this.getChannelData(c);\n            }\n            return ret;\n        }\n    }\n    /**\n     * Returns the Float32Array representing the PCM audio data for the specific channel.\n     * @param  channel  The channel number to return\n     * @return The audio as a TypedArray\n     */\n    getChannelData(channel) {\n        if (this._buffer) {\n            return this._buffer.getChannelData(channel);\n        }\n        else {\n            return new Float32Array(0);\n        }\n    }\n    /**\n     * Cut a subsection of the array and return a buffer of the\n     * subsection. Does not modify the original buffer\n     * @param start The time to start the slice\n     * @param end The end time to slice. If none is given will default to the end of the buffer\n     */\n    slice(start, end = this.duration) {\n        const startSamples = Math.floor(start * this.sampleRate);\n        const endSamples = Math.floor(end * this.sampleRate);\n        assert(startSamples < endSamples, \"The start time must be less than the end time\");\n        const length = endSamples - startSamples;\n        const retBuffer = getContext().createBuffer(this.numberOfChannels, length, this.sampleRate);\n        for (let channel = 0; channel < this.numberOfChannels; channel++) {\n            retBuffer.copyToChannel(this.getChannelData(channel).subarray(startSamples, endSamples), channel);\n        }\n        return new ToneAudioBuffer(retBuffer);\n    }\n    /**\n     * Reverse the buffer.\n     */\n    _reverse() {\n        if (this.loaded) {\n            for (let i = 0; i < this.numberOfChannels; i++) {\n                this.getChannelData(i).reverse();\n            }\n        }\n        return this;\n    }\n    /**\n     * If the buffer is loaded or not\n     */\n    get loaded() {\n        return this.length > 0;\n    }\n    /**\n     * The duration of the buffer in seconds.\n     */\n    get duration() {\n        if (this._buffer) {\n            return this._buffer.duration;\n        }\n        else {\n            return 0;\n        }\n    }\n    /**\n     * The length of the buffer in samples\n     */\n    get length() {\n        if (this._buffer) {\n            return this._buffer.length;\n        }\n        else {\n            return 0;\n        }\n    }\n    /**\n     * The number of discrete audio channels. Returns 0 if no buffer is loaded.\n     */\n    get numberOfChannels() {\n        if (this._buffer) {\n            return this._buffer.numberOfChannels;\n        }\n        else {\n            return 0;\n        }\n    }\n    /**\n     * Reverse the buffer.\n     */\n    get reverse() {\n        return this._reversed;\n    }\n    set reverse(rev) {\n        if (this._reversed !== rev) {\n            this._reversed = rev;\n            this._reverse();\n        }\n    }\n    /**\n     * Create a ToneAudioBuffer from the array. To create a multichannel AudioBuffer,\n     * pass in a multidimensional array.\n     * @param array The array to fill the audio buffer\n     * @return A ToneAudioBuffer created from the array\n     */\n    static fromArray(array) {\n        return (new ToneAudioBuffer()).fromArray(array);\n    }\n    /**\n     * Creates a ToneAudioBuffer from a URL, returns a promise which resolves to a ToneAudioBuffer\n     * @param  url The url to load.\n     * @return A promise which resolves to a ToneAudioBuffer\n     */\n    static fromUrl(url) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const buffer = new ToneAudioBuffer();\n            return yield buffer.load(url);\n        });\n    }\n    /**\n     * Loads a url using fetch and returns the AudioBuffer.\n     */\n    static load(url) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // test if the url contains multiple extensions\n            const matches = url.match(/\\[(.+\\|?)+\\]$/);\n            if (matches) {\n                const extensions = matches[1].split(\"|\");\n                let extension = extensions[0];\n                for (const ext of extensions) {\n                    if (ToneAudioBuffer.supportsType(ext)) {\n                        extension = ext;\n                        break;\n                    }\n                }\n                url = url.replace(matches[0], extension);\n            }\n            // make sure there is a slash between the baseUrl and the url\n            const baseUrl = ToneAudioBuffer.baseUrl === \"\" || ToneAudioBuffer.baseUrl.endsWith(\"/\") ? ToneAudioBuffer.baseUrl : ToneAudioBuffer.baseUrl + \"/\";\n            const response = yield fetch(baseUrl + url);\n            if (!response.ok) {\n                throw new Error(`could not load url: ${url}`);\n            }\n            const arrayBuffer = yield response.arrayBuffer();\n            const audioBuffer = yield getContext().decodeAudioData(arrayBuffer);\n            return audioBuffer;\n        });\n    }\n    /**\n     * Checks a url's extension to see if the current browser can play that file type.\n     * @param url The url/extension to test\n     * @return If the file extension can be played\n     * @static\n     * @example\n     * Tone.ToneAudioBuffer.supportsType(\"wav\"); // returns true\n     * Tone.ToneAudioBuffer.supportsType(\"path/to/file.wav\"); // returns true\n     */\n    static supportsType(url) {\n        const extensions = url.split(\".\");\n        const extension = extensions[extensions.length - 1];\n        const response = document.createElement(\"audio\").canPlayType(\"audio/\" + extension);\n        return response !== \"\";\n    }\n    /**\n     * Returns a Promise which resolves when all of the buffers have loaded\n     */\n    static loaded() {\n        return __awaiter(this, void 0, void 0, function* () {\n            // this makes sure that the function is always async\n            yield Promise.resolve();\n            while (ToneAudioBuffer.downloads.length) {\n                yield ToneAudioBuffer.downloads[0];\n            }\n        });\n    }\n}\n//-------------------------------------\n// STATIC METHODS\n//-------------------------------------\n/**\n * A path which is prefixed before every url.\n */\nToneAudioBuffer.baseUrl = \"\";\n/**\n * All of the downloads\n */\nToneAudioBuffer.downloads = [];\n//# sourceMappingURL=ToneAudioBuffer.js.map","import { __awaiter } from \"tslib\";\nimport { createOfflineAudioContext } from \"../context/AudioContext\";\nimport { Context } from \"../context/Context\";\nimport { isOfflineAudioContext } from \"../util/AdvancedTypeCheck\";\nimport { ToneAudioBuffer } from \"./ToneAudioBuffer\";\n/**\n * Wrapper around the OfflineAudioContext\n * @category Core\n * @example\n * // generate a single channel, 0.5 second buffer\n * const context = new Tone.OfflineContext(1, 0.5, 44100);\n * const osc = new Tone.Oscillator({ context });\n * context.render().then(buffer => {\n * \tconsole.log(buffer.numberOfChannels, buffer.duration);\n * });\n */\nexport class OfflineContext extends Context {\n    constructor() {\n        super({\n            clockSource: \"offline\",\n            context: isOfflineAudioContext(arguments[0]) ?\n                arguments[0] : createOfflineAudioContext(arguments[0], arguments[1] * arguments[2], arguments[2]),\n            lookAhead: 0,\n            updateInterval: isOfflineAudioContext(arguments[0]) ?\n                128 / arguments[0].sampleRate : 128 / arguments[2],\n        });\n        this.name = \"OfflineContext\";\n        /**\n         * An artificial clock source\n         */\n        this._currentTime = 0;\n        this.isOffline = true;\n        this._duration = isOfflineAudioContext(arguments[0]) ?\n            arguments[0].length / arguments[0].sampleRate : arguments[1];\n    }\n    /**\n     * Override the now method to point to the internal clock time\n     */\n    now() {\n        return this._currentTime;\n    }\n    /**\n     * Same as this.now()\n     */\n    get currentTime() {\n        return this._currentTime;\n    }\n    /**\n     * Render just the clock portion of the audio context.\n     */\n    _renderClock(asynchronous) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let index = 0;\n            while (this._duration - this._currentTime >= 0) {\n                // invoke all the callbacks on that time\n                this.emit(\"tick\");\n                // increment the clock in block-sized chunks\n                this._currentTime += 128 / this.sampleRate;\n                // yield once a second of audio\n                index++;\n                const yieldEvery = Math.floor(this.sampleRate / 128);\n                if (asynchronous && index % yieldEvery === 0) {\n                    yield new Promise(done => setTimeout(done, 1));\n                }\n            }\n        });\n    }\n    /**\n     * Render the output of the OfflineContext\n     * @param asynchronous If the clock should be rendered asynchronously, which will not block the main thread, but be slightly slower.\n     */\n    render(asynchronous = true) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.workletsAreReady();\n            yield this._renderClock(asynchronous);\n            const buffer = yield this._context.startRendering();\n            return new ToneAudioBuffer(buffer);\n        });\n    }\n    /**\n     * Close the context\n     */\n    close() {\n        return Promise.resolve();\n    }\n}\n//# sourceMappingURL=OfflineContext.js.map","import { version } from \"../version\";\nimport { hasAudioContext, theWindow } from \"./context/AudioContext\";\nimport { Context } from \"./context/Context\";\nimport { DummyContext } from \"./context/DummyContext\";\nimport { OfflineContext } from \"./context/OfflineContext\";\nimport { isAudioContext, isOfflineAudioContext } from \"./util/AdvancedTypeCheck\";\n/**\n * This dummy context is used to avoid throwing immediate errors when importing in Node.js\n */\nconst dummyContext = new DummyContext();\n/**\n * The global audio context which is getable and assignable through\n * getContext and setContext\n */\nlet globalContext = dummyContext;\n/**\n * Returns the default system-wide [[Context]]\n * @category Core\n */\nexport function getContext() {\n    if (globalContext === dummyContext && hasAudioContext) {\n        setContext(new Context());\n    }\n    return globalContext;\n}\n/**\n * Set the default audio context\n * @category Core\n */\nexport function setContext(context) {\n    if (isAudioContext(context)) {\n        globalContext = new Context(context);\n    }\n    else if (isOfflineAudioContext(context)) {\n        globalContext = new OfflineContext(context);\n    }\n    else {\n        globalContext = context;\n    }\n}\n/**\n * Most browsers will not play _any_ audio until a user\n * clicks something (like a play button). Invoke this method\n * on a click or keypress event handler to start the audio context.\n * More about the Autoplay policy\n * [here](https://developers.google.com/web/updates/2017/09/autoplay-policy-changes#webaudio)\n * @example\n * document.querySelector(\"button\").addEventListener(\"click\", async () => {\n * \tawait Tone.start();\n * \tconsole.log(\"context started\");\n * });\n * @category Core\n */\nexport function start() {\n    return globalContext.resume();\n}\n/**\n * Log Tone.js + version in the console.\n */\nif (theWindow && !theWindow.TONE_SILENCE_LOGGING) {\n    let prefix = \"v\";\n    if (version === \"dev\") {\n        prefix = \"\";\n    }\n    const printString = ` * Tone.js ${prefix}${version} * `;\n    // eslint-disable-next-line no-console\n    console.log(`%c${printString}`, \"background: #000; color: #fff\");\n}\n//# sourceMappingURL=Global.js.map","/**\n * Equal power gain scale. Good for cross-fading.\n * @param  percent (0-1)\n */\nexport function equalPowerScale(percent) {\n    const piFactor = 0.5 * Math.PI;\n    return Math.sin(percent * piFactor);\n}\n/**\n * Convert decibels into gain.\n */\nexport function dbToGain(db) {\n    return Math.pow(10, db / 20);\n}\n/**\n * Convert gain to decibels.\n */\nexport function gainToDb(gain) {\n    return 20 * (Math.log(gain) / Math.LN10);\n}\n/**\n * Convert an interval (in semitones) to a frequency ratio.\n * @param interval the number of semitones above the base note\n * @example\n * Tone.intervalToFrequencyRatio(0); // 1\n * Tone.intervalToFrequencyRatio(12); // 2\n * Tone.intervalToFrequencyRatio(-12); // 0.5\n */\nexport function intervalToFrequencyRatio(interval) {\n    return Math.pow(2, (interval / 12));\n}\n/**\n * The Global [concert tuning pitch](https://en.wikipedia.org/wiki/Concert_pitch) which is used\n * to generate all the other pitch values from notes. A4's values in Hertz.\n */\nlet A4 = 440;\nexport function getA4() {\n    return A4;\n}\nexport function setA4(freq) {\n    A4 = freq;\n}\n/**\n * Convert a frequency value to a MIDI note.\n * @param frequency The value to frequency value to convert.\n * @example\n * Tone.ftom(440); // returns 69\n */\nexport function ftom(frequency) {\n    return Math.round(ftomf(frequency));\n}\n/**\n * Convert a frequency to a floating point midi value\n */\nexport function ftomf(frequency) {\n    return 69 + 12 * Math.log2(frequency / A4);\n}\n/**\n * Convert a MIDI note to frequency value.\n * @param  midi The midi number to convert.\n * @return The corresponding frequency value\n * @example\n * Tone.mtof(69); // 440\n */\nexport function mtof(midi) {\n    return A4 * Math.pow(2, (midi - 69) / 12);\n}\n//# sourceMappingURL=Conversions.js.map","import { Tone } from \"../Tone\";\nimport { isDefined, isObject, isString, isUndef } from \"../util/TypeCheck\";\n/**\n * TimeBase is a flexible encoding of time which can be evaluated to and from a string.\n */\nexport class TimeBaseClass extends Tone {\n    /**\n     * @param context The context associated with the time value. Used to compute\n     * Transport and context-relative timing.\n     * @param  value  The time value as a number, string or object\n     * @param  units  Unit values\n     */\n    constructor(context, value, units) {\n        super();\n        /**\n         * The default units\n         */\n        this.defaultUnits = \"s\";\n        this._val = value;\n        this._units = units;\n        this.context = context;\n        this._expressions = this._getExpressions();\n    }\n    /**\n     * All of the time encoding expressions\n     */\n    _getExpressions() {\n        return {\n            hz: {\n                method: (value) => {\n                    return this._frequencyToUnits(parseFloat(value));\n                },\n                regexp: /^(\\d+(?:\\.\\d+)?)hz$/i,\n            },\n            i: {\n                method: (value) => {\n                    return this._ticksToUnits(parseInt(value, 10));\n                },\n                regexp: /^(\\d+)i$/i,\n            },\n            m: {\n                method: (value) => {\n                    return this._beatsToUnits(parseInt(value, 10) * this._getTimeSignature());\n                },\n                regexp: /^(\\d+)m$/i,\n            },\n            n: {\n                method: (value, dot) => {\n                    const numericValue = parseInt(value, 10);\n                    const scalar = dot === \".\" ? 1.5 : 1;\n                    if (numericValue === 1) {\n                        return this._beatsToUnits(this._getTimeSignature()) * scalar;\n                    }\n                    else {\n                        return this._beatsToUnits(4 / numericValue) * scalar;\n                    }\n                },\n                regexp: /^(\\d+)n(\\.?)$/i,\n            },\n            number: {\n                method: (value) => {\n                    return this._expressions[this.defaultUnits].method.call(this, value);\n                },\n                regexp: /^(\\d+(?:\\.\\d+)?)$/,\n            },\n            s: {\n                method: (value) => {\n                    return this._secondsToUnits(parseFloat(value));\n                },\n                regexp: /^(\\d+(?:\\.\\d+)?)s$/,\n            },\n            samples: {\n                method: (value) => {\n                    return parseInt(value, 10) / this.context.sampleRate;\n                },\n                regexp: /^(\\d+)samples$/,\n            },\n            t: {\n                method: (value) => {\n                    const numericValue = parseInt(value, 10);\n                    return this._beatsToUnits(8 / (Math.floor(numericValue) * 3));\n                },\n                regexp: /^(\\d+)t$/i,\n            },\n            tr: {\n                method: (m, q, s) => {\n                    let total = 0;\n                    if (m && m !== \"0\") {\n                        total += this._beatsToUnits(this._getTimeSignature() * parseFloat(m));\n                    }\n                    if (q && q !== \"0\") {\n                        total += this._beatsToUnits(parseFloat(q));\n                    }\n                    if (s && s !== \"0\") {\n                        total += this._beatsToUnits(parseFloat(s) / 4);\n                    }\n                    return total;\n                },\n                regexp: /^(\\d+(?:\\.\\d+)?):(\\d+(?:\\.\\d+)?):?(\\d+(?:\\.\\d+)?)?$/,\n            },\n        };\n    }\n    //-------------------------------------\n    // \tVALUE OF\n    //-------------------------------------\n    /**\n     * Evaluate the time value. Returns the time in seconds.\n     */\n    valueOf() {\n        if (this._val instanceof TimeBaseClass) {\n            this.fromType(this._val);\n        }\n        if (isUndef(this._val)) {\n            return this._noArg();\n        }\n        else if (isString(this._val) && isUndef(this._units)) {\n            for (const units in this._expressions) {\n                if (this._expressions[units].regexp.test(this._val.trim())) {\n                    this._units = units;\n                    break;\n                }\n            }\n        }\n        else if (isObject(this._val)) {\n            let total = 0;\n            for (const typeName in this._val) {\n                if (isDefined(this._val[typeName])) {\n                    const quantity = this._val[typeName];\n                    // @ts-ignore\n                    const time = (new this.constructor(this.context, typeName)).valueOf() * quantity;\n                    total += time;\n                }\n            }\n            return total;\n        }\n        if (isDefined(this._units)) {\n            const expr = this._expressions[this._units];\n            const matching = this._val.toString().trim().match(expr.regexp);\n            if (matching) {\n                return expr.method.apply(this, matching.slice(1));\n            }\n            else {\n                return expr.method.call(this, this._val);\n            }\n        }\n        else if (isString(this._val)) {\n            return parseFloat(this._val);\n        }\n        else {\n            return this._val;\n        }\n    }\n    //-------------------------------------\n    // \tUNIT CONVERSIONS\n    //-------------------------------------\n    /**\n     * Returns the value of a frequency in the current units\n     */\n    _frequencyToUnits(freq) {\n        return 1 / freq;\n    }\n    /**\n     * Return the value of the beats in the current units\n     */\n    _beatsToUnits(beats) {\n        return (60 / this._getBpm()) * beats;\n    }\n    /**\n     * Returns the value of a second in the current units\n     */\n    _secondsToUnits(seconds) {\n        return seconds;\n    }\n    /**\n     * Returns the value of a tick in the current time units\n     */\n    _ticksToUnits(ticks) {\n        return (ticks * (this._beatsToUnits(1)) / this._getPPQ());\n    }\n    /**\n     * With no arguments, return 'now'\n     */\n    _noArg() {\n        return this._now();\n    }\n    //-------------------------------------\n    // \tTEMPO CONVERSIONS\n    //-------------------------------------\n    /**\n     * Return the bpm\n     */\n    _getBpm() {\n        return this.context.transport.bpm.value;\n    }\n    /**\n     * Return the timeSignature\n     */\n    _getTimeSignature() {\n        return this.context.transport.timeSignature;\n    }\n    /**\n     * Return the PPQ or 192 if Transport is not available\n     */\n    _getPPQ() {\n        return this.context.transport.PPQ;\n    }\n    //-------------------------------------\n    // \tCONVERSION INTERFACE\n    //-------------------------------------\n    /**\n     * Coerce a time type into this units type.\n     * @param type Any time type units\n     */\n    fromType(type) {\n        this._units = undefined;\n        switch (this.defaultUnits) {\n            case \"s\":\n                this._val = type.toSeconds();\n                break;\n            case \"i\":\n                this._val = type.toTicks();\n                break;\n            case \"hz\":\n                this._val = type.toFrequency();\n                break;\n            case \"midi\":\n                this._val = type.toMidi();\n                break;\n        }\n        return this;\n    }\n    /**\n     * Return the value in hertz\n     */\n    toFrequency() {\n        return 1 / this.toSeconds();\n    }\n    /**\n     * Return the time in samples\n     */\n    toSamples() {\n        return this.toSeconds() * this.context.sampleRate;\n    }\n    /**\n     * Return the time in milliseconds.\n     */\n    toMilliseconds() {\n        return this.toSeconds() * 1000;\n    }\n}\n//# sourceMappingURL=TimeBase.js.map","import { getContext } from \"../Global\";\nimport { ftom } from \"./Conversions\";\nimport { TimeBaseClass } from \"./TimeBase\";\n/**\n * TimeClass is a primitive type for encoding and decoding Time values.\n * TimeClass can be passed into the parameter of any method which takes time as an argument.\n * @param  val    The time value.\n * @param  units  The units of the value.\n * @example\n * const time = Tone.Time(\"4n\"); // a quarter note\n * @category Unit\n */\nexport class TimeClass extends TimeBaseClass {\n    constructor() {\n        super(...arguments);\n        this.name = \"TimeClass\";\n    }\n    _getExpressions() {\n        return Object.assign(super._getExpressions(), {\n            now: {\n                method: (capture) => {\n                    return this._now() + new this.constructor(this.context, capture).valueOf();\n                },\n                regexp: /^\\+(.+)/,\n            },\n            quantize: {\n                method: (capture) => {\n                    const quantTo = new TimeClass(this.context, capture).valueOf();\n                    return this._secondsToUnits(this.context.transport.nextSubdivision(quantTo));\n                },\n                regexp: /^@(.+)/,\n            },\n        });\n    }\n    /**\n     * Quantize the time by the given subdivision. Optionally add a\n     * percentage which will move the time value towards the ideal\n     * quantized value by that percentage.\n     * @param  subdiv    The subdivision to quantize to\n     * @param  percent  Move the time value towards the quantized value by a percentage.\n     * @example\n     * Tone.Time(21).quantize(2); // returns 22\n     * Tone.Time(0.6).quantize(\"4n\", 0.5); // returns 0.55\n     */\n    quantize(subdiv, percent = 1) {\n        const subdivision = new this.constructor(this.context, subdiv).valueOf();\n        const value = this.valueOf();\n        const multiple = Math.round(value / subdivision);\n        const ideal = multiple * subdivision;\n        const diff = ideal - value;\n        return value + diff * percent;\n    }\n    //-------------------------------------\n    // CONVERSIONS\n    //-------------------------------------\n    /**\n     * Convert a Time to Notation. The notation values are will be the\n     * closest representation between 1m to 128th note.\n     * @return {Notation}\n     * @example\n     * // if the Transport is at 120bpm:\n     * Tone.Time(2).toNotation(); // returns \"1m\"\n     */\n    toNotation() {\n        const time = this.toSeconds();\n        const testNotations = [\"1m\"];\n        for (let power = 1; power < 9; power++) {\n            const subdiv = Math.pow(2, power);\n            testNotations.push(subdiv + \"n.\");\n            testNotations.push(subdiv + \"n\");\n            testNotations.push(subdiv + \"t\");\n        }\n        testNotations.push(\"0\");\n        // find the closets notation representation\n        let closest = testNotations[0];\n        let closestSeconds = new TimeClass(this.context, testNotations[0]).toSeconds();\n        testNotations.forEach(notation => {\n            const notationSeconds = new TimeClass(this.context, notation).toSeconds();\n            if (Math.abs(notationSeconds - time) < Math.abs(closestSeconds - time)) {\n                closest = notation;\n                closestSeconds = notationSeconds;\n            }\n        });\n        return closest;\n    }\n    /**\n     * Return the time encoded as Bars:Beats:Sixteenths.\n     */\n    toBarsBeatsSixteenths() {\n        const quarterTime = this._beatsToUnits(1);\n        let quarters = this.valueOf() / quarterTime;\n        quarters = parseFloat(quarters.toFixed(4));\n        const measures = Math.floor(quarters / this._getTimeSignature());\n        let sixteenths = (quarters % 1) * 4;\n        quarters = Math.floor(quarters) % this._getTimeSignature();\n        const sixteenthString = sixteenths.toString();\n        if (sixteenthString.length > 3) {\n            // the additional parseFloat removes insignificant trailing zeroes\n            sixteenths = parseFloat(parseFloat(sixteenthString).toFixed(3));\n        }\n        const progress = [measures, quarters, sixteenths];\n        return progress.join(\":\");\n    }\n    /**\n     * Return the time in ticks.\n     */\n    toTicks() {\n        const quarterTime = this._beatsToUnits(1);\n        const quarters = this.valueOf() / quarterTime;\n        return Math.round(quarters * this._getPPQ());\n    }\n    /**\n     * Return the time in seconds.\n     */\n    toSeconds() {\n        return this.valueOf();\n    }\n    /**\n     * Return the value as a midi note.\n     */\n    toMidi() {\n        return ftom(this.toFrequency());\n    }\n    _now() {\n        return this.context.now();\n    }\n}\n/**\n * Create a TimeClass from a time string or number. The time is computed against the\n * global Tone.Context. To use a specific context, use [[TimeClass]]\n * @param value A value which represents time\n * @param units The value's units if they can't be inferred by the value.\n * @category Unit\n * @example\n * const time = Tone.Time(\"4n\").toSeconds();\n * console.log(time);\n * @example\n * const note = Tone.Time(1).toNotation();\n * console.log(note);\n * @example\n * const freq = Tone.Time(0.5).toFrequency();\n * console.log(freq);\n */\nexport function Time(value, units) {\n    return new TimeClass(getContext(), value, units);\n}\n//# sourceMappingURL=Time.js.map","import { getContext } from \"../Global\";\nimport { intervalToFrequencyRatio, mtof } from \"./Conversions\";\nimport { ftom, getA4, setA4 } from \"./Conversions\";\nimport { TimeClass } from \"./Time\";\n/**\n * Frequency is a primitive type for encoding Frequency values.\n * Eventually all time values are evaluated to hertz using the `valueOf` method.\n * @example\n * Tone.Frequency(\"C3\"); // 261\n * Tone.Frequency(38, \"midi\");\n * Tone.Frequency(\"C3\").transpose(4);\n * @category Unit\n */\nexport class FrequencyClass extends TimeClass {\n    constructor() {\n        super(...arguments);\n        this.name = \"Frequency\";\n        this.defaultUnits = \"hz\";\n    }\n    /**\n     * The [concert tuning pitch](https://en.wikipedia.org/wiki/Concert_pitch) which is used\n     * to generate all the other pitch values from notes. A4's values in Hertz.\n     */\n    static get A4() {\n        return getA4();\n    }\n    static set A4(freq) {\n        setA4(freq);\n    }\n    //-------------------------------------\n    // \tAUGMENT BASE EXPRESSIONS\n    //-------------------------------------\n    _getExpressions() {\n        return Object.assign({}, super._getExpressions(), {\n            midi: {\n                regexp: /^(\\d+(?:\\.\\d+)?midi)/,\n                method(value) {\n                    if (this.defaultUnits === \"midi\") {\n                        return value;\n                    }\n                    else {\n                        return FrequencyClass.mtof(value);\n                    }\n                },\n            },\n            note: {\n                regexp: /^([a-g]{1}(?:b|#|x|bb)?)(-?[0-9]+)/i,\n                method(pitch, octave) {\n                    const index = noteToScaleIndex[pitch.toLowerCase()];\n                    const noteNumber = index + (parseInt(octave, 10) + 1) * 12;\n                    if (this.defaultUnits === \"midi\") {\n                        return noteNumber;\n                    }\n                    else {\n                        return FrequencyClass.mtof(noteNumber);\n                    }\n                },\n            },\n            tr: {\n                regexp: /^(\\d+(?:\\.\\d+)?):(\\d+(?:\\.\\d+)?):?(\\d+(?:\\.\\d+)?)?/,\n                method(m, q, s) {\n                    let total = 1;\n                    if (m && m !== \"0\") {\n                        total *= this._beatsToUnits(this._getTimeSignature() * parseFloat(m));\n                    }\n                    if (q && q !== \"0\") {\n                        total *= this._beatsToUnits(parseFloat(q));\n                    }\n                    if (s && s !== \"0\") {\n                        total *= this._beatsToUnits(parseFloat(s) / 4);\n                    }\n                    return total;\n                },\n            },\n        });\n    }\n    //-------------------------------------\n    // \tEXPRESSIONS\n    //-------------------------------------\n    /**\n     * Transposes the frequency by the given number of semitones.\n     * @return  A new transposed frequency\n     * @example\n     * Tone.Frequency(\"A4\").transpose(3); // \"C5\"\n     */\n    transpose(interval) {\n        return new FrequencyClass(this.context, this.valueOf() * intervalToFrequencyRatio(interval));\n    }\n    /**\n     * Takes an array of semitone intervals and returns\n     * an array of frequencies transposed by those intervals.\n     * @return  Returns an array of Frequencies\n     * @example\n     * Tone.Frequency(\"A4\").harmonize([0, 3, 7]); // [\"A4\", \"C5\", \"E5\"]\n     */\n    harmonize(intervals) {\n        return intervals.map(interval => {\n            return this.transpose(interval);\n        });\n    }\n    //-------------------------------------\n    // \tUNIT CONVERSIONS\n    //-------------------------------------\n    /**\n     * Return the value of the frequency as a MIDI note\n     * @example\n     * Tone.Frequency(\"C4\").toMidi(); // 60\n     */\n    toMidi() {\n        return ftom(this.valueOf());\n    }\n    /**\n     * Return the value of the frequency in Scientific Pitch Notation\n     * @example\n     * Tone.Frequency(69, \"midi\").toNote(); // \"A4\"\n     */\n    toNote() {\n        const freq = this.toFrequency();\n        const log = Math.log2(freq / FrequencyClass.A4);\n        let noteNumber = Math.round(12 * log) + 57;\n        const octave = Math.floor(noteNumber / 12);\n        if (octave < 0) {\n            noteNumber += -12 * octave;\n        }\n        const noteName = scaleIndexToNote[noteNumber % 12];\n        return noteName + octave.toString();\n    }\n    /**\n     * Return the duration of one cycle in seconds.\n     */\n    toSeconds() {\n        return 1 / super.toSeconds();\n    }\n    /**\n     * Return the duration of one cycle in ticks\n     */\n    toTicks() {\n        const quarterTime = this._beatsToUnits(1);\n        const quarters = this.valueOf() / quarterTime;\n        return Math.floor(quarters * this._getPPQ());\n    }\n    //-------------------------------------\n    // \tUNIT CONVERSIONS HELPERS\n    //-------------------------------------\n    /**\n     * With no arguments, return 0\n     */\n    _noArg() {\n        return 0;\n    }\n    /**\n     * Returns the value of a frequency in the current units\n     */\n    _frequencyToUnits(freq) {\n        return freq;\n    }\n    /**\n     * Returns the value of a tick in the current time units\n     */\n    _ticksToUnits(ticks) {\n        return 1 / ((ticks * 60) / (this._getBpm() * this._getPPQ()));\n    }\n    /**\n     * Return the value of the beats in the current units\n     */\n    _beatsToUnits(beats) {\n        return 1 / super._beatsToUnits(beats);\n    }\n    /**\n     * Returns the value of a second in the current units\n     */\n    _secondsToUnits(seconds) {\n        return 1 / seconds;\n    }\n    /**\n     * Convert a MIDI note to frequency value.\n     * @param  midi The midi number to convert.\n     * @return The corresponding frequency value\n     */\n    static mtof(midi) {\n        return mtof(midi);\n    }\n    /**\n     * Convert a frequency value to a MIDI note.\n     * @param frequency The value to frequency value to convert.\n     */\n    static ftom(frequency) {\n        return ftom(frequency);\n    }\n}\n//-------------------------------------\n// \tFREQUENCY CONVERSIONS\n//-------------------------------------\n/**\n * Note to scale index.\n * @hidden\n */\nconst noteToScaleIndex = {\n    cbb: -2, cb: -1, c: 0, \"c#\": 1, cx: 2,\n    dbb: 0, db: 1, d: 2, \"d#\": 3, dx: 4,\n    ebb: 2, eb: 3, e: 4, \"e#\": 5, ex: 6,\n    fbb: 3, fb: 4, f: 5, \"f#\": 6, fx: 7,\n    gbb: 5, gb: 6, g: 7, \"g#\": 8, gx: 9,\n    abb: 7, ab: 8, a: 9, \"a#\": 10, ax: 11,\n    bbb: 9, bb: 10, b: 11, \"b#\": 12, bx: 13,\n};\n/**\n * scale index to note (sharps)\n * @hidden\n */\nconst scaleIndexToNote = [\"C\", \"C#\", \"D\", \"D#\", \"E\", \"F\", \"F#\", \"G\", \"G#\", \"A\", \"A#\", \"B\"];\n/**\n * Convert a value into a FrequencyClass object.\n * @category Unit\n * @example\n * const midi = Tone.Frequency(\"C3\").toMidi();\n * console.log(midi);\n * @example\n * const hertz = Tone.Frequency(38, \"midi\").toFrequency();\n * console.log(hertz);\n */\nexport function Frequency(value, units) {\n    return new FrequencyClass(getContext(), value, units);\n}\n//# sourceMappingURL=Frequency.js.map","import { getContext } from \"../Global\";\nimport { TimeClass } from \"./Time\";\n/**\n * TransportTime is a the time along the Transport's\n * timeline. It is similar to Tone.Time, but instead of evaluating\n * against the AudioContext's clock, it is evaluated against\n * the Transport's position. See [TransportTime wiki](https://github.com/Tonejs/Tone.js/wiki/TransportTime).\n * @category Unit\n */\nexport class TransportTimeClass extends TimeClass {\n    constructor() {\n        super(...arguments);\n        this.name = \"TransportTime\";\n    }\n    /**\n     * Return the current time in whichever context is relevant\n     */\n    _now() {\n        return this.context.transport.seconds;\n    }\n}\n/**\n * TransportTime is a the time along the Transport's\n * timeline. It is similar to [[Time]], but instead of evaluating\n * against the AudioContext's clock, it is evaluated against\n * the Transport's position. See [TransportTime wiki](https://github.com/Tonejs/Tone.js/wiki/TransportTime).\n * @category Unit\n */\nexport function TransportTime(value, units) {\n    return new TransportTimeClass(getContext(), value, units);\n}\n//# sourceMappingURL=TransportTime.js.map","import { getContext } from \"../Global\";\nimport { Tone } from \"../Tone\";\nimport { FrequencyClass } from \"../type/Frequency\";\nimport { TimeClass } from \"../type/Time\";\nimport { TransportTimeClass } from \"../type/TransportTime\";\nimport { getDefaultsFromInstance, optionsFromArguments } from \"../util/Defaults\";\nimport { isArray, isBoolean, isDefined, isNumber, isString, isUndef } from \"../util/TypeCheck\";\n/**\n * The Base class for all nodes that have an AudioContext.\n */\nexport class ToneWithContext extends Tone {\n    constructor() {\n        super();\n        const options = optionsFromArguments(ToneWithContext.getDefaults(), arguments, [\"context\"]);\n        if (this.defaultContext) {\n            this.context = this.defaultContext;\n        }\n        else {\n            this.context = options.context;\n        }\n    }\n    static getDefaults() {\n        return {\n            context: getContext(),\n        };\n    }\n    /**\n     * Return the current time of the Context clock plus the lookAhead.\n     * @example\n     * setInterval(() => {\n     * \tconsole.log(Tone.now());\n     * }, 100);\n     */\n    now() {\n        return this.context.currentTime + this.context.lookAhead;\n    }\n    /**\n     * Return the current time of the Context clock without any lookAhead.\n     * @example\n     * setInterval(() => {\n     * \tconsole.log(Tone.immediate());\n     * }, 100);\n     */\n    immediate() {\n        return this.context.currentTime;\n    }\n    /**\n     * The duration in seconds of one sample.\n     * @example\n     * console.log(Tone.Transport.sampleTime);\n     */\n    get sampleTime() {\n        return 1 / this.context.sampleRate;\n    }\n    /**\n     * The number of seconds of 1 processing block (128 samples)\n     * @example\n     * console.log(Tone.Destination.blockTime);\n     */\n    get blockTime() {\n        return 128 / this.context.sampleRate;\n    }\n    /**\n     * Convert the incoming time to seconds.\n     * This is calculated against the current [[Tone.Transport]] bpm\n     * @example\n     * const gain = new Tone.Gain();\n     * setInterval(() => console.log(gain.toSeconds(\"4n\")), 100);\n     * // ramp the tempo to 60 bpm over 30 seconds\n     * Tone.getTransport().bpm.rampTo(60, 30);\n     */\n    toSeconds(time) {\n        return new TimeClass(this.context, time).toSeconds();\n    }\n    /**\n     * Convert the input to a frequency number\n     * @example\n     * const gain = new Tone.Gain();\n     * console.log(gain.toFrequency(\"4n\"));\n     */\n    toFrequency(freq) {\n        return new FrequencyClass(this.context, freq).toFrequency();\n    }\n    /**\n     * Convert the input time into ticks\n     * @example\n     * const gain = new Tone.Gain();\n     * console.log(gain.toTicks(\"4n\"));\n     */\n    toTicks(time) {\n        return new TransportTimeClass(this.context, time).toTicks();\n    }\n    //-------------------------------------\n    // \tGET/SET\n    //-------------------------------------\n    /**\n     * Get a subset of the properties which are in the partial props\n     */\n    _getPartialProperties(props) {\n        const options = this.get();\n        // remove attributes from the prop that are not in the partial\n        Object.keys(options).forEach(name => {\n            if (isUndef(props[name])) {\n                delete options[name];\n            }\n        });\n        return options;\n    }\n    /**\n     * Get the object's attributes.\n     * @example\n     * const osc = new Tone.Oscillator();\n     * console.log(osc.get());\n     */\n    get() {\n        const defaults = getDefaultsFromInstance(this);\n        Object.keys(defaults).forEach(attribute => {\n            if (Reflect.has(this, attribute)) {\n                const member = this[attribute];\n                if (isDefined(member) && isDefined(member.value) && isDefined(member.setValueAtTime)) {\n                    defaults[attribute] = member.value;\n                }\n                else if (member instanceof ToneWithContext) {\n                    defaults[attribute] = member._getPartialProperties(defaults[attribute]);\n                    // otherwise make sure it's a serializable type\n                }\n                else if (isArray(member) || isNumber(member) || isString(member) || isBoolean(member)) {\n                    defaults[attribute] = member;\n                }\n                else {\n                    // remove all undefined and unserializable attributes\n                    delete defaults[attribute];\n                }\n            }\n        });\n        return defaults;\n    }\n    /**\n     * Set multiple properties at once with an object.\n     * @example\n     * const filter = new Tone.Filter().toDestination();\n     * // set values using an object\n     * filter.set({\n     * \tfrequency: \"C6\",\n     * \ttype: \"highpass\"\n     * });\n     * const player = new Tone.Player(\"https://tonejs.github.io/audio/berklee/Analogsynth_octaves_highmid.mp3\").connect(filter);\n     * player.autostart = true;\n     */\n    set(props) {\n        Object.keys(props).forEach(attribute => {\n            if (Reflect.has(this, attribute) && isDefined(this[attribute])) {\n                if (this[attribute] && isDefined(this[attribute].value) && isDefined(this[attribute].setValueAtTime)) {\n                    // small optimization\n                    if (this[attribute].value !== props[attribute]) {\n                        this[attribute].value = props[attribute];\n                    }\n                }\n                else if (this[attribute] instanceof ToneWithContext) {\n                    this[attribute].set(props[attribute]);\n                }\n                else {\n                    this[attribute] = props[attribute];\n                }\n            }\n        });\n        return this;\n    }\n}\n//# sourceMappingURL=ToneWithContext.js.map","import { Timeline } from \"./Timeline\";\nimport { assertRange } from \"./Debug\";\n/**\n * A Timeline State. Provides the methods: `setStateAtTime(\"state\", time)` and `getValueAtTime(time)`\n * @param initial The initial state of the StateTimeline.  Defaults to `undefined`\n */\nexport class StateTimeline extends Timeline {\n    constructor(initial = \"stopped\") {\n        super();\n        this.name = \"StateTimeline\";\n        this._initial = initial;\n        this.setStateAtTime(this._initial, 0);\n    }\n    /**\n     * Returns the scheduled state scheduled before or at\n     * the given time.\n     * @param  time  The time to query.\n     * @return  The name of the state input in setStateAtTime.\n     */\n    getValueAtTime(time) {\n        const event = this.get(time);\n        if (event !== null) {\n            return event.state;\n        }\n        else {\n            return this._initial;\n        }\n    }\n    /**\n     * Add a state to the timeline.\n     * @param  state The name of the state to set.\n     * @param  time  The time to query.\n     * @param options Any additional options that are needed in the timeline.\n     */\n    setStateAtTime(state, time, options) {\n        assertRange(time, 0);\n        this.add(Object.assign({}, options, {\n            state,\n            time,\n        }));\n        return this;\n    }\n    /**\n     * Return the event before the time with the given state\n     * @param  state The state to look for\n     * @param  time  When to check before\n     * @return  The event with the given state before the time\n     */\n    getLastState(state, time) {\n        // time = this.toSeconds(time);\n        const index = this._search(time);\n        for (let i = index; i >= 0; i--) {\n            const event = this._timeline[i];\n            if (event.state === state) {\n                return event;\n            }\n        }\n    }\n    /**\n     * Return the event after the time with the given state\n     * @param  state The state to look for\n     * @param  time  When to check from\n     * @return  The event with the given state after the time\n     */\n    getNextState(state, time) {\n        // time = this.toSeconds(time);\n        const index = this._search(time);\n        if (index !== -1) {\n            for (let i = index; i < this._timeline.length; i++) {\n                const event = this._timeline[i];\n                if (event.state === state) {\n                    return event;\n                }\n            }\n        }\n    }\n}\n//# sourceMappingURL=StateTimeline.js.map","import { dbToGain, gainToDb } from \"../type/Conversions\";\nimport { isAudioParam } from \"../util/AdvancedTypeCheck\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { Timeline } from \"../util/Timeline\";\nimport { isDefined } from \"../util/TypeCheck\";\nimport { ToneWithContext } from \"./ToneWithContext\";\nimport { EQ } from \"../util/Math\";\nimport { assert, assertRange } from \"../util/Debug\";\n/**\n * Param wraps the native Web Audio's AudioParam to provide\n * additional unit conversion functionality. It also\n * serves as a base-class for classes which have a single,\n * automatable parameter.\n * @category Core\n */\nexport class Param extends ToneWithContext {\n    constructor() {\n        super(optionsFromArguments(Param.getDefaults(), arguments, [\"param\", \"units\", \"convert\"]));\n        this.name = \"Param\";\n        this.overridden = false;\n        /**\n         * The minimum output value\n         */\n        this._minOutput = 1e-7;\n        const options = optionsFromArguments(Param.getDefaults(), arguments, [\"param\", \"units\", \"convert\"]);\n        assert(isDefined(options.param) &&\n            (isAudioParam(options.param) || options.param instanceof Param), \"param must be an AudioParam\");\n        while (!isAudioParam(options.param)) {\n            options.param = options.param._param;\n        }\n        this._swappable = isDefined(options.swappable) ? options.swappable : false;\n        if (this._swappable) {\n            this.input = this.context.createGain();\n            // initialize\n            this._param = options.param;\n            this.input.connect(this._param);\n        }\n        else {\n            this._param = this.input = options.param;\n        }\n        this._events = new Timeline(1000);\n        this._initialValue = this._param.defaultValue;\n        this.units = options.units;\n        this.convert = options.convert;\n        this._minValue = options.minValue;\n        this._maxValue = options.maxValue;\n        // if the value is defined, set it immediately\n        if (isDefined(options.value) && options.value !== this._toType(this._initialValue)) {\n            this.setValueAtTime(options.value, 0);\n        }\n    }\n    static getDefaults() {\n        return Object.assign(ToneWithContext.getDefaults(), {\n            convert: true,\n            units: \"number\",\n        });\n    }\n    get value() {\n        const now = this.now();\n        return this.getValueAtTime(now);\n    }\n    set value(value) {\n        this.cancelScheduledValues(this.now());\n        this.setValueAtTime(value, this.now());\n    }\n    get minValue() {\n        // if it's not the default minValue, return it\n        if (isDefined(this._minValue)) {\n            return this._minValue;\n        }\n        else if (this.units === \"time\" || this.units === \"frequency\" ||\n            this.units === \"normalRange\" || this.units === \"positive\" ||\n            this.units === \"transportTime\" || this.units === \"ticks\" ||\n            this.units === \"bpm\" || this.units === \"hertz\" || this.units === \"samples\") {\n            return 0;\n        }\n        else if (this.units === \"audioRange\") {\n            return -1;\n        }\n        else if (this.units === \"decibels\") {\n            return -Infinity;\n        }\n        else {\n            return this._param.minValue;\n        }\n    }\n    get maxValue() {\n        if (isDefined(this._maxValue)) {\n            return this._maxValue;\n        }\n        else if (this.units === \"normalRange\" ||\n            this.units === \"audioRange\") {\n            return 1;\n        }\n        else {\n            return this._param.maxValue;\n        }\n    }\n    /**\n     * Type guard based on the unit name\n     */\n    _is(arg, type) {\n        return this.units === type;\n    }\n    /**\n     * Make sure the value is always in the defined range\n     */\n    _assertRange(value) {\n        if (isDefined(this.maxValue) && isDefined(this.minValue)) {\n            assertRange(value, this._fromType(this.minValue), this._fromType(this.maxValue));\n        }\n        return value;\n    }\n    /**\n     * Convert the given value from the type specified by Param.units\n     * into the destination value (such as Gain or Frequency).\n     */\n    _fromType(val) {\n        if (this.convert && !this.overridden) {\n            if (this._is(val, \"time\")) {\n                return this.toSeconds(val);\n            }\n            else if (this._is(val, \"decibels\")) {\n                return dbToGain(val);\n            }\n            else if (this._is(val, \"frequency\")) {\n                return this.toFrequency(val);\n            }\n            else {\n                return val;\n            }\n        }\n        else if (this.overridden) {\n            // if it's overridden, should only schedule 0s\n            return 0;\n        }\n        else {\n            return val;\n        }\n    }\n    /**\n     * Convert the parameters value into the units specified by Param.units.\n     */\n    _toType(val) {\n        if (this.convert && this.units === \"decibels\") {\n            return gainToDb(val);\n        }\n        else {\n            return val;\n        }\n    }\n    //-------------------------------------\n    // ABSTRACT PARAM INTERFACE\n    // all docs are generated from ParamInterface.ts\n    //-------------------------------------\n    setValueAtTime(value, time) {\n        const computedTime = this.toSeconds(time);\n        const numericValue = this._fromType(value);\n        assert(isFinite(numericValue) && isFinite(computedTime), `Invalid argument(s) to setValueAtTime: ${JSON.stringify(value)}, ${JSON.stringify(time)}`);\n        this._assertRange(numericValue);\n        this.log(this.units, \"setValueAtTime\", value, computedTime);\n        this._events.add({\n            time: computedTime,\n            type: \"setValueAtTime\",\n            value: numericValue,\n        });\n        this._param.setValueAtTime(numericValue, computedTime);\n        return this;\n    }\n    getValueAtTime(time) {\n        const computedTime = Math.max(this.toSeconds(time), 0);\n        const after = this._events.getAfter(computedTime);\n        const before = this._events.get(computedTime);\n        let value = this._initialValue;\n        // if it was set by\n        if (before === null) {\n            value = this._initialValue;\n        }\n        else if (before.type === \"setTargetAtTime\" && (after === null || after.type === \"setValueAtTime\")) {\n            const previous = this._events.getBefore(before.time);\n            let previousVal;\n            if (previous === null) {\n                previousVal = this._initialValue;\n            }\n            else {\n                previousVal = previous.value;\n            }\n            if (before.type === \"setTargetAtTime\") {\n                value = this._exponentialApproach(before.time, previousVal, before.value, before.constant, computedTime);\n            }\n        }\n        else if (after === null) {\n            value = before.value;\n        }\n        else if (after.type === \"linearRampToValueAtTime\" || after.type === \"exponentialRampToValueAtTime\") {\n            let beforeValue = before.value;\n            if (before.type === \"setTargetAtTime\") {\n                const previous = this._events.getBefore(before.time);\n                if (previous === null) {\n                    beforeValue = this._initialValue;\n                }\n                else {\n                    beforeValue = previous.value;\n                }\n            }\n            if (after.type === \"linearRampToValueAtTime\") {\n                value = this._linearInterpolate(before.time, beforeValue, after.time, after.value, computedTime);\n            }\n            else {\n                value = this._exponentialInterpolate(before.time, beforeValue, after.time, after.value, computedTime);\n            }\n        }\n        else {\n            value = before.value;\n        }\n        return this._toType(value);\n    }\n    setRampPoint(time) {\n        time = this.toSeconds(time);\n        let currentVal = this.getValueAtTime(time);\n        this.cancelAndHoldAtTime(time);\n        if (this._fromType(currentVal) === 0) {\n            currentVal = this._toType(this._minOutput);\n        }\n        this.setValueAtTime(currentVal, time);\n        return this;\n    }\n    linearRampToValueAtTime(value, endTime) {\n        const numericValue = this._fromType(value);\n        const computedTime = this.toSeconds(endTime);\n        assert(isFinite(numericValue) && isFinite(computedTime), `Invalid argument(s) to linearRampToValueAtTime: ${JSON.stringify(value)}, ${JSON.stringify(endTime)}`);\n        this._assertRange(numericValue);\n        this._events.add({\n            time: computedTime,\n            type: \"linearRampToValueAtTime\",\n            value: numericValue,\n        });\n        this.log(this.units, \"linearRampToValueAtTime\", value, computedTime);\n        this._param.linearRampToValueAtTime(numericValue, computedTime);\n        return this;\n    }\n    exponentialRampToValueAtTime(value, endTime) {\n        let numericValue = this._fromType(value);\n        numericValue = Math.max(this._minOutput, numericValue);\n        this._assertRange(numericValue);\n        const computedTime = this.toSeconds(endTime);\n        assert(isFinite(numericValue) && isFinite(computedTime), `Invalid argument(s) to exponentialRampToValueAtTime: ${JSON.stringify(value)}, ${JSON.stringify(endTime)}`);\n        // store the event\n        this._events.add({\n            time: computedTime,\n            type: \"exponentialRampToValueAtTime\",\n            value: numericValue,\n        });\n        this.log(this.units, \"exponentialRampToValueAtTime\", value, computedTime);\n        this._param.exponentialRampToValueAtTime(numericValue, computedTime);\n        return this;\n    }\n    exponentialRampTo(value, rampTime, startTime) {\n        startTime = this.toSeconds(startTime);\n        this.setRampPoint(startTime);\n        this.exponentialRampToValueAtTime(value, startTime + this.toSeconds(rampTime));\n        return this;\n    }\n    linearRampTo(value, rampTime, startTime) {\n        startTime = this.toSeconds(startTime);\n        this.setRampPoint(startTime);\n        this.linearRampToValueAtTime(value, startTime + this.toSeconds(rampTime));\n        return this;\n    }\n    targetRampTo(value, rampTime, startTime) {\n        startTime = this.toSeconds(startTime);\n        this.setRampPoint(startTime);\n        this.exponentialApproachValueAtTime(value, startTime, rampTime);\n        return this;\n    }\n    exponentialApproachValueAtTime(value, time, rampTime) {\n        time = this.toSeconds(time);\n        rampTime = this.toSeconds(rampTime);\n        const timeConstant = Math.log(rampTime + 1) / Math.log(200);\n        this.setTargetAtTime(value, time, timeConstant);\n        // at 90% start a linear ramp to the final value\n        this.cancelAndHoldAtTime(time + rampTime * 0.9);\n        this.linearRampToValueAtTime(value, time + rampTime);\n        return this;\n    }\n    setTargetAtTime(value, startTime, timeConstant) {\n        const numericValue = this._fromType(value);\n        // The value will never be able to approach without timeConstant > 0.\n        assert(isFinite(timeConstant) && timeConstant > 0, \"timeConstant must be a number greater than 0\");\n        const computedTime = this.toSeconds(startTime);\n        this._assertRange(numericValue);\n        assert(isFinite(numericValue) && isFinite(computedTime), `Invalid argument(s) to setTargetAtTime: ${JSON.stringify(value)}, ${JSON.stringify(startTime)}`);\n        this._events.add({\n            constant: timeConstant,\n            time: computedTime,\n            type: \"setTargetAtTime\",\n            value: numericValue,\n        });\n        this.log(this.units, \"setTargetAtTime\", value, computedTime, timeConstant);\n        this._param.setTargetAtTime(numericValue, computedTime, timeConstant);\n        return this;\n    }\n    setValueCurveAtTime(values, startTime, duration, scaling = 1) {\n        duration = this.toSeconds(duration);\n        startTime = this.toSeconds(startTime);\n        const startingValue = this._fromType(values[0]) * scaling;\n        this.setValueAtTime(this._toType(startingValue), startTime);\n        const segTime = duration / (values.length - 1);\n        for (let i = 1; i < values.length; i++) {\n            const numericValue = this._fromType(values[i]) * scaling;\n            this.linearRampToValueAtTime(this._toType(numericValue), startTime + i * segTime);\n        }\n        return this;\n    }\n    cancelScheduledValues(time) {\n        const computedTime = this.toSeconds(time);\n        assert(isFinite(computedTime), `Invalid argument to cancelScheduledValues: ${JSON.stringify(time)}`);\n        this._events.cancel(computedTime);\n        this._param.cancelScheduledValues(computedTime);\n        this.log(this.units, \"cancelScheduledValues\", computedTime);\n        return this;\n    }\n    cancelAndHoldAtTime(time) {\n        const computedTime = this.toSeconds(time);\n        const valueAtTime = this._fromType(this.getValueAtTime(computedTime));\n        // remove the schedule events\n        assert(isFinite(computedTime), `Invalid argument to cancelAndHoldAtTime: ${JSON.stringify(time)}`);\n        this.log(this.units, \"cancelAndHoldAtTime\", computedTime, \"value=\" + valueAtTime);\n        // if there is an event at the given computedTime\n        // and that even is not a \"set\"\n        const before = this._events.get(computedTime);\n        const after = this._events.getAfter(computedTime);\n        if (before && EQ(before.time, computedTime)) {\n            // remove everything after\n            if (after) {\n                this._param.cancelScheduledValues(after.time);\n                this._events.cancel(after.time);\n            }\n            else {\n                this._param.cancelAndHoldAtTime(computedTime);\n                this._events.cancel(computedTime + this.sampleTime);\n            }\n        }\n        else if (after) {\n            this._param.cancelScheduledValues(after.time);\n            // cancel the next event(s)\n            this._events.cancel(after.time);\n            if (after.type === \"linearRampToValueAtTime\") {\n                this.linearRampToValueAtTime(this._toType(valueAtTime), computedTime);\n            }\n            else if (after.type === \"exponentialRampToValueAtTime\") {\n                this.exponentialRampToValueAtTime(this._toType(valueAtTime), computedTime);\n            }\n        }\n        // set the value at the given time\n        this._events.add({\n            time: computedTime,\n            type: \"setValueAtTime\",\n            value: valueAtTime,\n        });\n        this._param.setValueAtTime(valueAtTime, computedTime);\n        return this;\n    }\n    rampTo(value, rampTime = 0.1, startTime) {\n        if (this.units === \"frequency\" || this.units === \"bpm\" || this.units === \"decibels\") {\n            this.exponentialRampTo(value, rampTime, startTime);\n        }\n        else {\n            this.linearRampTo(value, rampTime, startTime);\n        }\n        return this;\n    }\n    /**\n     * Apply all of the previously scheduled events to the passed in Param or AudioParam.\n     * The applied values will start at the context's current time and schedule\n     * all of the events which are scheduled on this Param onto the passed in param.\n     */\n    apply(param) {\n        const now = this.context.currentTime;\n        // set the param's value at the current time and schedule everything else\n        param.setValueAtTime(this.getValueAtTime(now), now);\n        // if the previous event was a curve, then set the rest of it\n        const previousEvent = this._events.get(now);\n        if (previousEvent && previousEvent.type === \"setTargetAtTime\") {\n            // approx it until the next event with linear ramps\n            const nextEvent = this._events.getAfter(previousEvent.time);\n            // or for 2 seconds if there is no event\n            const endTime = nextEvent ? nextEvent.time : now + 2;\n            const subdivisions = (endTime - now) / 10;\n            for (let i = now; i < endTime; i += subdivisions) {\n                param.linearRampToValueAtTime(this.getValueAtTime(i), i);\n            }\n        }\n        this._events.forEachAfter(this.context.currentTime, event => {\n            if (event.type === \"cancelScheduledValues\") {\n                param.cancelScheduledValues(event.time);\n            }\n            else if (event.type === \"setTargetAtTime\") {\n                param.setTargetAtTime(event.value, event.time, event.constant);\n            }\n            else {\n                param[event.type](event.value, event.time);\n            }\n        });\n        return this;\n    }\n    /**\n     * Replace the Param's internal AudioParam. Will apply scheduled curves\n     * onto the parameter and replace the connections.\n     */\n    setParam(param) {\n        assert(this._swappable, \"The Param must be assigned as 'swappable' in the constructor\");\n        const input = this.input;\n        input.disconnect(this._param);\n        this.apply(param);\n        this._param = param;\n        input.connect(this._param);\n        return this;\n    }\n    dispose() {\n        super.dispose();\n        this._events.dispose();\n        return this;\n    }\n    get defaultValue() {\n        return this._toType(this._param.defaultValue);\n    }\n    //-------------------------------------\n    // \tAUTOMATION CURVE CALCULATIONS\n    // \tMIT License, copyright (c) 2014 Jordan Santell\n    //-------------------------------------\n    // Calculates the the value along the curve produced by setTargetAtTime\n    _exponentialApproach(t0, v0, v1, timeConstant, t) {\n        return v1 + (v0 - v1) * Math.exp(-(t - t0) / timeConstant);\n    }\n    // Calculates the the value along the curve produced by linearRampToValueAtTime\n    _linearInterpolate(t0, v0, t1, v1, t) {\n        return v0 + (v1 - v0) * ((t - t0) / (t1 - t0));\n    }\n    // Calculates the the value along the curve produced by exponentialRampToValueAtTime\n    _exponentialInterpolate(t0, v0, t1, v1, t) {\n        return v0 * Math.pow(v1 / v0, (t - t0) / (t1 - t0));\n    }\n}\n//# sourceMappingURL=Param.js.map","import { isAudioNode, isAudioParam } from \"../util/AdvancedTypeCheck\";\nimport { isDefined } from \"../util/TypeCheck\";\nimport { Param } from \"./Param\";\nimport { ToneWithContext } from \"./ToneWithContext\";\nimport { assert, warn } from \"../util/Debug\";\n/**\n * ToneAudioNode is the base class for classes which process audio.\n */\nexport class ToneAudioNode extends ToneWithContext {\n    constructor() {\n        super(...arguments);\n        /**\n         * The name of the class\n         */\n        this.name = \"ToneAudioNode\";\n        /**\n         * List all of the node that must be set to match the ChannelProperties\n         */\n        this._internalChannels = [];\n    }\n    /**\n     * The number of inputs feeding into the AudioNode.\n     * For source nodes, this will be 0.\n     * @example\n     * const node = new Tone.Gain();\n     * console.log(node.numberOfInputs);\n     */\n    get numberOfInputs() {\n        if (isDefined(this.input)) {\n            if (isAudioParam(this.input) || this.input instanceof Param) {\n                return 1;\n            }\n            else {\n                return this.input.numberOfInputs;\n            }\n        }\n        else {\n            return 0;\n        }\n    }\n    /**\n     * The number of outputs of the AudioNode.\n     * @example\n     * const node = new Tone.Gain();\n     * console.log(node.numberOfOutputs);\n     */\n    get numberOfOutputs() {\n        if (isDefined(this.output)) {\n            return this.output.numberOfOutputs;\n        }\n        else {\n            return 0;\n        }\n    }\n    //-------------------------------------\n    // AUDIO PROPERTIES\n    //-------------------------------------\n    /**\n     * Used to decide which nodes to get/set properties on\n     */\n    _isAudioNode(node) {\n        return isDefined(node) && (node instanceof ToneAudioNode || isAudioNode(node));\n    }\n    /**\n     * Get all of the audio nodes (either internal or input/output) which together\n     * make up how the class node responds to channel input/output\n     */\n    _getInternalNodes() {\n        const nodeList = this._internalChannels.slice(0);\n        if (this._isAudioNode(this.input)) {\n            nodeList.push(this.input);\n        }\n        if (this._isAudioNode(this.output)) {\n            if (this.input !== this.output) {\n                nodeList.push(this.output);\n            }\n        }\n        return nodeList;\n    }\n    /**\n     * Set the audio options for this node such as channelInterpretation\n     * channelCount, etc.\n     * @param options\n     */\n    _setChannelProperties(options) {\n        const nodeList = this._getInternalNodes();\n        nodeList.forEach(node => {\n            node.channelCount = options.channelCount;\n            node.channelCountMode = options.channelCountMode;\n            node.channelInterpretation = options.channelInterpretation;\n        });\n    }\n    /**\n     * Get the current audio options for this node such as channelInterpretation\n     * channelCount, etc.\n     */\n    _getChannelProperties() {\n        const nodeList = this._getInternalNodes();\n        assert(nodeList.length > 0, \"ToneAudioNode does not have any internal nodes\");\n        // use the first node to get properties\n        // they should all be the same\n        const node = nodeList[0];\n        return {\n            channelCount: node.channelCount,\n            channelCountMode: node.channelCountMode,\n            channelInterpretation: node.channelInterpretation,\n        };\n    }\n    /**\n     * channelCount is the number of channels used when up-mixing and down-mixing\n     * connections to any inputs to the node. The default value is 2 except for\n     * specific nodes where its value is specially determined.\n     */\n    get channelCount() {\n        return this._getChannelProperties().channelCount;\n    }\n    set channelCount(channelCount) {\n        const props = this._getChannelProperties();\n        // merge it with the other properties\n        this._setChannelProperties(Object.assign(props, { channelCount }));\n    }\n    /**\n     * channelCountMode determines how channels will be counted when up-mixing and\n     * down-mixing connections to any inputs to the node.\n     * The default value is \"max\". This attribute has no effect for nodes with no inputs.\n     * * \"max\" - computedNumberOfChannels is the maximum of the number of channels of all connections to an input. In this mode channelCount is ignored.\n     * * \"clamped-max\" - computedNumberOfChannels is determined as for \"max\" and then clamped to a maximum value of the given channelCount.\n     * * \"explicit\" - computedNumberOfChannels is the exact value as specified by the channelCount.\n     */\n    get channelCountMode() {\n        return this._getChannelProperties().channelCountMode;\n    }\n    set channelCountMode(channelCountMode) {\n        const props = this._getChannelProperties();\n        // merge it with the other properties\n        this._setChannelProperties(Object.assign(props, { channelCountMode }));\n    }\n    /**\n     * channelInterpretation determines how individual channels will be treated\n     * when up-mixing and down-mixing connections to any inputs to the node.\n     * The default value is \"speakers\".\n     */\n    get channelInterpretation() {\n        return this._getChannelProperties().channelInterpretation;\n    }\n    set channelInterpretation(channelInterpretation) {\n        const props = this._getChannelProperties();\n        // merge it with the other properties\n        this._setChannelProperties(Object.assign(props, { channelInterpretation }));\n    }\n    //-------------------------------------\n    // CONNECTIONS\n    //-------------------------------------\n    /**\n     * connect the output of a ToneAudioNode to an AudioParam, AudioNode, or ToneAudioNode\n     * @param destination The output to connect to\n     * @param outputNum The output to connect from\n     * @param inputNum The input to connect to\n     */\n    connect(destination, outputNum = 0, inputNum = 0) {\n        connect(this, destination, outputNum, inputNum);\n        return this;\n    }\n    /**\n     * Connect the output to the context's destination node.\n     * @example\n     * const osc = new Tone.Oscillator(\"C2\").start();\n     * osc.toDestination();\n     */\n    toDestination() {\n        this.connect(this.context.destination);\n        return this;\n    }\n    /**\n     * Connect the output to the context's destination node.\n     * See [[toDestination]]\n     * @deprecated\n     */\n    toMaster() {\n        warn(\"toMaster() has been renamed toDestination()\");\n        return this.toDestination();\n    }\n    /**\n     * disconnect the output\n     */\n    disconnect(destination, outputNum = 0, inputNum = 0) {\n        disconnect(this, destination, outputNum, inputNum);\n        return this;\n    }\n    /**\n     * Connect the output of this node to the rest of the nodes in series.\n     * @example\n     * const player = new Tone.Player(\"https://tonejs.github.io/audio/drum-samples/handdrum-loop.mp3\");\n     * player.autostart = true;\n     * const filter = new Tone.AutoFilter(4).start();\n     * const distortion = new Tone.Distortion(0.5);\n     * // connect the player to the filter, distortion and then to the master output\n     * player.chain(filter, distortion, Tone.Destination);\n     */\n    chain(...nodes) {\n        connectSeries(this, ...nodes);\n        return this;\n    }\n    /**\n     * connect the output of this node to the rest of the nodes in parallel.\n     * @example\n     * const player = new Tone.Player(\"https://tonejs.github.io/audio/drum-samples/conga-rhythm.mp3\");\n     * player.autostart = true;\n     * const pitchShift = new Tone.PitchShift(4).toDestination();\n     * const filter = new Tone.Filter(\"G5\").toDestination();\n     * // connect a node to the pitch shift and filter in parallel\n     * player.fan(pitchShift, filter);\n     */\n    fan(...nodes) {\n        nodes.forEach(node => this.connect(node));\n        return this;\n    }\n    /**\n     * Dispose and disconnect\n     */\n    dispose() {\n        super.dispose();\n        if (isDefined(this.input)) {\n            if (this.input instanceof ToneAudioNode) {\n                this.input.dispose();\n            }\n            else if (isAudioNode(this.input)) {\n                this.input.disconnect();\n            }\n        }\n        if (isDefined(this.output)) {\n            if (this.output instanceof ToneAudioNode) {\n                this.output.dispose();\n            }\n            else if (isAudioNode(this.output)) {\n                this.output.disconnect();\n            }\n        }\n        this._internalChannels = [];\n        return this;\n    }\n}\n//-------------------------------------\n// CONNECTIONS\n//-------------------------------------\n/**\n * connect together all of the arguments in series\n * @param nodes\n */\nexport function connectSeries(...nodes) {\n    const first = nodes.shift();\n    nodes.reduce((prev, current) => {\n        if (prev instanceof ToneAudioNode) {\n            prev.connect(current);\n        }\n        else if (isAudioNode(prev)) {\n            connect(prev, current);\n        }\n        return current;\n    }, first);\n}\n/**\n * Connect two nodes together so that signal flows from the\n * first node to the second. Optionally specify the input and output channels.\n * @param srcNode The source node\n * @param dstNode The destination node\n * @param outputNumber The output channel of the srcNode\n * @param inputNumber The input channel of the dstNode\n */\nexport function connect(srcNode, dstNode, outputNumber = 0, inputNumber = 0) {\n    assert(isDefined(srcNode), \"Cannot connect from undefined node\");\n    assert(isDefined(dstNode), \"Cannot connect to undefined node\");\n    if (dstNode instanceof ToneAudioNode || isAudioNode(dstNode)) {\n        assert(dstNode.numberOfInputs > 0, \"Cannot connect to node with no inputs\");\n    }\n    assert(srcNode.numberOfOutputs > 0, \"Cannot connect from node with no outputs\");\n    // resolve the input of the dstNode\n    while ((dstNode instanceof ToneAudioNode || dstNode instanceof Param)) {\n        if (isDefined(dstNode.input)) {\n            dstNode = dstNode.input;\n        }\n    }\n    while (srcNode instanceof ToneAudioNode) {\n        if (isDefined(srcNode.output)) {\n            srcNode = srcNode.output;\n        }\n    }\n    // make the connection\n    if (isAudioParam(dstNode)) {\n        srcNode.connect(dstNode, outputNumber);\n    }\n    else {\n        srcNode.connect(dstNode, outputNumber, inputNumber);\n    }\n}\n/**\n * Disconnect a node from all nodes or optionally include a destination node and input/output channels.\n * @param srcNode The source node\n * @param dstNode The destination node\n * @param outputNumber The output channel of the srcNode\n * @param inputNumber The input channel of the dstNode\n */\nexport function disconnect(srcNode, dstNode, outputNumber = 0, inputNumber = 0) {\n    // resolve the destination node\n    if (isDefined(dstNode)) {\n        while (dstNode instanceof ToneAudioNode) {\n            dstNode = dstNode.input;\n        }\n    }\n    // resolve the src node\n    while (!(isAudioNode(srcNode))) {\n        if (isDefined(srcNode.output)) {\n            srcNode = srcNode.output;\n        }\n    }\n    if (isAudioParam(dstNode)) {\n        srcNode.disconnect(dstNode, outputNumber);\n    }\n    else if (isAudioNode(dstNode)) {\n        srcNode.disconnect(dstNode, outputNumber, inputNumber);\n    }\n    else {\n        srcNode.disconnect();\n    }\n}\n//# sourceMappingURL=ToneAudioNode.js.map","import { Param } from \"../context/Param\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { readOnly } from \"../util/Interface\";\nimport { ToneAudioNode } from \"./ToneAudioNode\";\n/**\n * A thin wrapper around the Native Web Audio GainNode.\n * The GainNode is a basic building block of the Web Audio\n * API and is useful for routing audio and adjusting gains.\n * @category Core\n * @example\n * return Tone.Offline(() => {\n * \tconst gainNode = new Tone.Gain(0).toDestination();\n * \tconst osc = new Tone.Oscillator(30).connect(gainNode).start();\n * \tgainNode.gain.rampTo(1, 0.1);\n * \tgainNode.gain.rampTo(0, 0.4, 0.2);\n * }, 0.7, 1);\n */\nexport class Gain extends ToneAudioNode {\n    constructor() {\n        super(optionsFromArguments(Gain.getDefaults(), arguments, [\"gain\", \"units\"]));\n        this.name = \"Gain\";\n        /**\n         * The wrapped GainNode.\n         */\n        this._gainNode = this.context.createGain();\n        // input = output\n        this.input = this._gainNode;\n        this.output = this._gainNode;\n        const options = optionsFromArguments(Gain.getDefaults(), arguments, [\"gain\", \"units\"]);\n        this.gain = new Param({\n            context: this.context,\n            convert: options.convert,\n            param: this._gainNode.gain,\n            units: options.units,\n            value: options.gain,\n            minValue: options.minValue,\n            maxValue: options.maxValue,\n        });\n        readOnly(this, \"gain\");\n    }\n    static getDefaults() {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            convert: true,\n            gain: 1,\n            units: \"gain\",\n        });\n    }\n    /**\n     * Clean up.\n     */\n    dispose() {\n        super.dispose();\n        this._gainNode.disconnect();\n        this.gain.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=Gain.js.map","import { Gain } from \"../core/context/Gain\";\nimport { ToneAudioNode, } from \"../core/context/ToneAudioNode\";\nimport { noOp } from \"../core/util/Interface\";\nimport { assert } from \"../core/util/Debug\";\n/**\n * Base class for fire-and-forget nodes\n */\nexport class OneShotSource extends ToneAudioNode {\n    constructor(options) {\n        super(options);\n        /**\n         * The callback to invoke after the\n         * source is done playing.\n         */\n        this.onended = noOp;\n        /**\n         * The start time\n         */\n        this._startTime = -1;\n        /**\n         * The stop time\n         */\n        this._stopTime = -1;\n        /**\n         * The id of the timeout\n         */\n        this._timeout = -1;\n        /**\n         * The public output node\n         */\n        this.output = new Gain({\n            context: this.context,\n            gain: 0,\n        });\n        /**\n         * The output gain node.\n         */\n        this._gainNode = this.output;\n        /**\n         * Get the playback state at the given time\n         */\n        this.getStateAtTime = function (time) {\n            const computedTime = this.toSeconds(time);\n            if (this._startTime !== -1 &&\n                computedTime >= this._startTime &&\n                (this._stopTime === -1 || computedTime <= this._stopTime)) {\n                return \"started\";\n            }\n            else {\n                return \"stopped\";\n            }\n        };\n        this._fadeIn = options.fadeIn;\n        this._fadeOut = options.fadeOut;\n        this._curve = options.curve;\n        this.onended = options.onended;\n    }\n    static getDefaults() {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            curve: \"linear\",\n            fadeIn: 0,\n            fadeOut: 0,\n            onended: noOp,\n        });\n    }\n    /**\n     * Start the source at the given time\n     * @param  time When to start the source\n     */\n    _startGain(time, gain = 1) {\n        assert(this._startTime === -1, \"Source cannot be started more than once\");\n        // apply a fade in envelope\n        const fadeInTime = this.toSeconds(this._fadeIn);\n        // record the start time\n        this._startTime = time + fadeInTime;\n        this._startTime = Math.max(this._startTime, this.context.currentTime);\n        // schedule the envelope\n        if (fadeInTime > 0) {\n            this._gainNode.gain.setValueAtTime(0, time);\n            if (this._curve === \"linear\") {\n                this._gainNode.gain.linearRampToValueAtTime(gain, time + fadeInTime);\n            }\n            else {\n                this._gainNode.gain.exponentialApproachValueAtTime(gain, time, fadeInTime);\n            }\n        }\n        else {\n            this._gainNode.gain.setValueAtTime(gain, time);\n        }\n        return this;\n    }\n    /**\n     * Stop the source node at the given time.\n     * @param time When to stop the source\n     */\n    stop(time) {\n        this.log(\"stop\", time);\n        this._stopGain(this.toSeconds(time));\n        return this;\n    }\n    /**\n     * Stop the source at the given time\n     * @param  time When to stop the source\n     */\n    _stopGain(time) {\n        assert(this._startTime !== -1, \"'start' must be called before 'stop'\");\n        // cancel the previous stop\n        this.cancelStop();\n        // the fadeOut time\n        const fadeOutTime = this.toSeconds(this._fadeOut);\n        // schedule the stop callback\n        this._stopTime = this.toSeconds(time) + fadeOutTime;\n        this._stopTime = Math.max(this._stopTime, this.context.currentTime);\n        if (fadeOutTime > 0) {\n            // start the fade out curve at the given time\n            if (this._curve === \"linear\") {\n                this._gainNode.gain.linearRampTo(0, fadeOutTime, time);\n            }\n            else {\n                this._gainNode.gain.targetRampTo(0, fadeOutTime, time);\n            }\n        }\n        else {\n            // stop any ongoing ramps, and set the value to 0\n            this._gainNode.gain.cancelAndHoldAtTime(time);\n            this._gainNode.gain.setValueAtTime(0, time);\n        }\n        this.context.clearTimeout(this._timeout);\n        this._timeout = this.context.setTimeout(() => {\n            // allow additional time for the exponential curve to fully decay\n            const additionalTail = this._curve === \"exponential\" ? fadeOutTime * 2 : 0;\n            this._stopSource(this.now() + additionalTail);\n            this._onended();\n        }, this._stopTime - this.context.currentTime);\n        return this;\n    }\n    /**\n     * Invoke the onended callback\n     */\n    _onended() {\n        if (this.onended !== noOp) {\n            this.onended(this);\n            // overwrite onended to make sure it only is called once\n            this.onended = noOp;\n            // dispose when it's ended to free up for garbage collection only in the online context\n            if (!this.context.isOffline) {\n                const disposeCallback = () => this.dispose();\n                // @ts-ignore\n                if (typeof window.requestIdleCallback !== \"undefined\") {\n                    // @ts-ignore\n                    window.requestIdleCallback(disposeCallback);\n                }\n                else {\n                    setTimeout(disposeCallback, 1000);\n                }\n            }\n        }\n    }\n    /**\n     * Get the playback state at the current time\n     */\n    get state() {\n        return this.getStateAtTime(this.now());\n    }\n    /**\n     * Cancel a scheduled stop event\n     */\n    cancelStop() {\n        this.log(\"cancelStop\");\n        assert(this._startTime !== -1, \"Source is not started\");\n        // cancel the stop envelope\n        this._gainNode.gain.cancelScheduledValues(this._startTime + this.sampleTime);\n        this.context.clearTimeout(this._timeout);\n        this._stopTime = -1;\n        return this;\n    }\n    dispose() {\n        super.dispose();\n        this._gainNode.disconnect();\n        return this;\n    }\n}\n//# sourceMappingURL=OneShotSource.js.map","import { connect } from \"../core/context/ToneAudioNode\";\nimport { Param } from \"../core/context/Param\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { OneShotSource } from \"../source/OneShotSource\";\n/**\n * Wrapper around the native fire-and-forget ConstantSource.\n * Adds the ability to reschedule the stop method.\n * @category Signal\n */\nexport class ToneConstantSource extends OneShotSource {\n    constructor() {\n        super(optionsFromArguments(ToneConstantSource.getDefaults(), arguments, [\"offset\"]));\n        this.name = \"ToneConstantSource\";\n        /**\n         * The signal generator\n         */\n        this._source = this.context.createConstantSource();\n        const options = optionsFromArguments(ToneConstantSource.getDefaults(), arguments, [\"offset\"]);\n        connect(this._source, this._gainNode);\n        this.offset = new Param({\n            context: this.context,\n            convert: options.convert,\n            param: this._source.offset,\n            units: options.units,\n            value: options.offset,\n            minValue: options.minValue,\n            maxValue: options.maxValue,\n        });\n    }\n    static getDefaults() {\n        return Object.assign(OneShotSource.getDefaults(), {\n            convert: true,\n            offset: 1,\n            units: \"number\",\n        });\n    }\n    /**\n     * Start the source node at the given time\n     * @param  time When to start the source\n     */\n    start(time) {\n        const computedTime = this.toSeconds(time);\n        this.log(\"start\", computedTime);\n        this._startGain(computedTime);\n        this._source.start(computedTime);\n        return this;\n    }\n    _stopSource(time) {\n        this._source.stop(time);\n    }\n    dispose() {\n        super.dispose();\n        if (this.state === \"started\") {\n            this.stop();\n        }\n        this._source.disconnect();\n        this.offset.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=ToneConstantSource.js.map","import { Param } from \"../core/context/Param\";\nimport { ToneAudioNode } from \"../core/context/ToneAudioNode\";\nimport { connect } from \"../core/context/ToneAudioNode\";\nimport { isAudioParam } from \"../core/util/AdvancedTypeCheck\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { ToneConstantSource } from \"./ToneConstantSource\";\n/**\n * A signal is an audio-rate value. Tone.Signal is a core component of the library.\n * Unlike a number, Signals can be scheduled with sample-level accuracy. Tone.Signal\n * has all of the methods available to native Web Audio\n * [AudioParam](http://webaudio.github.io/web-audio-api/#the-audioparam-interface)\n * as well as additional conveniences. Read more about working with signals\n * [here](https://github.com/Tonejs/Tone.js/wiki/Signals).\n *\n * @example\n * const osc = new Tone.Oscillator().toDestination().start();\n * // a scheduleable signal which can be connected to control an AudioParam or another Signal\n * const signal = new Tone.Signal({\n * \tvalue: \"C4\",\n * \tunits: \"frequency\"\n * }).connect(osc.frequency);\n * // the scheduled ramp controls the connected signal\n * signal.rampTo(\"C2\", 4, \"+0.5\");\n * @category Signal\n */\nexport class Signal extends ToneAudioNode {\n    constructor() {\n        super(optionsFromArguments(Signal.getDefaults(), arguments, [\"value\", \"units\"]));\n        this.name = \"Signal\";\n        /**\n         * Indicates if the value should be overridden on connection.\n         */\n        this.override = true;\n        const options = optionsFromArguments(Signal.getDefaults(), arguments, [\"value\", \"units\"]);\n        this.output = this._constantSource = new ToneConstantSource({\n            context: this.context,\n            convert: options.convert,\n            offset: options.value,\n            units: options.units,\n            minValue: options.minValue,\n            maxValue: options.maxValue,\n        });\n        this._constantSource.start(0);\n        this.input = this._param = this._constantSource.offset;\n    }\n    static getDefaults() {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            convert: true,\n            units: \"number\",\n            value: 0,\n        });\n    }\n    connect(destination, outputNum = 0, inputNum = 0) {\n        // start it only when connected to something\n        connectSignal(this, destination, outputNum, inputNum);\n        return this;\n    }\n    dispose() {\n        super.dispose();\n        this._param.dispose();\n        this._constantSource.dispose();\n        return this;\n    }\n    //-------------------------------------\n    // ABSTRACT PARAM INTERFACE\n    // just a proxy for the ConstantSourceNode's offset AudioParam\n    // all docs are generated from AbstractParam.ts\n    //-------------------------------------\n    setValueAtTime(value, time) {\n        this._param.setValueAtTime(value, time);\n        return this;\n    }\n    getValueAtTime(time) {\n        return this._param.getValueAtTime(time);\n    }\n    setRampPoint(time) {\n        this._param.setRampPoint(time);\n        return this;\n    }\n    linearRampToValueAtTime(value, time) {\n        this._param.linearRampToValueAtTime(value, time);\n        return this;\n    }\n    exponentialRampToValueAtTime(value, time) {\n        this._param.exponentialRampToValueAtTime(value, time);\n        return this;\n    }\n    exponentialRampTo(value, rampTime, startTime) {\n        this._param.exponentialRampTo(value, rampTime, startTime);\n        return this;\n    }\n    linearRampTo(value, rampTime, startTime) {\n        this._param.linearRampTo(value, rampTime, startTime);\n        return this;\n    }\n    targetRampTo(value, rampTime, startTime) {\n        this._param.targetRampTo(value, rampTime, startTime);\n        return this;\n    }\n    exponentialApproachValueAtTime(value, time, rampTime) {\n        this._param.exponentialApproachValueAtTime(value, time, rampTime);\n        return this;\n    }\n    setTargetAtTime(value, startTime, timeConstant) {\n        this._param.setTargetAtTime(value, startTime, timeConstant);\n        return this;\n    }\n    setValueCurveAtTime(values, startTime, duration, scaling) {\n        this._param.setValueCurveAtTime(values, startTime, duration, scaling);\n        return this;\n    }\n    cancelScheduledValues(time) {\n        this._param.cancelScheduledValues(time);\n        return this;\n    }\n    cancelAndHoldAtTime(time) {\n        this._param.cancelAndHoldAtTime(time);\n        return this;\n    }\n    rampTo(value, rampTime, startTime) {\n        this._param.rampTo(value, rampTime, startTime);\n        return this;\n    }\n    get value() {\n        return this._param.value;\n    }\n    set value(value) {\n        this._param.value = value;\n    }\n    get convert() {\n        return this._param.convert;\n    }\n    set convert(convert) {\n        this._param.convert = convert;\n    }\n    get units() {\n        return this._param.units;\n    }\n    get overridden() {\n        return this._param.overridden;\n    }\n    set overridden(overridden) {\n        this._param.overridden = overridden;\n    }\n    get maxValue() {\n        return this._param.maxValue;\n    }\n    get minValue() {\n        return this._param.minValue;\n    }\n    /**\n     * See [[Param.apply]].\n     */\n    apply(param) {\n        this._param.apply(param);\n        return this;\n    }\n}\n/**\n * When connecting from a signal, it's necessary to zero out the node destination\n * node if that node is also a signal. If the destination is not 0, then the values\n * will be summed. This method insures that the output of the destination signal will\n * be the same as the source signal, making the destination signal a pass through node.\n * @param signal The output signal to connect from\n * @param destination the destination to connect to\n * @param outputNum the optional output number\n * @param inputNum the input number\n */\nexport function connectSignal(signal, destination, outputNum, inputNum) {\n    if (destination instanceof Param || isAudioParam(destination) ||\n        (destination instanceof Signal && destination.override)) {\n        // cancel changes\n        destination.cancelScheduledValues(0);\n        // reset the value\n        destination.setValueAtTime(0, 0);\n        // mark the value as overridden\n        if (destination instanceof Signal) {\n            destination.overridden = true;\n        }\n    }\n    connect(signal, destination, outputNum, inputNum);\n}\n//# sourceMappingURL=Signal.js.map","import { Param } from \"../context/Param\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { Timeline } from \"../util/Timeline\";\nimport { isUndef } from \"../util/TypeCheck\";\n/**\n * A Param class just for computing ticks. Similar to the [[Param]] class,\n * but offers conversion to BPM values as well as ability to compute tick\n * duration and elapsed ticks\n */\nexport class TickParam extends Param {\n    constructor() {\n        super(optionsFromArguments(TickParam.getDefaults(), arguments, [\"value\"]));\n        this.name = \"TickParam\";\n        /**\n         * The timeline which tracks all of the automations.\n         */\n        this._events = new Timeline(Infinity);\n        /**\n         * The internal holder for the multiplier value\n         */\n        this._multiplier = 1;\n        const options = optionsFromArguments(TickParam.getDefaults(), arguments, [\"value\"]);\n        // set the multiplier\n        this._multiplier = options.multiplier;\n        // clear the ticks from the beginning\n        this._events.cancel(0);\n        // set an initial event\n        this._events.add({\n            ticks: 0,\n            time: 0,\n            type: \"setValueAtTime\",\n            value: this._fromType(options.value),\n        });\n        this.setValueAtTime(options.value, 0);\n    }\n    static getDefaults() {\n        return Object.assign(Param.getDefaults(), {\n            multiplier: 1,\n            units: \"hertz\",\n            value: 1,\n        });\n    }\n    setTargetAtTime(value, time, constant) {\n        // approximate it with multiple linear ramps\n        time = this.toSeconds(time);\n        this.setRampPoint(time);\n        const computedValue = this._fromType(value);\n        // start from previously scheduled value\n        const prevEvent = this._events.get(time);\n        const segments = Math.round(Math.max(1 / constant, 1));\n        for (let i = 0; i <= segments; i++) {\n            const segTime = constant * i + time;\n            const rampVal = this._exponentialApproach(prevEvent.time, prevEvent.value, computedValue, constant, segTime);\n            this.linearRampToValueAtTime(this._toType(rampVal), segTime);\n        }\n        return this;\n    }\n    setValueAtTime(value, time) {\n        const computedTime = this.toSeconds(time);\n        super.setValueAtTime(value, time);\n        const event = this._events.get(computedTime);\n        const previousEvent = this._events.previousEvent(event);\n        const ticksUntilTime = this._getTicksUntilEvent(previousEvent, computedTime);\n        event.ticks = Math.max(ticksUntilTime, 0);\n        return this;\n    }\n    linearRampToValueAtTime(value, time) {\n        const computedTime = this.toSeconds(time);\n        super.linearRampToValueAtTime(value, time);\n        const event = this._events.get(computedTime);\n        const previousEvent = this._events.previousEvent(event);\n        const ticksUntilTime = this._getTicksUntilEvent(previousEvent, computedTime);\n        event.ticks = Math.max(ticksUntilTime, 0);\n        return this;\n    }\n    exponentialRampToValueAtTime(value, time) {\n        // aproximate it with multiple linear ramps\n        time = this.toSeconds(time);\n        const computedVal = this._fromType(value);\n        // start from previously scheduled value\n        const prevEvent = this._events.get(time);\n        // approx 10 segments per second\n        const segments = Math.round(Math.max((time - prevEvent.time) * 10, 1));\n        const segmentDur = ((time - prevEvent.time) / segments);\n        for (let i = 0; i <= segments; i++) {\n            const segTime = segmentDur * i + prevEvent.time;\n            const rampVal = this._exponentialInterpolate(prevEvent.time, prevEvent.value, time, computedVal, segTime);\n            this.linearRampToValueAtTime(this._toType(rampVal), segTime);\n        }\n        return this;\n    }\n    /**\n     * Returns the tick value at the time. Takes into account\n     * any automation curves scheduled on the signal.\n     * @param  event The time to get the tick count at\n     * @return The number of ticks which have elapsed at the time given any automations.\n     */\n    _getTicksUntilEvent(event, time) {\n        if (event === null) {\n            event = {\n                ticks: 0,\n                time: 0,\n                type: \"setValueAtTime\",\n                value: 0,\n            };\n        }\n        else if (isUndef(event.ticks)) {\n            const previousEvent = this._events.previousEvent(event);\n            event.ticks = this._getTicksUntilEvent(previousEvent, event.time);\n        }\n        const val0 = this._fromType(this.getValueAtTime(event.time));\n        let val1 = this._fromType(this.getValueAtTime(time));\n        // if it's right on the line, take the previous value\n        const onTheLineEvent = this._events.get(time);\n        if (onTheLineEvent && onTheLineEvent.time === time && onTheLineEvent.type === \"setValueAtTime\") {\n            val1 = this._fromType(this.getValueAtTime(time - this.sampleTime));\n        }\n        return 0.5 * (time - event.time) * (val0 + val1) + event.ticks;\n    }\n    /**\n     * Returns the tick value at the time. Takes into account\n     * any automation curves scheduled on the signal.\n     * @param  time The time to get the tick count at\n     * @return The number of ticks which have elapsed at the time given any automations.\n     */\n    getTicksAtTime(time) {\n        const computedTime = this.toSeconds(time);\n        const event = this._events.get(computedTime);\n        return Math.max(this._getTicksUntilEvent(event, computedTime), 0);\n    }\n    /**\n     * Return the elapsed time of the number of ticks from the given time\n     * @param ticks The number of ticks to calculate\n     * @param  time The time to get the next tick from\n     * @return The duration of the number of ticks from the given time in seconds\n     */\n    getDurationOfTicks(ticks, time) {\n        const computedTime = this.toSeconds(time);\n        const currentTick = this.getTicksAtTime(time);\n        return this.getTimeOfTick(currentTick + ticks) - computedTime;\n    }\n    /**\n     * Given a tick, returns the time that tick occurs at.\n     * @return The time that the tick occurs.\n     */\n    getTimeOfTick(tick) {\n        const before = this._events.get(tick, \"ticks\");\n        const after = this._events.getAfter(tick, \"ticks\");\n        if (before && before.ticks === tick) {\n            return before.time;\n        }\n        else if (before && after &&\n            after.type === \"linearRampToValueAtTime\" &&\n            before.value !== after.value) {\n            const val0 = this._fromType(this.getValueAtTime(before.time));\n            const val1 = this._fromType(this.getValueAtTime(after.time));\n            const delta = (val1 - val0) / (after.time - before.time);\n            const k = Math.sqrt(Math.pow(val0, 2) - 2 * delta * (before.ticks - tick));\n            const sol1 = (-val0 + k) / delta;\n            const sol2 = (-val0 - k) / delta;\n            return (sol1 > 0 ? sol1 : sol2) + before.time;\n        }\n        else if (before) {\n            if (before.value === 0) {\n                return Infinity;\n            }\n            else {\n                return before.time + (tick - before.ticks) / before.value;\n            }\n        }\n        else {\n            return tick / this._initialValue;\n        }\n    }\n    /**\n     * Convert some number of ticks their the duration in seconds accounting\n     * for any automation curves starting at the given time.\n     * @param  ticks The number of ticks to convert to seconds.\n     * @param  when  When along the automation timeline to convert the ticks.\n     * @return The duration in seconds of the ticks.\n     */\n    ticksToTime(ticks, when) {\n        return this.getDurationOfTicks(ticks, when);\n    }\n    /**\n     * The inverse of [[ticksToTime]]. Convert a duration in\n     * seconds to the corresponding number of ticks accounting for any\n     * automation curves starting at the given time.\n     * @param  duration The time interval to convert to ticks.\n     * @param  when When along the automation timeline to convert the ticks.\n     * @return The duration in ticks.\n     */\n    timeToTicks(duration, when) {\n        const computedTime = this.toSeconds(when);\n        const computedDuration = this.toSeconds(duration);\n        const startTicks = this.getTicksAtTime(computedTime);\n        const endTicks = this.getTicksAtTime(computedTime + computedDuration);\n        return endTicks - startTicks;\n    }\n    /**\n     * Convert from the type when the unit value is BPM\n     */\n    _fromType(val) {\n        if (this.units === \"bpm\" && this.multiplier) {\n            return 1 / (60 / val / this.multiplier);\n        }\n        else {\n            return super._fromType(val);\n        }\n    }\n    /**\n     * Special case of type conversion where the units === \"bpm\"\n     */\n    _toType(val) {\n        if (this.units === \"bpm\" && this.multiplier) {\n            return (val / this.multiplier) * 60;\n        }\n        else {\n            return super._toType(val);\n        }\n    }\n    /**\n     * A multiplier on the bpm value. Useful for setting a PPQ relative to the base frequency value.\n     */\n    get multiplier() {\n        return this._multiplier;\n    }\n    set multiplier(m) {\n        // get and reset the current value with the new multiplier\n        // might be necessary to clear all the previous values\n        const currentVal = this.value;\n        this._multiplier = m;\n        this.cancelScheduledValues(0);\n        this.setValueAtTime(currentVal, 0);\n    }\n}\n//# sourceMappingURL=TickParam.js.map","import { Signal } from \"../../signal/Signal\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { TickParam } from \"./TickParam\";\n/**\n * TickSignal extends Tone.Signal, but adds the capability\n * to calculate the number of elapsed ticks. exponential and target curves\n * are approximated with multiple linear ramps.\n *\n * Thank you Bruno Dias, H. Sofia Pinto, and David M. Matos,\n * for your [WAC paper](https://smartech.gatech.edu/bitstream/handle/1853/54588/WAC2016-49.pdf)\n * describing integrating timing functions for tempo calculations.\n */\nexport class TickSignal extends Signal {\n    constructor() {\n        super(optionsFromArguments(TickSignal.getDefaults(), arguments, [\"value\"]));\n        this.name = \"TickSignal\";\n        const options = optionsFromArguments(TickSignal.getDefaults(), arguments, [\"value\"]);\n        this.input = this._param = new TickParam({\n            context: this.context,\n            convert: options.convert,\n            multiplier: options.multiplier,\n            param: this._constantSource.offset,\n            units: options.units,\n            value: options.value,\n        });\n    }\n    static getDefaults() {\n        return Object.assign(Signal.getDefaults(), {\n            multiplier: 1,\n            units: \"hertz\",\n            value: 1,\n        });\n    }\n    ticksToTime(ticks, when) {\n        return this._param.ticksToTime(ticks, when);\n    }\n    timeToTicks(duration, when) {\n        return this._param.timeToTicks(duration, when);\n    }\n    getTimeOfTick(tick) {\n        return this._param.getTimeOfTick(tick);\n    }\n    getDurationOfTicks(ticks, time) {\n        return this._param.getDurationOfTicks(ticks, time);\n    }\n    getTicksAtTime(time) {\n        return this._param.getTicksAtTime(time);\n    }\n    /**\n     * A multiplier on the bpm value. Useful for setting a PPQ relative to the base frequency value.\n     */\n    get multiplier() {\n        return this._param.multiplier;\n    }\n    set multiplier(m) {\n        this._param.multiplier = m;\n    }\n    dispose() {\n        super.dispose();\n        this._param.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=TickSignal.js.map","import { ToneWithContext } from \"../context/ToneWithContext\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { readOnly } from \"../util/Interface\";\nimport { StateTimeline } from \"../util/StateTimeline\";\nimport { Timeline } from \"../util/Timeline\";\nimport { isDefined } from \"../util/TypeCheck\";\nimport { TickSignal } from \"./TickSignal\";\nimport { EQ } from \"../util/Math\";\n/**\n * Uses [TickSignal](TickSignal) to track elapsed ticks with complex automation curves.\n */\nexport class TickSource extends ToneWithContext {\n    constructor() {\n        super(optionsFromArguments(TickSource.getDefaults(), arguments, [\"frequency\"]));\n        this.name = \"TickSource\";\n        /**\n         * The state timeline\n         */\n        this._state = new StateTimeline();\n        /**\n         * The offset values of the ticks\n         */\n        this._tickOffset = new Timeline();\n        const options = optionsFromArguments(TickSource.getDefaults(), arguments, [\"frequency\"]);\n        this.frequency = new TickSignal({\n            context: this.context,\n            units: options.units,\n            value: options.frequency,\n        });\n        readOnly(this, \"frequency\");\n        // set the initial state\n        this._state.setStateAtTime(\"stopped\", 0);\n        // add the first event\n        this.setTicksAtTime(0, 0);\n    }\n    static getDefaults() {\n        return Object.assign({\n            frequency: 1,\n            units: \"hertz\",\n        }, ToneWithContext.getDefaults());\n    }\n    /**\n     * Returns the playback state of the source, either \"started\", \"stopped\" or \"paused\".\n     */\n    get state() {\n        return this.getStateAtTime(this.now());\n    }\n    /**\n     * Start the clock at the given time. Optionally pass in an offset\n     * of where to start the tick counter from.\n     * @param  time    The time the clock should start\n     * @param offset The number of ticks to start the source at\n     */\n    start(time, offset) {\n        const computedTime = this.toSeconds(time);\n        if (this._state.getValueAtTime(computedTime) !== \"started\") {\n            this._state.setStateAtTime(\"started\", computedTime);\n            if (isDefined(offset)) {\n                this.setTicksAtTime(offset, computedTime);\n            }\n        }\n        return this;\n    }\n    /**\n     * Stop the clock. Stopping the clock resets the tick counter to 0.\n     * @param time The time when the clock should stop.\n     */\n    stop(time) {\n        const computedTime = this.toSeconds(time);\n        // cancel the previous stop\n        if (this._state.getValueAtTime(computedTime) === \"stopped\") {\n            const event = this._state.get(computedTime);\n            if (event && event.time > 0) {\n                this._tickOffset.cancel(event.time);\n                this._state.cancel(event.time);\n            }\n        }\n        this._state.cancel(computedTime);\n        this._state.setStateAtTime(\"stopped\", computedTime);\n        this.setTicksAtTime(0, computedTime);\n        return this;\n    }\n    /**\n     * Pause the clock. Pausing does not reset the tick counter.\n     * @param time The time when the clock should stop.\n     */\n    pause(time) {\n        const computedTime = this.toSeconds(time);\n        if (this._state.getValueAtTime(computedTime) === \"started\") {\n            this._state.setStateAtTime(\"paused\", computedTime);\n        }\n        return this;\n    }\n    /**\n     * Cancel start/stop/pause and setTickAtTime events scheduled after the given time.\n     * @param time When to clear the events after\n     */\n    cancel(time) {\n        time = this.toSeconds(time);\n        this._state.cancel(time);\n        this._tickOffset.cancel(time);\n        return this;\n    }\n    /**\n     * Get the elapsed ticks at the given time\n     * @param  time  When to get the tick value\n     * @return The number of ticks\n     */\n    getTicksAtTime(time) {\n        const computedTime = this.toSeconds(time);\n        const stopEvent = this._state.getLastState(\"stopped\", computedTime);\n        // this event allows forEachBetween to iterate until the current time\n        const tmpEvent = { state: \"paused\", time: computedTime };\n        this._state.add(tmpEvent);\n        // keep track of the previous offset event\n        let lastState = stopEvent;\n        let elapsedTicks = 0;\n        // iterate through all the events since the last stop\n        this._state.forEachBetween(stopEvent.time, computedTime + this.sampleTime, e => {\n            let periodStartTime = lastState.time;\n            // if there is an offset event in this period use that\n            const offsetEvent = this._tickOffset.get(e.time);\n            if (offsetEvent && offsetEvent.time >= lastState.time) {\n                elapsedTicks = offsetEvent.ticks;\n                periodStartTime = offsetEvent.time;\n            }\n            if (lastState.state === \"started\" && e.state !== \"started\") {\n                elapsedTicks += this.frequency.getTicksAtTime(e.time) - this.frequency.getTicksAtTime(periodStartTime);\n            }\n            lastState = e;\n        });\n        // remove the temporary event\n        this._state.remove(tmpEvent);\n        // return the ticks\n        return elapsedTicks;\n    }\n    /**\n     * The number of times the callback was invoked. Starts counting at 0\n     * and increments after the callback was invoked. Returns -1 when stopped.\n     */\n    get ticks() {\n        return this.getTicksAtTime(this.now());\n    }\n    set ticks(t) {\n        this.setTicksAtTime(t, this.now());\n    }\n    /**\n     * The time since ticks=0 that the TickSource has been running. Accounts\n     * for tempo curves\n     */\n    get seconds() {\n        return this.getSecondsAtTime(this.now());\n    }\n    set seconds(s) {\n        const now = this.now();\n        const ticks = this.frequency.timeToTicks(s, now);\n        this.setTicksAtTime(ticks, now);\n    }\n    /**\n     * Return the elapsed seconds at the given time.\n     * @param  time  When to get the elapsed seconds\n     * @return  The number of elapsed seconds\n     */\n    getSecondsAtTime(time) {\n        time = this.toSeconds(time);\n        const stopEvent = this._state.getLastState(\"stopped\", time);\n        // this event allows forEachBetween to iterate until the current time\n        const tmpEvent = { state: \"paused\", time };\n        this._state.add(tmpEvent);\n        // keep track of the previous offset event\n        let lastState = stopEvent;\n        let elapsedSeconds = 0;\n        // iterate through all the events since the last stop\n        this._state.forEachBetween(stopEvent.time, time + this.sampleTime, e => {\n            let periodStartTime = lastState.time;\n            // if there is an offset event in this period use that\n            const offsetEvent = this._tickOffset.get(e.time);\n            if (offsetEvent && offsetEvent.time >= lastState.time) {\n                elapsedSeconds = offsetEvent.seconds;\n                periodStartTime = offsetEvent.time;\n            }\n            if (lastState.state === \"started\" && e.state !== \"started\") {\n                elapsedSeconds += e.time - periodStartTime;\n            }\n            lastState = e;\n        });\n        // remove the temporary event\n        this._state.remove(tmpEvent);\n        // return the ticks\n        return elapsedSeconds;\n    }\n    /**\n     * Set the clock's ticks at the given time.\n     * @param  ticks The tick value to set\n     * @param  time  When to set the tick value\n     */\n    setTicksAtTime(ticks, time) {\n        time = this.toSeconds(time);\n        this._tickOffset.cancel(time);\n        this._tickOffset.add({\n            seconds: this.frequency.getDurationOfTicks(ticks, time),\n            ticks,\n            time,\n        });\n        return this;\n    }\n    /**\n     * Returns the scheduled state at the given time.\n     * @param  time  The time to query.\n     */\n    getStateAtTime(time) {\n        time = this.toSeconds(time);\n        return this._state.getValueAtTime(time);\n    }\n    /**\n     * Get the time of the given tick. The second argument\n     * is when to test before. Since ticks can be set (with setTicksAtTime)\n     * there may be multiple times for a given tick value.\n     * @param  tick The tick number.\n     * @param  before When to measure the tick value from.\n     * @return The time of the tick\n     */\n    getTimeOfTick(tick, before = this.now()) {\n        const offset = this._tickOffset.get(before);\n        const event = this._state.get(before);\n        const startTime = Math.max(offset.time, event.time);\n        const absoluteTicks = this.frequency.getTicksAtTime(startTime) + tick - offset.ticks;\n        return this.frequency.getTimeOfTick(absoluteTicks);\n    }\n    /**\n     * Invoke the callback event at all scheduled ticks between the\n     * start time and the end time\n     * @param  startTime  The beginning of the search range\n     * @param  endTime    The end of the search range\n     * @param  callback   The callback to invoke with each tick\n     */\n    forEachTickBetween(startTime, endTime, callback) {\n        // only iterate through the sections where it is \"started\"\n        let lastStateEvent = this._state.get(startTime);\n        this._state.forEachBetween(startTime, endTime, event => {\n            if (lastStateEvent && lastStateEvent.state === \"started\" && event.state !== \"started\") {\n                this.forEachTickBetween(Math.max(lastStateEvent.time, startTime), event.time - this.sampleTime, callback);\n            }\n            lastStateEvent = event;\n        });\n        let error = null;\n        if (lastStateEvent && lastStateEvent.state === \"started\") {\n            const maxStartTime = Math.max(lastStateEvent.time, startTime);\n            // figure out the difference between the frequency ticks and the\n            const startTicks = this.frequency.getTicksAtTime(maxStartTime);\n            const ticksAtStart = this.frequency.getTicksAtTime(lastStateEvent.time);\n            const diff = startTicks - ticksAtStart;\n            let offset = Math.ceil(diff) - diff;\n            // guard against floating point issues\n            offset = EQ(offset, 1) ? 0 : offset;\n            let nextTickTime = this.frequency.getTimeOfTick(startTicks + offset);\n            while (nextTickTime < endTime) {\n                try {\n                    callback(nextTickTime, Math.round(this.getTicksAtTime(nextTickTime)));\n                }\n                catch (e) {\n                    error = e;\n                    break;\n                }\n                nextTickTime += this.frequency.getDurationOfTicks(1, nextTickTime);\n            }\n        }\n        if (error) {\n            throw error;\n        }\n        return this;\n    }\n    /**\n     * Clean up\n     */\n    dispose() {\n        super.dispose();\n        this._state.dispose();\n        this._tickOffset.dispose();\n        this.frequency.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=TickSource.js.map","import { ToneWithContext } from \"../context/ToneWithContext\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { Emitter } from \"../util/Emitter\";\nimport { noOp, readOnly } from \"../util/Interface\";\nimport { StateTimeline } from \"../util/StateTimeline\";\nimport { TickSource } from \"./TickSource\";\nimport { assertContextRunning } from \"../util/Debug\";\n/**\n * A sample accurate clock which provides a callback at the given rate.\n * While the callback is not sample-accurate (it is still susceptible to\n * loose JS timing), the time passed in as the argument to the callback\n * is precise. For most applications, it is better to use Tone.Transport\n * instead of the Clock by itself since you can synchronize multiple callbacks.\n * @example\n * // the callback will be invoked approximately once a second\n * // and will print the time exactly once a second apart.\n * const clock = new Tone.Clock(time => {\n * \tconsole.log(time);\n * }, 1);\n * clock.start();\n * @category Core\n */\nexport class Clock extends ToneWithContext {\n    constructor() {\n        super(optionsFromArguments(Clock.getDefaults(), arguments, [\"callback\", \"frequency\"]));\n        this.name = \"Clock\";\n        /**\n         * The callback function to invoke at the scheduled tick.\n         */\n        this.callback = noOp;\n        /**\n         * The last time the loop callback was invoked\n         */\n        this._lastUpdate = 0;\n        /**\n         * Keep track of the playback state\n         */\n        this._state = new StateTimeline(\"stopped\");\n        /**\n         * Context bound reference to the _loop method\n         * This is necessary to remove the event in the end.\n         */\n        this._boundLoop = this._loop.bind(this);\n        const options = optionsFromArguments(Clock.getDefaults(), arguments, [\"callback\", \"frequency\"]);\n        this.callback = options.callback;\n        this._tickSource = new TickSource({\n            context: this.context,\n            frequency: options.frequency,\n            units: options.units,\n        });\n        this._lastUpdate = 0;\n        this.frequency = this._tickSource.frequency;\n        readOnly(this, \"frequency\");\n        // add an initial state\n        this._state.setStateAtTime(\"stopped\", 0);\n        // bind a callback to the worker thread\n        this.context.on(\"tick\", this._boundLoop);\n    }\n    static getDefaults() {\n        return Object.assign(ToneWithContext.getDefaults(), {\n            callback: noOp,\n            frequency: 1,\n            units: \"hertz\",\n        });\n    }\n    /**\n     * Returns the playback state of the source, either \"started\", \"stopped\" or \"paused\".\n     */\n    get state() {\n        return this._state.getValueAtTime(this.now());\n    }\n    /**\n     * Start the clock at the given time. Optionally pass in an offset\n     * of where to start the tick counter from.\n     * @param  time    The time the clock should start\n     * @param offset  Where the tick counter starts counting from.\n     */\n    start(time, offset) {\n        // make sure the context is running\n        assertContextRunning(this.context);\n        // start the loop\n        const computedTime = this.toSeconds(time);\n        this.log(\"start\", computedTime);\n        if (this._state.getValueAtTime(computedTime) !== \"started\") {\n            this._state.setStateAtTime(\"started\", computedTime);\n            this._tickSource.start(computedTime, offset);\n            if (computedTime < this._lastUpdate) {\n                this.emit(\"start\", computedTime, offset);\n            }\n        }\n        return this;\n    }\n    /**\n     * Stop the clock. Stopping the clock resets the tick counter to 0.\n     * @param time The time when the clock should stop.\n     * @example\n     * const clock = new Tone.Clock(time => {\n     * \tconsole.log(time);\n     * }, 1);\n     * clock.start();\n     * // stop the clock after 10 seconds\n     * clock.stop(\"+10\");\n     */\n    stop(time) {\n        const computedTime = this.toSeconds(time);\n        this.log(\"stop\", computedTime);\n        this._state.cancel(computedTime);\n        this._state.setStateAtTime(\"stopped\", computedTime);\n        this._tickSource.stop(computedTime);\n        if (computedTime < this._lastUpdate) {\n            this.emit(\"stop\", computedTime);\n        }\n        return this;\n    }\n    /**\n     * Pause the clock. Pausing does not reset the tick counter.\n     * @param time The time when the clock should stop.\n     */\n    pause(time) {\n        const computedTime = this.toSeconds(time);\n        if (this._state.getValueAtTime(computedTime) === \"started\") {\n            this._state.setStateAtTime(\"paused\", computedTime);\n            this._tickSource.pause(computedTime);\n            if (computedTime < this._lastUpdate) {\n                this.emit(\"pause\", computedTime);\n            }\n        }\n        return this;\n    }\n    /**\n     * The number of times the callback was invoked. Starts counting at 0\n     * and increments after the callback was invoked.\n     */\n    get ticks() {\n        return Math.ceil(this.getTicksAtTime(this.now()));\n    }\n    set ticks(t) {\n        this._tickSource.ticks = t;\n    }\n    /**\n     * The time since ticks=0 that the Clock has been running. Accounts for tempo curves\n     */\n    get seconds() {\n        return this._tickSource.seconds;\n    }\n    set seconds(s) {\n        this._tickSource.seconds = s;\n    }\n    /**\n     * Return the elapsed seconds at the given time.\n     * @param  time  When to get the elapsed seconds\n     * @return  The number of elapsed seconds\n     */\n    getSecondsAtTime(time) {\n        return this._tickSource.getSecondsAtTime(time);\n    }\n    /**\n     * Set the clock's ticks at the given time.\n     * @param  ticks The tick value to set\n     * @param  time  When to set the tick value\n     */\n    setTicksAtTime(ticks, time) {\n        this._tickSource.setTicksAtTime(ticks, time);\n        return this;\n    }\n    /**\n     * Get the time of the given tick. The second argument\n     * is when to test before. Since ticks can be set (with setTicksAtTime)\n     * there may be multiple times for a given tick value.\n     * @param  tick The tick number.\n     * @param  before When to measure the tick value from.\n     * @return The time of the tick\n     */\n    getTimeOfTick(tick, before = this.now()) {\n        return this._tickSource.getTimeOfTick(tick, before);\n    }\n    /**\n     * Get the clock's ticks at the given time.\n     * @param  time  When to get the tick value\n     * @return The tick value at the given time.\n     */\n    getTicksAtTime(time) {\n        return this._tickSource.getTicksAtTime(time);\n    }\n    /**\n     * Get the time of the next tick\n     * @param  offset The tick number.\n     */\n    nextTickTime(offset, when) {\n        const computedTime = this.toSeconds(when);\n        const currentTick = this.getTicksAtTime(computedTime);\n        return this._tickSource.getTimeOfTick(currentTick + offset, computedTime);\n    }\n    /**\n     * The scheduling loop.\n     */\n    _loop() {\n        const startTime = this._lastUpdate;\n        const endTime = this.now();\n        this._lastUpdate = endTime;\n        this.log(\"loop\", startTime, endTime);\n        if (startTime !== endTime) {\n            // the state change events\n            this._state.forEachBetween(startTime, endTime, e => {\n                switch (e.state) {\n                    case \"started\":\n                        const offset = this._tickSource.getTicksAtTime(e.time);\n                        this.emit(\"start\", e.time, offset);\n                        break;\n                    case \"stopped\":\n                        if (e.time !== 0) {\n                            this.emit(\"stop\", e.time);\n                        }\n                        break;\n                    case \"paused\":\n                        this.emit(\"pause\", e.time);\n                        break;\n                }\n            });\n            // the tick callbacks\n            this._tickSource.forEachTickBetween(startTime, endTime, (time, ticks) => {\n                this.callback(time, ticks);\n            });\n        }\n    }\n    /**\n     * Returns the scheduled state at the given time.\n     * @param  time  The time to query.\n     * @return  The name of the state input in setStateAtTime.\n     * @example\n     * const clock = new Tone.Clock();\n     * clock.start(\"+0.1\");\n     * clock.getStateAtTime(\"+0.1\"); // returns \"started\"\n     */\n    getStateAtTime(time) {\n        const computedTime = this.toSeconds(time);\n        return this._state.getValueAtTime(computedTime);\n    }\n    /**\n     * Clean up\n     */\n    dispose() {\n        super.dispose();\n        this.context.off(\"tick\", this._boundLoop);\n        this._tickSource.dispose();\n        this._state.dispose();\n        return this;\n    }\n}\nEmitter.mixin(Clock);\n//# sourceMappingURL=Clock.js.map","import { Tone } from \"../Tone\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { noOp } from \"../util/Interface\";\nimport { isString } from \"../util/TypeCheck\";\nimport { ToneAudioBuffer } from \"./ToneAudioBuffer\";\nimport { assert } from \"../util/Debug\";\n/**\n * A data structure for holding multiple buffers in a Map-like datastructure.\n *\n * @example\n * const pianoSamples = new Tone.ToneAudioBuffers({\n * \tA1: \"https://tonejs.github.io/audio/casio/A1.mp3\",\n * \tA2: \"https://tonejs.github.io/audio/casio/A2.mp3\",\n * }, () => {\n * \tconst player = new Tone.Player().toDestination();\n * \t// play one of the samples when they all load\n * \tplayer.buffer = pianoSamples.get(\"A2\");\n * \tplayer.start();\n * });\n * @example\n * // To pass in additional parameters in the second parameter\n * const buffers = new Tone.ToneAudioBuffers({\n * \t urls: {\n * \t\t A1: \"A1.mp3\",\n * \t\t A2: \"A2.mp3\",\n * \t },\n * \t onload: () => console.log(\"loaded\"),\n * \t baseUrl: \"https://tonejs.github.io/audio/casio/\"\n * });\n * @category Core\n */\nexport class ToneAudioBuffers extends Tone {\n    constructor() {\n        super();\n        this.name = \"ToneAudioBuffers\";\n        /**\n         * All of the buffers\n         */\n        this._buffers = new Map();\n        /**\n         * Keep track of the number of loaded buffers\n         */\n        this._loadingCount = 0;\n        const options = optionsFromArguments(ToneAudioBuffers.getDefaults(), arguments, [\"urls\", \"onload\", \"baseUrl\"], \"urls\");\n        this.baseUrl = options.baseUrl;\n        // add each one\n        Object.keys(options.urls).forEach(name => {\n            this._loadingCount++;\n            const url = options.urls[name];\n            this.add(name, url, this._bufferLoaded.bind(this, options.onload), options.onerror);\n        });\n    }\n    static getDefaults() {\n        return {\n            baseUrl: \"\",\n            onerror: noOp,\n            onload: noOp,\n            urls: {},\n        };\n    }\n    /**\n     * True if the buffers object has a buffer by that name.\n     * @param  name  The key or index of the buffer.\n     */\n    has(name) {\n        return this._buffers.has(name.toString());\n    }\n    /**\n     * Get a buffer by name. If an array was loaded,\n     * then use the array index.\n     * @param  name  The key or index of the buffer.\n     */\n    get(name) {\n        assert(this.has(name), `ToneAudioBuffers has no buffer named: ${name}`);\n        return this._buffers.get(name.toString());\n    }\n    /**\n     * A buffer was loaded. decrement the counter.\n     */\n    _bufferLoaded(callback) {\n        this._loadingCount--;\n        if (this._loadingCount === 0 && callback) {\n            callback();\n        }\n    }\n    /**\n     * If the buffers are loaded or not\n     */\n    get loaded() {\n        return Array.from(this._buffers).every(([_, buffer]) => buffer.loaded);\n    }\n    /**\n     * Add a buffer by name and url to the Buffers\n     * @param  name      A unique name to give the buffer\n     * @param  url  Either the url of the bufer, or a buffer which will be added with the given name.\n     * @param  callback  The callback to invoke when the url is loaded.\n     * @param  onerror  Invoked if the buffer can't be loaded\n     */\n    add(name, url, callback = noOp, onerror = noOp) {\n        if (isString(url)) {\n            this._buffers.set(name.toString(), new ToneAudioBuffer(this.baseUrl + url, callback, onerror));\n        }\n        else {\n            this._buffers.set(name.toString(), new ToneAudioBuffer(url, callback, onerror));\n        }\n        return this;\n    }\n    dispose() {\n        super.dispose();\n        this._buffers.forEach(buffer => buffer.dispose());\n        this._buffers.clear();\n        return this;\n    }\n}\n//# sourceMappingURL=ToneAudioBuffers.js.map","import { getContext } from \"../Global\";\nimport { TransportTimeClass } from \"./TransportTime\";\n/**\n * Ticks is a primitive type for encoding Time values.\n * Ticks can be constructed with or without the `new` keyword. Ticks can be passed\n * into the parameter of any method which takes time as an argument.\n * @example\n * const t = Tone.Ticks(\"4n\"); // a quarter note as ticks\n * @category Unit\n */\nexport class TicksClass extends TransportTimeClass {\n    constructor() {\n        super(...arguments);\n        this.name = \"Ticks\";\n        this.defaultUnits = \"i\";\n    }\n    /**\n     * Get the current time in the given units\n     */\n    _now() {\n        return this.context.transport.ticks;\n    }\n    /**\n     * Return the value of the beats in the current units\n     */\n    _beatsToUnits(beats) {\n        return this._getPPQ() * beats;\n    }\n    /**\n     * Returns the value of a second in the current units\n     */\n    _secondsToUnits(seconds) {\n        return Math.floor(seconds / (60 / this._getBpm()) * this._getPPQ());\n    }\n    /**\n     * Returns the value of a tick in the current time units\n     */\n    _ticksToUnits(ticks) {\n        return ticks;\n    }\n    /**\n     * Return the time in ticks\n     */\n    toTicks() {\n        return this.valueOf();\n    }\n    /**\n     * Return the time in seconds\n     */\n    toSeconds() {\n        return (this.valueOf() / this._getPPQ()) * (60 / this._getBpm());\n    }\n}\n/**\n * Convert a time representation to ticks\n * @category Unit\n */\nexport function Ticks(value, units) {\n    return new TicksClass(getContext(), value, units);\n}\n//# sourceMappingURL=Ticks.js.map","import { ToneWithContext } from \"../context/ToneWithContext\";\nimport { Timeline } from \"./Timeline\";\nimport { onContextClose, onContextInit } from \"../context/ContextInitialization\";\n/**\n * Draw is useful for synchronizing visuals and audio events.\n * Callbacks from Tone.Transport or any of the Tone.Event classes\n * always happen _before_ the scheduled time and are not synchronized\n * to the animation frame so they are not good for triggering tightly\n * synchronized visuals and sound. Draw makes it easy to schedule\n * callbacks using the AudioContext time and uses requestAnimationFrame.\n * @example\n * Tone.Transport.schedule((time) => {\n * \t// use the time argument to schedule a callback with Draw\n * \tTone.Draw.schedule(() => {\n * \t\t// do drawing or DOM manipulation here\n * \t\tconsole.log(time);\n * \t}, time);\n * }, \"+0.5\");\n * Tone.Transport.start();\n * @category Core\n */\nexport class Draw extends ToneWithContext {\n    constructor() {\n        super(...arguments);\n        this.name = \"Draw\";\n        /**\n         * The duration after which events are not invoked.\n         */\n        this.expiration = 0.25;\n        /**\n         * The amount of time before the scheduled time\n         * that the callback can be invoked. Default is\n         * half the time of an animation frame (0.008 seconds).\n         */\n        this.anticipation = 0.008;\n        /**\n         * All of the events.\n         */\n        this._events = new Timeline();\n        /**\n         * The draw loop\n         */\n        this._boundDrawLoop = this._drawLoop.bind(this);\n        /**\n         * The animation frame id\n         */\n        this._animationFrame = -1;\n    }\n    /**\n     * Schedule a function at the given time to be invoked\n     * on the nearest animation frame.\n     * @param  callback  Callback is invoked at the given time.\n     * @param  time      The time relative to the AudioContext time to invoke the callback.\n     * @example\n     * Tone.Transport.scheduleRepeat(time => {\n     * \tTone.Draw.schedule(() => console.log(time), time);\n     * }, 1);\n     * Tone.Transport.start();\n     */\n    schedule(callback, time) {\n        this._events.add({\n            callback,\n            time: this.toSeconds(time),\n        });\n        // start the draw loop on the first event\n        if (this._events.length === 1) {\n            this._animationFrame = requestAnimationFrame(this._boundDrawLoop);\n        }\n        return this;\n    }\n    /**\n     * Cancel events scheduled after the given time\n     * @param  after  Time after which scheduled events will be removed from the scheduling timeline.\n     */\n    cancel(after) {\n        this._events.cancel(this.toSeconds(after));\n        return this;\n    }\n    /**\n     * The draw loop\n     */\n    _drawLoop() {\n        const now = this.context.currentTime;\n        while (this._events.length && this._events.peek().time - this.anticipation <= now) {\n            const event = this._events.shift();\n            if (event && now - event.time <= this.expiration) {\n                event.callback();\n            }\n        }\n        if (this._events.length > 0) {\n            this._animationFrame = requestAnimationFrame(this._boundDrawLoop);\n        }\n    }\n    dispose() {\n        super.dispose();\n        this._events.dispose();\n        cancelAnimationFrame(this._animationFrame);\n        return this;\n    }\n}\n//-------------------------------------\n// \tINITIALIZATION\n//-------------------------------------\nonContextInit(context => {\n    context.draw = new Draw({ context });\n});\nonContextClose(context => {\n    context.draw.dispose();\n});\n//# sourceMappingURL=Draw.js.map","import { Tone } from \"../Tone\";\nimport { isDefined } from \"./TypeCheck\";\nimport { assert } from \"./Debug\";\n/**\n * Similar to Tone.Timeline, but all events represent\n * intervals with both \"time\" and \"duration\" times. The\n * events are placed in a tree structure optimized\n * for querying an intersection point with the timeline\n * events. Internally uses an [Interval Tree](https://en.wikipedia.org/wiki/Interval_tree)\n * to represent the data.\n */\nexport class IntervalTimeline extends Tone {\n    constructor() {\n        super(...arguments);\n        this.name = \"IntervalTimeline\";\n        /**\n         * The root node of the inteval tree\n         */\n        this._root = null;\n        /**\n         * Keep track of the length of the timeline.\n         */\n        this._length = 0;\n    }\n    /**\n     * The event to add to the timeline. All events must\n     * have a time and duration value\n     * @param  event  The event to add to the timeline\n     */\n    add(event) {\n        assert(isDefined(event.time), \"Events must have a time property\");\n        assert(isDefined(event.duration), \"Events must have a duration parameter\");\n        event.time = event.time.valueOf();\n        let node = new IntervalNode(event.time, event.time + event.duration, event);\n        if (this._root === null) {\n            this._root = node;\n        }\n        else {\n            this._root.insert(node);\n        }\n        this._length++;\n        // Restructure tree to be balanced\n        while (node !== null) {\n            node.updateHeight();\n            node.updateMax();\n            this._rebalance(node);\n            node = node.parent;\n        }\n        return this;\n    }\n    /**\n     * Remove an event from the timeline.\n     * @param  event  The event to remove from the timeline\n     */\n    remove(event) {\n        if (this._root !== null) {\n            const results = [];\n            this._root.search(event.time, results);\n            for (const node of results) {\n                if (node.event === event) {\n                    this._removeNode(node);\n                    this._length--;\n                    break;\n                }\n            }\n        }\n        return this;\n    }\n    /**\n     * The number of items in the timeline.\n     * @readOnly\n     */\n    get length() {\n        return this._length;\n    }\n    /**\n     * Remove events whose time time is after the given time\n     * @param  after  The time to query.\n     */\n    cancel(after) {\n        this.forEachFrom(after, event => this.remove(event));\n        return this;\n    }\n    /**\n     * Set the root node as the given node\n     */\n    _setRoot(node) {\n        this._root = node;\n        if (this._root !== null) {\n            this._root.parent = null;\n        }\n    }\n    /**\n     * Replace the references to the node in the node's parent\n     * with the replacement node.\n     */\n    _replaceNodeInParent(node, replacement) {\n        if (node.parent !== null) {\n            if (node.isLeftChild()) {\n                node.parent.left = replacement;\n            }\n            else {\n                node.parent.right = replacement;\n            }\n            this._rebalance(node.parent);\n        }\n        else {\n            this._setRoot(replacement);\n        }\n    }\n    /**\n     * Remove the node from the tree and replace it with\n     * a successor which follows the schema.\n     */\n    _removeNode(node) {\n        if (node.left === null && node.right === null) {\n            this._replaceNodeInParent(node, null);\n        }\n        else if (node.right === null) {\n            this._replaceNodeInParent(node, node.left);\n        }\n        else if (node.left === null) {\n            this._replaceNodeInParent(node, node.right);\n        }\n        else {\n            const balance = node.getBalance();\n            let replacement;\n            let temp = null;\n            if (balance > 0) {\n                if (node.left.right === null) {\n                    replacement = node.left;\n                    replacement.right = node.right;\n                    temp = replacement;\n                }\n                else {\n                    replacement = node.left.right;\n                    while (replacement.right !== null) {\n                        replacement = replacement.right;\n                    }\n                    if (replacement.parent) {\n                        replacement.parent.right = replacement.left;\n                        temp = replacement.parent;\n                        replacement.left = node.left;\n                        replacement.right = node.right;\n                    }\n                }\n            }\n            else if (node.right.left === null) {\n                replacement = node.right;\n                replacement.left = node.left;\n                temp = replacement;\n            }\n            else {\n                replacement = node.right.left;\n                while (replacement.left !== null) {\n                    replacement = replacement.left;\n                }\n                if (replacement.parent) {\n                    replacement.parent.left = replacement.right;\n                    temp = replacement.parent;\n                    replacement.left = node.left;\n                    replacement.right = node.right;\n                }\n            }\n            if (node.parent !== null) {\n                if (node.isLeftChild()) {\n                    node.parent.left = replacement;\n                }\n                else {\n                    node.parent.right = replacement;\n                }\n            }\n            else {\n                this._setRoot(replacement);\n            }\n            if (temp) {\n                this._rebalance(temp);\n            }\n        }\n        node.dispose();\n    }\n    /**\n     * Rotate the tree to the left\n     */\n    _rotateLeft(node) {\n        const parent = node.parent;\n        const isLeftChild = node.isLeftChild();\n        // Make node.right the new root of this sub tree (instead of node)\n        const pivotNode = node.right;\n        if (pivotNode) {\n            node.right = pivotNode.left;\n            pivotNode.left = node;\n        }\n        if (parent !== null) {\n            if (isLeftChild) {\n                parent.left = pivotNode;\n            }\n            else {\n                parent.right = pivotNode;\n            }\n        }\n        else {\n            this._setRoot(pivotNode);\n        }\n    }\n    /**\n     * Rotate the tree to the right\n     */\n    _rotateRight(node) {\n        const parent = node.parent;\n        const isLeftChild = node.isLeftChild();\n        // Make node.left the new root of this sub tree (instead of node)\n        const pivotNode = node.left;\n        if (pivotNode) {\n            node.left = pivotNode.right;\n            pivotNode.right = node;\n        }\n        if (parent !== null) {\n            if (isLeftChild) {\n                parent.left = pivotNode;\n            }\n            else {\n                parent.right = pivotNode;\n            }\n        }\n        else {\n            this._setRoot(pivotNode);\n        }\n    }\n    /**\n     * Balance the BST\n     */\n    _rebalance(node) {\n        const balance = node.getBalance();\n        if (balance > 1 && node.left) {\n            if (node.left.getBalance() < 0) {\n                this._rotateLeft(node.left);\n            }\n            else {\n                this._rotateRight(node);\n            }\n        }\n        else if (balance < -1 && node.right) {\n            if (node.right.getBalance() > 0) {\n                this._rotateRight(node.right);\n            }\n            else {\n                this._rotateLeft(node);\n            }\n        }\n    }\n    /**\n     * Get an event whose time and duration span the give time. Will\n     * return the match whose \"time\" value is closest to the given time.\n     * @return  The event which spans the desired time\n     */\n    get(time) {\n        if (this._root !== null) {\n            const results = [];\n            this._root.search(time, results);\n            if (results.length > 0) {\n                let max = results[0];\n                for (let i = 1; i < results.length; i++) {\n                    if (results[i].low > max.low) {\n                        max = results[i];\n                    }\n                }\n                return max.event;\n            }\n        }\n        return null;\n    }\n    /**\n     * Iterate over everything in the timeline.\n     * @param  callback The callback to invoke with every item\n     */\n    forEach(callback) {\n        if (this._root !== null) {\n            const allNodes = [];\n            this._root.traverse(node => allNodes.push(node));\n            allNodes.forEach(node => {\n                if (node.event) {\n                    callback(node.event);\n                }\n            });\n        }\n        return this;\n    }\n    /**\n     * Iterate over everything in the array in which the given time\n     * overlaps with the time and duration time of the event.\n     * @param  time The time to check if items are overlapping\n     * @param  callback The callback to invoke with every item\n     */\n    forEachAtTime(time, callback) {\n        if (this._root !== null) {\n            const results = [];\n            this._root.search(time, results);\n            results.forEach(node => {\n                if (node.event) {\n                    callback(node.event);\n                }\n            });\n        }\n        return this;\n    }\n    /**\n     * Iterate over everything in the array in which the time is greater\n     * than or equal to the given time.\n     * @param  time The time to check if items are before\n     * @param  callback The callback to invoke with every item\n     */\n    forEachFrom(time, callback) {\n        if (this._root !== null) {\n            const results = [];\n            this._root.searchAfter(time, results);\n            results.forEach(node => {\n                if (node.event) {\n                    callback(node.event);\n                }\n            });\n        }\n        return this;\n    }\n    /**\n     * Clean up\n     */\n    dispose() {\n        super.dispose();\n        if (this._root !== null) {\n            this._root.traverse(node => node.dispose());\n        }\n        this._root = null;\n        return this;\n    }\n}\n//-------------------------------------\n// \tINTERVAL NODE HELPER\n//-------------------------------------\n/**\n * Represents a node in the binary search tree, with the addition\n * of a \"high\" value which keeps track of the highest value of\n * its children.\n * References:\n * https://brooknovak.wordpress.com/2013/12/07/augmented-interval-tree-in-c/\n * http://www.mif.vu.lt/~valdas/ALGORITMAI/LITERATURA/Cormen/Cormen.pdf\n * @param low\n * @param high\n */\nclass IntervalNode {\n    constructor(low, high, event) {\n        // the nodes to the left\n        this._left = null;\n        // the nodes to the right\n        this._right = null;\n        // the parent node\n        this.parent = null;\n        // the number of child nodes\n        this.height = 0;\n        this.event = event;\n        // the low value\n        this.low = low;\n        // the high value\n        this.high = high;\n        // the high value for this and all child nodes\n        this.max = this.high;\n    }\n    /**\n     * Insert a node into the correct spot in the tree\n     */\n    insert(node) {\n        if (node.low <= this.low) {\n            if (this.left === null) {\n                this.left = node;\n            }\n            else {\n                this.left.insert(node);\n            }\n        }\n        else if (this.right === null) {\n            this.right = node;\n        }\n        else {\n            this.right.insert(node);\n        }\n    }\n    /**\n     * Search the tree for nodes which overlap\n     * with the given point\n     * @param  point  The point to query\n     * @param  results  The array to put the results\n     */\n    search(point, results) {\n        // If p is to the right of the rightmost point of any interval\n        // in this node and all children, there won't be any matches.\n        if (point > this.max) {\n            return;\n        }\n        // Search left children\n        if (this.left !== null) {\n            this.left.search(point, results);\n        }\n        // Check this node\n        if (this.low <= point && this.high > point) {\n            results.push(this);\n        }\n        // If p is to the left of the time of this interval,\n        // then it can't be in any child to the right.\n        if (this.low > point) {\n            return;\n        }\n        // Search right children\n        if (this.right !== null) {\n            this.right.search(point, results);\n        }\n    }\n    /**\n     * Search the tree for nodes which are less\n     * than the given point\n     * @param  point  The point to query\n     * @param  results  The array to put the results\n     */\n    searchAfter(point, results) {\n        // Check this node\n        if (this.low >= point) {\n            results.push(this);\n            if (this.left !== null) {\n                this.left.searchAfter(point, results);\n            }\n        }\n        // search the right side\n        if (this.right !== null) {\n            this.right.searchAfter(point, results);\n        }\n    }\n    /**\n     * Invoke the callback on this element and both it's branches\n     * @param  {Function}  callback\n     */\n    traverse(callback) {\n        callback(this);\n        if (this.left !== null) {\n            this.left.traverse(callback);\n        }\n        if (this.right !== null) {\n            this.right.traverse(callback);\n        }\n    }\n    /**\n     * Update the height of the node\n     */\n    updateHeight() {\n        if (this.left !== null && this.right !== null) {\n            this.height = Math.max(this.left.height, this.right.height) + 1;\n        }\n        else if (this.right !== null) {\n            this.height = this.right.height + 1;\n        }\n        else if (this.left !== null) {\n            this.height = this.left.height + 1;\n        }\n        else {\n            this.height = 0;\n        }\n    }\n    /**\n     * Update the height of the node\n     */\n    updateMax() {\n        this.max = this.high;\n        if (this.left !== null) {\n            this.max = Math.max(this.max, this.left.max);\n        }\n        if (this.right !== null) {\n            this.max = Math.max(this.max, this.right.max);\n        }\n    }\n    /**\n     * The balance is how the leafs are distributed on the node\n     * @return  Negative numbers are balanced to the right\n     */\n    getBalance() {\n        let balance = 0;\n        if (this.left !== null && this.right !== null) {\n            balance = this.left.height - this.right.height;\n        }\n        else if (this.left !== null) {\n            balance = this.left.height + 1;\n        }\n        else if (this.right !== null) {\n            balance = -(this.right.height + 1);\n        }\n        return balance;\n    }\n    /**\n     * @returns true if this node is the left child of its parent\n     */\n    isLeftChild() {\n        return this.parent !== null && this.parent.left === this;\n    }\n    /**\n     * get/set the left node\n     */\n    get left() {\n        return this._left;\n    }\n    set left(node) {\n        this._left = node;\n        if (node !== null) {\n            node.parent = this;\n        }\n        this.updateHeight();\n        this.updateMax();\n    }\n    /**\n     * get/set the right node\n     */\n    get right() {\n        return this._right;\n    }\n    set right(node) {\n        this._right = node;\n        if (node !== null) {\n            node.parent = this;\n        }\n        this.updateHeight();\n        this.updateMax();\n    }\n    /**\n     * null out references.\n     */\n    dispose() {\n        this.parent = null;\n        this._left = null;\n        this._right = null;\n        this.event = null;\n    }\n}\n//# sourceMappingURL=IntervalTimeline.js.map","import { Gain } from \"../../core/context/Gain\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\n/**\n * Volume is a simple volume node, useful for creating a volume fader.\n *\n * @example\n * const vol = new Tone.Volume(-12).toDestination();\n * const osc = new Tone.Oscillator().connect(vol).start();\n * @category Component\n */\nexport class Volume extends ToneAudioNode {\n    constructor() {\n        super(optionsFromArguments(Volume.getDefaults(), arguments, [\"volume\"]));\n        this.name = \"Volume\";\n        const options = optionsFromArguments(Volume.getDefaults(), arguments, [\"volume\"]);\n        this.input = this.output = new Gain({\n            context: this.context,\n            gain: options.volume,\n            units: \"decibels\",\n        });\n        this.volume = this.output.gain;\n        readOnly(this, \"volume\");\n        this._unmutedVolume = options.volume;\n        // set the mute initially\n        this.mute = options.mute;\n    }\n    static getDefaults() {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            mute: false,\n            volume: 0,\n        });\n    }\n    /**\n     * Mute the output.\n     * @example\n     * const vol = new Tone.Volume(-12).toDestination();\n     * const osc = new Tone.Oscillator().connect(vol).start();\n     * // mute the output\n     * vol.mute = true;\n     */\n    get mute() {\n        return this.volume.value === -Infinity;\n    }\n    set mute(mute) {\n        if (!this.mute && mute) {\n            this._unmutedVolume = this.volume.value;\n            // maybe it should ramp here?\n            this.volume.value = -Infinity;\n        }\n        else if (this.mute && !mute) {\n            this.volume.value = this._unmutedVolume;\n        }\n    }\n    /**\n     * clean up\n     */\n    dispose() {\n        super.dispose();\n        this.input.dispose();\n        this.volume.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=Volume.js.map","import { Volume } from \"../../component/channel/Volume\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { onContextClose, onContextInit } from \"./ContextInitialization\";\nimport { Gain } from \"./Gain\";\nimport { connectSeries, ToneAudioNode } from \"./ToneAudioNode\";\n/**\n * A single master output which is connected to the\n * AudioDestinationNode (aka your speakers).\n * It provides useful conveniences such as the ability\n * to set the volume and mute the entire application.\n * It also gives you the ability to apply master effects to your application.\n *\n * @example\n * const oscillator = new Tone.Oscillator().start();\n * // the audio will go from the oscillator to the speakers\n * oscillator.connect(Tone.Destination);\n * // a convenience for connecting to the master output is also provided:\n * oscillator.toDestination();\n * @category Core\n */\nexport class Destination extends ToneAudioNode {\n    constructor() {\n        super(optionsFromArguments(Destination.getDefaults(), arguments));\n        this.name = \"Destination\";\n        this.input = new Volume({ context: this.context });\n        this.output = new Gain({ context: this.context });\n        /**\n         * The volume of the master output.\n         */\n        this.volume = this.input.volume;\n        const options = optionsFromArguments(Destination.getDefaults(), arguments);\n        connectSeries(this.input, this.output, this.context.rawContext.destination);\n        this.mute = options.mute;\n        this._internalChannels = [this.input, this.context.rawContext.destination, this.output];\n    }\n    static getDefaults() {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            mute: false,\n            volume: 0,\n        });\n    }\n    /**\n     * Mute the output.\n     * @example\n     * const oscillator = new Tone.Oscillator().start().toDestination();\n     * setTimeout(() => {\n     * \t// mute the output\n     * \tTone.Destination.mute = true;\n     * }, 1000);\n     */\n    get mute() {\n        return this.input.mute;\n    }\n    set mute(mute) {\n        this.input.mute = mute;\n    }\n    /**\n     * Add a master effects chain. NOTE: this will disconnect any nodes which were previously\n     * chained in the master effects chain.\n     * @param args All arguments will be connected in a row and the Master will be routed through it.\n     * @example\n     * // route all audio through a filter and compressor\n     * const lowpass = new Tone.Filter(800, \"lowpass\");\n     * const compressor = new Tone.Compressor(-18);\n     * Tone.Destination.chain(lowpass, compressor);\n     */\n    chain(...args) {\n        this.input.disconnect();\n        args.unshift(this.input);\n        args.push(this.output);\n        connectSeries(...args);\n        return this;\n    }\n    /**\n     * The maximum number of channels the system can output\n     * @example\n     * console.log(Tone.Destination.maxChannelCount);\n     */\n    get maxChannelCount() {\n        return this.context.rawContext.destination.maxChannelCount;\n    }\n    /**\n     * Clean up\n     */\n    dispose() {\n        super.dispose();\n        this.volume.dispose();\n        return this;\n    }\n}\n//-------------------------------------\n// \tINITIALIZATION\n//-------------------------------------\nonContextInit(context => {\n    context.destination = new Destination({ context });\n});\nonContextClose(context => {\n    context.destination.dispose();\n});\n//# sourceMappingURL=Destination.js.map","import { Timeline } from \"./Timeline\";\nimport { Tone } from \"../Tone\";\n/**\n * Represents a single value which is gettable and settable in a timed way\n */\nexport class TimelineValue extends Tone {\n    /**\n     * @param initialValue The value to return if there is no scheduled values\n     */\n    constructor(initialValue) {\n        super();\n        this.name = \"TimelineValue\";\n        /**\n         * The timeline which stores the values\n         */\n        this._timeline = new Timeline({ memory: 10 });\n        this._initialValue = initialValue;\n    }\n    /**\n     * Set the value at the given time\n     */\n    set(value, time) {\n        this._timeline.add({\n            value, time\n        });\n        return this;\n    }\n    /**\n     * Get the value at the given time\n     */\n    get(time) {\n        const event = this._timeline.get(time);\n        if (event) {\n            return event.value;\n        }\n        else {\n            return this._initialValue;\n        }\n    }\n}\n//# sourceMappingURL=TimelineValue.js.map","import { noOp } from \"../util/Interface\";\n/**\n * TransportEvent is an internal class used by [[Transport]]\n * to schedule events. Do no invoke this class directly, it is\n * handled from within Tone.Transport.\n */\nexport class TransportEvent {\n    /**\n     * @param transport The transport object which the event belongs to\n     */\n    constructor(transport, opts) {\n        /**\n         * The unique id of the event\n         */\n        this.id = TransportEvent._eventId++;\n        const options = Object.assign(TransportEvent.getDefaults(), opts);\n        this.transport = transport;\n        this.callback = options.callback;\n        this._once = options.once;\n        this.time = options.time;\n    }\n    static getDefaults() {\n        return {\n            callback: noOp,\n            once: false,\n            time: 0,\n        };\n    }\n    /**\n     * Invoke the event callback.\n     * @param  time  The AudioContext time in seconds of the event\n     */\n    invoke(time) {\n        if (this.callback) {\n            this.callback(time);\n            if (this._once) {\n                this.transport.clear(this.id);\n            }\n        }\n    }\n    /**\n     * Clean up\n     */\n    dispose() {\n        this.callback = undefined;\n        return this;\n    }\n}\n/**\n * Current ID counter\n */\nTransportEvent._eventId = 0;\n//# sourceMappingURL=TransportEvent.js.map","import { TicksClass } from \"../type/Ticks\";\nimport { TransportEvent } from \"./TransportEvent\";\n/**\n * TransportRepeatEvent is an internal class used by Tone.Transport\n * to schedule repeat events. This class should not be instantiated directly.\n */\nexport class TransportRepeatEvent extends TransportEvent {\n    /**\n     * @param transport The transport object which the event belongs to\n     */\n    constructor(transport, opts) {\n        super(transport, opts);\n        /**\n         * The ID of the current timeline event\n         */\n        this._currentId = -1;\n        /**\n         * The ID of the next timeline event\n         */\n        this._nextId = -1;\n        /**\n         * The time of the next event\n         */\n        this._nextTick = this.time;\n        /**\n         * a reference to the bound start method\n         */\n        this._boundRestart = this._restart.bind(this);\n        const options = Object.assign(TransportRepeatEvent.getDefaults(), opts);\n        this.duration = new TicksClass(transport.context, options.duration).valueOf();\n        this._interval = new TicksClass(transport.context, options.interval).valueOf();\n        this._nextTick = options.time;\n        this.transport.on(\"start\", this._boundRestart);\n        this.transport.on(\"loopStart\", this._boundRestart);\n        this.context = this.transport.context;\n        this._restart();\n    }\n    static getDefaults() {\n        return Object.assign({}, TransportEvent.getDefaults(), {\n            duration: Infinity,\n            interval: 1,\n            once: false,\n        });\n    }\n    /**\n     * Invoke the callback. Returns the tick time which\n     * the next event should be scheduled at.\n     * @param  time  The AudioContext time in seconds of the event\n     */\n    invoke(time) {\n        // create more events if necessary\n        this._createEvents(time);\n        // call the super class\n        super.invoke(time);\n    }\n    /**\n     * Push more events onto the timeline to keep up with the position of the timeline\n     */\n    _createEvents(time) {\n        // schedule the next event\n        const ticks = this.transport.getTicksAtTime(time);\n        if (ticks >= this.time && ticks >= this._nextTick && this._nextTick + this._interval < this.time + this.duration) {\n            this._nextTick += this._interval;\n            this._currentId = this._nextId;\n            this._nextId = this.transport.scheduleOnce(this.invoke.bind(this), new TicksClass(this.context, this._nextTick).toSeconds());\n        }\n    }\n    /**\n     * Push more events onto the timeline to keep up with the position of the timeline\n     */\n    _restart(time) {\n        this.transport.clear(this._currentId);\n        this.transport.clear(this._nextId);\n        this._nextTick = this.time;\n        const ticks = this.transport.getTicksAtTime(time);\n        if (ticks > this.time) {\n            this._nextTick = this.time + Math.ceil((ticks - this.time) / this._interval) * this._interval;\n        }\n        this._currentId = this.transport.scheduleOnce(this.invoke.bind(this), new TicksClass(this.context, this._nextTick).toSeconds());\n        this._nextTick += this._interval;\n        this._nextId = this.transport.scheduleOnce(this.invoke.bind(this), new TicksClass(this.context, this._nextTick).toSeconds());\n    }\n    /**\n     * Clean up\n     */\n    dispose() {\n        super.dispose();\n        this.transport.clear(this._currentId);\n        this.transport.clear(this._nextId);\n        this.transport.off(\"start\", this._boundRestart);\n        this.transport.off(\"loopStart\", this._boundRestart);\n        return this;\n    }\n}\n//# sourceMappingURL=TransportRepeatEvent.js.map","import { TimeClass } from \"../../core/type/Time\";\nimport { TimelineValue } from \"../../core/util/TimelineValue\";\nimport { onContextClose, onContextInit } from \"../context/ContextInitialization\";\nimport { Gain } from \"../context/Gain\";\nimport { ToneWithContext } from \"../context/ToneWithContext\";\nimport { TicksClass } from \"../type/Ticks\";\nimport { TransportTimeClass } from \"../type/TransportTime\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { Emitter } from \"../util/Emitter\";\nimport { readOnly, writable } from \"../util/Interface\";\nimport { IntervalTimeline } from \"../util/IntervalTimeline\";\nimport { Timeline } from \"../util/Timeline\";\nimport { isArray, isDefined } from \"../util/TypeCheck\";\nimport { Clock } from \"./Clock\";\nimport { TransportEvent } from \"./TransportEvent\";\nimport { TransportRepeatEvent } from \"./TransportRepeatEvent\";\n/**\n * Transport for timing musical events.\n * Supports tempo curves and time changes. Unlike browser-based timing (setInterval, requestAnimationFrame)\n * Transport timing events pass in the exact time of the scheduled event\n * in the argument of the callback function. Pass that time value to the object\n * you're scheduling. <br><br>\n * A single transport is created for you when the library is initialized.\n * <br><br>\n * The transport emits the events: \"start\", \"stop\", \"pause\", and \"loop\" which are\n * called with the time of that event as the argument.\n *\n * @example\n * const osc = new Tone.Oscillator().toDestination();\n * // repeated event every 8th note\n * Tone.Transport.scheduleRepeat((time) => {\n * \t// use the callback time to schedule events\n * \tosc.start(time).stop(time + 0.1);\n * }, \"8n\");\n * // transport must be started before it starts invoking events\n * Tone.Transport.start();\n * @category Core\n */\nexport class Transport extends ToneWithContext {\n    constructor() {\n        super(optionsFromArguments(Transport.getDefaults(), arguments));\n        this.name = \"Transport\";\n        //-------------------------------------\n        // \tLOOPING\n        //-------------------------------------\n        /**\n         * If the transport loops or not.\n         */\n        this._loop = new TimelineValue(false);\n        /**\n         * The loop start position in ticks\n         */\n        this._loopStart = 0;\n        /**\n         * The loop end position in ticks\n         */\n        this._loopEnd = 0;\n        //-------------------------------------\n        // \tTIMELINE EVENTS\n        //-------------------------------------\n        /**\n         * All the events in an object to keep track by ID\n         */\n        this._scheduledEvents = {};\n        /**\n         * The scheduled events.\n         */\n        this._timeline = new Timeline();\n        /**\n         * Repeated events\n         */\n        this._repeatedEvents = new IntervalTimeline();\n        /**\n         * All of the synced Signals\n         */\n        this._syncedSignals = [];\n        /**\n         * The swing amount\n         */\n        this._swingAmount = 0;\n        const options = optionsFromArguments(Transport.getDefaults(), arguments);\n        // CLOCK/TEMPO\n        this._ppq = options.ppq;\n        this._clock = new Clock({\n            callback: this._processTick.bind(this),\n            context: this.context,\n            frequency: 0,\n            units: \"bpm\",\n        });\n        this._bindClockEvents();\n        this.bpm = this._clock.frequency;\n        this._clock.frequency.multiplier = options.ppq;\n        this.bpm.setValueAtTime(options.bpm, 0);\n        readOnly(this, \"bpm\");\n        this._timeSignature = options.timeSignature;\n        // SWING\n        this._swingTicks = options.ppq / 2; // 8n\n    }\n    static getDefaults() {\n        return Object.assign(ToneWithContext.getDefaults(), {\n            bpm: 120,\n            loopEnd: \"4m\",\n            loopStart: 0,\n            ppq: 192,\n            swing: 0,\n            swingSubdivision: \"8n\",\n            timeSignature: 4,\n        });\n    }\n    //-------------------------------------\n    // \tTICKS\n    //-------------------------------------\n    /**\n     * called on every tick\n     * @param  tickTime clock relative tick time\n     */\n    _processTick(tickTime, ticks) {\n        // handle swing\n        if (this._swingAmount > 0 &&\n            ticks % this._ppq !== 0 && // not on a downbeat\n            ticks % (this._swingTicks * 2) !== 0) {\n            // add some swing\n            const progress = (ticks % (this._swingTicks * 2)) / (this._swingTicks * 2);\n            const amount = Math.sin((progress) * Math.PI) * this._swingAmount;\n            tickTime += new TicksClass(this.context, this._swingTicks * 2 / 3).toSeconds() * amount;\n        }\n        // do the loop test\n        if (this._loop.get(tickTime)) {\n            if (ticks >= this._loopEnd) {\n                this.emit(\"loopEnd\", tickTime);\n                this._clock.setTicksAtTime(this._loopStart, tickTime);\n                ticks = this._loopStart;\n                this.emit(\"loopStart\", tickTime, this._clock.getSecondsAtTime(tickTime));\n                this.emit(\"loop\", tickTime);\n            }\n        }\n        // invoke the timeline events scheduled on this tick\n        this._timeline.forEachAtTime(ticks, event => event.invoke(tickTime));\n    }\n    //-------------------------------------\n    // \tSCHEDULABLE EVENTS\n    //-------------------------------------\n    /**\n     * Schedule an event along the timeline.\n     * @param callback The callback to be invoked at the time.\n     * @param time The time to invoke the callback at.\n     * @return The id of the event which can be used for canceling the event.\n     * @example\n     * // schedule an event on the 16th measure\n     * Tone.Transport.schedule((time) => {\n     * \t// invoked on measure 16\n     * \tconsole.log(\"measure 16!\");\n     * }, \"16:0:0\");\n     */\n    schedule(callback, time) {\n        const event = new TransportEvent(this, {\n            callback,\n            time: new TransportTimeClass(this.context, time).toTicks(),\n        });\n        return this._addEvent(event, this._timeline);\n    }\n    /**\n     * Schedule a repeated event along the timeline. The event will fire\n     * at the `interval` starting at the `startTime` and for the specified\n     * `duration`.\n     * @param  callback   The callback to invoke.\n     * @param  interval   The duration between successive callbacks. Must be a positive number.\n     * @param  startTime  When along the timeline the events should start being invoked.\n     * @param  duration How long the event should repeat.\n     * @return  The ID of the scheduled event. Use this to cancel the event.\n     * @example\n     * const osc = new Tone.Oscillator().toDestination().start();\n     * // a callback invoked every eighth note after the first measure\n     * Tone.Transport.scheduleRepeat((time) => {\n     * \tosc.start(time).stop(time + 0.1);\n     * }, \"8n\", \"1m\");\n     */\n    scheduleRepeat(callback, interval, startTime, duration = Infinity) {\n        const event = new TransportRepeatEvent(this, {\n            callback,\n            duration: new TimeClass(this.context, duration).toTicks(),\n            interval: new TimeClass(this.context, interval).toTicks(),\n            time: new TransportTimeClass(this.context, startTime).toTicks(),\n        });\n        // kick it off if the Transport is started\n        // @ts-ignore\n        return this._addEvent(event, this._repeatedEvents);\n    }\n    /**\n     * Schedule an event that will be removed after it is invoked.\n     * @param callback The callback to invoke once.\n     * @param time The time the callback should be invoked.\n     * @returns The ID of the scheduled event.\n     */\n    scheduleOnce(callback, time) {\n        const event = new TransportEvent(this, {\n            callback,\n            once: true,\n            time: new TransportTimeClass(this.context, time).toTicks(),\n        });\n        return this._addEvent(event, this._timeline);\n    }\n    /**\n     * Clear the passed in event id from the timeline\n     * @param eventId The id of the event.\n     */\n    clear(eventId) {\n        if (this._scheduledEvents.hasOwnProperty(eventId)) {\n            const item = this._scheduledEvents[eventId.toString()];\n            item.timeline.remove(item.event);\n            item.event.dispose();\n            delete this._scheduledEvents[eventId.toString()];\n        }\n        return this;\n    }\n    /**\n     * Add an event to the correct timeline. Keep track of the\n     * timeline it was added to.\n     * @returns the event id which was just added\n     */\n    _addEvent(event, timeline) {\n        this._scheduledEvents[event.id.toString()] = {\n            event,\n            timeline,\n        };\n        timeline.add(event);\n        return event.id;\n    }\n    /**\n     * Remove scheduled events from the timeline after\n     * the given time. Repeated events will be removed\n     * if their startTime is after the given time\n     * @param after Clear all events after this time.\n     */\n    cancel(after = 0) {\n        const computedAfter = this.toTicks(after);\n        this._timeline.forEachFrom(computedAfter, event => this.clear(event.id));\n        this._repeatedEvents.forEachFrom(computedAfter, event => this.clear(event.id));\n        return this;\n    }\n    //-------------------------------------\n    // \tSTART/STOP/PAUSE\n    //-------------------------------------\n    /**\n     * Bind start/stop/pause events from the clock and emit them.\n     */\n    _bindClockEvents() {\n        this._clock.on(\"start\", (time, offset) => {\n            offset = new TicksClass(this.context, offset).toSeconds();\n            this.emit(\"start\", time, offset);\n        });\n        this._clock.on(\"stop\", (time) => {\n            this.emit(\"stop\", time);\n        });\n        this._clock.on(\"pause\", (time) => {\n            this.emit(\"pause\", time);\n        });\n    }\n    /**\n     * Returns the playback state of the source, either \"started\", \"stopped\", or \"paused\"\n     */\n    get state() {\n        return this._clock.getStateAtTime(this.now());\n    }\n    /**\n     * Start the transport and all sources synced to the transport.\n     * @param  time The time when the transport should start.\n     * @param  offset The timeline offset to start the transport.\n     * @example\n     * // start the transport in one second starting at beginning of the 5th measure.\n     * Tone.Transport.start(\"+1\", \"4:0:0\");\n     */\n    start(time, offset) {\n        let offsetTicks;\n        if (isDefined(offset)) {\n            offsetTicks = this.toTicks(offset);\n        }\n        // start the clock\n        this._clock.start(time, offsetTicks);\n        return this;\n    }\n    /**\n     * Stop the transport and all sources synced to the transport.\n     * @param time The time when the transport should stop.\n     * @example\n     * Tone.Transport.stop();\n     */\n    stop(time) {\n        this._clock.stop(time);\n        return this;\n    }\n    /**\n     * Pause the transport and all sources synced to the transport.\n     */\n    pause(time) {\n        this._clock.pause(time);\n        return this;\n    }\n    /**\n     * Toggle the current state of the transport. If it is\n     * started, it will stop it, otherwise it will start the Transport.\n     * @param  time The time of the event\n     */\n    toggle(time) {\n        time = this.toSeconds(time);\n        if (this._clock.getStateAtTime(time) !== \"started\") {\n            this.start(time);\n        }\n        else {\n            this.stop(time);\n        }\n        return this;\n    }\n    //-------------------------------------\n    // \tSETTERS/GETTERS\n    //-------------------------------------\n    /**\n     * The time signature as just the numerator over 4.\n     * For example 4/4 would be just 4 and 6/8 would be 3.\n     * @example\n     * // common time\n     * Tone.Transport.timeSignature = 4;\n     * // 7/8\n     * Tone.Transport.timeSignature = [7, 8];\n     * // this will be reduced to a single number\n     * Tone.Transport.timeSignature; // returns 3.5\n     */\n    get timeSignature() {\n        return this._timeSignature;\n    }\n    set timeSignature(timeSig) {\n        if (isArray(timeSig)) {\n            timeSig = (timeSig[0] / timeSig[1]) * 4;\n        }\n        this._timeSignature = timeSig;\n    }\n    /**\n     * When the Transport.loop = true, this is the starting position of the loop.\n     */\n    get loopStart() {\n        return new TimeClass(this.context, this._loopStart, \"i\").toSeconds();\n    }\n    set loopStart(startPosition) {\n        this._loopStart = this.toTicks(startPosition);\n    }\n    /**\n     * When the Transport.loop = true, this is the ending position of the loop.\n     */\n    get loopEnd() {\n        return new TimeClass(this.context, this._loopEnd, \"i\").toSeconds();\n    }\n    set loopEnd(endPosition) {\n        this._loopEnd = this.toTicks(endPosition);\n    }\n    /**\n     * If the transport loops or not.\n     */\n    get loop() {\n        return this._loop.get(this.now());\n    }\n    set loop(loop) {\n        this._loop.set(loop, this.now());\n    }\n    /**\n     * Set the loop start and stop at the same time.\n     * @example\n     * // loop over the first measure\n     * Tone.Transport.setLoopPoints(0, \"1m\");\n     * Tone.Transport.loop = true;\n     */\n    setLoopPoints(startPosition, endPosition) {\n        this.loopStart = startPosition;\n        this.loopEnd = endPosition;\n        return this;\n    }\n    /**\n     * The swing value. Between 0-1 where 1 equal to the note + half the subdivision.\n     */\n    get swing() {\n        return this._swingAmount;\n    }\n    set swing(amount) {\n        // scale the values to a normal range\n        this._swingAmount = amount;\n    }\n    /**\n     * Set the subdivision which the swing will be applied to.\n     * The default value is an 8th note. Value must be less\n     * than a quarter note.\n     */\n    get swingSubdivision() {\n        return new TicksClass(this.context, this._swingTicks).toNotation();\n    }\n    set swingSubdivision(subdivision) {\n        this._swingTicks = this.toTicks(subdivision);\n    }\n    /**\n     * The Transport's position in Bars:Beats:Sixteenths.\n     * Setting the value will jump to that position right away.\n     */\n    get position() {\n        const now = this.now();\n        const ticks = this._clock.getTicksAtTime(now);\n        return new TicksClass(this.context, ticks).toBarsBeatsSixteenths();\n    }\n    set position(progress) {\n        const ticks = this.toTicks(progress);\n        this.ticks = ticks;\n    }\n    /**\n     * The Transport's position in seconds\n     * Setting the value will jump to that position right away.\n     */\n    get seconds() {\n        return this._clock.seconds;\n    }\n    set seconds(s) {\n        const now = this.now();\n        const ticks = this._clock.frequency.timeToTicks(s, now);\n        this.ticks = ticks;\n    }\n    /**\n     * The Transport's loop position as a normalized value. Always\n     * returns 0 if the transport if loop is not true.\n     */\n    get progress() {\n        if (this.loop) {\n            const now = this.now();\n            const ticks = this._clock.getTicksAtTime(now);\n            return (ticks - this._loopStart) / (this._loopEnd - this._loopStart);\n        }\n        else {\n            return 0;\n        }\n    }\n    /**\n     * The transports current tick position.\n     */\n    get ticks() {\n        return this._clock.ticks;\n    }\n    set ticks(t) {\n        if (this._clock.ticks !== t) {\n            const now = this.now();\n            // stop everything synced to the transport\n            if (this.state === \"started\") {\n                const ticks = this._clock.getTicksAtTime(now);\n                // schedule to start on the next tick, #573\n                const time = this._clock.getTimeOfTick(Math.ceil(ticks));\n                this.emit(\"stop\", time);\n                this._clock.setTicksAtTime(t, time);\n                // restart it with the new time\n                this.emit(\"start\", time, this._clock.getSecondsAtTime(time));\n            }\n            else {\n                this._clock.setTicksAtTime(t, now);\n            }\n        }\n    }\n    /**\n     * Get the clock's ticks at the given time.\n     * @param  time  When to get the tick value\n     * @return The tick value at the given time.\n     */\n    getTicksAtTime(time) {\n        return Math.round(this._clock.getTicksAtTime(time));\n    }\n    /**\n     * Return the elapsed seconds at the given time.\n     * @param  time  When to get the elapsed seconds\n     * @return  The number of elapsed seconds\n     */\n    getSecondsAtTime(time) {\n        return this._clock.getSecondsAtTime(time);\n    }\n    /**\n     * Pulses Per Quarter note. This is the smallest resolution\n     * the Transport timing supports. This should be set once\n     * on initialization and not set again. Changing this value\n     * after other objects have been created can cause problems.\n     */\n    get PPQ() {\n        return this._clock.frequency.multiplier;\n    }\n    set PPQ(ppq) {\n        this._clock.frequency.multiplier = ppq;\n    }\n    //-------------------------------------\n    // \tSYNCING\n    //-------------------------------------\n    /**\n     * Returns the time aligned to the next subdivision\n     * of the Transport. If the Transport is not started,\n     * it will return 0.\n     * Note: this will not work precisely during tempo ramps.\n     * @param  subdivision  The subdivision to quantize to\n     * @return  The context time of the next subdivision.\n     * @example\n     * // the transport must be started, otherwise returns 0\n     * Tone.Transport.start();\n     * Tone.Transport.nextSubdivision(\"4n\");\n     */\n    nextSubdivision(subdivision) {\n        subdivision = this.toTicks(subdivision);\n        if (this.state !== \"started\") {\n            // if the transport's not started, return 0\n            return 0;\n        }\n        else {\n            const now = this.now();\n            // the remainder of the current ticks and the subdivision\n            const transportPos = this.getTicksAtTime(now);\n            const remainingTicks = subdivision - transportPos % subdivision;\n            return this._clock.nextTickTime(remainingTicks, now);\n        }\n    }\n    /**\n     * Attaches the signal to the tempo control signal so that\n     * any changes in the tempo will change the signal in the same\n     * ratio.\n     *\n     * @param signal\n     * @param ratio Optionally pass in the ratio between the two signals.\n     * \t\t\tOtherwise it will be computed based on their current values.\n     */\n    syncSignal(signal, ratio) {\n        if (!ratio) {\n            // get the sync ratio\n            const now = this.now();\n            if (signal.getValueAtTime(now) !== 0) {\n                const bpm = this.bpm.getValueAtTime(now);\n                const computedFreq = 1 / (60 / bpm / this.PPQ);\n                ratio = signal.getValueAtTime(now) / computedFreq;\n            }\n            else {\n                ratio = 0;\n            }\n        }\n        const ratioSignal = new Gain(ratio);\n        // @ts-ignore\n        this.bpm.connect(ratioSignal);\n        // @ts-ignore\n        ratioSignal.connect(signal._param);\n        this._syncedSignals.push({\n            initial: signal.value,\n            ratio: ratioSignal,\n            signal,\n        });\n        signal.value = 0;\n        return this;\n    }\n    /**\n     * Unsyncs a previously synced signal from the transport's control.\n     * See Transport.syncSignal.\n     */\n    unsyncSignal(signal) {\n        for (let i = this._syncedSignals.length - 1; i >= 0; i--) {\n            const syncedSignal = this._syncedSignals[i];\n            if (syncedSignal.signal === signal) {\n                syncedSignal.ratio.dispose();\n                syncedSignal.signal.value = syncedSignal.initial;\n                this._syncedSignals.splice(i, 1);\n            }\n        }\n        return this;\n    }\n    /**\n     * Clean up.\n     */\n    dispose() {\n        super.dispose();\n        this._clock.dispose();\n        writable(this, \"bpm\");\n        this._timeline.dispose();\n        this._repeatedEvents.dispose();\n        return this;\n    }\n}\nEmitter.mixin(Transport);\n//-------------------------------------\n// \tINITIALIZATION\n//-------------------------------------\nonContextInit(context => {\n    context.transport = new Transport({ context });\n});\nonContextClose(context => {\n    context.transport.dispose();\n});\n//# sourceMappingURL=Transport.js.map","import { Volume } from \"../component/channel/Volume\";\nimport \"../core/context/Destination\";\nimport \"../core/clock/Transport\";\nimport { ToneAudioNode } from \"../core/context/ToneAudioNode\";\nimport { defaultArg } from \"../core/util/Defaults\";\nimport { noOp, readOnly } from \"../core/util/Interface\";\nimport { StateTimeline } from \"../core/util/StateTimeline\";\nimport { isDefined, isUndef } from \"../core/util/TypeCheck\";\nimport { assert, assertContextRunning } from \"../core/util/Debug\";\nimport { GT } from \"../core/util/Math\";\n/**\n * Base class for sources.\n * start/stop of this.context.transport.\n *\n * ```\n * // Multiple state change events can be chained together,\n * // but must be set in the correct order and with ascending times\n * // OK\n * state.start().stop(\"+0.2\");\n * // OK\n * state.start().stop(\"+0.2\").start(\"+0.4\").stop(\"+0.7\")\n * // BAD\n * state.stop(\"+0.2\").start();\n * // BAD\n * state.start(\"+0.3\").stop(\"+0.2\");\n * ```\n */\nexport class Source extends ToneAudioNode {\n    constructor(options) {\n        super(options);\n        /**\n         * Sources have no inputs\n         */\n        this.input = undefined;\n        /**\n         * Keep track of the scheduled state.\n         */\n        this._state = new StateTimeline(\"stopped\");\n        /**\n         * The synced `start` callback function from the transport\n         */\n        this._synced = false;\n        /**\n         * Keep track of all of the scheduled event ids\n         */\n        this._scheduled = [];\n        /**\n         * Placeholder functions for syncing/unsyncing to transport\n         */\n        this._syncedStart = noOp;\n        this._syncedStop = noOp;\n        this._state.memory = 100;\n        this._state.increasing = true;\n        this._volume = this.output = new Volume({\n            context: this.context,\n            mute: options.mute,\n            volume: options.volume,\n        });\n        this.volume = this._volume.volume;\n        readOnly(this, \"volume\");\n        this.onstop = options.onstop;\n    }\n    static getDefaults() {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            mute: false,\n            onstop: noOp,\n            volume: 0,\n        });\n    }\n    /**\n     * Returns the playback state of the source, either \"started\" or \"stopped\".\n     * @example\n     * const player = new Tone.Player(\"https://tonejs.github.io/audio/berklee/ahntone_c3.mp3\", () => {\n     * \tplayer.start();\n     * \tconsole.log(player.state);\n     * }).toDestination();\n     */\n    get state() {\n        if (this._synced) {\n            if (this.context.transport.state === \"started\") {\n                return this._state.getValueAtTime(this.context.transport.seconds);\n            }\n            else {\n                return \"stopped\";\n            }\n        }\n        else {\n            return this._state.getValueAtTime(this.now());\n        }\n    }\n    /**\n     * Mute the output.\n     * @example\n     * const osc = new Tone.Oscillator().toDestination().start();\n     * // mute the output\n     * osc.mute = true;\n     */\n    get mute() {\n        return this._volume.mute;\n    }\n    set mute(mute) {\n        this._volume.mute = mute;\n    }\n    /**\n     * Ensure that the scheduled time is not before the current time.\n     * Should only be used when scheduled unsynced.\n     */\n    _clampToCurrentTime(time) {\n        if (this._synced) {\n            return time;\n        }\n        else {\n            return Math.max(time, this.context.currentTime);\n        }\n    }\n    /**\n     * Start the source at the specified time. If no time is given,\n     * start the source now.\n     * @param  time When the source should be started.\n     * @example\n     * const source = new Tone.Oscillator().toDestination();\n     * source.start(\"+0.5\"); // starts the source 0.5 seconds from now\n     */\n    start(time, offset, duration) {\n        let computedTime = isUndef(time) && this._synced ? this.context.transport.seconds : this.toSeconds(time);\n        computedTime = this._clampToCurrentTime(computedTime);\n        // if it's started, stop it and restart it\n        if (!this._synced && this._state.getValueAtTime(computedTime) === \"started\") {\n            // time should be strictly greater than the previous start time\n            assert(GT(computedTime, this._state.get(computedTime).time), \"Start time must be strictly greater than previous start time\");\n            this._state.cancel(computedTime);\n            this._state.setStateAtTime(\"started\", computedTime);\n            this.log(\"restart\", computedTime);\n            this.restart(computedTime, offset, duration);\n        }\n        else {\n            this.log(\"start\", computedTime);\n            this._state.setStateAtTime(\"started\", computedTime);\n            if (this._synced) {\n                // add the offset time to the event\n                const event = this._state.get(computedTime);\n                if (event) {\n                    event.offset = this.toSeconds(defaultArg(offset, 0));\n                    event.duration = duration ? this.toSeconds(duration) : undefined;\n                }\n                const sched = this.context.transport.schedule(t => {\n                    this._start(t, offset, duration);\n                }, computedTime);\n                this._scheduled.push(sched);\n                // if the transport is already started\n                // and the time is greater than where the transport is\n                if (this.context.transport.state === \"started\" &&\n                    this.context.transport.getSecondsAtTime(this.immediate()) > computedTime) {\n                    this._syncedStart(this.now(), this.context.transport.seconds);\n                }\n            }\n            else {\n                assertContextRunning(this.context);\n                this._start(computedTime, offset, duration);\n            }\n        }\n        return this;\n    }\n    /**\n     * Stop the source at the specified time. If no time is given,\n     * stop the source now.\n     * @param  time When the source should be stopped.\n     * @example\n     * const source = new Tone.Oscillator().toDestination();\n     * source.start();\n     * source.stop(\"+0.5\"); // stops the source 0.5 seconds from now\n     */\n    stop(time) {\n        let computedTime = isUndef(time) && this._synced ? this.context.transport.seconds : this.toSeconds(time);\n        computedTime = this._clampToCurrentTime(computedTime);\n        if (this._state.getValueAtTime(computedTime) === \"started\" || isDefined(this._state.getNextState(\"started\", computedTime))) {\n            this.log(\"stop\", computedTime);\n            if (!this._synced) {\n                this._stop(computedTime);\n            }\n            else {\n                const sched = this.context.transport.schedule(this._stop.bind(this), computedTime);\n                this._scheduled.push(sched);\n            }\n            this._state.cancel(computedTime);\n            this._state.setStateAtTime(\"stopped\", computedTime);\n        }\n        return this;\n    }\n    /**\n     * Restart the source.\n     */\n    restart(time, offset, duration) {\n        time = this.toSeconds(time);\n        if (this._state.getValueAtTime(time) === \"started\") {\n            this._state.cancel(time);\n            this._restart(time, offset, duration);\n        }\n        return this;\n    }\n    /**\n     * Sync the source to the Transport so that all subsequent\n     * calls to `start` and `stop` are synced to the TransportTime\n     * instead of the AudioContext time.\n     *\n     * @example\n     * const osc = new Tone.Oscillator().toDestination();\n     * // sync the source so that it plays between 0 and 0.3 on the Transport's timeline\n     * osc.sync().start(0).stop(0.3);\n     * // start the transport.\n     * Tone.Transport.start();\n     * // set it to loop once a second\n     * Tone.Transport.loop = true;\n     * Tone.Transport.loopEnd = 1;\n     */\n    sync() {\n        if (!this._synced) {\n            this._synced = true;\n            this._syncedStart = (time, offset) => {\n                if (offset > 0) {\n                    // get the playback state at that time\n                    const stateEvent = this._state.get(offset);\n                    // listen for start events which may occur in the middle of the sync'ed time\n                    if (stateEvent && stateEvent.state === \"started\" && stateEvent.time !== offset) {\n                        // get the offset\n                        const startOffset = offset - this.toSeconds(stateEvent.time);\n                        let duration;\n                        if (stateEvent.duration) {\n                            duration = this.toSeconds(stateEvent.duration) - startOffset;\n                        }\n                        this._start(time, this.toSeconds(stateEvent.offset) + startOffset, duration);\n                    }\n                }\n            };\n            this._syncedStop = time => {\n                const seconds = this.context.transport.getSecondsAtTime(Math.max(time - this.sampleTime, 0));\n                if (this._state.getValueAtTime(seconds) === \"started\") {\n                    this._stop(time);\n                }\n            };\n            this.context.transport.on(\"start\", this._syncedStart);\n            this.context.transport.on(\"loopStart\", this._syncedStart);\n            this.context.transport.on(\"stop\", this._syncedStop);\n            this.context.transport.on(\"pause\", this._syncedStop);\n            this.context.transport.on(\"loopEnd\", this._syncedStop);\n        }\n        return this;\n    }\n    /**\n     * Unsync the source to the Transport. See Source.sync\n     */\n    unsync() {\n        if (this._synced) {\n            this.context.transport.off(\"stop\", this._syncedStop);\n            this.context.transport.off(\"pause\", this._syncedStop);\n            this.context.transport.off(\"loopEnd\", this._syncedStop);\n            this.context.transport.off(\"start\", this._syncedStart);\n            this.context.transport.off(\"loopStart\", this._syncedStart);\n        }\n        this._synced = false;\n        // clear all of the scheduled ids\n        this._scheduled.forEach(id => this.context.transport.clear(id));\n        this._scheduled = [];\n        this._state.cancel(0);\n        // stop it also\n        this._stop(0);\n        return this;\n    }\n    /**\n     * Clean up.\n     */\n    dispose() {\n        super.dispose();\n        this.onstop = noOp;\n        this.unsync();\n        this._volume.dispose();\n        this._state.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=Source.js.map","import { connect } from \"../../core/context/ToneAudioNode\";\nimport { Param } from \"../../core/context/Param\";\nimport { ToneAudioBuffer } from \"../../core/context/ToneAudioBuffer\";\nimport { defaultArg, optionsFromArguments } from \"../../core/util/Defaults\";\nimport { noOp } from \"../../core/util/Interface\";\nimport { isDefined } from \"../../core/util/TypeCheck\";\nimport { assert } from \"../../core/util/Debug\";\nimport { OneShotSource } from \"../OneShotSource\";\nimport { EQ, GTE, LT } from \"../../core/util/Math\";\n/**\n * Wrapper around the native BufferSourceNode.\n * @category Source\n */\nexport class ToneBufferSource extends OneShotSource {\n    constructor() {\n        super(optionsFromArguments(ToneBufferSource.getDefaults(), arguments, [\"url\", \"onload\"]));\n        this.name = \"ToneBufferSource\";\n        /**\n         * The oscillator\n         */\n        this._source = this.context.createBufferSource();\n        this._internalChannels = [this._source];\n        /**\n         * indicators if the source has started/stopped\n         */\n        this._sourceStarted = false;\n        this._sourceStopped = false;\n        const options = optionsFromArguments(ToneBufferSource.getDefaults(), arguments, [\"url\", \"onload\"]);\n        connect(this._source, this._gainNode);\n        this._source.onended = () => this._stopSource();\n        /**\n         * The playbackRate of the buffer\n         */\n        this.playbackRate = new Param({\n            context: this.context,\n            param: this._source.playbackRate,\n            units: \"positive\",\n            value: options.playbackRate,\n        });\n        // set some values initially\n        this.loop = options.loop;\n        this.loopStart = options.loopStart;\n        this.loopEnd = options.loopEnd;\n        this._buffer = new ToneAudioBuffer(options.url, options.onload, options.onerror);\n        this._internalChannels.push(this._source);\n    }\n    static getDefaults() {\n        return Object.assign(OneShotSource.getDefaults(), {\n            url: new ToneAudioBuffer(),\n            loop: false,\n            loopEnd: 0,\n            loopStart: 0,\n            onload: noOp,\n            onerror: noOp,\n            playbackRate: 1,\n        });\n    }\n    /**\n     * The fadeIn time of the amplitude envelope.\n     */\n    get fadeIn() {\n        return this._fadeIn;\n    }\n    set fadeIn(t) {\n        this._fadeIn = t;\n    }\n    /**\n     * The fadeOut time of the amplitude envelope.\n     */\n    get fadeOut() {\n        return this._fadeOut;\n    }\n    set fadeOut(t) {\n        this._fadeOut = t;\n    }\n    /**\n     * The curve applied to the fades, either \"linear\" or \"exponential\"\n     */\n    get curve() {\n        return this._curve;\n    }\n    set curve(t) {\n        this._curve = t;\n    }\n    /**\n     * Start the buffer\n     * @param  time When the player should start.\n     * @param  offset The offset from the beginning of the sample to start at.\n     * @param  duration How long the sample should play. If no duration is given, it will default to the full length of the sample (minus any offset)\n     * @param  gain  The gain to play the buffer back at.\n     */\n    start(time, offset, duration, gain = 1) {\n        assert(this.buffer.loaded, \"buffer is either not set or not loaded\");\n        const computedTime = this.toSeconds(time);\n        // apply the gain envelope\n        this._startGain(computedTime, gain);\n        // if it's a loop the default offset is the loopstart point\n        if (this.loop) {\n            offset = defaultArg(offset, this.loopStart);\n        }\n        else {\n            // otherwise the default offset is 0\n            offset = defaultArg(offset, 0);\n        }\n        // make sure the offset is not less than 0\n        let computedOffset = Math.max(this.toSeconds(offset), 0);\n        // start the buffer source\n        if (this.loop) {\n            // modify the offset if it's greater than the loop time\n            const loopEnd = this.toSeconds(this.loopEnd) || this.buffer.duration;\n            const loopStart = this.toSeconds(this.loopStart);\n            const loopDuration = loopEnd - loopStart;\n            // move the offset back\n            if (GTE(computedOffset, loopEnd)) {\n                computedOffset = ((computedOffset - loopStart) % loopDuration) + loopStart;\n            }\n            // when the offset is very close to the duration, set it to 0\n            if (EQ(computedOffset, this.buffer.duration)) {\n                computedOffset = 0;\n            }\n        }\n        // this.buffer.loaded would have return false if the AudioBuffer was undefined\n        this._source.buffer = this.buffer.get();\n        this._source.loopEnd = this.toSeconds(this.loopEnd) || this.buffer.duration;\n        if (LT(computedOffset, this.buffer.duration)) {\n            this._sourceStarted = true;\n            this._source.start(computedTime, computedOffset);\n        }\n        // if a duration is given, schedule a stop\n        if (isDefined(duration)) {\n            let computedDur = this.toSeconds(duration);\n            // make sure it's never negative\n            computedDur = Math.max(computedDur, 0);\n            this.stop(computedTime + computedDur);\n        }\n        return this;\n    }\n    _stopSource(time) {\n        if (!this._sourceStopped && this._sourceStarted) {\n            this._sourceStopped = true;\n            this._source.stop(this.toSeconds(time));\n            this._onended();\n        }\n    }\n    /**\n     * If loop is true, the loop will start at this position.\n     */\n    get loopStart() {\n        return this._source.loopStart;\n    }\n    set loopStart(loopStart) {\n        this._source.loopStart = this.toSeconds(loopStart);\n    }\n    /**\n     * If loop is true, the loop will end at this position.\n     */\n    get loopEnd() {\n        return this._source.loopEnd;\n    }\n    set loopEnd(loopEnd) {\n        this._source.loopEnd = this.toSeconds(loopEnd);\n    }\n    /**\n     * The audio buffer belonging to the player.\n     */\n    get buffer() {\n        return this._buffer;\n    }\n    set buffer(buffer) {\n        this._buffer.set(buffer);\n    }\n    /**\n     * If the buffer should loop once it's over.\n     */\n    get loop() {\n        return this._source.loop;\n    }\n    set loop(loop) {\n        this._source.loop = loop;\n        if (this._sourceStarted) {\n            this.cancelStop();\n        }\n    }\n    /**\n     * Clean up.\n     */\n    dispose() {\n        super.dispose();\n        this._source.onended = null;\n        this._source.disconnect();\n        this._buffer.dispose();\n        this.playbackRate.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=ToneBufferSource.js.map","import { __awaiter } from \"tslib\";\nimport { OfflineContext } from \"../../core/context/OfflineContext\";\n/**\n * Render a segment of the oscillator to an offline context and return the results as an array\n */\nexport function generateWaveform(instance, length) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const duration = length / instance.context.sampleRate;\n        const context = new OfflineContext(1, duration, instance.context.sampleRate);\n        const clone = new instance.constructor(Object.assign(instance.get(), {\n            // should do 2 iterations\n            frequency: 2 / duration,\n            // zero out the detune\n            detune: 0,\n            context\n        })).toDestination();\n        clone.start(0);\n        const buffer = yield context.render();\n        return buffer.getChannelData(0);\n    });\n}\n//# sourceMappingURL=OscillatorInterface.js.map","import { connect } from \"../../core/context/ToneAudioNode\";\nimport { Param } from \"../../core/context/Param\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { OneShotSource } from \"../OneShotSource\";\nimport { readOnly } from \"../../core/util/Interface\";\n/**\n * Wrapper around the native fire-and-forget OscillatorNode.\n * Adds the ability to reschedule the stop method.\n * ***[[Oscillator]] is better for most use-cases***\n * @category Source\n */\nexport class ToneOscillatorNode extends OneShotSource {\n    constructor() {\n        super(optionsFromArguments(ToneOscillatorNode.getDefaults(), arguments, [\"frequency\", \"type\"]));\n        this.name = \"ToneOscillatorNode\";\n        /**\n         * The oscillator\n         */\n        this._oscillator = this.context.createOscillator();\n        this._internalChannels = [this._oscillator];\n        const options = optionsFromArguments(ToneOscillatorNode.getDefaults(), arguments, [\"frequency\", \"type\"]);\n        connect(this._oscillator, this._gainNode);\n        this.type = options.type;\n        this.frequency = new Param({\n            context: this.context,\n            param: this._oscillator.frequency,\n            units: \"frequency\",\n            value: options.frequency,\n        });\n        this.detune = new Param({\n            context: this.context,\n            param: this._oscillator.detune,\n            units: \"cents\",\n            value: options.detune,\n        });\n        readOnly(this, [\"frequency\", \"detune\"]);\n    }\n    static getDefaults() {\n        return Object.assign(OneShotSource.getDefaults(), {\n            detune: 0,\n            frequency: 440,\n            type: \"sine\",\n        });\n    }\n    /**\n     * Start the oscillator node at the given time\n     * @param  time When to start the oscillator\n     */\n    start(time) {\n        const computedTime = this.toSeconds(time);\n        this.log(\"start\", computedTime);\n        this._startGain(computedTime);\n        this._oscillator.start(computedTime);\n        return this;\n    }\n    _stopSource(time) {\n        this._oscillator.stop(time);\n    }\n    /**\n     * Sets an arbitrary custom periodic waveform given a PeriodicWave.\n     * @param  periodicWave PeriodicWave should be created with context.createPeriodicWave\n     */\n    setPeriodicWave(periodicWave) {\n        this._oscillator.setPeriodicWave(periodicWave);\n        return this;\n    }\n    /**\n     * The oscillator type. Either 'sine', 'sawtooth', 'square', or 'triangle'\n     */\n    get type() {\n        return this._oscillator.type;\n    }\n    set type(type) {\n        this._oscillator.type = type;\n    }\n    /**\n     * Clean up.\n     */\n    dispose() {\n        super.dispose();\n        if (this.state === \"started\") {\n            this.stop();\n        }\n        this._oscillator.disconnect();\n        this.frequency.dispose();\n        this.detune.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=ToneOscillatorNode.js.map","import { __awaiter } from \"tslib\";\nimport { deepEquals, optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\nimport { isDefined } from \"../../core/util/TypeCheck\";\nimport { Signal } from \"../../signal/Signal\";\nimport { Source } from \"../Source\";\nimport { generateWaveform } from \"./OscillatorInterface\";\nimport { ToneOscillatorNode } from \"./ToneOscillatorNode\";\nimport { assertRange } from \"../../core/util/Debug\";\nimport { clamp } from \"../../core/util/Math\";\n/**\n * Oscillator supports a number of features including\n * phase rotation, multiple oscillator types (see Oscillator.type),\n * and Transport syncing (see Oscillator.syncFrequency).\n *\n * @example\n * // make and start a 440hz sine tone\n * const osc = new Tone.Oscillator(440, \"sine\").toDestination().start();\n * @category Source\n */\nexport class Oscillator extends Source {\n    constructor() {\n        super(optionsFromArguments(Oscillator.getDefaults(), arguments, [\"frequency\", \"type\"]));\n        this.name = \"Oscillator\";\n        /**\n         * the main oscillator\n         */\n        this._oscillator = null;\n        const options = optionsFromArguments(Oscillator.getDefaults(), arguments, [\"frequency\", \"type\"]);\n        this.frequency = new Signal({\n            context: this.context,\n            units: \"frequency\",\n            value: options.frequency,\n        });\n        readOnly(this, \"frequency\");\n        this.detune = new Signal({\n            context: this.context,\n            units: \"cents\",\n            value: options.detune,\n        });\n        readOnly(this, \"detune\");\n        this._partials = options.partials;\n        this._partialCount = options.partialCount;\n        this._type = options.type;\n        if (options.partialCount && options.type !== \"custom\") {\n            this._type = this.baseType + options.partialCount.toString();\n        }\n        this.phase = options.phase;\n    }\n    static getDefaults() {\n        return Object.assign(Source.getDefaults(), {\n            detune: 0,\n            frequency: 440,\n            partialCount: 0,\n            partials: [],\n            phase: 0,\n            type: \"sine\",\n        });\n    }\n    /**\n     * start the oscillator\n     */\n    _start(time) {\n        const computedTime = this.toSeconds(time);\n        // new oscillator with previous values\n        const oscillator = new ToneOscillatorNode({\n            context: this.context,\n            onended: () => this.onstop(this),\n        });\n        this._oscillator = oscillator;\n        if (this._wave) {\n            this._oscillator.setPeriodicWave(this._wave);\n        }\n        else {\n            this._oscillator.type = this._type;\n        }\n        // connect the control signal to the oscillator frequency & detune\n        this._oscillator.connect(this.output);\n        this.frequency.connect(this._oscillator.frequency);\n        this.detune.connect(this._oscillator.detune);\n        // start the oscillator\n        this._oscillator.start(computedTime);\n    }\n    /**\n     * stop the oscillator\n     */\n    _stop(time) {\n        const computedTime = this.toSeconds(time);\n        if (this._oscillator) {\n            this._oscillator.stop(computedTime);\n        }\n    }\n    /**\n     * Restart the oscillator. Does not stop the oscillator, but instead\n     * just cancels any scheduled 'stop' from being invoked.\n     */\n    _restart(time) {\n        const computedTime = this.toSeconds(time);\n        this.log(\"restart\", computedTime);\n        if (this._oscillator) {\n            this._oscillator.cancelStop();\n        }\n        this._state.cancel(computedTime);\n        return this;\n    }\n    /**\n     * Sync the signal to the Transport's bpm. Any changes to the transports bpm,\n     * will also affect the oscillators frequency.\n     * @example\n     * const osc = new Tone.Oscillator().toDestination().start();\n     * osc.frequency.value = 440;\n     * // the ratio between the bpm and the frequency will be maintained\n     * osc.syncFrequency();\n     * // double the tempo\n     * Tone.Transport.bpm.value *= 2;\n     * // the frequency of the oscillator is doubled to 880\n     */\n    syncFrequency() {\n        this.context.transport.syncSignal(this.frequency);\n        return this;\n    }\n    /**\n     * Unsync the oscillator's frequency from the Transport.\n     * See Oscillator.syncFrequency\n     */\n    unsyncFrequency() {\n        this.context.transport.unsyncSignal(this.frequency);\n        return this;\n    }\n    /**\n     * Get a cached periodic wave. Avoids having to recompute\n     * the oscillator values when they have already been computed\n     * with the same values.\n     */\n    _getCachedPeriodicWave() {\n        if (this._type === \"custom\") {\n            const oscProps = Oscillator._periodicWaveCache.find(description => {\n                return description.phase === this._phase &&\n                    deepEquals(description.partials, this._partials);\n            });\n            return oscProps;\n        }\n        else {\n            const oscProps = Oscillator._periodicWaveCache.find(description => {\n                return description.type === this._type &&\n                    description.phase === this._phase;\n            });\n            this._partialCount = oscProps ? oscProps.partialCount : this._partialCount;\n            return oscProps;\n        }\n    }\n    get type() {\n        return this._type;\n    }\n    set type(type) {\n        this._type = type;\n        const isBasicType = [\"sine\", \"square\", \"sawtooth\", \"triangle\"].indexOf(type) !== -1;\n        if (this._phase === 0 && isBasicType) {\n            this._wave = undefined;\n            this._partialCount = 0;\n            // just go with the basic approach\n            if (this._oscillator !== null) {\n                // already tested that it's a basic type\n                this._oscillator.type = type;\n            }\n        }\n        else {\n            // first check if the value is cached\n            const cache = this._getCachedPeriodicWave();\n            if (isDefined(cache)) {\n                const { partials, wave } = cache;\n                this._wave = wave;\n                this._partials = partials;\n                if (this._oscillator !== null) {\n                    this._oscillator.setPeriodicWave(this._wave);\n                }\n            }\n            else {\n                const [real, imag] = this._getRealImaginary(type, this._phase);\n                const periodicWave = this.context.createPeriodicWave(real, imag);\n                this._wave = periodicWave;\n                if (this._oscillator !== null) {\n                    this._oscillator.setPeriodicWave(this._wave);\n                }\n                // set the cache\n                Oscillator._periodicWaveCache.push({\n                    imag,\n                    partialCount: this._partialCount,\n                    partials: this._partials,\n                    phase: this._phase,\n                    real,\n                    type: this._type,\n                    wave: this._wave,\n                });\n                if (Oscillator._periodicWaveCache.length > 100) {\n                    Oscillator._periodicWaveCache.shift();\n                }\n            }\n        }\n    }\n    get baseType() {\n        return this._type.replace(this.partialCount.toString(), \"\");\n    }\n    set baseType(baseType) {\n        if (this.partialCount && this._type !== \"custom\" && baseType !== \"custom\") {\n            this.type = baseType + this.partialCount;\n        }\n        else {\n            this.type = baseType;\n        }\n    }\n    get partialCount() {\n        return this._partialCount;\n    }\n    set partialCount(p) {\n        assertRange(p, 0);\n        let type = this._type;\n        const partial = /^(sine|triangle|square|sawtooth)(\\d+)$/.exec(this._type);\n        if (partial) {\n            type = partial[1];\n        }\n        if (this._type !== \"custom\") {\n            if (p === 0) {\n                this.type = type;\n            }\n            else {\n                this.type = type + p.toString();\n            }\n        }\n        else {\n            // extend or shorten the partials array\n            const fullPartials = new Float32Array(p);\n            // copy over the partials array\n            this._partials.forEach((v, i) => fullPartials[i] = v);\n            this._partials = Array.from(fullPartials);\n            this.type = this._type;\n        }\n    }\n    /**\n     * Returns the real and imaginary components based\n     * on the oscillator type.\n     * @returns [real: Float32Array, imaginary: Float32Array]\n     */\n    _getRealImaginary(type, phase) {\n        const fftSize = 4096;\n        let periodicWaveSize = fftSize / 2;\n        const real = new Float32Array(periodicWaveSize);\n        const imag = new Float32Array(periodicWaveSize);\n        let partialCount = 1;\n        if (type === \"custom\") {\n            partialCount = this._partials.length + 1;\n            this._partialCount = this._partials.length;\n            periodicWaveSize = partialCount;\n            // if the partial count is 0, don't bother doing any computation\n            if (this._partials.length === 0) {\n                return [real, imag];\n            }\n        }\n        else {\n            const partial = /^(sine|triangle|square|sawtooth)(\\d+)$/.exec(type);\n            if (partial) {\n                partialCount = parseInt(partial[2], 10) + 1;\n                this._partialCount = parseInt(partial[2], 10);\n                type = partial[1];\n                partialCount = Math.max(partialCount, 2);\n                periodicWaveSize = partialCount;\n            }\n            else {\n                this._partialCount = 0;\n            }\n            this._partials = [];\n        }\n        for (let n = 1; n < periodicWaveSize; ++n) {\n            const piFactor = 2 / (n * Math.PI);\n            let b;\n            switch (type) {\n                case \"sine\":\n                    b = (n <= partialCount) ? 1 : 0;\n                    this._partials[n - 1] = b;\n                    break;\n                case \"square\":\n                    b = (n & 1) ? 2 * piFactor : 0;\n                    this._partials[n - 1] = b;\n                    break;\n                case \"sawtooth\":\n                    b = piFactor * ((n & 1) ? 1 : -1);\n                    this._partials[n - 1] = b;\n                    break;\n                case \"triangle\":\n                    if (n & 1) {\n                        b = 2 * (piFactor * piFactor) * ((((n - 1) >> 1) & 1) ? -1 : 1);\n                    }\n                    else {\n                        b = 0;\n                    }\n                    this._partials[n - 1] = b;\n                    break;\n                case \"custom\":\n                    b = this._partials[n - 1];\n                    break;\n                default:\n                    throw new TypeError(\"Oscillator: invalid type: \" + type);\n            }\n            if (b !== 0) {\n                real[n] = -b * Math.sin(phase * n);\n                imag[n] = b * Math.cos(phase * n);\n            }\n            else {\n                real[n] = 0;\n                imag[n] = 0;\n            }\n        }\n        return [real, imag];\n    }\n    /**\n     * Compute the inverse FFT for a given phase.\n     */\n    _inverseFFT(real, imag, phase) {\n        let sum = 0;\n        const len = real.length;\n        for (let i = 0; i < len; i++) {\n            sum += real[i] * Math.cos(i * phase) + imag[i] * Math.sin(i * phase);\n        }\n        return sum;\n    }\n    /**\n     * Returns the initial value of the oscillator when stopped.\n     * E.g. a \"sine\" oscillator with phase = 90 would return an initial value of -1.\n     */\n    getInitialValue() {\n        const [real, imag] = this._getRealImaginary(this._type, 0);\n        let maxValue = 0;\n        const twoPi = Math.PI * 2;\n        const testPositions = 32;\n        // check for peaks in 16 places\n        for (let i = 0; i < testPositions; i++) {\n            maxValue = Math.max(this._inverseFFT(real, imag, (i / testPositions) * twoPi), maxValue);\n        }\n        return clamp(-this._inverseFFT(real, imag, this._phase) / maxValue, -1, 1);\n    }\n    get partials() {\n        return this._partials.slice(0, this.partialCount);\n    }\n    set partials(partials) {\n        this._partials = partials;\n        this._partialCount = this._partials.length;\n        if (partials.length) {\n            this.type = \"custom\";\n        }\n    }\n    get phase() {\n        return this._phase * (180 / Math.PI);\n    }\n    set phase(phase) {\n        this._phase = phase * Math.PI / 180;\n        // reset the type\n        this.type = this._type;\n    }\n    asArray(length = 1024) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return generateWaveform(this, length);\n        });\n    }\n    dispose() {\n        super.dispose();\n        if (this._oscillator !== null) {\n            this._oscillator.dispose();\n        }\n        this._wave = undefined;\n        this.frequency.dispose();\n        this.detune.dispose();\n        return this;\n    }\n}\n/**\n * Cache the periodic waves to avoid having to redo computations\n */\nOscillator._periodicWaveCache = [];\n//# sourceMappingURL=Oscillator.js.map","import { optionsFromArguments } from \"../core/util/Defaults\";\nimport { ToneAudioNode } from \"../core/context/ToneAudioNode\";\nimport { connectSignal } from \"./Signal\";\n/**\n * A signal operator has an input and output and modifies the signal.\n */\nexport class SignalOperator extends ToneAudioNode {\n    constructor() {\n        super(Object.assign(optionsFromArguments(SignalOperator.getDefaults(), arguments, [\"context\"])));\n    }\n    connect(destination, outputNum = 0, inputNum = 0) {\n        connectSignal(this, destination, outputNum, inputNum);\n        return this;\n    }\n}\n//# sourceMappingURL=SignalOperator.js.map","import { optionsFromArguments } from \"../core/util/Defaults\";\nimport { isArray, isFunction } from \"../core/util/TypeCheck\";\nimport { assert } from \"../core/util/Debug\";\nimport { Signal } from \"./Signal\";\nimport { SignalOperator } from \"./SignalOperator\";\n/**\n * Wraps the native Web Audio API\n * [WaveShaperNode](http://webaudio.github.io/web-audio-api/#the-waveshapernode-interface).\n *\n * @example\n * const osc = new Tone.Oscillator().toDestination().start();\n * // multiply the output of the signal by 2 using the waveshaper's function\n * const timesTwo = new Tone.WaveShaper((val) => val * 2, 2048).connect(osc.frequency);\n * const signal = new Tone.Signal(440).connect(timesTwo);\n * @category Signal\n */\nexport class WaveShaper extends SignalOperator {\n    constructor() {\n        super(Object.assign(optionsFromArguments(WaveShaper.getDefaults(), arguments, [\"mapping\", \"length\"])));\n        this.name = \"WaveShaper\";\n        /**\n         * the waveshaper node\n         */\n        this._shaper = this.context.createWaveShaper();\n        /**\n         * The input to the waveshaper node.\n         */\n        this.input = this._shaper;\n        /**\n         * The output from the waveshaper node\n         */\n        this.output = this._shaper;\n        const options = optionsFromArguments(WaveShaper.getDefaults(), arguments, [\"mapping\", \"length\"]);\n        if (isArray(options.mapping) || options.mapping instanceof Float32Array) {\n            this.curve = Float32Array.from(options.mapping);\n        }\n        else if (isFunction(options.mapping)) {\n            this.setMap(options.mapping, options.length);\n        }\n    }\n    static getDefaults() {\n        return Object.assign(Signal.getDefaults(), {\n            length: 1024,\n        });\n    }\n    /**\n     * Uses a mapping function to set the value of the curve.\n     * @param mapping The function used to define the values.\n     *                The mapping function take two arguments:\n     *                the first is the value at the current position\n     *                which goes from -1 to 1 over the number of elements\n     *                in the curve array. The second argument is the array position.\n     * @example\n     * const shaper = new Tone.WaveShaper();\n     * // map the input signal from [-1, 1] to [0, 10]\n     * shaper.setMap((val, index) => (val + 1) * 5);\n     */\n    setMap(mapping, length = 1024) {\n        const array = new Float32Array(length);\n        for (let i = 0, len = length; i < len; i++) {\n            const normalized = (i / (len - 1)) * 2 - 1;\n            array[i] = mapping(normalized, i);\n        }\n        this.curve = array;\n        return this;\n    }\n    /**\n     * The array to set as the waveshaper curve. For linear curves\n     * array length does not make much difference, but for complex curves\n     * longer arrays will provide smoother interpolation.\n     */\n    get curve() {\n        return this._shaper.curve;\n    }\n    set curve(mapping) {\n        this._shaper.curve = mapping;\n    }\n    /**\n     * Specifies what type of oversampling (if any) should be used when\n     * applying the shaping curve. Can either be \"none\", \"2x\" or \"4x\".\n     */\n    get oversample() {\n        return this._shaper.oversample;\n    }\n    set oversample(oversampling) {\n        const isOverSampleType = [\"none\", \"2x\", \"4x\"].some(str => str.includes(oversampling));\n        assert(isOverSampleType, \"oversampling must be either 'none', '2x', or '4x'\");\n        this._shaper.oversample = oversampling;\n    }\n    /**\n     * Clean up.\n     */\n    dispose() {\n        super.dispose();\n        this._shaper.disconnect();\n        return this;\n    }\n}\n//# sourceMappingURL=WaveShaper.js.map","import { SignalOperator } from \"./SignalOperator\";\nimport { WaveShaper } from \"./WaveShaper\";\n/**\n * AudioToGain converts an input in AudioRange [-1,1] to NormalRange [0,1].\n * See [[GainToAudio]].\n * @category Signal\n */\nexport class AudioToGain extends SignalOperator {\n    constructor() {\n        super(...arguments);\n        this.name = \"AudioToGain\";\n        /**\n         * The node which converts the audio ranges\n         */\n        this._norm = new WaveShaper({\n            context: this.context,\n            mapping: x => (x + 1) / 2,\n        });\n        /**\n         * The AudioRange input [-1, 1]\n         */\n        this.input = this._norm;\n        /**\n         * The GainRange output [0, 1]\n         */\n        this.output = this._norm;\n    }\n    /**\n     * clean up\n     */\n    dispose() {\n        super.dispose();\n        this._norm.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=AudioToGain.js.map","import { Gain } from \"../core/context/Gain\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { Signal } from \"./Signal\";\n/**\n * Multiply two incoming signals. Or, if a number is given in the constructor,\n * multiplies the incoming signal by that value.\n *\n * @example\n * // multiply two signals\n * const mult = new Tone.Multiply();\n * const sigA = new Tone.Signal(3);\n * const sigB = new Tone.Signal(4);\n * sigA.connect(mult);\n * sigB.connect(mult.factor);\n * // output of mult is 12.\n * @example\n * // multiply a signal and a number\n * const mult = new Tone.Multiply(10);\n * const sig = new Tone.Signal(2).connect(mult);\n * // the output of mult is 20.\n * @category Signal\n */\nexport class Multiply extends Signal {\n    constructor() {\n        super(Object.assign(optionsFromArguments(Multiply.getDefaults(), arguments, [\"value\"])));\n        this.name = \"Multiply\";\n        /**\n         * Indicates if the value should be overridden on connection\n         */\n        this.override = false;\n        const options = optionsFromArguments(Multiply.getDefaults(), arguments, [\"value\"]);\n        this._mult = this.input = this.output = new Gain({\n            context: this.context,\n            minValue: options.minValue,\n            maxValue: options.maxValue,\n        });\n        this.factor = this._param = this._mult.gain;\n        this.factor.setValueAtTime(options.value, 0);\n    }\n    static getDefaults() {\n        return Object.assign(Signal.getDefaults(), {\n            value: 0,\n        });\n    }\n    dispose() {\n        super.dispose();\n        this._mult.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=Multiply.js.map","import { __awaiter } from \"tslib\";\nimport { Gain } from \"../../core/context/Gain\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\nimport { AudioToGain } from \"../../signal/AudioToGain\";\nimport { Multiply } from \"../../signal/Multiply\";\nimport { Source } from \"../Source\";\nimport { Oscillator } from \"./Oscillator\";\nimport { generateWaveform } from \"./OscillatorInterface\";\n/**\n * An amplitude modulated oscillator node. It is implemented with\n * two oscillators, one which modulators the other's amplitude\n * through a gain node.\n * ```\n *    +-------------+       +----------+\n *    | Carrier Osc +>------> GainNode |\n *    +-------------+       |          +--->Output\n *                      +---> gain     |\n * +---------------+    |   +----------+\n * | Modulator Osc +>---+\n * +---------------+\n * ```\n * @example\n * return Tone.Offline(() => {\n * \tconst amOsc = new Tone.AMOscillator(30, \"sine\", \"square\").toDestination().start();\n * }, 0.2, 1);\n * @category Source\n */\nexport class AMOscillator extends Source {\n    constructor() {\n        super(optionsFromArguments(AMOscillator.getDefaults(), arguments, [\"frequency\", \"type\", \"modulationType\"]));\n        this.name = \"AMOscillator\";\n        /**\n         * convert the -1,1 output to 0,1\n         */\n        this._modulationScale = new AudioToGain({ context: this.context });\n        /**\n         * the node where the modulation happens\n         */\n        this._modulationNode = new Gain({\n            context: this.context,\n        });\n        const options = optionsFromArguments(AMOscillator.getDefaults(), arguments, [\"frequency\", \"type\", \"modulationType\"]);\n        this._carrier = new Oscillator({\n            context: this.context,\n            detune: options.detune,\n            frequency: options.frequency,\n            onstop: () => this.onstop(this),\n            phase: options.phase,\n            type: options.type,\n        });\n        this.frequency = this._carrier.frequency,\n            this.detune = this._carrier.detune;\n        this._modulator = new Oscillator({\n            context: this.context,\n            phase: options.phase,\n            type: options.modulationType,\n        });\n        this.harmonicity = new Multiply({\n            context: this.context,\n            units: \"positive\",\n            value: options.harmonicity,\n        });\n        // connections\n        this.frequency.chain(this.harmonicity, this._modulator.frequency);\n        this._modulator.chain(this._modulationScale, this._modulationNode.gain);\n        this._carrier.chain(this._modulationNode, this.output);\n        readOnly(this, [\"frequency\", \"detune\", \"harmonicity\"]);\n    }\n    static getDefaults() {\n        return Object.assign(Oscillator.getDefaults(), {\n            harmonicity: 1,\n            modulationType: \"square\",\n        });\n    }\n    /**\n     * start the oscillator\n     */\n    _start(time) {\n        this._modulator.start(time);\n        this._carrier.start(time);\n    }\n    /**\n     * stop the oscillator\n     */\n    _stop(time) {\n        this._modulator.stop(time);\n        this._carrier.stop(time);\n    }\n    _restart(time) {\n        this._modulator.restart(time);\n        this._carrier.restart(time);\n    }\n    /**\n     * The type of the carrier oscillator\n     */\n    get type() {\n        return this._carrier.type;\n    }\n    set type(type) {\n        this._carrier.type = type;\n    }\n    get baseType() {\n        return this._carrier.baseType;\n    }\n    set baseType(baseType) {\n        this._carrier.baseType = baseType;\n    }\n    get partialCount() {\n        return this._carrier.partialCount;\n    }\n    set partialCount(partialCount) {\n        this._carrier.partialCount = partialCount;\n    }\n    /**\n     * The type of the modulator oscillator\n     */\n    get modulationType() {\n        return this._modulator.type;\n    }\n    set modulationType(type) {\n        this._modulator.type = type;\n    }\n    get phase() {\n        return this._carrier.phase;\n    }\n    set phase(phase) {\n        this._carrier.phase = phase;\n        this._modulator.phase = phase;\n    }\n    get partials() {\n        return this._carrier.partials;\n    }\n    set partials(partials) {\n        this._carrier.partials = partials;\n    }\n    asArray(length = 1024) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return generateWaveform(this, length);\n        });\n    }\n    /**\n     * Clean up.\n     */\n    dispose() {\n        super.dispose();\n        this.frequency.dispose();\n        this.detune.dispose();\n        this.harmonicity.dispose();\n        this._carrier.dispose();\n        this._modulator.dispose();\n        this._modulationNode.dispose();\n        this._modulationScale.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=AMOscillator.js.map","import { __awaiter } from \"tslib\";\nimport { Gain } from \"../../core/context/Gain\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\nimport { Multiply } from \"../../signal/Multiply\";\nimport { Signal } from \"../../signal/Signal\";\nimport { Source } from \"../Source\";\nimport { Oscillator } from \"./Oscillator\";\nimport { generateWaveform } from \"./OscillatorInterface\";\n/**\n * FMOscillator implements a frequency modulation synthesis\n * ```\n *                                              +-------------+\n * +---------------+        +-------------+     | Carrier Osc |\n * | Modulator Osc +>-------> GainNode    |     |             +--->Output\n * +---------------+        |             +>----> frequency   |\n *                       +--> gain        |     +-------------+\n *                       |  +-------------+\n * +-----------------+   |\n * | modulationIndex +>--+\n * +-----------------+\n * ```\n *\n * @example\n * return Tone.Offline(() => {\n * \tconst fmOsc = new Tone.FMOscillator({\n * \t\tfrequency: 200,\n * \t\ttype: \"square\",\n * \t\tmodulationType: \"triangle\",\n * \t\tharmonicity: 0.2,\n * \t\tmodulationIndex: 3\n * \t}).toDestination().start();\n * }, 0.1, 1);\n * @category Source\n */\nexport class FMOscillator extends Source {\n    constructor() {\n        super(optionsFromArguments(FMOscillator.getDefaults(), arguments, [\"frequency\", \"type\", \"modulationType\"]));\n        this.name = \"FMOscillator\";\n        /**\n         * the node where the modulation happens\n         */\n        this._modulationNode = new Gain({\n            context: this.context,\n            gain: 0,\n        });\n        const options = optionsFromArguments(FMOscillator.getDefaults(), arguments, [\"frequency\", \"type\", \"modulationType\"]);\n        this._carrier = new Oscillator({\n            context: this.context,\n            detune: options.detune,\n            frequency: 0,\n            onstop: () => this.onstop(this),\n            phase: options.phase,\n            type: options.type,\n        });\n        this.detune = this._carrier.detune;\n        this.frequency = new Signal({\n            context: this.context,\n            units: \"frequency\",\n            value: options.frequency,\n        });\n        this._modulator = new Oscillator({\n            context: this.context,\n            phase: options.phase,\n            type: options.modulationType,\n        });\n        this.harmonicity = new Multiply({\n            context: this.context,\n            units: \"positive\",\n            value: options.harmonicity,\n        });\n        this.modulationIndex = new Multiply({\n            context: this.context,\n            units: \"positive\",\n            value: options.modulationIndex,\n        });\n        // connections\n        this.frequency.connect(this._carrier.frequency);\n        this.frequency.chain(this.harmonicity, this._modulator.frequency);\n        this.frequency.chain(this.modulationIndex, this._modulationNode);\n        this._modulator.connect(this._modulationNode.gain);\n        this._modulationNode.connect(this._carrier.frequency);\n        this._carrier.connect(this.output);\n        this.detune.connect(this._modulator.detune);\n        readOnly(this, [\"modulationIndex\", \"frequency\", \"detune\", \"harmonicity\"]);\n    }\n    static getDefaults() {\n        return Object.assign(Oscillator.getDefaults(), {\n            harmonicity: 1,\n            modulationIndex: 2,\n            modulationType: \"square\",\n        });\n    }\n    /**\n     * start the oscillator\n     */\n    _start(time) {\n        this._modulator.start(time);\n        this._carrier.start(time);\n    }\n    /**\n     * stop the oscillator\n     */\n    _stop(time) {\n        this._modulator.stop(time);\n        this._carrier.stop(time);\n    }\n    _restart(time) {\n        this._modulator.restart(time);\n        this._carrier.restart(time);\n        return this;\n    }\n    get type() {\n        return this._carrier.type;\n    }\n    set type(type) {\n        this._carrier.type = type;\n    }\n    get baseType() {\n        return this._carrier.baseType;\n    }\n    set baseType(baseType) {\n        this._carrier.baseType = baseType;\n    }\n    get partialCount() {\n        return this._carrier.partialCount;\n    }\n    set partialCount(partialCount) {\n        this._carrier.partialCount = partialCount;\n    }\n    /**\n     * The type of the modulator oscillator\n     */\n    get modulationType() {\n        return this._modulator.type;\n    }\n    set modulationType(type) {\n        this._modulator.type = type;\n    }\n    get phase() {\n        return this._carrier.phase;\n    }\n    set phase(phase) {\n        this._carrier.phase = phase;\n        this._modulator.phase = phase;\n    }\n    get partials() {\n        return this._carrier.partials;\n    }\n    set partials(partials) {\n        this._carrier.partials = partials;\n    }\n    asArray(length = 1024) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return generateWaveform(this, length);\n        });\n    }\n    /**\n     * Clean up.\n     */\n    dispose() {\n        super.dispose();\n        this.frequency.dispose();\n        this.harmonicity.dispose();\n        this._carrier.dispose();\n        this._modulator.dispose();\n        this._modulationNode.dispose();\n        this.modulationIndex.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=FMOscillator.js.map","import { __awaiter } from \"tslib\";\nimport { Gain } from \"../../core/context/Gain\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\nimport { Signal } from \"../../signal/Signal\";\nimport { WaveShaper } from \"../../signal/WaveShaper\";\nimport { Source } from \"../Source\";\nimport { Oscillator } from \"./Oscillator\";\nimport { generateWaveform } from \"./OscillatorInterface\";\n/**\n * PulseOscillator is an oscillator with control over pulse width,\n * also known as the duty cycle. At 50% duty cycle (width = 0) the wave is\n * a square wave.\n * [Read more](https://wigglewave.wordpress.com/2014/08/16/pulse-waveforms-and-harmonics/).\n * ```\n *    width = -0.25        width = 0.0          width = 0.25\n *\n *   +-----+            +-------+       +    +-------+     +-+\n *   |     |            |       |       |            |     |\n *   |     |            |       |       |            |     |\n * +-+     +-------+    +       +-------+            +-----+\n *\n *\n *    width = -0.5                              width = 0.5\n *\n *     +---+                                 +-------+   +---+\n *     |   |                                         |   |\n *     |   |                                         |   |\n * +---+   +-------+                                 +---+\n *\n *\n *    width = -0.75                             width = 0.75\n *\n *       +-+                                 +-------+ +-----+\n *       | |                                         | |\n *       | |                                         | |\n * +-----+ +-------+                                 +-+\n * ```\n * @example\n * return Tone.Offline(() => {\n * \tconst pulse = new Tone.PulseOscillator(50, 0.4).toDestination().start();\n * }, 0.1, 1);\n * @category Source\n */\nexport class PulseOscillator extends Source {\n    constructor() {\n        super(optionsFromArguments(PulseOscillator.getDefaults(), arguments, [\"frequency\", \"width\"]));\n        this.name = \"PulseOscillator\";\n        /**\n         * gate the width amount\n         */\n        this._widthGate = new Gain({\n            context: this.context,\n            gain: 0,\n        });\n        /**\n         * Threshold the signal to turn it into a square\n         */\n        this._thresh = new WaveShaper({\n            context: this.context,\n            mapping: val => val <= 0 ? -1 : 1,\n        });\n        const options = optionsFromArguments(PulseOscillator.getDefaults(), arguments, [\"frequency\", \"width\"]);\n        this.width = new Signal({\n            context: this.context,\n            units: \"audioRange\",\n            value: options.width,\n        });\n        this._triangle = new Oscillator({\n            context: this.context,\n            detune: options.detune,\n            frequency: options.frequency,\n            onstop: () => this.onstop(this),\n            phase: options.phase,\n            type: \"triangle\",\n        });\n        this.frequency = this._triangle.frequency;\n        this.detune = this._triangle.detune;\n        // connections\n        this._triangle.chain(this._thresh, this.output);\n        this.width.chain(this._widthGate, this._thresh);\n        readOnly(this, [\"width\", \"frequency\", \"detune\"]);\n    }\n    static getDefaults() {\n        return Object.assign(Source.getDefaults(), {\n            detune: 0,\n            frequency: 440,\n            phase: 0,\n            type: \"pulse\",\n            width: 0.2,\n        });\n    }\n    /**\n     * start the oscillator\n     */\n    _start(time) {\n        time = this.toSeconds(time);\n        this._triangle.start(time);\n        this._widthGate.gain.setValueAtTime(1, time);\n    }\n    /**\n     * stop the oscillator\n     */\n    _stop(time) {\n        time = this.toSeconds(time);\n        this._triangle.stop(time);\n        // the width is still connected to the output.\n        // that needs to be stopped also\n        this._widthGate.gain.cancelScheduledValues(time);\n        this._widthGate.gain.setValueAtTime(0, time);\n    }\n    _restart(time) {\n        this._triangle.restart(time);\n        this._widthGate.gain.cancelScheduledValues(time);\n        this._widthGate.gain.setValueAtTime(1, time);\n    }\n    /**\n     * The phase of the oscillator in degrees.\n     */\n    get phase() {\n        return this._triangle.phase;\n    }\n    set phase(phase) {\n        this._triangle.phase = phase;\n    }\n    /**\n     * The type of the oscillator. Always returns \"pulse\".\n     */\n    get type() {\n        return \"pulse\";\n    }\n    /**\n     * The baseType of the oscillator. Always returns \"pulse\".\n     */\n    get baseType() {\n        return \"pulse\";\n    }\n    /**\n     * The partials of the waveform. Cannot set partials for this waveform type\n     */\n    get partials() {\n        return [];\n    }\n    /**\n     * No partials for this waveform type.\n     */\n    get partialCount() {\n        return 0;\n    }\n    /**\n     * *Internal use* The carrier oscillator type is fed through the\n     * waveshaper node to create the pulse. Using different carrier oscillators\n     * changes oscillator's behavior.\n     */\n    set carrierType(type) {\n        this._triangle.type = type;\n    }\n    asArray(length = 1024) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return generateWaveform(this, length);\n        });\n    }\n    /**\n     * Clean up method.\n     */\n    dispose() {\n        super.dispose();\n        this._triangle.dispose();\n        this.width.dispose();\n        this._widthGate.dispose();\n        this._thresh.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=PulseOscillator.js.map","import { __awaiter } from \"tslib\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { noOp, readOnly } from \"../../core/util/Interface\";\nimport { Signal } from \"../../signal/Signal\";\nimport { Source } from \"../Source\";\nimport { Oscillator } from \"./Oscillator\";\nimport { generateWaveform } from \"./OscillatorInterface\";\nimport { assertRange } from \"../../core/util/Debug\";\n/**\n * FatOscillator is an array of oscillators with detune spread between the oscillators\n * @example\n * const fatOsc = new Tone.FatOscillator(\"Ab3\", \"sawtooth\", 40).toDestination().start();\n * @category Source\n */\nexport class FatOscillator extends Source {\n    constructor() {\n        super(optionsFromArguments(FatOscillator.getDefaults(), arguments, [\"frequency\", \"type\", \"spread\"]));\n        this.name = \"FatOscillator\";\n        /**\n         * The array of oscillators\n         */\n        this._oscillators = [];\n        const options = optionsFromArguments(FatOscillator.getDefaults(), arguments, [\"frequency\", \"type\", \"spread\"]);\n        this.frequency = new Signal({\n            context: this.context,\n            units: \"frequency\",\n            value: options.frequency,\n        });\n        this.detune = new Signal({\n            context: this.context,\n            units: \"cents\",\n            value: options.detune,\n        });\n        this._spread = options.spread;\n        this._type = options.type;\n        this._phase = options.phase;\n        this._partials = options.partials;\n        this._partialCount = options.partialCount;\n        // set the count initially\n        this.count = options.count;\n        readOnly(this, [\"frequency\", \"detune\"]);\n    }\n    static getDefaults() {\n        return Object.assign(Oscillator.getDefaults(), {\n            count: 3,\n            spread: 20,\n            type: \"sawtooth\",\n        });\n    }\n    /**\n     * start the oscillator\n     */\n    _start(time) {\n        time = this.toSeconds(time);\n        this._forEach(osc => osc.start(time));\n    }\n    /**\n     * stop the oscillator\n     */\n    _stop(time) {\n        time = this.toSeconds(time);\n        this._forEach(osc => osc.stop(time));\n    }\n    _restart(time) {\n        this._forEach(osc => osc.restart(time));\n    }\n    /**\n     * Iterate over all of the oscillators\n     */\n    _forEach(iterator) {\n        for (let i = 0; i < this._oscillators.length; i++) {\n            iterator(this._oscillators[i], i);\n        }\n    }\n    /**\n     * The type of the oscillator\n     */\n    get type() {\n        return this._type;\n    }\n    set type(type) {\n        this._type = type;\n        this._forEach(osc => osc.type = type);\n    }\n    /**\n     * The detune spread between the oscillators. If \"count\" is\n     * set to 3 oscillators and the \"spread\" is set to 40,\n     * the three oscillators would be detuned like this: [-20, 0, 20]\n     * for a total detune spread of 40 cents.\n     * @example\n     * const fatOsc = new Tone.FatOscillator().toDestination().start();\n     * fatOsc.spread = 70;\n     */\n    get spread() {\n        return this._spread;\n    }\n    set spread(spread) {\n        this._spread = spread;\n        if (this._oscillators.length > 1) {\n            const start = -spread / 2;\n            const step = spread / (this._oscillators.length - 1);\n            this._forEach((osc, i) => osc.detune.value = start + step * i);\n        }\n    }\n    /**\n     * The number of detuned oscillators. Must be an integer greater than 1.\n     * @example\n     * const fatOsc = new Tone.FatOscillator(\"C#3\", \"sawtooth\").toDestination().start();\n     * // use 4 sawtooth oscillators\n     * fatOsc.count = 4;\n     */\n    get count() {\n        return this._oscillators.length;\n    }\n    set count(count) {\n        assertRange(count, 1);\n        if (this._oscillators.length !== count) {\n            // dispose the previous oscillators\n            this._forEach(osc => osc.dispose());\n            this._oscillators = [];\n            for (let i = 0; i < count; i++) {\n                const osc = new Oscillator({\n                    context: this.context,\n                    volume: -6 - count * 1.1,\n                    type: this._type,\n                    phase: this._phase + (i / count) * 360,\n                    partialCount: this._partialCount,\n                    onstop: i === 0 ? () => this.onstop(this) : noOp,\n                });\n                if (this.type === \"custom\") {\n                    osc.partials = this._partials;\n                }\n                this.frequency.connect(osc.frequency);\n                this.detune.connect(osc.detune);\n                osc.detune.overridden = false;\n                osc.connect(this.output);\n                this._oscillators[i] = osc;\n            }\n            // set the spread\n            this.spread = this._spread;\n            if (this.state === \"started\") {\n                this._forEach(osc => osc.start());\n            }\n        }\n    }\n    get phase() {\n        return this._phase;\n    }\n    set phase(phase) {\n        this._phase = phase;\n        this._forEach((osc, i) => osc.phase = this._phase + (i / this.count) * 360);\n    }\n    get baseType() {\n        return this._oscillators[0].baseType;\n    }\n    set baseType(baseType) {\n        this._forEach(osc => osc.baseType = baseType);\n        this._type = this._oscillators[0].type;\n    }\n    get partials() {\n        return this._oscillators[0].partials;\n    }\n    set partials(partials) {\n        this._partials = partials;\n        this._partialCount = this._partials.length;\n        if (partials.length) {\n            this._type = \"custom\";\n            this._forEach(osc => osc.partials = partials);\n        }\n    }\n    get partialCount() {\n        return this._oscillators[0].partialCount;\n    }\n    set partialCount(partialCount) {\n        this._partialCount = partialCount;\n        this._forEach(osc => osc.partialCount = partialCount);\n        this._type = this._oscillators[0].type;\n    }\n    asArray(length = 1024) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return generateWaveform(this, length);\n        });\n    }\n    /**\n     * Clean up.\n     */\n    dispose() {\n        super.dispose();\n        this.frequency.dispose();\n        this.detune.dispose();\n        this._forEach(osc => osc.dispose());\n        return this;\n    }\n}\n//# sourceMappingURL=FatOscillator.js.map","import { __awaiter } from \"tslib\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\nimport { Multiply } from \"../../signal/Multiply\";\nimport { Source } from \"../Source\";\nimport { Oscillator } from \"./Oscillator\";\nimport { generateWaveform } from \"./OscillatorInterface\";\nimport { PulseOscillator } from \"./PulseOscillator\";\n/**\n * PWMOscillator modulates the width of a Tone.PulseOscillator\n * at the modulationFrequency. This has the effect of continuously\n * changing the timbre of the oscillator by altering the harmonics\n * generated.\n * @example\n * return Tone.Offline(() => {\n * \tconst pwm = new Tone.PWMOscillator(60, 0.3).toDestination().start();\n * }, 0.1, 1);\n * @category Source\n */\nexport class PWMOscillator extends Source {\n    constructor() {\n        super(optionsFromArguments(PWMOscillator.getDefaults(), arguments, [\"frequency\", \"modulationFrequency\"]));\n        this.name = \"PWMOscillator\";\n        this.sourceType = \"pwm\";\n        /**\n         * Scale the oscillator so it doesn't go silent\n         * at the extreme values.\n         */\n        this._scale = new Multiply({\n            context: this.context,\n            value: 2,\n        });\n        const options = optionsFromArguments(PWMOscillator.getDefaults(), arguments, [\"frequency\", \"modulationFrequency\"]);\n        this._pulse = new PulseOscillator({\n            context: this.context,\n            frequency: options.modulationFrequency,\n        });\n        // change the pulse oscillator type\n        this._pulse.carrierType = \"sine\";\n        this.modulationFrequency = this._pulse.frequency;\n        this._modulator = new Oscillator({\n            context: this.context,\n            detune: options.detune,\n            frequency: options.frequency,\n            onstop: () => this.onstop(this),\n            phase: options.phase,\n        });\n        this.frequency = this._modulator.frequency;\n        this.detune = this._modulator.detune;\n        // connections\n        this._modulator.chain(this._scale, this._pulse.width);\n        this._pulse.connect(this.output);\n        readOnly(this, [\"modulationFrequency\", \"frequency\", \"detune\"]);\n    }\n    static getDefaults() {\n        return Object.assign(Source.getDefaults(), {\n            detune: 0,\n            frequency: 440,\n            modulationFrequency: 0.4,\n            phase: 0,\n            type: \"pwm\",\n        });\n    }\n    /**\n     * start the oscillator\n     */\n    _start(time) {\n        time = this.toSeconds(time);\n        this._modulator.start(time);\n        this._pulse.start(time);\n    }\n    /**\n     * stop the oscillator\n     */\n    _stop(time) {\n        time = this.toSeconds(time);\n        this._modulator.stop(time);\n        this._pulse.stop(time);\n    }\n    /**\n     * restart the oscillator\n     */\n    _restart(time) {\n        this._modulator.restart(time);\n        this._pulse.restart(time);\n    }\n    /**\n     * The type of the oscillator. Always returns \"pwm\".\n     */\n    get type() {\n        return \"pwm\";\n    }\n    /**\n     * The baseType of the oscillator. Always returns \"pwm\".\n     */\n    get baseType() {\n        return \"pwm\";\n    }\n    /**\n     * The partials of the waveform. Cannot set partials for this waveform type\n     */\n    get partials() {\n        return [];\n    }\n    /**\n     * No partials for this waveform type.\n     */\n    get partialCount() {\n        return 0;\n    }\n    /**\n     * The phase of the oscillator in degrees.\n     */\n    get phase() {\n        return this._modulator.phase;\n    }\n    set phase(phase) {\n        this._modulator.phase = phase;\n    }\n    asArray(length = 1024) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return generateWaveform(this, length);\n        });\n    }\n    /**\n     * Clean up.\n     */\n    dispose() {\n        super.dispose();\n        this._pulse.dispose();\n        this._scale.dispose();\n        this._modulator.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=PWMOscillator.js.map","import { __awaiter } from \"tslib\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\nimport { isNumber, isString } from \"../../core/util/TypeCheck\";\nimport { Signal } from \"../../signal/Signal\";\nimport { Source } from \"../Source\";\nimport { AMOscillator } from \"./AMOscillator\";\nimport { FatOscillator } from \"./FatOscillator\";\nimport { FMOscillator } from \"./FMOscillator\";\nimport { Oscillator } from \"./Oscillator\";\nimport { generateWaveform } from \"./OscillatorInterface\";\nimport { PulseOscillator } from \"./PulseOscillator\";\nimport { PWMOscillator } from \"./PWMOscillator\";\nconst OmniOscillatorSourceMap = {\n    am: AMOscillator,\n    fat: FatOscillator,\n    fm: FMOscillator,\n    oscillator: Oscillator,\n    pulse: PulseOscillator,\n    pwm: PWMOscillator,\n};\n/**\n * OmniOscillator aggregates all of the oscillator types into one.\n * @example\n * return Tone.Offline(() => {\n * \tconst omniOsc = new Tone.OmniOscillator(\"C#4\", \"pwm\").toDestination().start();\n * }, 0.1, 1);\n * @category Source\n */\nexport class OmniOscillator extends Source {\n    constructor() {\n        super(optionsFromArguments(OmniOscillator.getDefaults(), arguments, [\"frequency\", \"type\"]));\n        this.name = \"OmniOscillator\";\n        const options = optionsFromArguments(OmniOscillator.getDefaults(), arguments, [\"frequency\", \"type\"]);\n        this.frequency = new Signal({\n            context: this.context,\n            units: \"frequency\",\n            value: options.frequency,\n        });\n        this.detune = new Signal({\n            context: this.context,\n            units: \"cents\",\n            value: options.detune,\n        });\n        readOnly(this, [\"frequency\", \"detune\"]);\n        // set the options\n        this.set(options);\n    }\n    static getDefaults() {\n        return Object.assign(Oscillator.getDefaults(), FMOscillator.getDefaults(), AMOscillator.getDefaults(), FatOscillator.getDefaults(), PulseOscillator.getDefaults(), PWMOscillator.getDefaults());\n    }\n    /**\n     * start the oscillator\n     */\n    _start(time) {\n        this._oscillator.start(time);\n    }\n    /**\n     * start the oscillator\n     */\n    _stop(time) {\n        this._oscillator.stop(time);\n    }\n    _restart(time) {\n        this._oscillator.restart(time);\n        return this;\n    }\n    /**\n     * The type of the oscillator. Can be any of the basic types: sine, square, triangle, sawtooth. Or\n     * prefix the basic types with \"fm\", \"am\", or \"fat\" to use the FMOscillator, AMOscillator or FatOscillator\n     * types. The oscillator could also be set to \"pwm\" or \"pulse\". All of the parameters of the\n     * oscillator's class are accessible when the oscillator is set to that type, but throws an error\n     * when it's not.\n     * @example\n     * const omniOsc = new Tone.OmniOscillator().toDestination().start();\n     * omniOsc.type = \"pwm\";\n     * // modulationFrequency is parameter which is available\n     * // only when the type is \"pwm\".\n     * omniOsc.modulationFrequency.value = 0.5;\n     */\n    get type() {\n        let prefix = \"\";\n        if ([\"am\", \"fm\", \"fat\"].some(p => this._sourceType === p)) {\n            prefix = this._sourceType;\n        }\n        return prefix + this._oscillator.type;\n    }\n    set type(type) {\n        if (type.substr(0, 2) === \"fm\") {\n            this._createNewOscillator(\"fm\");\n            this._oscillator = this._oscillator;\n            this._oscillator.type = type.substr(2);\n        }\n        else if (type.substr(0, 2) === \"am\") {\n            this._createNewOscillator(\"am\");\n            this._oscillator = this._oscillator;\n            this._oscillator.type = type.substr(2);\n        }\n        else if (type.substr(0, 3) === \"fat\") {\n            this._createNewOscillator(\"fat\");\n            this._oscillator = this._oscillator;\n            this._oscillator.type = type.substr(3);\n        }\n        else if (type === \"pwm\") {\n            this._createNewOscillator(\"pwm\");\n            this._oscillator = this._oscillator;\n        }\n        else if (type === \"pulse\") {\n            this._createNewOscillator(\"pulse\");\n        }\n        else {\n            this._createNewOscillator(\"oscillator\");\n            this._oscillator = this._oscillator;\n            this._oscillator.type = type;\n        }\n    }\n    /**\n     * The value is an empty array when the type is not \"custom\".\n     * This is not available on \"pwm\" and \"pulse\" oscillator types.\n     * See [[Oscillator.partials]]\n     */\n    get partials() {\n        return this._oscillator.partials;\n    }\n    set partials(partials) {\n        if (!this._getOscType(this._oscillator, \"pulse\") && !this._getOscType(this._oscillator, \"pwm\")) {\n            this._oscillator.partials = partials;\n        }\n    }\n    get partialCount() {\n        return this._oscillator.partialCount;\n    }\n    set partialCount(partialCount) {\n        if (!this._getOscType(this._oscillator, \"pulse\") && !this._getOscType(this._oscillator, \"pwm\")) {\n            this._oscillator.partialCount = partialCount;\n        }\n    }\n    set(props) {\n        // make sure the type is set first\n        if (Reflect.has(props, \"type\") && props.type) {\n            this.type = props.type;\n        }\n        // then set the rest\n        super.set(props);\n        return this;\n    }\n    /**\n     * connect the oscillator to the frequency and detune signals\n     */\n    _createNewOscillator(oscType) {\n        if (oscType !== this._sourceType) {\n            this._sourceType = oscType;\n            const OscConstructor = OmniOscillatorSourceMap[oscType];\n            // short delay to avoid clicks on the change\n            const now = this.now();\n            if (this._oscillator) {\n                const oldOsc = this._oscillator;\n                oldOsc.stop(now);\n                // dispose the old one\n                this.context.setTimeout(() => oldOsc.dispose(), this.blockTime);\n            }\n            this._oscillator = new OscConstructor({\n                context: this.context,\n            });\n            this.frequency.connect(this._oscillator.frequency);\n            this.detune.connect(this._oscillator.detune);\n            this._oscillator.connect(this.output);\n            this._oscillator.onstop = () => this.onstop(this);\n            if (this.state === \"started\") {\n                this._oscillator.start(now);\n            }\n        }\n    }\n    get phase() {\n        return this._oscillator.phase;\n    }\n    set phase(phase) {\n        this._oscillator.phase = phase;\n    }\n    /**\n     * The source type of the oscillator.\n     * @example\n     * const omniOsc = new Tone.OmniOscillator(440, \"fmsquare\");\n     * console.log(omniOsc.sourceType); // 'fm'\n     */\n    get sourceType() {\n        return this._sourceType;\n    }\n    set sourceType(sType) {\n        // the basetype defaults to sine\n        let baseType = \"sine\";\n        if (this._oscillator.type !== \"pwm\" && this._oscillator.type !== \"pulse\") {\n            baseType = this._oscillator.type;\n        }\n        // set the type\n        if (sType === \"fm\") {\n            this.type = \"fm\" + baseType;\n        }\n        else if (sType === \"am\") {\n            this.type = \"am\" + baseType;\n        }\n        else if (sType === \"fat\") {\n            this.type = \"fat\" + baseType;\n        }\n        else if (sType === \"oscillator\") {\n            this.type = baseType;\n        }\n        else if (sType === \"pulse\") {\n            this.type = \"pulse\";\n        }\n        else if (sType === \"pwm\") {\n            this.type = \"pwm\";\n        }\n    }\n    _getOscType(osc, sourceType) {\n        return osc instanceof OmniOscillatorSourceMap[sourceType];\n    }\n    /**\n     * The base type of the oscillator. See [[Oscillator.baseType]]\n     * @example\n     * const omniOsc = new Tone.OmniOscillator(440, \"fmsquare4\");\n     * console.log(omniOsc.sourceType, omniOsc.baseType, omniOsc.partialCount);\n     */\n    get baseType() {\n        return this._oscillator.baseType;\n    }\n    set baseType(baseType) {\n        if (!this._getOscType(this._oscillator, \"pulse\") &&\n            !this._getOscType(this._oscillator, \"pwm\") &&\n            baseType !== \"pulse\" && baseType !== \"pwm\") {\n            this._oscillator.baseType = baseType;\n        }\n    }\n    /**\n     * The width of the oscillator when sourceType === \"pulse\".\n     * See [[PWMOscillator.width]]\n     */\n    get width() {\n        if (this._getOscType(this._oscillator, \"pulse\")) {\n            return this._oscillator.width;\n        }\n        else {\n            return undefined;\n        }\n    }\n    /**\n     * The number of detuned oscillators when sourceType === \"fat\".\n     * See [[FatOscillator.count]]\n     */\n    get count() {\n        if (this._getOscType(this._oscillator, \"fat\")) {\n            return this._oscillator.count;\n        }\n        else {\n            return undefined;\n        }\n    }\n    set count(count) {\n        if (this._getOscType(this._oscillator, \"fat\") && isNumber(count)) {\n            this._oscillator.count = count;\n        }\n    }\n    /**\n     * The detune spread between the oscillators when sourceType === \"fat\".\n     * See [[FatOscillator.count]]\n     */\n    get spread() {\n        if (this._getOscType(this._oscillator, \"fat\")) {\n            return this._oscillator.spread;\n        }\n        else {\n            return undefined;\n        }\n    }\n    set spread(spread) {\n        if (this._getOscType(this._oscillator, \"fat\") && isNumber(spread)) {\n            this._oscillator.spread = spread;\n        }\n    }\n    /**\n     * The type of the modulator oscillator. Only if the oscillator is set to \"am\" or \"fm\" types.\n     * See [[AMOscillator]] or [[FMOscillator]]\n     */\n    get modulationType() {\n        if (this._getOscType(this._oscillator, \"fm\") || this._getOscType(this._oscillator, \"am\")) {\n            return this._oscillator.modulationType;\n        }\n        else {\n            return undefined;\n        }\n    }\n    set modulationType(mType) {\n        if ((this._getOscType(this._oscillator, \"fm\") || this._getOscType(this._oscillator, \"am\")) && isString(mType)) {\n            this._oscillator.modulationType = mType;\n        }\n    }\n    /**\n     * The modulation index when the sourceType === \"fm\"\n     * See [[FMOscillator]].\n     */\n    get modulationIndex() {\n        if (this._getOscType(this._oscillator, \"fm\")) {\n            return this._oscillator.modulationIndex;\n        }\n        else {\n            return undefined;\n        }\n    }\n    /**\n     * Harmonicity is the frequency ratio between the carrier and the modulator oscillators.\n     * See [[AMOscillator]] or [[FMOscillator]]\n     */\n    get harmonicity() {\n        if (this._getOscType(this._oscillator, \"fm\") || this._getOscType(this._oscillator, \"am\")) {\n            return this._oscillator.harmonicity;\n        }\n        else {\n            return undefined;\n        }\n    }\n    /**\n     * The modulationFrequency Signal of the oscillator when sourceType === \"pwm\"\n     * see [[PWMOscillator]]\n     * @min 0.1\n     * @max 5\n     */\n    get modulationFrequency() {\n        if (this._getOscType(this._oscillator, \"pwm\")) {\n            return this._oscillator.modulationFrequency;\n        }\n        else {\n            return undefined;\n        }\n    }\n    asArray(length = 1024) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return generateWaveform(this, length);\n        });\n    }\n    dispose() {\n        super.dispose();\n        this.detune.dispose();\n        this.frequency.dispose();\n        this._oscillator.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=OmniOscillator.js.map","import { assertRange } from \"./Debug\";\n/**\n * Assert that the number is in the given range.\n */\nexport function range(min, max = Infinity) {\n    const valueMap = new WeakMap();\n    return function (target, propertyKey) {\n        Reflect.defineProperty(target, propertyKey, {\n            configurable: true,\n            enumerable: true,\n            get: function () {\n                return valueMap.get(this);\n            },\n            set: function (newValue) {\n                assertRange(newValue, min, max);\n                valueMap.set(this, newValue);\n            }\n        });\n    };\n}\n/**\n * Convert the time to seconds and assert that the time is in between the two\n * values when being set.\n */\nexport function timeRange(min, max = Infinity) {\n    const valueMap = new WeakMap();\n    return function (target, propertyKey) {\n        Reflect.defineProperty(target, propertyKey, {\n            configurable: true,\n            enumerable: true,\n            get: function () {\n                return valueMap.get(this);\n            },\n            set: function (newValue) {\n                assertRange(this.toSeconds(newValue), min, max);\n                valueMap.set(this, newValue);\n            }\n        });\n    };\n}\n//# sourceMappingURL=Decorator.js.map","import { __awaiter, __decorate } from \"tslib\";\nimport { ToneAudioBuffer } from \"../../core/context/ToneAudioBuffer\";\nimport { defaultArg, optionsFromArguments } from \"../../core/util/Defaults\";\nimport { noOp } from \"../../core/util/Interface\";\nimport { isUndef } from \"../../core/util/TypeCheck\";\nimport { Source } from \"../Source\";\nimport { ToneBufferSource } from \"./ToneBufferSource\";\nimport { assertRange } from \"../../core/util/Debug\";\nimport { timeRange } from \"../../core/util/Decorator\";\n/**\n * Player is an audio file player with start, loop, and stop functions.\n * @example\n * const player = new Tone.Player(\"https://tonejs.github.io/audio/berklee/gong_1.mp3\").toDestination();\n * // play as soon as the buffer is loaded\n * player.autostart = true;\n * @category Source\n */\nexport class Player extends Source {\n    constructor() {\n        super(optionsFromArguments(Player.getDefaults(), arguments, [\"url\", \"onload\"]));\n        this.name = \"Player\";\n        /**\n         * All of the active buffer source nodes\n         */\n        this._activeSources = new Set();\n        const options = optionsFromArguments(Player.getDefaults(), arguments, [\"url\", \"onload\"]);\n        this._buffer = new ToneAudioBuffer({\n            onload: this._onload.bind(this, options.onload),\n            onerror: options.onerror,\n            reverse: options.reverse,\n            url: options.url,\n        });\n        this.autostart = options.autostart;\n        this._loop = options.loop;\n        this._loopStart = options.loopStart;\n        this._loopEnd = options.loopEnd;\n        this._playbackRate = options.playbackRate;\n        this.fadeIn = options.fadeIn;\n        this.fadeOut = options.fadeOut;\n    }\n    static getDefaults() {\n        return Object.assign(Source.getDefaults(), {\n            autostart: false,\n            fadeIn: 0,\n            fadeOut: 0,\n            loop: false,\n            loopEnd: 0,\n            loopStart: 0,\n            onload: noOp,\n            onerror: noOp,\n            playbackRate: 1,\n            reverse: false,\n        });\n    }\n    /**\n     * Load the audio file as an audio buffer.\n     * Decodes the audio asynchronously and invokes\n     * the callback once the audio buffer loads.\n     * Note: this does not need to be called if a url\n     * was passed in to the constructor. Only use this\n     * if you want to manually load a new url.\n     * @param url The url of the buffer to load. Filetype support depends on the browser.\n     */\n    load(url) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this._buffer.load(url);\n            this._onload();\n            return this;\n        });\n    }\n    /**\n     * Internal callback when the buffer is loaded.\n     */\n    _onload(callback = noOp) {\n        callback();\n        if (this.autostart) {\n            this.start();\n        }\n    }\n    /**\n     * Internal callback when the buffer is done playing.\n     */\n    _onSourceEnd(source) {\n        // invoke the onstop function\n        this.onstop(this);\n        // delete the source from the active sources\n        this._activeSources.delete(source);\n        if (this._activeSources.size === 0 && !this._synced &&\n            this._state.getValueAtTime(this.now()) === \"started\") {\n            // remove the 'implicitEnd' event and replace with an explicit end\n            this._state.cancel(this.now());\n            this._state.setStateAtTime(\"stopped\", this.now());\n        }\n    }\n    /**\n     * Play the buffer at the given startTime. Optionally add an offset\n     * and/or duration which will play the buffer from a position\n     * within the buffer for the given duration.\n     *\n     * @param  time When the player should start.\n     * @param  offset The offset from the beginning of the sample to start at.\n     * @param  duration How long the sample should play. If no duration is given, it will default to the full length of the sample (minus any offset)\n     */\n    start(time, offset, duration) {\n        super.start(time, offset, duration);\n        return this;\n    }\n    /**\n     * Internal start method\n     */\n    _start(startTime, offset, duration) {\n        // if it's a loop the default offset is the loopStart point\n        if (this._loop) {\n            offset = defaultArg(offset, this._loopStart);\n        }\n        else {\n            // otherwise the default offset is 0\n            offset = defaultArg(offset, 0);\n        }\n        // compute the values in seconds\n        let computedOffset = this.toSeconds(offset);\n        // if it's synced, it should factor in the playback rate for computing the offset\n        if (this._synced) {\n            computedOffset *= this._playbackRate;\n        }\n        // compute the duration which is either the passed in duration of the buffer.duration - offset\n        const origDuration = duration;\n        duration = defaultArg(duration, Math.max(this._buffer.duration - computedOffset, 0));\n        let computedDuration = this.toSeconds(duration);\n        // scale it by the playback rate\n        computedDuration = computedDuration / this._playbackRate;\n        // get the start time\n        startTime = this.toSeconds(startTime);\n        // make the source\n        const source = new ToneBufferSource({\n            url: this._buffer,\n            context: this.context,\n            fadeIn: this.fadeIn,\n            fadeOut: this.fadeOut,\n            loop: this._loop,\n            loopEnd: this._loopEnd,\n            loopStart: this._loopStart,\n            onended: this._onSourceEnd.bind(this),\n            playbackRate: this._playbackRate,\n        }).connect(this.output);\n        // set the looping properties\n        if (!this._loop && !this._synced) {\n            // cancel the previous stop\n            this._state.cancel(startTime + computedDuration);\n            // if it's not looping, set the state change at the end of the sample\n            this._state.setStateAtTime(\"stopped\", startTime + computedDuration, {\n                implicitEnd: true,\n            });\n        }\n        // add it to the array of active sources\n        this._activeSources.add(source);\n        // start it\n        if (this._loop && isUndef(origDuration)) {\n            source.start(startTime, computedOffset);\n        }\n        else {\n            // subtract the fade out time\n            source.start(startTime, computedOffset, computedDuration - this.toSeconds(this.fadeOut));\n        }\n    }\n    /**\n     * Stop playback.\n     */\n    _stop(time) {\n        const computedTime = this.toSeconds(time);\n        this._activeSources.forEach(source => source.stop(computedTime));\n    }\n    /**\n     * Stop and then restart the player from the beginning (or offset)\n     * @param  time When the player should start.\n     * @param  offset The offset from the beginning of the sample to start at.\n     * @param  duration How long the sample should play. If no duration is given,\n     * \t\t\t\t\tit will default to the full length of the sample (minus any offset)\n     */\n    restart(time, offset, duration) {\n        super.restart(time, offset, duration);\n        return this;\n    }\n    _restart(time, offset, duration) {\n        this._stop(time);\n        this._start(time, offset, duration);\n    }\n    /**\n     * Seek to a specific time in the player's buffer. If the\n     * source is no longer playing at that time, it will stop.\n     * @param offset The time to seek to.\n     * @param when The time for the seek event to occur.\n     * @example\n     * const player = new Tone.Player(\"https://tonejs.github.io/audio/berklee/gurgling_theremin_1.mp3\", () => {\n     * \tplayer.start();\n     * \t// seek to the offset in 1 second from now\n     * \tplayer.seek(0.4, \"+1\");\n     * }).toDestination();\n     */\n    seek(offset, when) {\n        const computedTime = this.toSeconds(when);\n        if (this._state.getValueAtTime(computedTime) === \"started\") {\n            const computedOffset = this.toSeconds(offset);\n            // if it's currently playing, stop it\n            this._stop(computedTime);\n            // restart it at the given time\n            this._start(computedTime, computedOffset);\n        }\n        return this;\n    }\n    /**\n     * Set the loop start and end. Will only loop if loop is set to true.\n     * @param loopStart The loop start time\n     * @param loopEnd The loop end time\n     * @example\n     * const player = new Tone.Player(\"https://tonejs.github.io/audio/berklee/malevoices_aa2_F3.mp3\").toDestination();\n     * // loop between the given points\n     * player.setLoopPoints(0.2, 0.3);\n     * player.loop = true;\n     * player.autostart = true;\n     */\n    setLoopPoints(loopStart, loopEnd) {\n        this.loopStart = loopStart;\n        this.loopEnd = loopEnd;\n        return this;\n    }\n    /**\n     * If loop is true, the loop will start at this position.\n     */\n    get loopStart() {\n        return this._loopStart;\n    }\n    set loopStart(loopStart) {\n        this._loopStart = loopStart;\n        if (this.buffer.loaded) {\n            assertRange(this.toSeconds(loopStart), 0, this.buffer.duration);\n        }\n        // get the current source\n        this._activeSources.forEach(source => {\n            source.loopStart = loopStart;\n        });\n    }\n    /**\n     * If loop is true, the loop will end at this position.\n     */\n    get loopEnd() {\n        return this._loopEnd;\n    }\n    set loopEnd(loopEnd) {\n        this._loopEnd = loopEnd;\n        if (this.buffer.loaded) {\n            assertRange(this.toSeconds(loopEnd), 0, this.buffer.duration);\n        }\n        // get the current source\n        this._activeSources.forEach(source => {\n            source.loopEnd = loopEnd;\n        });\n    }\n    /**\n     * The audio buffer belonging to the player.\n     */\n    get buffer() {\n        return this._buffer;\n    }\n    set buffer(buffer) {\n        this._buffer.set(buffer);\n    }\n    /**\n     * If the buffer should loop once it's over.\n     * @example\n     * const player = new Tone.Player(\"https://tonejs.github.io/audio/drum-samples/breakbeat.mp3\").toDestination();\n     * player.loop = true;\n     * player.autostart = true;\n     */\n    get loop() {\n        return this._loop;\n    }\n    set loop(loop) {\n        // if no change, do nothing\n        if (this._loop === loop) {\n            return;\n        }\n        this._loop = loop;\n        // set the loop of all of the sources\n        this._activeSources.forEach(source => {\n            source.loop = loop;\n        });\n        if (loop) {\n            // remove the next stopEvent\n            const stopEvent = this._state.getNextState(\"stopped\", this.now());\n            if (stopEvent) {\n                this._state.cancel(stopEvent.time);\n            }\n        }\n    }\n    /**\n     * Normal speed is 1. The pitch will change with the playback rate.\n     * @example\n     * const player = new Tone.Player(\"https://tonejs.github.io/audio/berklee/femalevoices_aa2_A5.mp3\").toDestination();\n     * // play at 1/4 speed\n     * player.playbackRate = 0.25;\n     * // play as soon as the buffer is loaded\n     * player.autostart = true;\n     */\n    get playbackRate() {\n        return this._playbackRate;\n    }\n    set playbackRate(rate) {\n        this._playbackRate = rate;\n        const now = this.now();\n        // cancel the stop event since it's at a different time now\n        const stopEvent = this._state.getNextState(\"stopped\", now);\n        if (stopEvent && stopEvent.implicitEnd) {\n            this._state.cancel(stopEvent.time);\n            this._activeSources.forEach(source => source.cancelStop());\n        }\n        // set all the sources\n        this._activeSources.forEach(source => {\n            source.playbackRate.setValueAtTime(rate, now);\n        });\n    }\n    /**\n     * If the buffer should be reversed\n     * @example\n     * const player = new Tone.Player(\"https://tonejs.github.io/audio/berklee/chime_1.mp3\").toDestination();\n     * player.autostart = true;\n     * player.reverse = true;\n     */\n    get reverse() {\n        return this._buffer.reverse;\n    }\n    set reverse(rev) {\n        this._buffer.reverse = rev;\n    }\n    /**\n     * If the buffer is loaded\n     */\n    get loaded() {\n        return this._buffer.loaded;\n    }\n    dispose() {\n        super.dispose();\n        // disconnect all of the players\n        this._activeSources.forEach(source => source.dispose());\n        this._activeSources.clear();\n        this._buffer.dispose();\n        return this;\n    }\n}\n__decorate([\n    timeRange(0)\n], Player.prototype, \"fadeIn\", void 0);\n__decorate([\n    timeRange(0)\n], Player.prototype, \"fadeOut\", void 0);\n//# sourceMappingURL=Player.js.map","import { __awaiter, __decorate } from \"tslib\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { isArray, isObject, isString } from \"../../core/util/TypeCheck\";\nimport { connectSignal, Signal } from \"../../signal/Signal\";\nimport { OfflineContext } from \"../../core/context/OfflineContext\";\nimport { assert } from \"../../core/util/Debug\";\nimport { range, timeRange } from \"../../core/util/Decorator\";\n/**\n * Envelope is an [ADSR](https://en.wikipedia.org/wiki/Synthesizer#ADSR_envelope)\n * envelope generator. Envelope outputs a signal which\n * can be connected to an AudioParam or Tone.Signal.\n * ```\n *           /\\\n *          /  \\\n *         /    \\\n *        /      \\\n *       /        \\___________\n *      /                     \\\n *     /                       \\\n *    /                         \\\n *   /                           \\\n * ```\n * @example\n * return Tone.Offline(() => {\n * \tconst env = new Tone.Envelope({\n * \t\tattack: 0.1,\n * \t\tdecay: 0.2,\n * \t\tsustain: 0.5,\n * \t\trelease: 0.8,\n * \t}).toDestination();\n * \tenv.triggerAttackRelease(0.5);\n * }, 1.5, 1);\n * @category Component\n */\nexport class Envelope extends ToneAudioNode {\n    constructor() {\n        super(optionsFromArguments(Envelope.getDefaults(), arguments, [\"attack\", \"decay\", \"sustain\", \"release\"]));\n        this.name = \"Envelope\";\n        /**\n         * the signal which is output.\n         */\n        this._sig = new Signal({\n            context: this.context,\n            value: 0,\n        });\n        /**\n         * The output signal of the envelope\n         */\n        this.output = this._sig;\n        /**\n         * Envelope has no input\n         */\n        this.input = undefined;\n        const options = optionsFromArguments(Envelope.getDefaults(), arguments, [\"attack\", \"decay\", \"sustain\", \"release\"]);\n        this.attack = options.attack;\n        this.decay = options.decay;\n        this.sustain = options.sustain;\n        this.release = options.release;\n        this.attackCurve = options.attackCurve;\n        this.releaseCurve = options.releaseCurve;\n        this.decayCurve = options.decayCurve;\n    }\n    static getDefaults() {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            attack: 0.01,\n            attackCurve: \"linear\",\n            decay: 0.1,\n            decayCurve: \"exponential\",\n            release: 1,\n            releaseCurve: \"exponential\",\n            sustain: 0.5,\n        });\n    }\n    /**\n     * Read the current value of the envelope. Useful for\n     * synchronizing visual output to the envelope.\n     */\n    get value() {\n        return this.getValueAtTime(this.now());\n    }\n    /**\n     * Get the curve\n     * @param  curve\n     * @param  direction  In/Out\n     * @return The curve name\n     */\n    _getCurve(curve, direction) {\n        if (isString(curve)) {\n            return curve;\n        }\n        else {\n            // look up the name in the curves array\n            let curveName;\n            for (curveName in EnvelopeCurves) {\n                if (EnvelopeCurves[curveName][direction] === curve) {\n                    return curveName;\n                }\n            }\n            // return the custom curve\n            return curve;\n        }\n    }\n    /**\n     * Assign a the curve to the given name using the direction\n     * @param  name\n     * @param  direction In/Out\n     * @param  curve\n     */\n    _setCurve(name, direction, curve) {\n        // check if it's a valid type\n        if (isString(curve) && Reflect.has(EnvelopeCurves, curve)) {\n            const curveDef = EnvelopeCurves[curve];\n            if (isObject(curveDef)) {\n                if (name !== \"_decayCurve\") {\n                    this[name] = curveDef[direction];\n                }\n            }\n            else {\n                this[name] = curveDef;\n            }\n        }\n        else if (isArray(curve) && name !== \"_decayCurve\") {\n            this[name] = curve;\n        }\n        else {\n            throw new Error(\"Envelope: invalid curve: \" + curve);\n        }\n    }\n    /**\n     * The shape of the attack.\n     * Can be any of these strings:\n     * * \"linear\"\n     * * \"exponential\"\n     * * \"sine\"\n     * * \"cosine\"\n     * * \"bounce\"\n     * * \"ripple\"\n     * * \"step\"\n     *\n     * Can also be an array which describes the curve. Values\n     * in the array are evenly subdivided and linearly\n     * interpolated over the duration of the attack.\n     * @example\n     * return Tone.Offline(() => {\n     * \tconst env = new Tone.Envelope(0.4).toDestination();\n     * \tenv.attackCurve = \"linear\";\n     * \tenv.triggerAttack();\n     * }, 1, 1);\n     */\n    get attackCurve() {\n        return this._getCurve(this._attackCurve, \"In\");\n    }\n    set attackCurve(curve) {\n        this._setCurve(\"_attackCurve\", \"In\", curve);\n    }\n    /**\n     * The shape of the release. See the attack curve types.\n     * @example\n     * return Tone.Offline(() => {\n     * \tconst env = new Tone.Envelope({\n     * \t\trelease: 0.8\n     * \t}).toDestination();\n     * \tenv.triggerAttack();\n     * \t// release curve could also be defined by an array\n     * \tenv.releaseCurve = [1, 0.3, 0.4, 0.2, 0.7, 0];\n     * \tenv.triggerRelease(0.2);\n     * }, 1, 1);\n     */\n    get releaseCurve() {\n        return this._getCurve(this._releaseCurve, \"Out\");\n    }\n    set releaseCurve(curve) {\n        this._setCurve(\"_releaseCurve\", \"Out\", curve);\n    }\n    /**\n     * The shape of the decay either \"linear\" or \"exponential\"\n     * @example\n     * return Tone.Offline(() => {\n     * \tconst env = new Tone.Envelope({\n     * \t\tsustain: 0.1,\n     * \t\tdecay: 0.5\n     * \t}).toDestination();\n     * \tenv.decayCurve = \"linear\";\n     * \tenv.triggerAttack();\n     * }, 1, 1);\n     */\n    get decayCurve() {\n        return this._decayCurve;\n    }\n    set decayCurve(curve) {\n        assert([\"linear\", \"exponential\"].some(c => c === curve), `Invalid envelope curve: ${curve}`);\n        this._decayCurve = curve;\n    }\n    /**\n     * Trigger the attack/decay portion of the ADSR envelope.\n     * @param  time When the attack should start.\n     * @param velocity The velocity of the envelope scales the vales.\n     *                             number between 0-1\n     * @example\n     * const env = new Tone.AmplitudeEnvelope().toDestination();\n     * const osc = new Tone.Oscillator().connect(env).start();\n     * // trigger the attack 0.5 seconds from now with a velocity of 0.2\n     * env.triggerAttack(\"+0.5\", 0.2);\n     */\n    triggerAttack(time, velocity = 1) {\n        this.log(\"triggerAttack\", time, velocity);\n        time = this.toSeconds(time);\n        const originalAttack = this.toSeconds(this.attack);\n        let attack = originalAttack;\n        const decay = this.toSeconds(this.decay);\n        // check if it's not a complete attack\n        const currentValue = this.getValueAtTime(time);\n        if (currentValue > 0) {\n            // subtract the current value from the attack time\n            const attackRate = 1 / attack;\n            const remainingDistance = 1 - currentValue;\n            // the attack is now the remaining time\n            attack = remainingDistance / attackRate;\n        }\n        // attack\n        if (attack < this.sampleTime) {\n            this._sig.cancelScheduledValues(time);\n            // case where the attack time is 0 should set instantly\n            this._sig.setValueAtTime(velocity, time);\n        }\n        else if (this._attackCurve === \"linear\") {\n            this._sig.linearRampTo(velocity, attack, time);\n        }\n        else if (this._attackCurve === \"exponential\") {\n            this._sig.targetRampTo(velocity, attack, time);\n        }\n        else {\n            this._sig.cancelAndHoldAtTime(time);\n            let curve = this._attackCurve;\n            // find the starting position in the curve\n            for (let i = 1; i < curve.length; i++) {\n                // the starting index is between the two values\n                if (curve[i - 1] <= currentValue && currentValue <= curve[i]) {\n                    curve = this._attackCurve.slice(i);\n                    // the first index is the current value\n                    curve[0] = currentValue;\n                    break;\n                }\n            }\n            this._sig.setValueCurveAtTime(curve, time, attack, velocity);\n        }\n        // decay\n        if (decay && this.sustain < 1) {\n            const decayValue = velocity * this.sustain;\n            const decayStart = time + attack;\n            this.log(\"decay\", decayStart);\n            if (this._decayCurve === \"linear\") {\n                this._sig.linearRampToValueAtTime(decayValue, decay + decayStart);\n            }\n            else {\n                this._sig.exponentialApproachValueAtTime(decayValue, decayStart, decay);\n            }\n        }\n        return this;\n    }\n    /**\n     * Triggers the release of the envelope.\n     * @param  time When the release portion of the envelope should start.\n     * @example\n     * const env = new Tone.AmplitudeEnvelope().toDestination();\n     * const osc = new Tone.Oscillator({\n     * \ttype: \"sawtooth\"\n     * }).connect(env).start();\n     * env.triggerAttack();\n     * // trigger the release half a second after the attack\n     * env.triggerRelease(\"+0.5\");\n     */\n    triggerRelease(time) {\n        this.log(\"triggerRelease\", time);\n        time = this.toSeconds(time);\n        const currentValue = this.getValueAtTime(time);\n        if (currentValue > 0) {\n            const release = this.toSeconds(this.release);\n            if (release < this.sampleTime) {\n                this._sig.setValueAtTime(0, time);\n            }\n            else if (this._releaseCurve === \"linear\") {\n                this._sig.linearRampTo(0, release, time);\n            }\n            else if (this._releaseCurve === \"exponential\") {\n                this._sig.targetRampTo(0, release, time);\n            }\n            else {\n                assert(isArray(this._releaseCurve), \"releaseCurve must be either 'linear', 'exponential' or an array\");\n                this._sig.cancelAndHoldAtTime(time);\n                this._sig.setValueCurveAtTime(this._releaseCurve, time, release, currentValue);\n            }\n        }\n        return this;\n    }\n    /**\n     * Get the scheduled value at the given time. This will\n     * return the unconverted (raw) value.\n     * @example\n     * const env = new Tone.Envelope(0.5, 1, 0.4, 2);\n     * env.triggerAttackRelease(2);\n     * setInterval(() => console.log(env.getValueAtTime(Tone.now())), 100);\n     */\n    getValueAtTime(time) {\n        return this._sig.getValueAtTime(time);\n    }\n    /**\n     * triggerAttackRelease is shorthand for triggerAttack, then waiting\n     * some duration, then triggerRelease.\n     * @param duration The duration of the sustain.\n     * @param time When the attack should be triggered.\n     * @param velocity The velocity of the envelope.\n     * @example\n     * const env = new Tone.AmplitudeEnvelope().toDestination();\n     * const osc = new Tone.Oscillator().connect(env).start();\n     * // trigger the release 0.5 seconds after the attack\n     * env.triggerAttackRelease(0.5);\n     */\n    triggerAttackRelease(duration, time, velocity = 1) {\n        time = this.toSeconds(time);\n        this.triggerAttack(time, velocity);\n        this.triggerRelease(time + this.toSeconds(duration));\n        return this;\n    }\n    /**\n     * Cancels all scheduled envelope changes after the given time.\n     */\n    cancel(after) {\n        this._sig.cancelScheduledValues(this.toSeconds(after));\n        return this;\n    }\n    /**\n     * Connect the envelope to a destination node.\n     */\n    connect(destination, outputNumber = 0, inputNumber = 0) {\n        connectSignal(this, destination, outputNumber, inputNumber);\n        return this;\n    }\n    /**\n     * Render the envelope curve to an array of the given length.\n     * Good for visualizing the envelope curve. Rescales the duration of the\n     * envelope to fit the length.\n     */\n    asArray(length = 1024) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const duration = length / this.context.sampleRate;\n            const context = new OfflineContext(1, duration, this.context.sampleRate);\n            // normalize the ADSR for the given duration with 20% sustain time\n            const attackPortion = this.toSeconds(this.attack) + this.toSeconds(this.decay);\n            const envelopeDuration = attackPortion + this.toSeconds(this.release);\n            const sustainTime = envelopeDuration * 0.1;\n            const totalDuration = envelopeDuration + sustainTime;\n            // @ts-ignore\n            const clone = new this.constructor(Object.assign(this.get(), {\n                attack: duration * this.toSeconds(this.attack) / totalDuration,\n                decay: duration * this.toSeconds(this.decay) / totalDuration,\n                release: duration * this.toSeconds(this.release) / totalDuration,\n                context\n            }));\n            clone._sig.toDestination();\n            clone.triggerAttackRelease(duration * (attackPortion + sustainTime) / totalDuration, 0);\n            const buffer = yield context.render();\n            return buffer.getChannelData(0);\n        });\n    }\n    dispose() {\n        super.dispose();\n        this._sig.dispose();\n        return this;\n    }\n}\n__decorate([\n    timeRange(0)\n], Envelope.prototype, \"attack\", void 0);\n__decorate([\n    timeRange(0)\n], Envelope.prototype, \"decay\", void 0);\n__decorate([\n    range(0, 1)\n], Envelope.prototype, \"sustain\", void 0);\n__decorate([\n    timeRange(0)\n], Envelope.prototype, \"release\", void 0);\n/**\n * Generate some complex envelope curves.\n */\nconst EnvelopeCurves = (() => {\n    const curveLen = 128;\n    let i;\n    let k;\n    // cosine curve\n    const cosineCurve = [];\n    for (i = 0; i < curveLen; i++) {\n        cosineCurve[i] = Math.sin((i / (curveLen - 1)) * (Math.PI / 2));\n    }\n    // ripple curve\n    const rippleCurve = [];\n    const rippleCurveFreq = 6.4;\n    for (i = 0; i < curveLen - 1; i++) {\n        k = (i / (curveLen - 1));\n        const sineWave = Math.sin(k * (Math.PI * 2) * rippleCurveFreq - Math.PI / 2) + 1;\n        rippleCurve[i] = sineWave / 10 + k * 0.83;\n    }\n    rippleCurve[curveLen - 1] = 1;\n    // stairs curve\n    const stairsCurve = [];\n    const steps = 5;\n    for (i = 0; i < curveLen; i++) {\n        stairsCurve[i] = Math.ceil((i / (curveLen - 1)) * steps) / steps;\n    }\n    // in-out easing curve\n    const sineCurve = [];\n    for (i = 0; i < curveLen; i++) {\n        k = i / (curveLen - 1);\n        sineCurve[i] = 0.5 * (1 - Math.cos(Math.PI * k));\n    }\n    // a bounce curve\n    const bounceCurve = [];\n    for (i = 0; i < curveLen; i++) {\n        k = i / (curveLen - 1);\n        const freq = Math.pow(k, 3) * 4 + 0.2;\n        const val = Math.cos(freq * Math.PI * 2 * k);\n        bounceCurve[i] = Math.abs(val * (1 - k));\n    }\n    /**\n     * Invert a value curve to make it work for the release\n     */\n    function invertCurve(curve) {\n        const out = new Array(curve.length);\n        for (let j = 0; j < curve.length; j++) {\n            out[j] = 1 - curve[j];\n        }\n        return out;\n    }\n    /**\n     * reverse the curve\n     */\n    function reverseCurve(curve) {\n        return curve.slice(0).reverse();\n    }\n    /**\n     * attack and release curve arrays\n     */\n    return {\n        bounce: {\n            In: invertCurve(bounceCurve),\n            Out: bounceCurve,\n        },\n        cosine: {\n            In: cosineCurve,\n            Out: reverseCurve(cosineCurve),\n        },\n        exponential: \"exponential\",\n        linear: \"linear\",\n        ripple: {\n            In: rippleCurve,\n            Out: invertCurve(rippleCurve),\n        },\n        sine: {\n            In: sineCurve,\n            Out: invertCurve(sineCurve),\n        },\n        step: {\n            In: stairsCurve,\n            Out: invertCurve(stairsCurve),\n        },\n    };\n})();\n//# sourceMappingURL=Envelope.js.map","import { Volume } from \"../component/channel/Volume\";\nimport { ToneAudioNode } from \"../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { readOnly } from \"../core/util/Interface\";\n/**\n * Base-class for all instruments\n */\nexport class Instrument extends ToneAudioNode {\n    constructor() {\n        super(optionsFromArguments(Instrument.getDefaults(), arguments));\n        /**\n         * Keep track of all events scheduled to the transport\n         * when the instrument is 'synced'\n         */\n        this._scheduledEvents = [];\n        /**\n         * If the instrument is currently synced\n         */\n        this._synced = false;\n        this._original_triggerAttack = this.triggerAttack;\n        this._original_triggerRelease = this.triggerRelease;\n        const options = optionsFromArguments(Instrument.getDefaults(), arguments);\n        this._volume = this.output = new Volume({\n            context: this.context,\n            volume: options.volume,\n        });\n        this.volume = this._volume.volume;\n        readOnly(this, \"volume\");\n    }\n    static getDefaults() {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            volume: 0,\n        });\n    }\n    /**\n     * Sync the instrument to the Transport. All subsequent calls of\n     * [[triggerAttack]] and [[triggerRelease]] will be scheduled along the transport.\n     * @example\n     * const fmSynth = new Tone.FMSynth().toDestination();\n     * fmSynth.volume.value = -6;\n     * fmSynth.sync();\n     * // schedule 3 notes when the transport first starts\n     * fmSynth.triggerAttackRelease(\"C4\", \"8n\", 0);\n     * fmSynth.triggerAttackRelease(\"E4\", \"8n\", \"8n\");\n     * fmSynth.triggerAttackRelease(\"G4\", \"8n\", \"4n\");\n     * // start the transport to hear the notes\n     * Tone.Transport.start();\n     */\n    sync() {\n        if (this._syncState()) {\n            this._syncMethod(\"triggerAttack\", 1);\n            this._syncMethod(\"triggerRelease\", 0);\n        }\n        return this;\n    }\n    /**\n     * set _sync\n     */\n    _syncState() {\n        let changed = false;\n        if (!this._synced) {\n            this._synced = true;\n            changed = true;\n        }\n        return changed;\n    }\n    /**\n     * Wrap the given method so that it can be synchronized\n     * @param method Which method to wrap and sync\n     * @param  timePosition What position the time argument appears in\n     */\n    _syncMethod(method, timePosition) {\n        const originalMethod = this[\"_original_\" + method] = this[method];\n        this[method] = (...args) => {\n            const time = args[timePosition];\n            const id = this.context.transport.schedule((t) => {\n                args[timePosition] = t;\n                originalMethod.apply(this, args);\n            }, time);\n            this._scheduledEvents.push(id);\n        };\n    }\n    /**\n     * Unsync the instrument from the Transport\n     */\n    unsync() {\n        this._scheduledEvents.forEach(id => this.context.transport.clear(id));\n        this._scheduledEvents = [];\n        if (this._synced) {\n            this._synced = false;\n            this.triggerAttack = this._original_triggerAttack;\n            this.triggerRelease = this._original_triggerRelease;\n        }\n        return this;\n    }\n    /**\n     * Trigger the attack and then the release after the duration.\n     * @param  note     The note to trigger.\n     * @param  duration How long the note should be held for before\n     *                         triggering the release. This value must be greater than 0.\n     * @param time  When the note should be triggered.\n     * @param  velocity The velocity the note should be triggered at.\n     * @example\n     * const synth = new Tone.Synth().toDestination();\n     * // trigger \"C4\" for the duration of an 8th note\n     * synth.triggerAttackRelease(\"C4\", \"8n\");\n     */\n    triggerAttackRelease(note, duration, time, velocity) {\n        const computedTime = this.toSeconds(time);\n        const computedDuration = this.toSeconds(duration);\n        this.triggerAttack(note, computedTime, velocity);\n        this.triggerRelease(computedTime + computedDuration);\n        return this;\n    }\n    /**\n     * clean up\n     * @returns {Instrument} this\n     */\n    dispose() {\n        super.dispose();\n        this._volume.dispose();\n        this.unsync();\n        this._scheduledEvents = [];\n        return this;\n    }\n}\n//# sourceMappingURL=Instrument.js.map","import { __decorate } from \"tslib\";\nimport { FrequencyClass } from \"../core/type/Frequency\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { noOp } from \"../core/util/Interface\";\nimport { Instrument } from \"../instrument/Instrument\";\nimport { timeRange } from \"../core/util/Decorator\";\n/**\n * Abstract base class for other monophonic instruments to extend.\n */\nexport class Monophonic extends Instrument {\n    constructor() {\n        super(optionsFromArguments(Monophonic.getDefaults(), arguments));\n        const options = optionsFromArguments(Monophonic.getDefaults(), arguments);\n        this.portamento = options.portamento;\n        this.onsilence = options.onsilence;\n    }\n    static getDefaults() {\n        return Object.assign(Instrument.getDefaults(), {\n            detune: 0,\n            onsilence: noOp,\n            portamento: 0,\n        });\n    }\n    /**\n     * Trigger the attack of the note optionally with a given velocity.\n     * @param  note The note to trigger.\n     * @param  time When the note should start.\n     * @param  velocity The velocity scaler determines how \"loud\" the note will be triggered.\n     * @example\n     * const synth = new Tone.Synth().toDestination();\n     * // trigger the note a half second from now at half velocity\n     * synth.triggerAttack(\"C4\", \"+0.5\", 0.5);\n     */\n    triggerAttack(note, time, velocity = 1) {\n        this.log(\"triggerAttack\", note, time, velocity);\n        const seconds = this.toSeconds(time);\n        this._triggerEnvelopeAttack(seconds, velocity);\n        this.setNote(note, seconds);\n        return this;\n    }\n    /**\n     * Trigger the release portion of the envelope\n     * @param  time If no time is given, the release happens immediatly\n     * @example\n     * const synth = new Tone.Synth().toDestination();\n     * synth.triggerAttack(\"C4\");\n     * // trigger the release a second from now\n     * synth.triggerRelease(\"+1\");\n     */\n    triggerRelease(time) {\n        this.log(\"triggerRelease\", time);\n        const seconds = this.toSeconds(time);\n        this._triggerEnvelopeRelease(seconds);\n        return this;\n    }\n    /**\n     * Set the note at the given time. If no time is given, the note\n     * will set immediately.\n     * @param note The note to change to.\n     * @param  time The time when the note should be set.\n     * @example\n     * const synth = new Tone.Synth().toDestination();\n     * synth.triggerAttack(\"C4\");\n     * // change to F#6 in one quarter note from now.\n     * synth.setNote(\"F#6\", \"+4n\");\n     */\n    setNote(note, time) {\n        const computedTime = this.toSeconds(time);\n        const computedFrequency = note instanceof FrequencyClass ? note.toFrequency() : note;\n        if (this.portamento > 0 && this.getLevelAtTime(computedTime) > 0.05) {\n            const portTime = this.toSeconds(this.portamento);\n            this.frequency.exponentialRampTo(computedFrequency, portTime, computedTime);\n        }\n        else {\n            this.frequency.setValueAtTime(computedFrequency, computedTime);\n        }\n        return this;\n    }\n}\n__decorate([\n    timeRange(0)\n], Monophonic.prototype, \"portamento\", void 0);\n//# sourceMappingURL=Monophonic.js.map","import { Gain } from \"../../core/context/Gain\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { Envelope } from \"./Envelope\";\n/**\n * AmplitudeEnvelope is a Tone.Envelope connected to a gain node.\n * Unlike Tone.Envelope, which outputs the envelope's value, AmplitudeEnvelope accepts\n * an audio signal as the input and will apply the envelope to the amplitude\n * of the signal.\n * Read more about ADSR Envelopes on [Wikipedia](https://en.wikipedia.org/wiki/Synthesizer#ADSR_envelope).\n *\n * @example\n * return Tone.Offline(() => {\n * \tconst ampEnv = new Tone.AmplitudeEnvelope({\n * \t\tattack: 0.1,\n * \t\tdecay: 0.2,\n * \t\tsustain: 1.0,\n * \t\trelease: 0.8\n * \t}).toDestination();\n * \t// create an oscillator and connect it\n * \tconst osc = new Tone.Oscillator().connect(ampEnv).start();\n * \t// trigger the envelopes attack and release \"8t\" apart\n * \tampEnv.triggerAttackRelease(\"8t\");\n * }, 1.5, 1);\n * @category Component\n */\nexport class AmplitudeEnvelope extends Envelope {\n    constructor() {\n        super(optionsFromArguments(AmplitudeEnvelope.getDefaults(), arguments, [\"attack\", \"decay\", \"sustain\", \"release\"]));\n        this.name = \"AmplitudeEnvelope\";\n        this._gainNode = new Gain({\n            context: this.context,\n            gain: 0,\n        });\n        this.output = this._gainNode;\n        this.input = this._gainNode;\n        this._sig.connect(this._gainNode.gain);\n        this.output = this._gainNode;\n        this.input = this._gainNode;\n    }\n    /**\n     * Clean up\n     */\n    dispose() {\n        super.dispose();\n        this._gainNode.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=AmplitudeEnvelope.js.map","import { AmplitudeEnvelope } from \"../component/envelope/AmplitudeEnvelope\";\nimport { Envelope } from \"../component/envelope/Envelope\";\nimport { ToneAudioNode } from \"../core/context/ToneAudioNode\";\nimport { omitFromObject, optionsFromArguments } from \"../core/util/Defaults\";\nimport { readOnly } from \"../core/util/Interface\";\nimport { OmniOscillator } from \"../source/oscillator/OmniOscillator\";\nimport { Source } from \"../source/Source\";\nimport { Monophonic } from \"./Monophonic\";\n/**\n * Synth is composed simply of a [[OmniOscillator]] routed through an [[AmplitudeEnvelope]].\n * ```\n * +----------------+   +-------------------+\n * | OmniOscillator +>--> AmplitudeEnvelope +>--> Output\n * +----------------+   +-------------------+\n * ```\n * @example\n * const synth = new Tone.Synth().toDestination();\n * synth.triggerAttackRelease(\"C4\", \"8n\");\n * @category Instrument\n */\nexport class Synth extends Monophonic {\n    constructor() {\n        super(optionsFromArguments(Synth.getDefaults(), arguments));\n        this.name = \"Synth\";\n        const options = optionsFromArguments(Synth.getDefaults(), arguments);\n        this.oscillator = new OmniOscillator(Object.assign({\n            context: this.context,\n            detune: options.detune,\n            onstop: () => this.onsilence(this),\n        }, options.oscillator));\n        this.frequency = this.oscillator.frequency;\n        this.detune = this.oscillator.detune;\n        this.envelope = new AmplitudeEnvelope(Object.assign({\n            context: this.context,\n        }, options.envelope));\n        // connect the oscillators to the output\n        this.oscillator.chain(this.envelope, this.output);\n        readOnly(this, [\"oscillator\", \"frequency\", \"detune\", \"envelope\"]);\n    }\n    static getDefaults() {\n        return Object.assign(Monophonic.getDefaults(), {\n            envelope: Object.assign(omitFromObject(Envelope.getDefaults(), Object.keys(ToneAudioNode.getDefaults())), {\n                attack: 0.005,\n                decay: 0.1,\n                release: 1,\n                sustain: 0.3,\n            }),\n            oscillator: Object.assign(omitFromObject(OmniOscillator.getDefaults(), [...Object.keys(Source.getDefaults()), \"frequency\", \"detune\"]), {\n                type: \"triangle\",\n            }),\n        });\n    }\n    /**\n     * start the attack portion of the envelope\n     * @param time the time the attack should start\n     * @param velocity the velocity of the note (0-1)\n     */\n    _triggerEnvelopeAttack(time, velocity) {\n        // the envelopes\n        this.envelope.triggerAttack(time, velocity);\n        this.oscillator.start(time);\n        // if there is no release portion, stop the oscillator\n        if (this.envelope.sustain === 0) {\n            const computedAttack = this.toSeconds(this.envelope.attack);\n            const computedDecay = this.toSeconds(this.envelope.decay);\n            this.oscillator.stop(time + computedAttack + computedDecay);\n        }\n    }\n    /**\n     * start the release portion of the envelope\n     * @param time the time the release should start\n     */\n    _triggerEnvelopeRelease(time) {\n        this.envelope.triggerRelease(time);\n        this.oscillator.stop(time + this.toSeconds(this.envelope.release));\n    }\n    getLevelAtTime(time) {\n        time = this.toSeconds(time);\n        return this.envelope.getValueAtTime(time);\n    }\n    /**\n     * clean up\n     */\n    dispose() {\n        super.dispose();\n        this.oscillator.dispose();\n        this.envelope.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=Synth.js.map","import { __decorate } from \"tslib\";\nimport { FrequencyClass } from \"../core/type/Frequency\";\nimport { deepMerge, optionsFromArguments } from \"../core/util/Defaults\";\nimport { readOnly } from \"../core/util/Interface\";\nimport { Monophonic } from \"./Monophonic\";\nimport { Synth } from \"./Synth\";\nimport { range, timeRange } from \"../core/util/Decorator\";\n/**\n * MembraneSynth makes kick and tom sounds using a single oscillator\n * with an amplitude envelope and frequency ramp. A Tone.OmniOscillator\n * is routed through a Tone.AmplitudeEnvelope to the output. The drum\n * quality of the sound comes from the frequency envelope applied\n * during MembraneSynth.triggerAttack(note). The frequency envelope\n * starts at <code>note * .octaves</code> and ramps to <code>note</code>\n * over the duration of <code>.pitchDecay</code>.\n * @example\n * const synth = new Tone.MembraneSynth().toDestination();\n * synth.triggerAttackRelease(\"C2\", \"8n\");\n * @category Instrument\n */\nexport class MembraneSynth extends Synth {\n    constructor() {\n        super(optionsFromArguments(MembraneSynth.getDefaults(), arguments));\n        this.name = \"MembraneSynth\";\n        /**\n         * Portamento is ignored in this synth. use pitch decay instead.\n         */\n        this.portamento = 0;\n        const options = optionsFromArguments(MembraneSynth.getDefaults(), arguments);\n        this.pitchDecay = options.pitchDecay;\n        this.octaves = options.octaves;\n        readOnly(this, [\"oscillator\", \"envelope\"]);\n    }\n    static getDefaults() {\n        return deepMerge(Monophonic.getDefaults(), Synth.getDefaults(), {\n            envelope: {\n                attack: 0.001,\n                attackCurve: \"exponential\",\n                decay: 0.4,\n                release: 1.4,\n                sustain: 0.01,\n            },\n            octaves: 10,\n            oscillator: {\n                type: \"sine\",\n            },\n            pitchDecay: 0.05,\n        });\n    }\n    setNote(note, time) {\n        const seconds = this.toSeconds(time);\n        const hertz = this.toFrequency(note instanceof FrequencyClass ? note.toFrequency() : note);\n        const maxNote = hertz * this.octaves;\n        this.oscillator.frequency.setValueAtTime(maxNote, seconds);\n        this.oscillator.frequency.exponentialRampToValueAtTime(hertz, seconds + this.toSeconds(this.pitchDecay));\n        return this;\n    }\n    dispose() {\n        super.dispose();\n        return this;\n    }\n}\n__decorate([\n    range(0)\n], MembraneSynth.prototype, \"octaves\", void 0);\n__decorate([\n    timeRange(0)\n], MembraneSynth.prototype, \"pitchDecay\", void 0);\n//# sourceMappingURL=MembraneSynth.js.map","/**\n * All of the classes or functions which are loaded into the AudioWorkletGlobalScope\n */\nconst workletContext = new Set();\n/**\n * Add a class to the AudioWorkletGlobalScope\n */\nexport function addToWorklet(classOrFunction) {\n    workletContext.add(classOrFunction);\n}\n/**\n * Register a processor in the AudioWorkletGlobalScope with the given name\n */\nexport function registerProcessor(name, classDesc) {\n    const processor = /* javascript */ `registerProcessor(\"${name}\", ${classDesc})`;\n    workletContext.add(processor);\n}\n/**\n * Get all of the modules which have been registered to the AudioWorkletGlobalScope\n */\nexport function getWorkletGlobalScope() {\n    return Array.from(workletContext).join(\"\\n\");\n}\n//# sourceMappingURL=WorkletGlobalScope.js.map","import { addToWorklet } from \"./WorkletGlobalScope\";\nconst toneAudioWorkletProcessor = /* javascript */ `\n\t/**\n\t * The base AudioWorkletProcessor for use in Tone.js. Works with the [[ToneAudioWorklet]]. \n\t */\n\tclass ToneAudioWorkletProcessor extends AudioWorkletProcessor {\n\n\t\tconstructor(options) {\n\t\t\t\n\t\t\tsuper(options);\n\t\t\t/**\n\t\t\t * If the processor was disposed or not. Keep alive until it's disposed.\n\t\t\t */\n\t\t\tthis.disposed = false;\n\t\t   \t/** \n\t\t\t * The number of samples in the processing block\n\t\t\t */\n\t\t\tthis.blockSize = 128;\n\t\t\t/**\n\t\t\t * the sample rate\n\t\t\t */\n\t\t\tthis.sampleRate = sampleRate;\n\n\t\t\tthis.port.onmessage = (event) => {\n\t\t\t\t// when it receives a dispose \n\t\t\t\tif (event.data === \"dispose\") {\n\t\t\t\t\tthis.disposed = true;\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t}\n`;\naddToWorklet(toneAudioWorkletProcessor);\n//# sourceMappingURL=ToneAudioWorkletProcessor.worklet.js.map","import \"./ToneAudioWorkletProcessor.worklet\";\nimport { addToWorklet } from \"./WorkletGlobalScope\";\nexport const singleIOProcess = /* javascript */ `\n\t/**\n\t * Abstract class for a single input/output processor. \n\t * has a 'generate' function which processes one sample at a time\n\t */\n\tclass SingleIOProcessor extends ToneAudioWorkletProcessor {\n\n\t\tconstructor(options) {\n\t\t\tsuper(Object.assign(options, {\n\t\t\t\tnumberOfInputs: 1,\n\t\t\t\tnumberOfOutputs: 1\n\t\t\t}));\n\t\t\t/**\n\t\t\t * Holds the name of the parameter and a single value of that\n\t\t\t * parameter at the current sample\n\t\t\t * @type { [name: string]: number }\n\t\t\t */\n\t\t\tthis.params = {}\n\t\t}\n\n\t\t/**\n\t\t * Generate an output sample from the input sample and parameters\n\t\t * @abstract\n\t\t * @param input number\n\t\t * @param channel number\n\t\t * @param parameters { [name: string]: number }\n\t\t * @returns number\n\t\t */\n\t\tgenerate(){}\n\n\t\t/**\n\t\t * Update the private params object with the \n\t\t * values of the parameters at the given index\n\t\t * @param parameters { [name: string]: Float32Array },\n\t\t * @param index number\n\t\t */\n\t\tupdateParams(parameters, index) {\n\t\t\tfor (const paramName in parameters) {\n\t\t\t\tconst param = parameters[paramName];\n\t\t\t\tif (param.length > 1) {\n\t\t\t\t\tthis.params[paramName] = parameters[paramName][index];\n\t\t\t\t} else {\n\t\t\t\t\tthis.params[paramName] = parameters[paramName][0];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Process a single frame of the audio\n\t\t * @param inputs Float32Array[][]\n\t\t * @param outputs Float32Array[][]\n\t\t */\n\t\tprocess(inputs, outputs, parameters) {\n\t\t\tconst input = inputs[0];\n\t\t\tconst output = outputs[0];\n\t\t\t// get the parameter values\n\t\t\tconst channelCount = Math.max(input && input.length || 0, output.length);\n\t\t\tfor (let sample = 0; sample < this.blockSize; sample++) {\n\t\t\t\tthis.updateParams(parameters, sample);\n\t\t\t\tfor (let channel = 0; channel < channelCount; channel++) {\n\t\t\t\t\tconst inputSample = input && input.length ? input[channel][sample] : 0;\n\t\t\t\t\toutput[channel][sample] = this.generate(inputSample, channel, this.params);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn !this.disposed;\n\t\t}\n\t};\n`;\naddToWorklet(singleIOProcess);\n//# sourceMappingURL=SingleIOProcessor.worklet.js.map","import { addToWorklet } from \"./WorkletGlobalScope\";\nconst delayLine = /* javascript */ `\n\t/**\n\t * A multichannel buffer for use within an AudioWorkletProcessor as a delay line\n\t */\n\tclass DelayLine {\n\t\t\n\t\tconstructor(size, channels) {\n\t\t\tthis.buffer = [];\n\t\t\tthis.writeHead = []\n\t\t\tthis.size = size;\n\n\t\t\t// create the empty channels\n\t\t\tfor (let i = 0; i < channels; i++) {\n\t\t\t\tthis.buffer[i] = new Float32Array(this.size);\n\t\t\t\tthis.writeHead[i] = 0;\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Push a value onto the end\n\t\t * @param channel number\n\t\t * @param value number\n\t\t */\n\t\tpush(channel, value) {\n\t\t\tthis.writeHead[channel] += 1;\n\t\t\tif (this.writeHead[channel] > this.size) {\n\t\t\t\tthis.writeHead[channel] = 0;\n\t\t\t}\n\t\t\tthis.buffer[channel][this.writeHead[channel]] = value;\n\t\t}\n\n\t\t/**\n\t\t * Get the recorded value of the channel given the delay\n\t\t * @param channel number\n\t\t * @param delay number delay samples\n\t\t */\n\t\tget(channel, delay) {\n\t\t\tlet readHead = this.writeHead[channel] - Math.floor(delay);\n\t\t\tif (readHead < 0) {\n\t\t\t\treadHead += this.size;\n\t\t\t}\n\t\t\treturn this.buffer[channel][readHead];\n\t\t}\n\t}\n`;\naddToWorklet(delayLine);\n//# sourceMappingURL=DelayLine.worklet.js.map","import \"../../core/worklet/SingleIOProcessor.worklet\";\nimport \"../../core/worklet/DelayLine.worklet\";\nimport { registerProcessor } from \"../../core/worklet/WorkletGlobalScope\";\nexport const workletName = \"feedback-comb-filter\";\nconst feedbackCombFilter = /* javascript */ `\n\tclass FeedbackCombFilterWorklet extends SingleIOProcessor {\n\n\t\tconstructor(options) {\n\t\t\tsuper(options);\n\t\t\tthis.delayLine = new DelayLine(this.sampleRate, options.channelCount || 2);\n\t\t}\n\n\t\tstatic get parameterDescriptors() {\n\t\t\treturn [{\n\t\t\t\tname: \"delayTime\",\n\t\t\t\tdefaultValue: 0.1,\n\t\t\t\tminValue: 0,\n\t\t\t\tmaxValue: 1,\n\t\t\t\tautomationRate: \"k-rate\"\n\t\t\t}, {\n\t\t\t\tname: \"feedback\",\n\t\t\t\tdefaultValue: 0.5,\n\t\t\t\tminValue: 0,\n\t\t\t\tmaxValue: 0.9999,\n\t\t\t\tautomationRate: \"k-rate\"\n\t\t\t}];\n\t\t}\n\n\t\tgenerate(input, channel, parameters) {\n\t\t\tconst delayedSample = this.delayLine.get(channel, parameters.delayTime * this.sampleRate);\n\t\t\tthis.delayLine.push(channel, input + delayedSample * parameters.feedback);\n\t\t\treturn delayedSample;\n\t\t}\n\t}\n`;\nregisterProcessor(workletName, feedbackCombFilter);\n//# sourceMappingURL=FeedbackCombFilter.worklet.js.map","import { __decorate } from \"tslib\";\nimport { ToneAudioBuffers } from \"../core/context/ToneAudioBuffers\";\nimport { ftomf, intervalToFrequencyRatio } from \"../core/type/Conversions\";\nimport { FrequencyClass } from \"../core/type/Frequency\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { noOp } from \"../core/util/Interface\";\nimport { isArray, isNote, isNumber } from \"../core/util/TypeCheck\";\nimport { Instrument } from \"../instrument/Instrument\";\nimport { ToneBufferSource } from \"../source/buffer/ToneBufferSource\";\nimport { timeRange } from \"../core/util/Decorator\";\nimport { assert } from \"../core/util/Debug\";\n/**\n * Pass in an object which maps the note's pitch or midi value to the url,\n * then you can trigger the attack and release of that note like other instruments.\n * By automatically repitching the samples, it is possible to play pitches which\n * were not explicitly included which can save loading time.\n *\n * For sample or buffer playback where repitching is not necessary,\n * use [[Player]].\n * @example\n * const sampler = new Tone.Sampler({\n * \turls: {\n * \t\tA1: \"A1.mp3\",\n * \t\tA2: \"A2.mp3\",\n * \t},\n * \tbaseUrl: \"https://tonejs.github.io/audio/casio/\",\n * \tonload: () => {\n * \t\tsampler.triggerAttackRelease([\"C1\", \"E1\", \"G1\", \"B1\"], 0.5);\n * \t}\n * }).toDestination();\n * @category Instrument\n */\nexport class Sampler extends Instrument {\n    constructor() {\n        super(optionsFromArguments(Sampler.getDefaults(), arguments, [\"urls\", \"onload\", \"baseUrl\"], \"urls\"));\n        this.name = \"Sampler\";\n        /**\n         * The object of all currently playing BufferSources\n         */\n        this._activeSources = new Map();\n        const options = optionsFromArguments(Sampler.getDefaults(), arguments, [\"urls\", \"onload\", \"baseUrl\"], \"urls\");\n        const urlMap = {};\n        Object.keys(options.urls).forEach((note) => {\n            const noteNumber = parseInt(note, 10);\n            assert(isNote(note)\n                || (isNumber(noteNumber) && isFinite(noteNumber)), `url key is neither a note or midi pitch: ${note}`);\n            if (isNote(note)) {\n                // convert the note name to MIDI\n                const mid = new FrequencyClass(this.context, note).toMidi();\n                urlMap[mid] = options.urls[note];\n            }\n            else if (isNumber(noteNumber) && isFinite(noteNumber)) {\n                // otherwise if it's numbers assume it's midi\n                urlMap[noteNumber] = options.urls[noteNumber];\n            }\n        });\n        this._buffers = new ToneAudioBuffers({\n            urls: urlMap,\n            onload: options.onload,\n            baseUrl: options.baseUrl,\n            onerror: options.onerror,\n        });\n        this.attack = options.attack;\n        this.release = options.release;\n        this.curve = options.curve;\n        // invoke the callback if it's already loaded\n        if (this._buffers.loaded) {\n            // invoke onload deferred\n            Promise.resolve().then(options.onload);\n        }\n    }\n    static getDefaults() {\n        return Object.assign(Instrument.getDefaults(), {\n            attack: 0,\n            baseUrl: \"\",\n            curve: \"exponential\",\n            onload: noOp,\n            onerror: noOp,\n            release: 0.1,\n            urls: {},\n        });\n    }\n    /**\n     * Returns the difference in steps between the given midi note at the closets sample.\n     */\n    _findClosest(midi) {\n        // searches within 8 octaves of the given midi note\n        const MAX_INTERVAL = 96;\n        let interval = 0;\n        while (interval < MAX_INTERVAL) {\n            // check above and below\n            if (this._buffers.has(midi + interval)) {\n                return -interval;\n            }\n            else if (this._buffers.has(midi - interval)) {\n                return interval;\n            }\n            interval++;\n        }\n        throw new Error(`No available buffers for note: ${midi}`);\n    }\n    /**\n     * @param  notes\tThe note to play, or an array of notes.\n     * @param  time     When to play the note\n     * @param  velocity The velocity to play the sample back.\n     */\n    triggerAttack(notes, time, velocity = 1) {\n        this.log(\"triggerAttack\", notes, time, velocity);\n        if (!Array.isArray(notes)) {\n            notes = [notes];\n        }\n        notes.forEach(note => {\n            const midiFloat = ftomf(new FrequencyClass(this.context, note).toFrequency());\n            const midi = Math.round(midiFloat);\n            const remainder = midiFloat - midi;\n            // find the closest note pitch\n            const difference = this._findClosest(midi);\n            const closestNote = midi - difference;\n            const buffer = this._buffers.get(closestNote);\n            const playbackRate = intervalToFrequencyRatio(difference + remainder);\n            // play that note\n            const source = new ToneBufferSource({\n                url: buffer,\n                context: this.context,\n                curve: this.curve,\n                fadeIn: this.attack,\n                fadeOut: this.release,\n                playbackRate,\n            }).connect(this.output);\n            source.start(time, 0, buffer.duration / playbackRate, velocity);\n            // add it to the active sources\n            if (!isArray(this._activeSources.get(midi))) {\n                this._activeSources.set(midi, []);\n            }\n            this._activeSources.get(midi).push(source);\n            // remove it when it's done\n            source.onended = () => {\n                if (this._activeSources && this._activeSources.has(midi)) {\n                    const sources = this._activeSources.get(midi);\n                    const index = sources.indexOf(source);\n                    if (index !== -1) {\n                        sources.splice(index, 1);\n                    }\n                }\n            };\n        });\n        return this;\n    }\n    /**\n     * @param  notes\tThe note to release, or an array of notes.\n     * @param  time     \tWhen to release the note.\n     */\n    triggerRelease(notes, time) {\n        this.log(\"triggerRelease\", notes, time);\n        if (!Array.isArray(notes)) {\n            notes = [notes];\n        }\n        notes.forEach(note => {\n            const midi = new FrequencyClass(this.context, note).toMidi();\n            // find the note\n            if (this._activeSources.has(midi) && this._activeSources.get(midi).length) {\n                const sources = this._activeSources.get(midi);\n                time = this.toSeconds(time);\n                sources.forEach(source => {\n                    source.stop(time);\n                });\n                this._activeSources.set(midi, []);\n            }\n        });\n        return this;\n    }\n    /**\n     * Release all currently active notes.\n     * @param  time     \tWhen to release the notes.\n     */\n    releaseAll(time) {\n        const computedTime = this.toSeconds(time);\n        this._activeSources.forEach(sources => {\n            while (sources.length) {\n                const source = sources.shift();\n                source.stop(computedTime);\n            }\n        });\n        return this;\n    }\n    sync() {\n        if (this._syncState()) {\n            this._syncMethod(\"triggerAttack\", 1);\n            this._syncMethod(\"triggerRelease\", 1);\n        }\n        return this;\n    }\n    /**\n     * Invoke the attack phase, then after the duration, invoke the release.\n     * @param  notes\tThe note to play and release, or an array of notes.\n     * @param  duration The time the note should be held\n     * @param  time     When to start the attack\n     * @param  velocity The velocity of the attack\n     */\n    triggerAttackRelease(notes, duration, time, velocity = 1) {\n        const computedTime = this.toSeconds(time);\n        this.triggerAttack(notes, computedTime, velocity);\n        if (isArray(duration)) {\n            assert(isArray(notes), \"notes must be an array when duration is array\");\n            notes.forEach((note, index) => {\n                const d = duration[Math.min(index, duration.length - 1)];\n                this.triggerRelease(note, computedTime + this.toSeconds(d));\n            });\n        }\n        else {\n            this.triggerRelease(notes, computedTime + this.toSeconds(duration));\n        }\n        return this;\n    }\n    /**\n     * Add a note to the sampler.\n     * @param  note      The buffer's pitch.\n     * @param  url  Either the url of the buffer, or a buffer which will be added with the given name.\n     * @param  callback  The callback to invoke when the url is loaded.\n     */\n    add(note, url, callback) {\n        assert(isNote(note) || isFinite(note), `note must be a pitch or midi: ${note}`);\n        if (isNote(note)) {\n            // convert the note name to MIDI\n            const mid = new FrequencyClass(this.context, note).toMidi();\n            this._buffers.add(mid, url, callback);\n        }\n        else {\n            // otherwise if it's numbers assume it's midi\n            this._buffers.add(note, url, callback);\n        }\n        return this;\n    }\n    /**\n     * If the buffers are loaded or not\n     */\n    get loaded() {\n        return this._buffers.loaded;\n    }\n    /**\n     * Clean up\n     */\n    dispose() {\n        super.dispose();\n        this._buffers.dispose();\n        this._activeSources.forEach(sources => {\n            sources.forEach(source => source.dispose());\n        });\n        this._activeSources.clear();\n        return this;\n    }\n}\n__decorate([\n    timeRange(0)\n], Sampler.prototype, \"attack\", void 0);\n__decorate([\n    timeRange(0)\n], Sampler.prototype, \"release\", void 0);\n//# sourceMappingURL=Sampler.js.map","import { Param } from \"../../core/context/Param\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\n/**\n * Panner is an equal power Left/Right Panner. It is a wrapper around the StereoPannerNode.\n * @example\n * return Tone.Offline(() => {\n * // move the input signal from right to left\n * \tconst panner = new Tone.Panner(1).toDestination();\n * \tpanner.pan.rampTo(-1, 0.5);\n * \tconst osc = new Tone.Oscillator(100).connect(panner).start();\n * }, 0.5, 2);\n * @category Component\n */\nexport class Panner extends ToneAudioNode {\n    constructor() {\n        super(Object.assign(optionsFromArguments(Panner.getDefaults(), arguments, [\"pan\"])));\n        this.name = \"Panner\";\n        /**\n         * the panner node\n         */\n        this._panner = this.context.createStereoPanner();\n        this.input = this._panner;\n        this.output = this._panner;\n        const options = optionsFromArguments(Panner.getDefaults(), arguments, [\"pan\"]);\n        this.pan = new Param({\n            context: this.context,\n            param: this._panner.pan,\n            value: options.pan,\n            minValue: -1,\n            maxValue: 1,\n        });\n        // this is necessary for standardized-audio-context\n        // doesn't make any difference for the native AudioContext\n        // https://github.com/chrisguttandin/standardized-audio-context/issues/647\n        this._panner.channelCount = options.channelCount;\n        this._panner.channelCountMode = \"explicit\";\n        // initial value\n        readOnly(this, \"pan\");\n    }\n    static getDefaults() {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            pan: 0,\n            channelCount: 1,\n        });\n    }\n    dispose() {\n        super.dispose();\n        this._panner.disconnect();\n        this.pan.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=Panner.js.map","import \"../core/worklet/SingleIOProcessor.worklet\";\nimport { registerProcessor } from \"../core/worklet/WorkletGlobalScope\";\nexport const workletName = \"bit-crusher\";\nexport const bitCrusherWorklet = /* javascript */ `\n\tclass BitCrusherWorklet extends SingleIOProcessor {\n\n\t\tstatic get parameterDescriptors() {\n\t\t\treturn [{\n\t\t\t\tname: \"bits\",\n\t\t\t\tdefaultValue: 12,\n\t\t\t\tminValue: 1,\n\t\t\t\tmaxValue: 16,\n\t\t\t\tautomationRate: 'k-rate'\n\t\t\t}];\n\t\t}\n\n\t\tgenerate(input, _channel, parameters) {\n\t\t\tconst step = Math.pow(0.5, parameters.bits - 1);\n\t\t\tconst val = step * Math.floor(input / step + 0.5);\n\t\t\treturn val;\n\t\t}\n\t}\n`;\nregisterProcessor(workletName, bitCrusherWorklet);\n//# sourceMappingURL=BitCrusher.worklet.js.map","import { Gain } from \"../../core/context/Gain\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\n/**\n * Solo lets you isolate a specific audio stream. When an instance is set to `solo=true`,\n * it will mute all other instances of Solo.\n * @example\n * const soloA = new Tone.Solo().toDestination();\n * const oscA = new Tone.Oscillator(\"C4\", \"sawtooth\").connect(soloA);\n * const soloB = new Tone.Solo().toDestination();\n * const oscB = new Tone.Oscillator(\"E4\", \"square\").connect(soloB);\n * soloA.solo = true;\n * // no audio will pass through soloB\n * @category Component\n */\nexport class Solo extends ToneAudioNode {\n    constructor() {\n        super(optionsFromArguments(Solo.getDefaults(), arguments, [\"solo\"]));\n        this.name = \"Solo\";\n        const options = optionsFromArguments(Solo.getDefaults(), arguments, [\"solo\"]);\n        this.input = this.output = new Gain({\n            context: this.context,\n        });\n        if (!Solo._allSolos.has(this.context)) {\n            Solo._allSolos.set(this.context, new Set());\n        }\n        Solo._allSolos.get(this.context).add(this);\n        // set initially\n        this.solo = options.solo;\n    }\n    static getDefaults() {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            solo: false,\n        });\n    }\n    /**\n     * Isolates this instance and mutes all other instances of Solo.\n     * Only one instance can be soloed at a time. A soloed\n     * instance will report `solo=false` when another instance is soloed.\n     */\n    get solo() {\n        return this._isSoloed();\n    }\n    set solo(solo) {\n        if (solo) {\n            this._addSolo();\n        }\n        else {\n            this._removeSolo();\n        }\n        Solo._allSolos.get(this.context).forEach(instance => instance._updateSolo());\n    }\n    /**\n     * If the current instance is muted, i.e. another instance is soloed\n     */\n    get muted() {\n        return this.input.gain.value === 0;\n    }\n    /**\n     * Add this to the soloed array\n     */\n    _addSolo() {\n        if (!Solo._soloed.has(this.context)) {\n            Solo._soloed.set(this.context, new Set());\n        }\n        Solo._soloed.get(this.context).add(this);\n    }\n    /**\n     * Remove this from the soloed array\n     */\n    _removeSolo() {\n        if (Solo._soloed.has(this.context)) {\n            Solo._soloed.get(this.context).delete(this);\n        }\n    }\n    /**\n     * Is this on the soloed array\n     */\n    _isSoloed() {\n        return Solo._soloed.has(this.context) && Solo._soloed.get(this.context).has(this);\n    }\n    /**\n     * Returns true if no one is soloed\n     */\n    _noSolos() {\n        // either does not have any soloed added\n        return !Solo._soloed.has(this.context) ||\n            // or has a solo set but doesn't include any items\n            (Solo._soloed.has(this.context) && Solo._soloed.get(this.context).size === 0);\n    }\n    /**\n     * Solo the current instance and unsolo all other instances.\n     */\n    _updateSolo() {\n        if (this._isSoloed()) {\n            this.input.gain.value = 1;\n        }\n        else if (this._noSolos()) {\n            // no one is soloed\n            this.input.gain.value = 1;\n        }\n        else {\n            this.input.gain.value = 0;\n        }\n    }\n    dispose() {\n        super.dispose();\n        Solo._allSolos.get(this.context).delete(this);\n        this._removeSolo();\n        return this;\n    }\n}\n/**\n * Hold all of the solo'ed tracks belonging to a specific context\n */\nSolo._allSolos = new Map();\n/**\n * Hold the currently solo'ed instance(s)\n */\nSolo._soloed = new Map();\n//# sourceMappingURL=Solo.js.map","import { readOnly } from \"../../core/util/Interface\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { Panner } from \"./Panner\";\nimport { Volume } from \"./Volume\";\n/**\n * PanVol is a Tone.Panner and Tone.Volume in one.\n * @example\n * // pan the incoming signal left and drop the volume\n * const panVol = new Tone.PanVol(-0.25, -12).toDestination();\n * const osc = new Tone.Oscillator().connect(panVol).start();\n * @category Component\n */\nexport class PanVol extends ToneAudioNode {\n    constructor() {\n        super(optionsFromArguments(PanVol.getDefaults(), arguments, [\"pan\", \"volume\"]));\n        this.name = \"PanVol\";\n        const options = optionsFromArguments(PanVol.getDefaults(), arguments, [\"pan\", \"volume\"]);\n        this._panner = this.input = new Panner({\n            context: this.context,\n            pan: options.pan,\n            channelCount: options.channelCount,\n        });\n        this.pan = this._panner.pan;\n        this._volume = this.output = new Volume({\n            context: this.context,\n            volume: options.volume,\n        });\n        this.volume = this._volume.volume;\n        // connections\n        this._panner.connect(this._volume);\n        this.mute = options.mute;\n        readOnly(this, [\"pan\", \"volume\"]);\n    }\n    static getDefaults() {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            mute: false,\n            pan: 0,\n            volume: 0,\n            channelCount: 1,\n        });\n    }\n    /**\n     * Mute/unmute the volume\n     */\n    get mute() {\n        return this._volume.mute;\n    }\n    set mute(mute) {\n        this._volume.mute = mute;\n    }\n    dispose() {\n        super.dispose();\n        this._panner.dispose();\n        this.pan.dispose();\n        this._volume.dispose();\n        this.volume.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=PanVol.js.map","import { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { Solo } from \"./Solo\";\nimport { PanVol } from \"./PanVol\";\nimport { readOnly } from \"../../core/util/Interface\";\nimport { Gain } from \"../../core/context/Gain\";\n/**\n * Channel provides a channel strip interface with volume, pan, solo and mute controls.\n * See [[PanVol]] and [[Solo]]\n * @example\n * // pan the incoming signal left and drop the volume 12db\n * const channel = new Tone.Channel(-0.25, -12);\n * @category Component\n */\nexport class Channel extends ToneAudioNode {\n    constructor() {\n        super(optionsFromArguments(Channel.getDefaults(), arguments, [\"volume\", \"pan\"]));\n        this.name = \"Channel\";\n        const options = optionsFromArguments(Channel.getDefaults(), arguments, [\"volume\", \"pan\"]);\n        this._solo = this.input = new Solo({\n            solo: options.solo,\n            context: this.context,\n        });\n        this._panVol = this.output = new PanVol({\n            context: this.context,\n            pan: options.pan,\n            volume: options.volume,\n            mute: options.mute,\n            channelCount: options.channelCount\n        });\n        this.pan = this._panVol.pan;\n        this.volume = this._panVol.volume;\n        this._solo.connect(this._panVol);\n        readOnly(this, [\"pan\", \"volume\"]);\n    }\n    static getDefaults() {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            pan: 0,\n            volume: 0,\n            mute: false,\n            solo: false,\n            channelCount: 1,\n        });\n    }\n    /**\n     * Solo/unsolo the channel. Soloing is only relative to other [[Channels]] and [[Solo]] instances\n     */\n    get solo() {\n        return this._solo.solo;\n    }\n    set solo(solo) {\n        this._solo.solo = solo;\n    }\n    /**\n     * If the current instance is muted, i.e. another instance is soloed,\n     * or the channel is muted\n     */\n    get muted() {\n        return this._solo.muted || this.mute;\n    }\n    /**\n     * Mute/unmute the volume\n     */\n    get mute() {\n        return this._panVol.mute;\n    }\n    set mute(mute) {\n        this._panVol.mute = mute;\n    }\n    /**\n     * Get the gain node belonging to the bus name. Create it if\n     * it doesn't exist\n     * @param name The bus name\n     */\n    _getBus(name) {\n        if (!Channel.buses.has(name)) {\n            Channel.buses.set(name, new Gain({ context: this.context }));\n        }\n        return Channel.buses.get(name);\n    }\n    /**\n     * Send audio to another channel using a string. `send` is a lot like\n     * [[connect]], except it uses a string instead of an object. This can\n     * be useful in large applications to decouple sections since [[send]]\n     * and [[receive]] can be invoked separately in order to connect an object\n     * @param name The channel name to send the audio\n     * @param volume The amount of the signal to send.\n     * \tDefaults to 0db, i.e. send the entire signal\n     * @returns Returns the gain node of this connection.\n     */\n    send(name, volume = 0) {\n        const bus = this._getBus(name);\n        const sendKnob = new Gain({\n            context: this.context,\n            units: \"decibels\",\n            gain: volume,\n        });\n        this.connect(sendKnob);\n        sendKnob.connect(bus);\n        return sendKnob;\n    }\n    /**\n     * Receive audio from a channel which was connected with [[send]].\n     * @param name The channel name to receive audio from.\n     */\n    receive(name) {\n        const bus = this._getBus(name);\n        bus.connect(this);\n        return this;\n    }\n    dispose() {\n        super.dispose();\n        this._panVol.dispose();\n        this.pan.dispose();\n        this.volume.dispose();\n        this._solo.dispose();\n        return this;\n    }\n}\n/**\n * Store the send/receive channels by name.\n */\nChannel.buses = new Map();\n//# sourceMappingURL=Channel.js.map","import { ToneAudioNode } from \"./ToneAudioNode\";\nimport { Param } from \"./Param\";\nimport { onContextClose, onContextInit } from \"./ContextInitialization\";\n/**\n * Tone.Listener is a thin wrapper around the AudioListener. Listener combined\n * with [[Panner3D]] makes up the Web Audio API's 3D panning system. Panner3D allows you\n * to place sounds in 3D and Listener allows you to navigate the 3D sound environment from\n * a first-person perspective. There is only one listener per audio context.\n */\nexport class Listener extends ToneAudioNode {\n    constructor() {\n        super(...arguments);\n        this.name = \"Listener\";\n        this.positionX = new Param({\n            context: this.context,\n            param: this.context.rawContext.listener.positionX,\n        });\n        this.positionY = new Param({\n            context: this.context,\n            param: this.context.rawContext.listener.positionY,\n        });\n        this.positionZ = new Param({\n            context: this.context,\n            param: this.context.rawContext.listener.positionZ,\n        });\n        this.forwardX = new Param({\n            context: this.context,\n            param: this.context.rawContext.listener.forwardX,\n        });\n        this.forwardY = new Param({\n            context: this.context,\n            param: this.context.rawContext.listener.forwardY,\n        });\n        this.forwardZ = new Param({\n            context: this.context,\n            param: this.context.rawContext.listener.forwardZ,\n        });\n        this.upX = new Param({\n            context: this.context,\n            param: this.context.rawContext.listener.upX,\n        });\n        this.upY = new Param({\n            context: this.context,\n            param: this.context.rawContext.listener.upY,\n        });\n        this.upZ = new Param({\n            context: this.context,\n            param: this.context.rawContext.listener.upZ,\n        });\n    }\n    static getDefaults() {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            positionX: 0,\n            positionY: 0,\n            positionZ: 0,\n            forwardX: 0,\n            forwardY: 0,\n            forwardZ: -1,\n            upX: 0,\n            upY: 1,\n            upZ: 0,\n        });\n    }\n    dispose() {\n        super.dispose();\n        this.positionX.dispose();\n        this.positionY.dispose();\n        this.positionZ.dispose();\n        this.forwardX.dispose();\n        this.forwardY.dispose();\n        this.forwardZ.dispose();\n        this.upX.dispose();\n        this.upY.dispose();\n        this.upZ.dispose();\n        return this;\n    }\n}\n//-------------------------------------\n// \tINITIALIZATION\n//-------------------------------------\nonContextInit(context => {\n    context.listener = new Listener({ context });\n});\nonContextClose(context => {\n    context.listener.dispose();\n});\n//# sourceMappingURL=Listener.js.map","export { getContext, setContext } from \"./core/Global\";\nexport * from \"./classes\";\nexport * from \"./version\";\nimport { getContext } from \"./core/Global\";\nimport { ToneAudioBuffer } from \"./core/context/ToneAudioBuffer\";\nexport { start } from \"./core/Global\";\nexport { supported } from \"./core/context/AudioContext\";\n/**\n * The current audio context time of the global [[Context]].\n * See [[Context.now]]\n * @category Core\n */\nexport function now() {\n    return getContext().now();\n}\n/**\n * The current audio context time of the global [[Context]] without the [[Context.lookAhead]]\n * See [[Context.immediate]]\n * @category Core\n */\nexport function immediate() {\n    return getContext().immediate();\n}\n/**\n * The Transport object belonging to the global Tone.js Context.\n * See [[Transport]]\n * @category Core\n */\nexport const Transport = getContext().transport;\n/**\n * The Transport object belonging to the global Tone.js Context.\n * See [[Transport]]\n * @category Core\n */\nexport function getTransport() {\n    return getContext().transport;\n}\n/**\n * The Destination (output) belonging to the global Tone.js Context.\n * See [[Destination]]\n * @category Core\n */\nexport const Destination = getContext().destination;\n/**\n * @deprecated Use [[Destination]]\n */\nexport const Master = getContext().destination;\n/**\n * The Destination (output) belonging to the global Tone.js Context.\n * See [[Destination]]\n * @category Core\n */\nexport function getDestination() {\n    return getContext().destination;\n}\n/**\n * The [[Listener]] belonging to the global Tone.js Context.\n * @category Core\n */\nexport const Listener = getContext().listener;\n/**\n * The [[Listener]] belonging to the global Tone.js Context.\n * @category Core\n */\nexport function getListener() {\n    return getContext().listener;\n}\n/**\n * Draw is used to synchronize the draw frame with the Transport's callbacks.\n * See [[Draw]]\n * @category Core\n */\nexport const Draw = getContext().draw;\n/**\n * Get the singleton attached to the global context.\n * Draw is used to synchronize the draw frame with the Transport's callbacks.\n * See [[Draw]]\n * @category Core\n */\nexport function getDraw() {\n    return getContext().draw;\n}\n/**\n * A reference to the global context\n * See [[Context]]\n */\nexport const context = getContext();\n/**\n * Promise which resolves when all of the loading promises are resolved.\n * Alias for static [[ToneAudioBuffer.loaded]] method.\n * @category Core\n */\nexport function loaded() {\n    return ToneAudioBuffer.loaded();\n}\n// this fills in name changes from 13.x to 14.x\nimport { ToneAudioBuffers } from \"./core/context/ToneAudioBuffers\";\nimport { ToneBufferSource } from \"./source/buffer/ToneBufferSource\";\nexport const Buffer = ToneAudioBuffer;\nexport const Buffers = ToneAudioBuffers;\nexport const BufferSource = ToneBufferSource;\n//# sourceMappingURL=index.js.map","<template>\n    <div class=\"piano-keyboard\">\n\n        <div v-for=\"noteObject in notes\" :key=\"noteObject.note\"\n          class=\"white-note\" :class=\"[noteObject.pressed ? 'white-note-pressed' : '']\"\n          :style=\"{width: whiteNoteWidthSize + '%', background: whiteNoteBackground(noteObject.pressed)}\"\n          @mousedown=\"playNoteMouse(noteObject)\" @mouseup=\"removePressedKeyMouse(noteObject)\"\n          @mouseover=\"playNoteHover(noteObject)\" @mouseleave=\"removePressedKey(noteObject)\">\n            \n          <div v-if=\"noteObject.blackNote\"\n            class=\"black-note\" :class=\"[noteObject.blackNote.pressed ? 'black-note-pressed' : '']\" \n            :style=\"{background: blackNoteBackground(noteObject.blackNote.pressed)}\"\n            @mousedown.stop=\"playNoteMouse(noteObject.blackNote)\" @mouseup.stop=\"removePressedKeyMouse(noteObject.blackNote)\"\n            @mouseover.stop=\"playNoteHover(noteObject.blackNote)\" @mouseleave.stop=\"removePressedKey(noteObject.blackNote)\">\n\n            <div class=\"key-group unselectable\">\n                <div v-if=\"showKeys\" class=\"key-input\">\n                    {{noteObject.blackNote.key}}\n                </div>\n                 \n                <div v-if=\"showNotes\" class=\"key-text key-text-on-black-note\">\n                    {{noteObject.blackNote.note}}\n                </div>\n            </div>\n          </div> \n\n          <div class=\"key-group unselectable\"> \n            <div v-if=\"showKeys\" class=\"key-input\">\n                {{noteObject.key}}\n            </div>\n\n            <div v-if=\"showNotes\" class=\"key-text\">\n                {{noteObject.note}}\n            </div>\n          </div>\n\n        </div>\n    </div>\n</template>\n\n<script>\nimport * as Tone from \"tone\";\n\nexport default {\n\n  data: function () {\n    return {\n\n         /* Tone.js Synth instance which help us to play musical notes */\n        synth : null,\n\n        /* Helper map for pressed key, (e.g notesIndexesByKey['a'] = 4, we found the note which coresponds to 'a' key at index 4 in notes array) */\n        notesIndexesByKey: {},\n\n        /* Array with generated notes of the form \n            { \n                note: <C4>,\n                key: <a>,\n                pressed: <false>,\n                blackNote: { \n                    name: <C#4>,\n                    key: <b>,\n                    pressed: <false> \n                } \n            }\n            where note is the note name, key is a keyboard key you have to press in order to play that note,\n            pressed is telling us if note is pressed or not and blackNote is mandatory only for notes that have 'sharp/flat'\n        */\n        notes : [],\n\n        /* It's used to generate notes, used in 'generateNotes' method */\n        allNotes: ['C', 'D', 'E', 'F', 'G', 'A', 'B'],\n\n        /* As name says */\n        whiteNoteWidthSize: 0,\n\n        /* It's used to play note when mouse is pressed and note is hovered */\n        isMousePressed: false\n    };\n  },\n\n  props: {\n\n    allKeys:{\n        type: Array,\n        default: () => [\n            '`', `1`, '2', '3', '4', '5', '6', '7', '8', '9', '0', '-', '=',\n            'q', 'w', 'e', 'r', 't', 'y', 'u', 'i', 'o', 'p', '[', ']', '\\\\',\n            'a', 's', 'd', 'f', 'g', 'h', 'j', 'k', 'l', ';',\n            'z', 'x', 'c', 'v', 'b', 'n', 'm', ',', '.' \n        ]\n    },\n\n    whiteNoteColor: {\n        type: String,\n        default: \"#1eb7eb\"\n    },\n\n    blackNoteColor: {\n        type: String,\n        default: \"#f9bb2d\"\n    },\n\n    showKeys: {\n        type: Boolean,\n        default: false,\n    },\n\n    showNotes: {\n        type:Boolean,\n        default: false\n    },\n\n    startOctave: {\n        type: Number,\n        default: 2\n    },\n\n    endOctave: {\n        type: Number,\n        default: 4\n    },\n\n    sustain: {\n        type: Boolean,\n        default: false\n    }\n  },\n\n  watch: {\n    startOctave(val){\n      this.startOctave = val;\n      this.regenerate();\n    },\n    endOctave(val){\n      this.endOctave = val;\n      this.regenerate();\n    },\n    allKeys(val){\n      this.allKeys = val;\n      this.regenerate();\n    }\n  },\n\n  created() {\n    this.synth = new Tone.Synth().toDestination();\n\n    this.generateNotes();\n    this.generateNotesIndexesByKey();\n\n    window.addEventListener(\"keydown\", e => {\n      const key = e.key;\n      const index = this.notesIndexesByKey[key];\n\n      if(index != undefined){\n        const noteObject = this.notes[index].key === key ? this.notes[index] : this.notes[index].blackNote;\n        this.playNote(noteObject);\n      }\n    });\n\n    window.addEventListener(\"keyup\", e => {\n      const key = e.key;\n      const index = this.notesIndexesByKey[key];\n\n      if(index != undefined){\n        const noteObject = this.notes[index].key === key ? this.notes[index] : this.notes[index].blackNote;\n        this.removePressedKey(noteObject);\n      }\n    });\n\n    window.onmouseup = () => {\n       this.isMousePressed = false;\n    }\n  },\n\n  destroyed() {\n    window.removeEventListener('keydown', () => {});\n    window.removeEventListener('keyup', () => {});\n    window.removeEventListener('onmouseup', () => {});\n  },\n\n  methods: {\n    playNote(noteObject) {\n        if(!noteObject.pressed){\n            this.synth.triggerAttackRelease(noteObject.note, this.sustain ? \"2n\" : \"8n\");\n            noteObject.pressed = true;\n        }\n    },\n\n    playNoteMouse(noteObject) {\n        this.isMousePressed = true;\n        this.playNote(noteObject);\n    },\n\n    playNoteHover(noteObject) {\n        if(this.isMousePressed)\n            this.playNote(noteObject);\n    },\n\n    removePressedKey(noteObject) {\n        noteObject.pressed = false;\n    },\n\n    removePressedKeyMouse(noteObject) {\n        this.isMousePressed = false\n        this.removePressedKey(noteObject);\n    },\n\n    whiteNoteBackground: function(pressed){\n      return pressed ? this.whiteNoteColor : 'linear-gradient(to bottom, #eee 0%, #fff 100%)';\n    },\n    \n    blackNoteBackground: function(pressed){\n      return pressed ? this.blackNoteColor : 'linear-gradient(45deg, #555, #222)';\n    },\n\n    generateNotes: function(){\n        let keyIndex = 0;\n        let noteIndex = 0;\n        this.notes.length = 0;\n        for(let octave = this.startOctave; octave <= this.endOctave; octave++) {\n\n            while(noteIndex < this.allNotes.length) {\n                const currentNote = this.allNotes[noteIndex];\n\n                let newNote = {\n                    note: currentNote + octave,\n                    key: this.allKeys[keyIndex++],\n                    pressed: false,\n                }\n\n                if(currentNote !== \"B\" && currentNote !== \"E\") {\n                    let blackNote = {\n                        note: currentNote + '#' + octave,\n                        key: this.allKeys[keyIndex++],\n                        pressed: false,\n                    }\n\n                    newNote[\"blackNote\"] = blackNote;\n                }\n\n                this.notes.push(newNote);\n                \n                if(octave === this.endOctave && currentNote === \"B\")\n                    break;\n                \n                noteIndex++;\n            }\n\n            noteIndex = 0;\n        }\n\n        this.whiteNoteWidthSize = 100 / this.notes.length;\n    },\n\n    generateNotesIndexesByKey: function() {\n        this.notesIndexesByKey = {}\n        for(let index = 0; index < this.notes.length; index++){\n            this.notesIndexesByKey[this.notes[index].key] = index;\n\n            if(this.notes[index].blackNote != undefined)\n                this.notesIndexesByKey[this.notes[index].blackNote.key] = index;\n        }\n    },\n\n    regenerate: function() {\n      this.generateNotes();\n      this.generateNotesIndexesByKey();\n    },\n  },\n}\n</script>\n\n<style>\n.piano-keyboard {\n  position: relative;\n  height: 100%;\n  width: 100%;\n}\n \n.white-note {\n  display: flex;\n  justify-content: center;\n  float: left;\n  position: relative;\n  cursor: pointer;\n  color: black;\n  height: 98%;\n  border-radius: 0 0 5px 5px;\n  box-shadow: \n    0px 0px 0px rgba(255, 255, 255, 0.8) inset,\n    -2px -5px 3px #ccc inset,\n    0 0 3px rgba(0, 0, 0, 0.5);\n}\n \n.white-note-pressed {\n  box-shadow: \n     2px 0 3px rgba(0, 0, 0, 0.2) inset,\n    -5px -1px 20px rgba(0, 0, 0, 0.2) inset,\n     0 0 3px rgba(0, 0, 0, 0.5); \n}\n \n.black-note {\n  display: flex;\n  align-items: flex-end;\n  justify-content: center;\n  position: absolute;\n  cursor: pointer;\n  height: 65%;\n  width: 65%;\n  left: 68%;\n  z-index: 1;\n  color: white;\n  border-radius: 0 0 3px 3px;\n  box-shadow: \n    -1px -1px 2px rgba(255, 255, 255, 0.2) inset,\n    0 -5px 2px  rgba(0, 0, 0, 0.5) inset,\n    0 2px 4px rgba(0, 0, 0, 0.5);\n}\n \n.black-note-pressed {\n  box-shadow: \n    -1px -1px 2px rgba(255, 255, 255, 0.2) inset,\n    0 -1px 2px rgba(0, 0, 0, 0.2) inset,\n    0 1px 2px rgba(0, 0, 0, 0.2);\n}\n \n.key-group {\n  align-self: flex-end;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-bottom: 0.8vw;\n  font-size: 1.2vw;\n}\n \n.key-text {\n  margin-top: 0.8vw;\n}\n \n.key-text-on-black-note {\n  transform: rotate(-90deg);\n  margin: 0.8vw 0;\n  margin-top: 1vw;\n}\n \n.key-input {\n  text-align: center;\n  width: 2em;\n  color: inherit;\n  font-size: 1vw;\n}\n \n.unselectable {\n    -webkit-touch-callout: none;\n    -webkit-user-select: none;\n    -khtml-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n}\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PianoKeyboard.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PianoKeyboard.vue?vue&type=script&lang=js&\"","/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nexport default function normalizeComponent (\n  scriptExports,\n  render,\n  staticRenderFns,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier, /* server only */\n  shadowMode /* vue-cli only */\n) {\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (render) {\n    options.render = render\n    options.staticRenderFns = staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = 'data-v-' + scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = shadowMode\n      ? function () {\n        injectStyles.call(\n          this,\n          (options.functional ? this.parent : this).$root.$options.shadowRoot\n        )\n      }\n      : injectStyles\n  }\n\n  if (hook) {\n    if (options.functional) {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functional component in vue file\n      var originalRender = options.render\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return originalRender(h, context)\n      }\n    } else {\n      // inject component registration as beforeCreate hook\n      var existing = options.beforeCreate\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    }\n  }\n\n  return {\n    exports: scriptExports,\n    options: options\n  }\n}\n","import { render, staticRenderFns } from \"./PianoKeyboard.vue?vue&type=template&id=bdfaadc6&\"\nimport script from \"./PianoKeyboard.vue?vue&type=script&lang=js&\"\nexport * from \"./PianoKeyboard.vue?vue&type=script&lang=js&\"\nimport style0 from \"./PianoKeyboard.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import './setPublicPath'\nimport mod from '~entry'\nexport default mod\nexport * from '~entry'\n","'use strict';\nvar $ = require('../internals/export');\nvar isObject = require('../internals/is-object');\nvar isArray = require('../internals/is-array');\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\nvar toLength = require('../internals/to-length');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar createProperty = require('../internals/create-property');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\nvar arrayMethodUsesToLength = require('../internals/array-method-uses-to-length');\n\nvar HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('slice');\nvar USES_TO_LENGTH = arrayMethodUsesToLength('slice', { ACCESSORS: true, 0: 0, 1: 2 });\n\nvar SPECIES = wellKnownSymbol('species');\nvar nativeSlice = [].slice;\nvar max = Math.max;\n\n// `Array.prototype.slice` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.slice\n// fallback for not array-like ES3 strings and DOM objects\n$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT || !USES_TO_LENGTH }, {\n  slice: function slice(start, end) {\n    var O = toIndexedObject(this);\n    var length = toLength(O.length);\n    var k = toAbsoluteIndex(start, length);\n    var fin = toAbsoluteIndex(end === undefined ? length : end, length);\n    // inline `ArraySpeciesCreate` for usage native `Array#slice` where it's possible\n    var Constructor, result, n;\n    if (isArray(O)) {\n      Constructor = O.constructor;\n      // cross-realm fallback\n      if (typeof Constructor == 'function' && (Constructor === Array || isArray(Constructor.prototype))) {\n        Constructor = undefined;\n      } else if (isObject(Constructor)) {\n        Constructor = Constructor[SPECIES];\n        if (Constructor === null) Constructor = undefined;\n      }\n      if (Constructor === Array || Constructor === undefined) {\n        return nativeSlice.call(O, k, fin);\n      }\n    }\n    result = new (Constructor === undefined ? Array : Constructor)(max(fin - k, 0));\n    for (n = 0; k < fin; k++, n++) if (k in O) createProperty(result, n, O[k]);\n    result.length = n;\n    return result;\n  }\n});\n","// toObject with fallback for non-array-like ES3 strings\nvar IndexedObject = require('../internals/indexed-object');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\nmodule.exports = function (it) {\n  return IndexedObject(requireObjectCoercible(it));\n};\n","// iterable DOM collections\n// flag - `iterable` interface - 'entries', 'keys', 'values', 'forEach' methods\nmodule.exports = {\n  CSSRuleList: 0,\n  CSSStyleDeclaration: 0,\n  CSSValueList: 0,\n  ClientRectList: 0,\n  DOMRectList: 0,\n  DOMStringList: 0,\n  DOMTokenList: 1,\n  DataTransferItemList: 0,\n  FileList: 0,\n  HTMLAllCollection: 0,\n  HTMLCollection: 0,\n  HTMLFormElement: 0,\n  HTMLSelectElement: 0,\n  MediaList: 0,\n  MimeTypeArray: 0,\n  NamedNodeMap: 0,\n  NodeList: 1,\n  PaintRequestList: 0,\n  Plugin: 0,\n  PluginArray: 0,\n  SVGLengthList: 0,\n  SVGNumberList: 0,\n  SVGPathSegList: 0,\n  SVGPointList: 0,\n  SVGStringList: 0,\n  SVGTransformList: 0,\n  SourceBufferList: 0,\n  StyleSheetList: 0,\n  TextTrackCueList: 0,\n  TextTrackList: 0,\n  TouchList: 0\n};\n","var NATIVE_SYMBOL = require('../internals/native-symbol');\n\nmodule.exports = NATIVE_SYMBOL\n  // eslint-disable-next-line no-undef\n  && !Symbol.sham\n  // eslint-disable-next-line no-undef\n  && typeof Symbol.iterator == 'symbol';\n"],"sourceRoot":""}
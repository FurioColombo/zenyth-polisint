{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createVNode as _createVNode, createCommentVNode as _createCommentVNode, normalizeStyle as _normalizeStyle } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_FilterChain = _resolveComponent(\"FilterChain\");\n  return _openBlock(), _createElementBlock(\"div\", {\n    \"class\": \"filterHost\",\n    style: _normalizeStyle(this.filterHost)\n  }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(this.chainList, function (chain) {\n    return _openBlock(), _createElementBlock(_Fragment, {\n      key: chain.id\n    }, [_createVNode(_component_FilterChain, {\n      ref_for: true,\n      ref: chain.ref,\n      id: chain.id,\n      color: chain.color,\n      onFilterInitialized: _cache[0] || (_cache[0] = function ($event) {\n        return $options.initConnections();\n      })\n    }, null, 8 /* PROPS */, [\"id\", \"color\"]), _createCommentVNode(\" todo: remove <FilterChain :ref=\\\"chain.ref\\\" :id=\\\"chain.id\\\" :color=\\\"chain.color\\\" @filterInitialized=\\\"handleFilterInitialized\\\" /> \")], 64 /* STABLE_FRAGMENT */);\n  }), 128 /* KEYED_FRAGMENT */))], 4 /* STYLE */);\n}","map":{"version":3,"mappings":";;;uBACEA,oBAKM;IALD,SAAM,YAAY;IAAEC,KAAK,uBAAOC,UAAU;yBAC7CF,oBAGaG,kCAHoBC,SAAS,YAAxBC,KAAK;;WAA2BA,KAAK,CAACC;QACpDC,aAA0GC;;MAA5FC,GAAG,EAAEJ,KAAK,CAACI,GAAG;MAAGH,EAAE,EAAED,KAAK,CAACC,EAAE;MAAGI,KAAK,EAAEL,KAAK,CAACK,KAAK;MAAGC,mBAAiB;QAAA,OAAEC,wBAAe;MAAA;8CACtGC,+JAAuI","names":["_createElementBlock","style","filterHost","_Fragment","chainList","chain","id","_createVNode","_component_FilterChain","ref","color","onFilterInitialized","$options","_createCommentVNode"],"sourceRoot":"","sources":["C:\\Home\\Projects\\Programmazione\\WebStorm\\myZenythPolisinT\\zenyth_polisint\\src\\views\\Synth\\Filters\\FilterHost.vue"],"sourcesContent":["<template>\r\n  <div class=\"filterHost\" :style=\"this.filterHost\">\r\n    <template v-for=\"(chain) in this.chainList\" :key=\"chain.id\" :item=\"chain\">\r\n        <FilterChain :ref=\"chain.ref\" :id=\"chain.id\" :color=\"chain.color\" @filterInitialized=\"initConnections()\"/>\r\n       <!-- todo: remove <FilterChain :ref=\"chain.ref\" :id=\"chain.id\" :color=\"chain.color\" @filterInitialized=\"handleFilterInitialized\" /> -->\r\n      </template>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport FilterChain from './FilterChain.vue'\r\nimport { toRaw } from \"vue\";\r\n\r\nexport default {\r\n  name: \"FilterHost\",\r\n  components: {\r\n    FilterChain,\r\n  },\r\n\r\n  data() {\r\n    return {\r\n      chain_colors: [],\r\n      chainList: [],\r\n      nFilterChains: 3,\r\n    }\r\n  },\r\n  mounted() {\r\n    this.chain_colors = [this.colors.purple.medium, this.colors.green.medium, this.colors.pink.medium]\r\n    for (let index = 0; index < this.nFilterChains; index++) {\r\n      this.chainList.push({ id: index, ref:\"chain\"+index, color: this.chain_colors[index]})\r\n    }\r\n    // console.log(this.filterChains)\r\n  },\r\n  computed: {\r\n    filterHost(){\r\n      return {\r\n        background: this.colors.yellow.glow\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    initConnections(){\r\n      //console.log(\"filter host init connections\")\r\n      for (let key in this.$refs) {\r\n        //console.log(toRaw(this.$refs[key][0]))\r\n        toRaw(this.$refs[key][0]).initConnections()\r\n      }\r\n      this.$emit('filterInitialized')\r\n      //console.log(\"filters initilised\")\r\n      //console.log(\"filters:\")\r\n      //console.log(this.filterChains)\r\n      //console.log(\"fx:\")\r\n      //console.log(this.fxChains)\r\n    }\r\n  }\r\n}\r\n\r\n// access a parameter of a vue component child from its father\r\n</script>\r\n\r\n<style scoped>\r\n\r\n.filterHost {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
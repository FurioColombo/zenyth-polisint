{"ast":null,"code":"import _classCallCheck from \"/Users/eliapirrello/Documents/GitHub/zenyth/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/eliapirrello/Documents/GitHub/zenyth/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/Users/eliapirrello/Documents/GitHub/zenyth/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _get from \"/Users/eliapirrello/Documents/GitHub/zenyth/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/eliapirrello/Documents/GitHub/zenyth/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/Users/eliapirrello/Documents/GitHub/zenyth/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/eliapirrello/Documents/GitHub/zenyth/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { StereoEffect } from \"./StereoEffect\";\nimport { Signal } from \"../signal/Signal\";\nimport { Gain } from \"../core/context/Gain\";\nimport { readOnly } from \"../core/util/Interface\";\nimport { Split } from \"../component/channel/Split\";\nimport { Merge } from \"../component/channel/Merge\";\n/**\n * Base class for stereo feedback effects where the effectReturn is fed back into the same channel.\n */\nexport var StereoFeedbackEffect = /*#__PURE__*/function (_StereoEffect) {\n  _inherits(StereoFeedbackEffect, _StereoEffect);\n  var _super = _createSuper(StereoFeedbackEffect);\n  function StereoFeedbackEffect(options) {\n    var _this;\n    _classCallCheck(this, StereoFeedbackEffect);\n    _this = _super.call(this, options);\n    _this.feedback = new Signal({\n      context: _this.context,\n      value: options.feedback,\n      units: \"normalRange\"\n    });\n    _this._feedbackL = new Gain({\n      context: _this.context\n    });\n    _this._feedbackR = new Gain({\n      context: _this.context\n    });\n    _this._feedbackSplit = new Split({\n      context: _this.context,\n      channels: 2\n    });\n    _this._feedbackMerge = new Merge({\n      context: _this.context,\n      channels: 2\n    });\n    _this._merge.connect(_this._feedbackSplit);\n    _this._feedbackMerge.connect(_this._split);\n    // the left output connected to the left input\n    _this._feedbackSplit.connect(_this._feedbackL, 0, 0);\n    _this._feedbackL.connect(_this._feedbackMerge, 0, 0);\n    // the right output connected to the right input\n    _this._feedbackSplit.connect(_this._feedbackR, 1, 0);\n    _this._feedbackR.connect(_this._feedbackMerge, 0, 1);\n    // the feedback control\n    _this.feedback.fan(_this._feedbackL.gain, _this._feedbackR.gain);\n    readOnly(_assertThisInitialized(_this), [\"feedback\"]);\n    return _this;\n  }\n  _createClass(StereoFeedbackEffect, [{\n    key: \"dispose\",\n    value: function dispose() {\n      _get(_getPrototypeOf(StereoFeedbackEffect.prototype), \"dispose\", this).call(this);\n      this.feedback.dispose();\n      this._feedbackL.dispose();\n      this._feedbackR.dispose();\n      this._feedbackSplit.dispose();\n      this._feedbackMerge.dispose();\n      return this;\n    }\n  }], [{\n    key: \"getDefaults\",\n    value: function getDefaults() {\n      return Object.assign(StereoEffect.getDefaults(), {\n        feedback: 0.5\n      });\n    }\n  }]);\n  return StereoFeedbackEffect;\n}(StereoEffect);","map":{"version":3,"mappings":";;;;;;;AAAA,SAASA,YAAY,QAA6B,gBAAgB;AAElE,SAASC,MAAM,QAAQ,kBAAkB;AACzC,SAASC,IAAI,QAAQ,sBAAsB;AAC3C,SAASC,QAAQ,QAAQ,wBAAwB;AACjD,SAASC,KAAK,QAAQ,4BAA4B;AAClD,SAASC,KAAK,QAAQ,4BAA4B;AAMlD;;;AAGA,WAAaC,oBAAkE;EAAA;EAAA;EA6B9E,8BAAYC,OAAoC;IAAA;IAAA;IAE/C,0BAAMA,OAAO;IAEb,MAAKC,QAAQ,GAAG,IAAIP,MAAM,CAAC;MAC1BQ,OAAO,EAAE,MAAKA,OAAO;MACrBC,KAAK,EAAEH,OAAO,CAACC,QAAQ;MACvBG,KAAK,EAAE;KACP,CAAC;IACF,MAAKC,UAAU,GAAG,IAAIV,IAAI,CAAC;MAAEO,OAAO,EAAE,MAAKA;IAAO,CAAE,CAAC;IACrD,MAAKI,UAAU,GAAG,IAAIX,IAAI,CAAC;MAAEO,OAAO,EAAE,MAAKA;IAAO,CAAE,CAAC;IAErD,MAAKK,cAAc,GAAG,IAAIV,KAAK,CAAC;MAAEK,OAAO,EAAE,MAAKA,OAAO;MAAEM,QAAQ,EAAE;IAAC,CAAE,CAAC;IACvE,MAAKC,cAAc,GAAG,IAAIX,KAAK,CAAC;MAAEI,OAAO,EAAE,MAAKA,OAAO;MAAEM,QAAQ,EAAE;IAAC,CAAE,CAAC;IAEvE,MAAKE,MAAM,CAACC,OAAO,CAAC,MAAKJ,cAAc,CAAC;IACxC,MAAKE,cAAc,CAACE,OAAO,CAAC,MAAKC,MAAM,CAAC;IAExC;IACA,MAAKL,cAAc,CAACI,OAAO,CAAC,MAAKN,UAAU,EAAE,CAAC,EAAE,CAAC,CAAC;IAClD,MAAKA,UAAU,CAACM,OAAO,CAAC,MAAKF,cAAc,EAAE,CAAC,EAAE,CAAC,CAAC;IAElD;IACA,MAAKF,cAAc,CAACI,OAAO,CAAC,MAAKL,UAAU,EAAE,CAAC,EAAE,CAAC,CAAC;IAClD,MAAKA,UAAU,CAACK,OAAO,CAAC,MAAKF,cAAc,EAAE,CAAC,EAAE,CAAC,CAAC;IAElD;IACA,MAAKR,QAAQ,CAACY,GAAG,CAAC,MAAKR,UAAU,CAACS,IAAI,EAAE,MAAKR,UAAU,CAACQ,IAAI,CAAC;IAC7DlB,QAAQ,gCAAO,CAAC,UAAU,CAAC,CAAC;IAAC;EAC9B;EAAC;IAAA;IAAA,OAQD,mBAAO;MACN;MACA,IAAI,CAACK,QAAQ,CAACc,OAAO,EAAE;MACvB,IAAI,CAACV,UAAU,CAACU,OAAO,EAAE;MACzB,IAAI,CAACT,UAAU,CAACS,OAAO,EAAE;MACzB,IAAI,CAACR,cAAc,CAACQ,OAAO,EAAE;MAC7B,IAAI,CAACN,cAAc,CAACM,OAAO,EAAE;MAC7B,OAAO,IAAI;IACZ;EAAC;IAAA;IAAA,OAdD,uBAAkB;MACjB,OAAOC,MAAM,CAACC,MAAM,CAACxB,YAAY,CAACyB,WAAW,EAAE,EAAE;QAChDjB,QAAQ,EAAE;OACV,CAAC;IACH;EAAC;EAAA;AAAA,EAhEqFR,YAAqB","names":["StereoEffect","Signal","Gain","readOnly","Split","Merge","StereoFeedbackEffect","options","feedback","context","value","units","_feedbackL","_feedbackR","_feedbackSplit","channels","_feedbackMerge","_merge","connect","_split","fan","gain","dispose","Object","assign","getDefaults"],"sourceRoot":"","sources":["../../../Tone/effect/StereoFeedbackEffect.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module","externalDependencies":[]}
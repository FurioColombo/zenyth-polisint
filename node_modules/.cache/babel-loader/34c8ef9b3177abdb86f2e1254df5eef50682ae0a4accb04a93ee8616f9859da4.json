{"ast":null,"code":"import _classCallCheck from \"C:/Home/Projects/Programmazione/WebStorm/myZenythPolisinT/zenyth_polisint/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Home/Projects/Programmazione/WebStorm/myZenythPolisinT/zenyth_polisint/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"C:/Home/Projects/Programmazione/WebStorm/myZenythPolisinT/zenyth_polisint/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _get from \"C:/Home/Projects/Programmazione/WebStorm/myZenythPolisinT/zenyth_polisint/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"C:/Home/Projects/Programmazione/WebStorm/myZenythPolisinT/zenyth_polisint/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"C:/Home/Projects/Programmazione/WebStorm/myZenythPolisinT/zenyth_polisint/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Home/Projects/Programmazione/WebStorm/myZenythPolisinT/zenyth_polisint/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/web.url.js\";\nimport \"core-js/modules/web.url-search-params.js\";\nimport \"core-js/modules/es.function.bind.js\";\nimport { ToneAudioNode } from \"../context/ToneAudioNode\";\nimport { noOp } from \"../util/Interface\";\nimport { getWorkletGlobalScope } from \"./WorkletGlobalScope\";\nexport var ToneAudioWorklet = /*#__PURE__*/function (_ToneAudioNode) {\n  _inherits(ToneAudioWorklet, _ToneAudioNode);\n  var _super = _createSuper(ToneAudioWorklet);\n  function ToneAudioWorklet(options) {\n    var _this;\n    _classCallCheck(this, ToneAudioWorklet);\n    _this = _super.call(this, options);\n    _this.name = \"ToneAudioWorklet\";\n    /**\n     * The constructor options for the node\n     */\n    _this.workletOptions = {};\n    /**\n     * Callback which is invoked when there is an error in the processing\n     */\n    _this.onprocessorerror = noOp;\n    var blobUrl = URL.createObjectURL(new Blob([getWorkletGlobalScope()], {\n      type: \"text/javascript\"\n    }));\n    var name = _this._audioWorkletName();\n    _this._dummyGain = _this.context.createGain();\n    _this._dummyParam = _this._dummyGain.gain;\n    // Register the processor\n    _this.context.addAudioWorkletModule(blobUrl, name).then(function () {\n      // create the worklet when it's read\n      if (!_this.disposed) {\n        _this._worklet = _this.context.createAudioWorkletNode(name, _this.workletOptions);\n        _this._worklet.onprocessorerror = _this.onprocessorerror.bind(_assertThisInitialized(_this));\n        _this.onReady(_this._worklet);\n      }\n    });\n    return _this;\n  }\n  _createClass(ToneAudioWorklet, [{\n    key: \"dispose\",\n    value: function dispose() {\n      _get(_getPrototypeOf(ToneAudioWorklet.prototype), \"dispose\", this).call(this);\n      this._dummyGain.disconnect();\n      if (this._worklet) {\n        this._worklet.port.postMessage(\"dispose\");\n        this._worklet.disconnect();\n      }\n      return this;\n    }\n  }]);\n  return ToneAudioWorklet;\n}(ToneAudioNode);","map":{"version":3,"mappings":";;;;;;;;;;;;;;AAAA,SAASA,aAAa,QAA8B,0BAA0B;AAC9E,SAASC,IAAI,QAAQ,mBAAmB;AACxC,SAASC,qBAAqB,QAAQ,sBAAsB;AAI5D,WAAsBC,gBAA0D;EAAA;EAAA;EAuC/E,0BAAYC,OAAgB;IAAA;IAAA;IAC3B,0BAAMA,OAAO;IAtCL,UAAI,GAAW,kBAAkB;IAiB1C;;;IAGU,oBAAc,GAAqC,EAAE;IAY/D;;;IAGA,sBAAgB,GAAwBH,IAAI;IAK3C,IAAMI,OAAO,GAAGC,GAAG,CAACC,eAAe,CAAC,IAAIC,IAAI,CAAC,CAACN,qBAAqB,EAAE,CAAC,EAAE;MAAEO,IAAI,EAAE;IAAiB,CAAE,CAAC,CAAC;IACrG,IAAMC,IAAI,GAAG,MAAKC,iBAAiB,EAAE;IAErC,MAAKC,UAAU,GAAG,MAAKC,OAAO,CAACC,UAAU,EAAE;IAC3C,MAAKC,WAAW,GAAG,MAAKH,UAAU,CAACI,IAAI;IAEvC;IACA,MAAKH,OAAO,CAACI,qBAAqB,CAACZ,OAAO,EAAEK,IAAI,CAAC,CAACQ,IAAI,CAAC,YAAK;MAC3D;MACA,IAAI,CAAC,MAAKC,QAAQ,EAAE;QACnB,MAAKC,QAAQ,GAAG,MAAKP,OAAO,CAACQ,sBAAsB,CAACX,IAAI,EAAE,MAAKY,cAAc,CAAC;QAC9E,MAAKF,QAAQ,CAACG,gBAAgB,GAAG,MAAKA,gBAAgB,CAACC,IAAI,+BAAM;QACjE,MAAKC,OAAO,CAAC,MAAKL,QAAQ,CAAC;;IAE7B,CAAC,CAAC;IAAC;EACJ;EAAC;IAAA;IAAA,OAED,mBAAO;MACN;MACA,IAAI,CAACR,UAAU,CAACc,UAAU,EAAE;MAC5B,IAAI,IAAI,CAACN,QAAQ,EAAE;QAClB,IAAI,CAACA,QAAQ,CAACO,IAAI,CAACC,WAAW,CAAC,SAAS,CAAC;QACzC,IAAI,CAACR,QAAQ,CAACM,UAAU,EAAE;;MAE3B,OAAO,IAAI;IACZ;EAAC;EAAA;AAAA,EAnEsF1B,aAAsB","names":["ToneAudioNode","noOp","getWorkletGlobalScope","ToneAudioWorklet","options","blobUrl","URL","createObjectURL","Blob","type","name","_audioWorkletName","_dummyGain","context","createGain","_dummyParam","gain","addAudioWorkletModule","then","disposed","_worklet","createAudioWorkletNode","workletOptions","onprocessorerror","bind","onReady","disconnect","port","postMessage"],"sourceRoot":"","sources":["../../../../Tone/core/worklet/ToneAudioWorklet.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module","externalDependencies":[]}
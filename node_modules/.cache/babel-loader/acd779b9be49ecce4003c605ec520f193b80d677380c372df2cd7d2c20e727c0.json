{"ast":null,"code":"import _regeneratorRuntime from \"C:/Home/Projects/Programmazione/WebStorm/myZenythPolisinT/zenyth_polisint/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _slicedToArray from \"C:/Home/Projects/Programmazione/WebStorm/myZenythPolisinT/zenyth_polisint/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _classCallCheck from \"C:/Home/Projects/Programmazione/WebStorm/myZenythPolisinT/zenyth_polisint/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Home/Projects/Programmazione/WebStorm/myZenythPolisinT/zenyth_polisint/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"C:/Home/Projects/Programmazione/WebStorm/myZenythPolisinT/zenyth_polisint/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _get from \"C:/Home/Projects/Programmazione/WebStorm/myZenythPolisinT/zenyth_polisint/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"C:/Home/Projects/Programmazione/WebStorm/myZenythPolisinT/zenyth_polisint/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"C:/Home/Projects/Programmazione/WebStorm/myZenythPolisinT/zenyth_polisint/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Home/Projects/Programmazione/WebStorm/myZenythPolisinT/zenyth_polisint/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.array.index-of.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/es.array-buffer.slice.js\";\nimport \"core-js/modules/es.typed-array.float32-array.js\";\nimport \"core-js/modules/es.typed-array.at.js\";\nimport \"core-js/modules/es.typed-array.copy-within.js\";\nimport \"core-js/modules/es.typed-array.every.js\";\nimport \"core-js/modules/es.typed-array.fill.js\";\nimport \"core-js/modules/es.typed-array.filter.js\";\nimport \"core-js/modules/es.typed-array.find.js\";\nimport \"core-js/modules/es.typed-array.find-index.js\";\nimport \"core-js/modules/es.typed-array.find-last.js\";\nimport \"core-js/modules/es.typed-array.find-last-index.js\";\nimport \"core-js/modules/es.typed-array.for-each.js\";\nimport \"core-js/modules/es.typed-array.includes.js\";\nimport \"core-js/modules/es.typed-array.index-of.js\";\nimport \"core-js/modules/es.typed-array.iterator.js\";\nimport \"core-js/modules/es.typed-array.join.js\";\nimport \"core-js/modules/es.typed-array.last-index-of.js\";\nimport \"core-js/modules/es.typed-array.map.js\";\nimport \"core-js/modules/es.typed-array.reduce.js\";\nimport \"core-js/modules/es.typed-array.reduce-right.js\";\nimport \"core-js/modules/es.typed-array.reverse.js\";\nimport \"core-js/modules/es.typed-array.set.js\";\nimport \"core-js/modules/es.typed-array.slice.js\";\nimport \"core-js/modules/es.typed-array.some.js\";\nimport \"core-js/modules/es.typed-array.sort.js\";\nimport \"core-js/modules/es.typed-array.subarray.js\";\nimport \"core-js/modules/es.typed-array.to-locale-string.js\";\nimport \"core-js/modules/es.typed-array.to-string.js\";\nimport \"core-js/modules/esnext.typed-array.to-reversed.js\";\nimport \"core-js/modules/esnext.typed-array.to-sorted.js\";\nimport \"core-js/modules/esnext.typed-array.with.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/es.parse-int.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport { __awaiter } from \"tslib\";\nimport { deepEquals, optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\nimport { isDefined } from \"../../core/util/TypeCheck\";\nimport { Signal } from \"../../signal/Signal\";\nimport { Source } from \"../Source\";\nimport { generateWaveform } from \"./OscillatorInterface\";\nimport { ToneOscillatorNode } from \"./ToneOscillatorNode\";\nimport { assertRange } from \"../../core/util/Debug\";\nimport { clamp } from \"../../core/util/Math\";\n/**\n * Oscillator supports a number of features including\n * phase rotation, multiple oscillator types (see Oscillator.type),\n * and Transport syncing (see Oscillator.syncFrequency).\n *\n * @example\n * // make and start a 440hz sine tone\n * const osc = new Tone.Oscillator(440, \"sine\").toDestination().start();\n * @category Source\n */\nexport var Oscillator = /*#__PURE__*/function (_Source) {\n  _inherits(Oscillator, _Source);\n  var _super = _createSuper(Oscillator);\n  function Oscillator() {\n    var _this;\n    _classCallCheck(this, Oscillator);\n    _this = _super.call(this, optionsFromArguments(Oscillator.getDefaults(), arguments, [\"frequency\", \"type\"]));\n    _this.name = \"Oscillator\";\n    /**\n     * the main oscillator\n     */\n    _this._oscillator = null;\n    var options = optionsFromArguments(Oscillator.getDefaults(), arguments, [\"frequency\", \"type\"]);\n    _this.frequency = new Signal({\n      context: _this.context,\n      units: \"frequency\",\n      value: options.frequency\n    });\n    readOnly(_assertThisInitialized(_this), \"frequency\");\n    _this.detune = new Signal({\n      context: _this.context,\n      units: \"cents\",\n      value: options.detune\n    });\n    readOnly(_assertThisInitialized(_this), \"detune\");\n    _this._partials = options.partials;\n    _this._partialCount = options.partialCount;\n    _this._type = options.type;\n    if (options.partialCount && options.type !== \"custom\") {\n      _this._type = _this.baseType + options.partialCount.toString();\n    }\n    _this.phase = options.phase;\n    return _this;\n  }\n  _createClass(Oscillator, [{\n    key: \"_start\",\n    value:\n    /**\n     * start the oscillator\n     */\n    function _start(time) {\n      var _this2 = this;\n      var computedTime = this.toSeconds(time);\n      // new oscillator with previous values\n      var oscillator = new ToneOscillatorNode({\n        context: this.context,\n        onended: function onended() {\n          return _this2.onstop(_this2);\n        }\n      });\n      this._oscillator = oscillator;\n      if (this._wave) {\n        this._oscillator.setPeriodicWave(this._wave);\n      } else {\n        this._oscillator.type = this._type;\n      }\n      // connect the control signal to the oscillator frequency & detune\n      this._oscillator.connect(this.output);\n      this.frequency.connect(this._oscillator.frequency);\n      this.detune.connect(this._oscillator.detune);\n      // start the oscillator\n      this._oscillator.start(computedTime);\n    }\n    /**\n     * stop the oscillator\n     */\n  }, {\n    key: \"_stop\",\n    value: function _stop(time) {\n      var computedTime = this.toSeconds(time);\n      if (this._oscillator) {\n        this._oscillator.stop(computedTime);\n      }\n    }\n    /**\n     * Restart the oscillator. Does not stop the oscillator, but instead\n     * just cancels any scheduled 'stop' from being invoked.\n     */\n  }, {\n    key: \"_restart\",\n    value: function _restart(time) {\n      var computedTime = this.toSeconds(time);\n      this.log(\"restart\", computedTime);\n      if (this._oscillator) {\n        this._oscillator.cancelStop();\n      }\n      this._state.cancel(computedTime);\n      return this;\n    }\n    /**\n     * Sync the signal to the Transport's bpm. Any changes to the transports bpm,\n     * will also affect the oscillators frequency.\n     * @example\n     * const osc = new Tone.Oscillator().toDestination().start();\n     * osc.frequency.value = 440;\n     * // the ratio between the bpm and the frequency will be maintained\n     * osc.syncFrequency();\n     * // double the tempo\n     * Tone.Transport.bpm.value *= 2;\n     * // the frequency of the oscillator is doubled to 880\n     */\n  }, {\n    key: \"syncFrequency\",\n    value: function syncFrequency() {\n      this.context.transport.syncSignal(this.frequency);\n      return this;\n    }\n    /**\n     * Unsync the oscillator's frequency from the Transport.\n     * See Oscillator.syncFrequency\n     */\n  }, {\n    key: \"unsyncFrequency\",\n    value: function unsyncFrequency() {\n      this.context.transport.unsyncSignal(this.frequency);\n      return this;\n    }\n    /**\n     * Get a cached periodic wave. Avoids having to recompute\n     * the oscillator values when they have already been computed\n     * with the same values.\n     */\n  }, {\n    key: \"_getCachedPeriodicWave\",\n    value: function _getCachedPeriodicWave() {\n      var _this3 = this;\n      if (this._type === \"custom\") {\n        var oscProps = Oscillator._periodicWaveCache.find(function (description) {\n          return description.phase === _this3._phase && deepEquals(description.partials, _this3._partials);\n        });\n        return oscProps;\n      } else {\n        var _oscProps = Oscillator._periodicWaveCache.find(function (description) {\n          return description.type === _this3._type && description.phase === _this3._phase;\n        });\n        this._partialCount = _oscProps ? _oscProps.partialCount : this._partialCount;\n        return _oscProps;\n      }\n    }\n  }, {\n    key: \"type\",\n    get: function get() {\n      return this._type;\n    },\n    set: function set(type) {\n      this._type = type;\n      var isBasicType = [\"sine\", \"square\", \"sawtooth\", \"triangle\"].indexOf(type) !== -1;\n      if (this._phase === 0 && isBasicType) {\n        this._wave = undefined;\n        this._partialCount = 0;\n        // just go with the basic approach\n        if (this._oscillator !== null) {\n          // already tested that it's a basic type\n          this._oscillator.type = type;\n        }\n      } else {\n        // first check if the value is cached\n        var cache = this._getCachedPeriodicWave();\n        if (isDefined(cache)) {\n          var partials = cache.partials,\n            wave = cache.wave;\n          this._wave = wave;\n          this._partials = partials;\n          if (this._oscillator !== null) {\n            this._oscillator.setPeriodicWave(this._wave);\n          }\n        } else {\n          var _this$_getRealImagina = this._getRealImaginary(type, this._phase),\n            _this$_getRealImagina2 = _slicedToArray(_this$_getRealImagina, 2),\n            real = _this$_getRealImagina2[0],\n            imag = _this$_getRealImagina2[1];\n          var periodicWave = this.context.createPeriodicWave(real, imag);\n          this._wave = periodicWave;\n          if (this._oscillator !== null) {\n            this._oscillator.setPeriodicWave(this._wave);\n          }\n          // set the cache\n          Oscillator._periodicWaveCache.push({\n            imag: imag,\n            partialCount: this._partialCount,\n            partials: this._partials,\n            phase: this._phase,\n            real: real,\n            type: this._type,\n            wave: this._wave\n          });\n          if (Oscillator._periodicWaveCache.length > 100) {\n            Oscillator._periodicWaveCache.shift();\n          }\n        }\n      }\n    }\n  }, {\n    key: \"baseType\",\n    get: function get() {\n      return this._type.replace(this.partialCount.toString(), \"\");\n    },\n    set: function set(baseType) {\n      if (this.partialCount && this._type !== \"custom\" && baseType !== \"custom\") {\n        this.type = baseType + this.partialCount;\n      } else {\n        this.type = baseType;\n      }\n    }\n  }, {\n    key: \"partialCount\",\n    get: function get() {\n      return this._partialCount;\n    },\n    set: function set(p) {\n      assertRange(p, 0);\n      var type = this._type;\n      var partial = /^(sine|triangle|square|sawtooth)(\\d+)$/.exec(this._type);\n      if (partial) {\n        type = partial[1];\n      }\n      if (this._type !== \"custom\") {\n        if (p === 0) {\n          this.type = type;\n        } else {\n          this.type = type + p.toString();\n        }\n      } else {\n        // extend or shorten the partials array\n        var fullPartials = new Float32Array(p);\n        // copy over the partials array\n        this._partials.forEach(function (v, i) {\n          return fullPartials[i] = v;\n        });\n        this._partials = Array.from(fullPartials);\n        this.type = this._type;\n      }\n    }\n    /**\n     * Returns the real and imaginary components based\n     * on the oscillator type.\n     * @returns [real: Float32Array, imaginary: Float32Array]\n     */\n  }, {\n    key: \"_getRealImaginary\",\n    value: function _getRealImaginary(type, phase) {\n      var fftSize = 4096;\n      var periodicWaveSize = fftSize / 2;\n      var real = new Float32Array(periodicWaveSize);\n      var imag = new Float32Array(periodicWaveSize);\n      var partialCount = 1;\n      if (type === \"custom\") {\n        partialCount = this._partials.length + 1;\n        this._partialCount = this._partials.length;\n        periodicWaveSize = partialCount;\n        // if the partial count is 0, don't bother doing any computation\n        if (this._partials.length === 0) {\n          return [real, imag];\n        }\n      } else {\n        var partial = /^(sine|triangle|square|sawtooth)(\\d+)$/.exec(type);\n        if (partial) {\n          partialCount = parseInt(partial[2], 10) + 1;\n          this._partialCount = parseInt(partial[2], 10);\n          type = partial[1];\n          partialCount = Math.max(partialCount, 2);\n          periodicWaveSize = partialCount;\n        } else {\n          this._partialCount = 0;\n        }\n        this._partials = [];\n      }\n      for (var n = 1; n < periodicWaveSize; ++n) {\n        var piFactor = 2 / (n * Math.PI);\n        var b = void 0;\n        switch (type) {\n          case \"sine\":\n            b = n <= partialCount ? 1 : 0;\n            this._partials[n - 1] = b;\n            break;\n          case \"square\":\n            b = n & 1 ? 2 * piFactor : 0;\n            this._partials[n - 1] = b;\n            break;\n          case \"sawtooth\":\n            b = piFactor * (n & 1 ? 1 : -1);\n            this._partials[n - 1] = b;\n            break;\n          case \"triangle\":\n            if (n & 1) {\n              b = 2 * (piFactor * piFactor) * (n - 1 >> 1 & 1 ? -1 : 1);\n            } else {\n              b = 0;\n            }\n            this._partials[n - 1] = b;\n            break;\n          case \"custom\":\n            b = this._partials[n - 1];\n            break;\n          default:\n            throw new TypeError(\"Oscillator: invalid type: \" + type);\n        }\n        if (b !== 0) {\n          real[n] = -b * Math.sin(phase * n);\n          imag[n] = b * Math.cos(phase * n);\n        } else {\n          real[n] = 0;\n          imag[n] = 0;\n        }\n      }\n      return [real, imag];\n    }\n    /**\n     * Compute the inverse FFT for a given phase.\n     */\n  }, {\n    key: \"_inverseFFT\",\n    value: function _inverseFFT(real, imag, phase) {\n      var sum = 0;\n      var len = real.length;\n      for (var i = 0; i < len; i++) {\n        sum += real[i] * Math.cos(i * phase) + imag[i] * Math.sin(i * phase);\n      }\n      return sum;\n    }\n    /**\n     * Returns the initial value of the oscillator when stopped.\n     * E.g. a \"sine\" oscillator with phase = 90 would return an initial value of -1.\n     */\n  }, {\n    key: \"getInitialValue\",\n    value: function getInitialValue() {\n      var _this$_getRealImagina3 = this._getRealImaginary(this._type, 0),\n        _this$_getRealImagina4 = _slicedToArray(_this$_getRealImagina3, 2),\n        real = _this$_getRealImagina4[0],\n        imag = _this$_getRealImagina4[1];\n      var maxValue = 0;\n      var twoPi = Math.PI * 2;\n      var testPositions = 32;\n      // check for peaks in 16 places\n      for (var i = 0; i < testPositions; i++) {\n        maxValue = Math.max(this._inverseFFT(real, imag, i / testPositions * twoPi), maxValue);\n      }\n      return clamp(-this._inverseFFT(real, imag, this._phase) / maxValue, -1, 1);\n    }\n  }, {\n    key: \"partials\",\n    get: function get() {\n      return this._partials.slice(0, this.partialCount);\n    },\n    set: function set(partials) {\n      this._partials = partials;\n      this._partialCount = this._partials.length;\n      if (partials.length) {\n        this.type = \"custom\";\n      }\n    }\n  }, {\n    key: \"phase\",\n    get: function get() {\n      return this._phase * (180 / Math.PI);\n    },\n    set: function set(phase) {\n      this._phase = phase * Math.PI / 180;\n      // reset the type\n      this.type = this._type;\n    }\n  }, {\n    key: \"asArray\",\n    value: function asArray() {\n      var length = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1024;\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              return _context.abrupt(\"return\", generateWaveform(this, length));\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      _get(_getPrototypeOf(Oscillator.prototype), \"dispose\", this).call(this);\n      if (this._oscillator !== null) {\n        this._oscillator.dispose();\n      }\n      this._wave = undefined;\n      this.frequency.dispose();\n      this.detune.dispose();\n      return this;\n    }\n  }], [{\n    key: \"getDefaults\",\n    value: function getDefaults() {\n      return Object.assign(Source.getDefaults(), {\n        detune: 0,\n        frequency: 440,\n        partialCount: 0,\n        partials: [],\n        phase: 0,\n        type: \"sine\"\n      });\n    }\n  }]);\n  return Oscillator;\n}(Source);\n/**\n * Cache the periodic waves to avoid having to redo computations\n */\nOscillator._periodicWaveCache = [];","map":{"version":3,"mappings":"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","names":["deepEquals","optionsFromArguments","readOnly","isDefined","Signal","Source","generateWaveform","ToneOscillatorNode","assertRange","clamp","Oscillator","getDefaults","arguments","options","frequency","context","units","value","detune","_partials","partials","_partialCount","partialCount","_type","type","baseType","toString","phase","time","computedTime","toSeconds","oscillator","onended","onstop","_oscillator","_wave","setPeriodicWave","connect","output","start","stop","log","cancelStop","_state","cancel","transport","syncSignal","unsyncSignal","oscProps","_periodicWaveCache","find","description","_phase","isBasicType","indexOf","undefined","cache","_getCachedPeriodicWave","wave","_getRealImaginary","real","imag","periodicWave","createPeriodicWave","push","length","shift","replace","p","partial","exec","fullPartials","Float32Array","forEach","v","i","Array","from","fftSize","periodicWaveSize","parseInt","Math","max","n","piFactor","PI","b","TypeError","sin","cos","sum","len","maxValue","twoPi","testPositions","_inverseFFT","slice","dispose","Object","assign"],"sourceRoot":"","sources":["../../../../Tone/source/oscillator/Oscillator.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module","externalDependencies":[]}
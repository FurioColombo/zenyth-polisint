{"ast":null,"code":"import _classCallCheck from \"C:/Home/Projects/Programmazione/WebStorm/myZenythPolisinT/zenyth_polisint/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Home/Projects/Programmazione/WebStorm/myZenythPolisinT/zenyth_polisint/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"C:/Home/Projects/Programmazione/WebStorm/myZenythPolisinT/zenyth_polisint/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"C:/Home/Projects/Programmazione/WebStorm/myZenythPolisinT/zenyth_polisint/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Home/Projects/Programmazione/WebStorm/myZenythPolisinT/zenyth_polisint/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.set.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport { CONTEXT_STORE } from '../globals';\nexport var createMinimalBaseAudioContextConstructor = function createMinimalBaseAudioContextConstructor(audioDestinationNodeConstructor, createAudioListener, eventTargetConstructor, isNativeOfflineAudioContext, unrenderedAudioWorkletNodeStore, wrapEventListener) {\n  return /*#__PURE__*/function (_eventTargetConstruct) {\n    _inherits(MinimalBaseAudioContext, _eventTargetConstruct);\n    var _super = _createSuper(MinimalBaseAudioContext);\n    function MinimalBaseAudioContext(_nativeContext, numberOfChannels) {\n      var _this;\n      _classCallCheck(this, MinimalBaseAudioContext);\n      _this = _super.call(this, _nativeContext);\n      _this._nativeContext = _nativeContext;\n      CONTEXT_STORE.set(_assertThisInitialized(_this), _nativeContext);\n      if (isNativeOfflineAudioContext(_nativeContext)) {\n        unrenderedAudioWorkletNodeStore.set(_nativeContext, new Set());\n      }\n      _this._destination = new audioDestinationNodeConstructor(_assertThisInitialized(_this), numberOfChannels);\n      _this._listener = createAudioListener(_assertThisInitialized(_this), _nativeContext);\n      _this._onstatechange = null;\n      return _this;\n    }\n    _createClass(MinimalBaseAudioContext, [{\n      key: \"currentTime\",\n      get: function get() {\n        return this._nativeContext.currentTime;\n      }\n    }, {\n      key: \"destination\",\n      get: function get() {\n        return this._destination;\n      }\n    }, {\n      key: \"listener\",\n      get: function get() {\n        return this._listener;\n      }\n    }, {\n      key: \"onstatechange\",\n      get: function get() {\n        return this._onstatechange;\n      },\n      set: function set(value) {\n        var wrappedListener = typeof value === 'function' ? wrapEventListener(this, value) : null;\n        this._nativeContext.onstatechange = wrappedListener;\n        var nativeOnStateChange = this._nativeContext.onstatechange;\n        this._onstatechange = nativeOnStateChange !== null && nativeOnStateChange === wrappedListener ? value : nativeOnStateChange;\n      }\n    }, {\n      key: \"sampleRate\",\n      get: function get() {\n        return this._nativeContext.sampleRate;\n      }\n    }, {\n      key: \"state\",\n      get: function get() {\n        return this._nativeContext.state;\n      }\n    }]);\n    return MinimalBaseAudioContext;\n  }(eventTargetConstructor);\n};","map":{"version":3,"mappings":";;;;;;;;;AAAA,SAASA,aAAa,QAAQ,YAAY;AAI1C,OAAO,IAAMC,wCAAwC,GAA+C,SAAvFA,wCAAwC,CACjDC,+BAA+B,EAC/BC,mBAAmB,EACnBC,sBAAsB,EACtBC,2BAA2B,EAC3BC,+BAA+B,EAC/BC,iBAAiB,EACjB;EACA;IAAA;IAAA;IAUI,iCAAoBC,cAA8B,EAAEC,gBAAwB;MAAA;MAAA;MACxE,0BAAMD,cAAc;MADJ,oBAAc,GAAdA,cAAc;MAG9BR,aAAa,CAACU,GAAG,gCAAqBF,cAAc,CAAC;MAErD,IAAIH,2BAA2B,CAACG,cAAc,CAAC,EAAE;QAC7CF,+BAA+B,CAACI,GAAG,CAACF,cAAc,EAAE,IAAIG,GAAG,EAAE,CAAC;;MAGlE,MAAKC,YAAY,GAAG,IAAIV,+BAA+B,gCAAqBO,gBAAgB,CAAC;MAC7F,MAAKI,SAAS,GAAGV,mBAAmB,gCAAqBK,cAAc,CAAC;MACxE,MAAKM,cAAc,GAAG,IAAI;MAAC;IAC/B;IAAC;MAAA;MAAA,KAED,eAAe;QACX,OAAO,IAAI,CAACN,cAAc,CAACO,WAAW;MAC1C;IAAC;MAAA;MAAA,KAED,eAAe;QACX,OAAO,IAAI,CAACH,YAAY;MAC5B;IAAC;MAAA;MAAA,KAED,eAAY;QACR,OAAO,IAAI,CAACC,SAAS;MACzB;IAAC;MAAA;MAAA,KAED,eAAiB;QACb,OAAO,IAAI,CAACC,cAAc;MAC9B,CAAC;MAAA,KAED,aAAkBE,KAAK;QACnB,IAAMC,eAAe,GAAG,OAAOD,KAAK,KAAK,UAAU,GAAGT,iBAAiB,CAAC,IAAI,EAAES,KAAK,CAAC,GAAG,IAAI;QAE3F,IAAI,CAACR,cAAc,CAACU,aAAa,GAAGD,eAAe;QAEnD,IAAME,mBAAmB,GAAG,IAAI,CAACX,cAAc,CAACU,aAAa;QAE7D,IAAI,CAACJ,cAAc,GAAGK,mBAAmB,KAAK,IAAI,IAAIA,mBAAmB,KAAKF,eAAe,GAAGD,KAAK,GAAGG,mBAAmB;MAC/H;IAAC;MAAA;MAAA,KAED,eAAc;QACV,OAAO,IAAI,CAACX,cAAc,CAACY,UAAU;MACzC;IAAC;MAAA;MAAA,KAED,eAAS;QACL,OAAO,IAAI,CAACZ,cAAc,CAACa,KAAK;MACpC;IAAC;IAAA;EAAA,EAvDOjB,sBAAwD;AAyDxE,CAAC","names":["CONTEXT_STORE","createMinimalBaseAudioContextConstructor","audioDestinationNodeConstructor","createAudioListener","eventTargetConstructor","isNativeOfflineAudioContext","unrenderedAudioWorkletNodeStore","wrapEventListener","_nativeContext","numberOfChannels","set","Set","_destination","_listener","_onstatechange","currentTime","value","wrappedListener","onstatechange","nativeOnStateChange","sampleRate","state"],"sourceRoot":"","sources":["../../../src/factories/minimal-base-audio-context-constructor.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module","externalDependencies":[]}
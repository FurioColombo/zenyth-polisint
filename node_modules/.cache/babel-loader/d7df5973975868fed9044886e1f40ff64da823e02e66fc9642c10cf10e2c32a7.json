{"ast":null,"code":"import \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.array.index-of.js\";\nimport \"core-js/modules/es.parse-int.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport MIDIKeyboard from \"./MIDIKeyboard.vue\";\nimport Octave from \"./Octave.vue\";\nimport * as Tone from \"tone\";\nexport default {\n  name: \"PianoKeyboard\",\n  components: {\n    Octave: Octave,\n    MIDIKeyboard: MIDIKeyboard\n  },\n  data: function data() {\n    return {\n      //From here we can transpose the whole keyboard by octaves\n      ocTranspose: 1,\n      // Object to track which keys are currently being held down\n      keysDown: {},\n      keys: \"awsedftgyhujkolpòà\",\n      notes: [\"C\", \"C#\", \"D\", \"D#\", \"E\", \"F\", \"F#\", \"G\", \"G#\", \"A\", \"A#\", \"B\"],\n      //Transposition amount (in octaves) for the computer keyboard\n      keyboardTranspose: 0,\n      mouseDown: false\n    };\n  },\n  mounted: function mounted() {\n    // Add keydown and keyup event listeners to the window object\n    window.addEventListener(\"keydown\", this.handleKeyDown);\n    window.addEventListener(\"keyup\", this.handleKeyUp);\n  },\n  beforeDestroy: function beforeDestroy() {\n    // Remove keydown and keyup event listeners from the window object\n    window.removeEventListener(\"keydown\", this.handleKeyDown);\n    window.removeEventListener(\"keyup\", this.handleKeyUp);\n  },\n  methods: {\n    handleMouseUp: function handleMouseUp() {\n      this.mouseDown = false;\n    },\n    handleKeyDown: function handleKeyDown(event) {\n      // If the key is not currently being held down, handle the keydown event\n      if (!this.keysDown[event.key] && this.keys.includes(event.key)) {\n        var note = this.notes[this.keys.indexOf(event.key) % 12];\n        var octave = parseInt(this.keys.indexOf(event.key) / 12, 10);\n        this.handleNoteDown(note, 2 + octave + this.keyboardTranspose, 100);\n        // Set keyDown flag to true\n        this.keysDown[event.key] = true;\n        // Change color on keyboard\n        if (2 + octave + this.keyboardTranspose > 0 && 2 + octave + this.keyboardTranspose < 4) this.$refs[\"oct\" + (2 + octave + this.keyboardTranspose)].switchColorPress(note);\n      }\n      // Change octave of computer keyboard with z or x\n      if (!this.keysDown[event.key] && event.key == \"z\") {\n        this.keyboardTranspose = this.keyboardTranspose - 1;\n      }\n      if (!this.keysDown[event.key] && event.key == \"x\") {\n        this.keyboardTranspose = this.keyboardTranspose + 1;\n      }\n    },\n    handleKeyUp: function handleKeyUp(event) {\n      // If the key is currently being held down, handle the keyup event\n      if (this.keysDown[event.key]) {\n        var note = this.notes[this.keys.indexOf(event.key) % 12];\n        var octave = parseInt(this.keys.indexOf(event.key) / 12, 10);\n        this.handleNoteUp(note, 2 + octave + this.keyboardTranspose);\n        // Set keyDown flag to false\n        this.keysDown[event.key] = false;\n        // Change color on keyboard\n        if (2 + octave + this.keyboardTranspose > 0 && 2 + octave + this.keyboardTranspose < 4) this.$refs[\"oct\" + (2 + octave + this.keyboardTranspose)].switchColorRelease(note);\n      }\n    },\n    handleMIDIDown: function handleMIDIDown(note, octave, velocity) {\n      if (octave > 0 && octave < 4) this.$refs[\"oct\" + octave].switchColorPress(note);\n      this.synths.list.forEach(function (synth) {\n        //console.log(\"Play note: \"+(note+octave)+\" at velocity: \"+velocity+\" from MIDI\")\n        synth.playNote(note + octave, velocity);\n      });\n      //play filter envelopes\n      for (var chain in this.filterChains) {\n        for (var filter in this.filterChains[chain]) {\n          this.filterChains[chain][filter].playNote();\n        }\n      }\n      this.$emit(\"noteDown\", note);\n    },\n    handleMIDIUp: function handleMIDIUp(note, octave) {\n      //console.log(\"MIDI released \"+note+octave)\n      if (octave > 0 && octave < 4) this.$refs[\"oct\" + octave].switchColorRelease(note);\n      this.synths.list.forEach(function (synth) {\n        synth.stopNote(note + octave);\n      });\n      //stop filter envelopes\n      for (var chain in this.filterChains) {\n        for (var filter in this.filterChains[chain]) {\n          this.filterChains[chain][filter].stopNote();\n        }\n      }\n    },\n    handleNoteDown: function handleNoteDown(note, octave) {\n      var velocity = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 100;\n      var finalOctave = parseInt(octave) + this.ocTranspose;\n      //console.log(note+finalOctave+\" pressed\")\n      this.synths.list.forEach(function (synth) {\n        synth.playNote(note + finalOctave, velocity);\n        //console.log(synth)\n      });\n\n      //play filter envelopes\n      for (var chain in this.filterChains) {\n        for (var filter in this.filterChains[chain]) {\n          this.filterChains[chain][filter].playNote();\n        }\n      }\n      this.$emit(\"noteDown\", note + finalOctave);\n    },\n    handleNoteUp: function handleNoteUp(note, octave) {\n      var finalOctave = parseInt(octave) + this.ocTranspose;\n      //console.log(note+finalOctave+\" released\")\n      this.synths.list.forEach(function (synth) {\n        synth.stopNote(note + finalOctave);\n      });\n      //stop filter envelopes\n      for (var chain in this.filterChains) {\n        for (var filter in this.filterChains[chain]) {\n          this.filterChains[chain][filter].stopNote();\n        }\n      }\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["MIDIKeyboard","Octave","Tone","name","components","data","ocTranspose","keysDown","keys","notes","keyboardTranspose","mouseDown","mounted","window","addEventListener","handleKeyDown","handleKeyUp","beforeDestroy","removeEventListener","methods","handleMouseUp","event","key","includes","note","indexOf","octave","parseInt","handleNoteDown","$refs","switchColorPress","handleNoteUp","switchColorRelease","handleMIDIDown","velocity","synths","list","forEach","synth","playNote","chain","filterChains","filter","$emit","handleMIDIUp","stopNote","finalOctave"],"sourceRoot":"","sources":["/Users/eliapirrello/Documents/GitHub/zenyth/src/views/Synth/Keyboard/PianoKeyboard.vue"],"sourcesContent":["<template>\n  <div class=\"span\" @mouseleave=\"handleMouseLeave\">\n    <div class=\"container\">\n      <Octave\n        ref=\"oct1\"\n        :octaveNumber=\"1\"\n        @virtualKeyDown=\"handleNoteDown\"\n        @virtualKeyUp=\"handleNoteUp\"\n      />\n    </div>\n    <div class=\"container\">\n      <Octave\n        ref=\"oct2\"\n        :octaveNumber=\"2\"\n        @virtualKeyDown=\"handleNoteDown\"\n        @virtualKeyUp=\"handleNoteUp\"\n      />\n    </div>\n    <div class=\"container\">\n      <Octave\n        ref=\"oct3\"\n        :octaveNumber=\"3\"\n        @virtualKeyDown=\"handleNoteDown\"\n        @virtualKeyUp=\"handleNoteUp\"\n      />\n    </div>\n    <MIDIKeyboard @MIDIDown=\"handleMIDIDown\" @MIDIUp=\"handleMIDIUp\" />\n  </div>\n</template>\n\n<script>\nimport MIDIKeyboard from \"./MIDIKeyboard.vue\";\nimport Octave from \"./Octave.vue\";\nimport * as Tone from \"tone\";\n\n\nexport default {\n  name: \"PianoKeyboard\",\n  components: {\n    Octave,\n    MIDIKeyboard,\n  },\n  data() {\n    return {\n      //From here we can transpose the whole keyboard by octaves\n      ocTranspose: 1,\n      // Object to track which keys are currently being held down\n      keysDown: {},\n      keys: \"awsedftgyhujkolpòà\",\n      notes: [\"C\", \"C#\", \"D\", \"D#\", \"E\", \"F\", \"F#\", \"G\", \"G#\", \"A\", \"A#\", \"B\"],\n      //Transposition amount (in octaves) for the computer keyboard\n      keyboardTranspose: 0,\n      mouseDown: false,\n    };\n  },\n  mounted() {\n    // Add keydown and keyup event listeners to the window object\n    window.addEventListener(\"keydown\", this.handleKeyDown);\n    window.addEventListener(\"keyup\", this.handleKeyUp);\n  },\n  beforeDestroy() {\n    // Remove keydown and keyup event listeners from the window object\n    window.removeEventListener(\"keydown\", this.handleKeyDown);\n    window.removeEventListener(\"keyup\", this.handleKeyUp);\n  },\n\n  methods: {\n    handleMouseUp(){\n      this.mouseDown = false\n    },\n    handleKeyDown(event) {\n      // If the key is not currently being held down, handle the keydown event\n      if (!this.keysDown[event.key] && this.keys.includes(event.key)) {\n        let note = this.notes[this.keys.indexOf(event.key) % 12];\n        let octave = parseInt(this.keys.indexOf(event.key) / 12, 10);\n        this.handleNoteDown(note, 2 + octave + this.keyboardTranspose, 100);\n        // Set keyDown flag to true\n        this.keysDown[event.key] = true;\n        // Change color on keyboard\n        if (\n          2 + octave + this.keyboardTranspose > 0 &&\n          2 + octave + this.keyboardTranspose < 4\n        )\n          this.$refs[\n            \"oct\" + (2 + octave + this.keyboardTranspose)\n          ].switchColorPress(note);\n      }\n      // Change octave of computer keyboard with z or x\n      if (!this.keysDown[event.key] && event.key == \"z\") {\n        this.keyboardTranspose = this.keyboardTranspose - 1;\n      }\n      if (!this.keysDown[event.key] && event.key == \"x\") {\n        this.keyboardTranspose = this.keyboardTranspose + 1;\n      }\n    },\n    handleKeyUp(event) {\n      // If the key is currently being held down, handle the keyup event\n      if (this.keysDown[event.key]) {\n        let note = this.notes[this.keys.indexOf(event.key) % 12];\n        let octave = parseInt(this.keys.indexOf(event.key) / 12, 10);\n        this.handleNoteUp(note, 2 + octave + this.keyboardTranspose);\n        // Set keyDown flag to false\n        this.keysDown[event.key] = false;\n        // Change color on keyboard\n        if (\n          2 + octave + this.keyboardTranspose > 0 &&\n          2 + octave + this.keyboardTranspose < 4\n        )\n          this.$refs[\n            \"oct\" + (2 + octave + this.keyboardTranspose)\n          ].switchColorRelease(note);\n      }\n    },\n    handleMIDIDown(note, octave, velocity) {\n      if (octave > 0 && octave < 4)\n        this.$refs[\"oct\" + octave].switchColorPress(note);\n      this.synths.list.forEach(synth => {\n        //console.log(\"Play note: \"+(note+octave)+\" at velocity: \"+velocity+\" from MIDI\")\n        synth.playNote(note+octave, velocity);\n      });\n      //play filter envelopes\n      for(let chain in this.filterChains){\n        for( let filter in this.filterChains[chain]){\n          this.filterChains[chain][filter].playNote()\n        }\n      }\n      this.$emit(\"noteDown\", note)\n    },\n    handleMIDIUp(note, octave) {\n      //console.log(\"MIDI released \"+note+octave)\n      if (octave > 0 && octave < 4)\n        this.$refs[\"oct\" + octave].switchColorRelease(note);\n      this.synths.list.forEach(synth => {\n        synth.stopNote(note+octave);\n      });\n      //stop filter envelopes\n      for(let chain in this.filterChains){\n        for( let filter in this.filterChains[chain]){\n          this.filterChains[chain][filter].stopNote()\n        }\n      }\n    },\n\n    handleNoteDown(note, octave, velocity = 100) {\n      let finalOctave = parseInt(octave) + this.ocTranspose;\n      //console.log(note+finalOctave+\" pressed\")\n      this.synths.list.forEach(synth => {\n        synth.playNote(note+finalOctave, velocity);\n        //console.log(synth)\n      });\n      \n      //play filter envelopes\n      for(let chain in this.filterChains){\n        for( let filter in this.filterChains[chain]){\n          this.filterChains[chain][filter].playNote()\n        }\n      }\n      this.$emit(\"noteDown\", note+finalOctave)\n    },\n    handleNoteUp(note, octave) {\n      let finalOctave = parseInt(octave) + this.ocTranspose;\n      //console.log(note+finalOctave+\" released\")\n      this.synths.list.forEach(synth => {\n        synth.stopNote(note+finalOctave);\n      });\n      //stop filter envelopes\n      for(let chain in this.filterChains){\n        for( let filter in this.filterChains[chain]){\n          this.filterChains[chain][filter].stopNote()\n        }\n      }\n    },\n  }\n  \n};\n</script>\n\n<style scoped>\n.container {\n  background-color: white;\n  width: 100%;\n  height: 100%;\n  box-sizing: border-box;\n  position: relative;\n  border-top: .1vw solid gray\n}\n\n.span {\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-row: 3;\n  grid-column: span 3;\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
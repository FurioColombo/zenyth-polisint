{"ast":null,"code":"import { normalizeStyle as _normalizeStyle, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nvar _withScopeId = function _withScopeId(n) {\n  return _pushScopeId(\"data-v-c7cd25ac\"), n = n(), _popScopeId(), n;\n};\nvar _hoisted_1 = {\n  \"class\": \"filterChain\"\n};\nvar _hoisted_2 = {\n  \"class\": \"chainHead\",\n  ref: \"chainHead\"\n};\nvar _hoisted_3 = {\n  \"class\": \"chainTail\"\n};\nvar _hoisted_4 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"div\", null, null, -1);\n});\nvar _hoisted_5 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"div\", null, null, -1);\n});\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _this = this;\n  var _component_Filter = _resolveComponent(\"Filter\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", {\n    \"class\": \"chainline\",\n    style: _normalizeStyle(this.chainLine)\n  }, null, 4), _createElementVNode(\"div\", {\n    \"class\": \"chainDot\",\n    style: _normalizeStyle(this.chainDot)\n  }, null, 4), _createElementVNode(\"div\", _hoisted_2, null, 512), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(this.filterList, function (filter) {\n    return _openBlock(), _createBlock(_component_Filter, {\n      key: filter.id,\n      ref_for: true,\n      ref: filter.ref,\n      chainId: _this.id,\n      id: filter.id,\n      filter_type: filter.type,\n      chainColor: _this.color,\n      onFiltersMounted: _cache[0] || (_cache[0] = function ($event) {\n        return _this.handleFiltersMounted();\n      })\n    }, null, 8, [\"chainId\", \"id\", \"filter_type\", \"chainColor\"]);\n  }), 128)), _createElementVNode(\"div\", _hoisted_3, [_hoisted_4, _createElementVNode(\"div\", {\n    \"class\": \"routing-btn fx_chain_1\",\n    style: _normalizeStyle($options.fx_chain_1),\n    onClick: _cache[1] || (_cache[1] = function ($event) {\n      return $options.setRouting(0);\n    })\n  }, null, 4), _createElementVNode(\"div\", {\n    \"class\": \"routing-btn fx_chain_2\",\n    style: _normalizeStyle($options.fx_chain_2),\n    onClick: _cache[2] || (_cache[2] = function ($event) {\n      return $options.setRouting(1);\n    })\n  }, null, 4), _createElementVNode(\"div\", {\n    \"class\": \"routing-btn fx_chain_3\",\n    style: _normalizeStyle($options.fx_chain_3),\n    onClick: _cache[3] || (_cache[3] = function ($event) {\n      return $options.setRouting(2);\n    })\n  }, null, 4), _hoisted_5])]);\n}","map":{"version":3,"mappings":";;;;;EACO,SAAM;AAAa;;EAGjB,SAAM,WAAW;EAACA,GAAG,EAAC;;;EAKtB,SAAM;AAAW;;sBACpBC,oBAAW;AAAA;;sBAIXA,oBAAW;AAAA;;;;uBAbfC,oBAeM,OAfNC,UAeM,GAdJF,oBAAqD;IAAhD,SAAM,WAAW;IAAEG,KAAK,uBAAOC,SAAS;eAC7CJ,oBAAqD;IAAhD,SAAQ,UAAU;IAAEG,KAAK,uBAAOE,QAAQ;eAC7CL,oBAA6C,OAA7CM,UAA6C,iCAC7CL,oBAGWM,kCAHuBC,UAAU,YAA1BC,MAAM;yBACtBC,aACuDC;WAFLF,MAAM,CAACG,EAAE;;MAClDb,GAAG,EAAEU,MAAM,CAACV,GAAG;MAAGc,OAAO,QAAOD,EAAE;MAAGA,EAAE,EAAEH,MAAM,CAACG,EAAE;MAAGE,WAAW,EAAEL,MAAM,CAACM,IAAI;MAAGC,UAAU,QAAOC,KAAK;MACtGC,gBAAc;QAAA,aAAOC,oBAAoB;MAAA;;aAEpDnB,oBAMM,OANNoB,UAMM,GALJC,UAAW,EACXrB,oBAAqF;IAAhF,SAAM,wBAAwB;IAAEG,KAAK,kBAAEmB,mBAAU;IAAGC,OAAK;MAAA,OAAED,mBAAU;IAAA;eAC1EtB,oBAAqF;IAAhF,SAAM,wBAAwB;IAAEG,KAAK,kBAAEmB,mBAAU;IAAGC,OAAK;MAAA,OAAED,mBAAU;IAAA;eAC1EtB,oBAAqF;IAAhF,SAAM,wBAAwB;IAAEG,KAAK,kBAAEmB,mBAAU;IAAGC,OAAK;MAAA,OAAED,mBAAU;IAAA;eAC1EE,UAAW","names":["ref","_createElementVNode","_createElementBlock","_hoisted_1","style","chainLine","chainDot","_hoisted_2","_Fragment","filterList","filter","_createBlock","_component_Filter","id","chainId","filter_type","type","chainColor","color","onFiltersMounted","handleFiltersMounted","_hoisted_3","_hoisted_4","$options","onClick","_hoisted_5"],"sourceRoot":"","sources":["/Users/eliapirrello/Documents/GitHub/zenyth/src/views/Synth/Filters/FilterChain.vue"],"sourcesContent":["<template>\n  <div class=\"filterChain\">\n    <div class=\"chainline\" :style=\"this.chainLine\"></div>\n    <div class = \"chainDot\" :style=\"this.chainDot\"></div>\n    <div class=\"chainHead\" ref=\"chainHead\"></div>\n    <template v-for=\"(filter) in this.filterList\" :key=\"filter.id\" :item=\"filter\">\n      <Filter :ref=\"filter.ref\" :chainId=\"this.id\" :id=\"filter.id\" :filter_type=\"filter.type\" :chainColor=\"this.color\"\n              @filtersMounted=\"this.handleFiltersMounted()\"/>\n    </template>\n    <div class=\"chainTail\">\n      <div></div>\n      <div class=\"routing-btn fx_chain_1\" :style=\"fx_chain_1\" @click=\"setRouting(0)\"></div>\n      <div class=\"routing-btn fx_chain_2\" :style=\"fx_chain_2\" @click=\"setRouting(1)\"></div>\n      <div class=\"routing-btn fx_chain_3\" :style=\"fx_chain_3\" @click=\"setRouting(2)\"></div>\n      <div></div>\n    </div>\n  </div>\n</template>\n\n<script>\n// I want to modify a variable of a vue component from its father that is a vue component too\nimport Filter from './Filter.vue'\nimport {getDestination} from \"tone\";\nimport {isProxy, toRaw} from \"vue\";\n\nconst filterTypes = [\"highpass\", \"peaking\", \"lowpass\"]\n\nexport default {\n  ref: \"FilterChain\",\n  components: {\n    Filter,\n  },\n  props: [\"color\", \"id\"],\n  data() {\n    return {\n      filterList: [],\n      nFilters: 3,\n      isFxChainRouteActive: [true, false, false]\n    }\n  },\n  mounted() {\n    //console.log(\"mounting filter chain\" + this.id)\n    for (let index = 0; index < this.nFiltersXchain; index++) {\n      this.filterList.push({id: index, ref: \"filter\" + index, type: filterTypes[index]})\n    }\n  },\n\n  computed: {\n    fx_chain_1() {\n      let color = ''\n      if (this.isFxChainRouteActive[0])\n        color = this.colors.purple.light\n      else\n        color = this.colors.yellow.glow\n      return {\n        background: color,\n        border: '.1vw solid' + this.colors.gray.dark\n      }\n    },\n    fx_chain_2() {\n      let color = ''\n      if (this.isFxChainRouteActive[1])\n        color = this.colors.green.medium\n      else\n        color = this.colors.yellow.glow\n      return {\n        background: color,\n        border: '.1vw solid' + this.colors.gray.dark\n      }\n    },\n    fx_chain_3() {\n      let color = ''\n      if (this.isFxChainRouteActive[2])\n        color = this.colors.pink.light\n      else\n        color = this.colors.yellow.glow\n      return {\n        background: color,\n        border: '.1vw solid' + this.colors.gray.dark\n      }\n    },\n    chainLine(){\n      return {\n        top: '49%',\n        left: '5%',\n        width: '88%',\n        height: '.2vw',\n        position:'absolute',\n        background: this.$props['color'],\n        zIndex:'0',\n        borderRadius:'10%'\n      }\n    },\n    chainDot(){\n      return {\n        top: '45%',\n        left: '3.5%',\n        height: '10%',\n        aspectRatio: '1/1',\n        position: 'absolute',\n        zIndex: '3',\n        background: this.$props['color'],\n        borderRadius: '50%',\n      }\n    }\n\n  },\n\n  methods: {\n    handleFiltersMounted() {\n      if (this.id === this.nFilterChains - 1) {\n        this.$emit(\"filterInitialized\")\n      }\n    },\n    // -------- AUDIO -------x\n    initConnections() {\n      //console.log(\"filter chain init connections\")\n      for (let index = 0; index < this.nFiltersXchain - 1; index++) {\n        this.filterChains[this.id][index].connect(this.filterChains[this.id][index + 1].getToneFilter());\n        //console.log(\"connected \" + this.filterChains[this.id][index] + \" to \" + this.filterChains[this.id][index + 1])\n      }\n      // connect chain of filters output to chain each chain of effects\n      this.filterChains[this.id][this.nFilters - 1].connect(this.fxChains[0][0]); // init connection to first fx chain\n      this.isFxChainRouteActive[0] = true;\n      /*for (let i = 0; i < this.nFxChains; i++) { // init connection to all chains\n        this.filterChains[this.id][this.nFilters - 1].connect(this.fxChains[i][0]);\n        this.isFxChainRouteActive[i] = true;\n      }*/\n    },\n\n    setRouting(id) {\n      //console.log(\"chain click - id: \" + id);\n      try {\n        if (this.isFxChainRouteActive[id]) {\n          //console.log(\"disconnect from: \" + this.fxChains[id][0] + \" \" + id);\n          this.filterChains[this.id][this.nFilters - 1].disconnect(\n              this.fxChains[id][0]\n          );\n        } else {\n          //console.log(\"connect to: \" + this.fxChains[id][0] + \" \" + id);\n          this.filterChains[this.id][this.nFilters - 1].connect(\n              this.fxChains[id][0]\n          );\n        }\n      } catch (e) {\n        console.log(\n            \"error: \" + e + \"\\nCHAIN FILTERS CONNECTION TO FX CHAIN \" + id + \" UNSUCCESSFUL. Can't connect to \" + this.fxChains[id][0]\n        );\n      }\n      this.isFxChainRouteActive[id] = !this.isFxChainRouteActive[id];\n    },\n  }\n}\n\n</script>\n\n<style scoped>\n\n.filter {\n  flex: 4;\n}\n\n.filterChain {\n  position:relative;\n  flex: 1;\n  display: flex;\n  flex-direction: row;\n}\n\n.chainHead {\n  flex: 1;\n  background-color: transparent;\n}\n\n.chainTail {\n  flex: 1;\n  display: inline-grid;\n  align-items: center;\n  justify-items: center;\n  flex-direction: column;\n  background-color: transparent;\n}\n\n.routing-btn {\n  width: 50%;\n  aspect-ratio: 1/1;\n  border-radius: 50%;\n}\n\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
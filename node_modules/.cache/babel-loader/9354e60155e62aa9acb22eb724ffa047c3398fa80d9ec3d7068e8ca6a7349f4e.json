{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, normalizeStyle as _normalizeStyle, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nimport _imports_0 from '@/icons/sine.svg';\nimport _imports_1 from '@/icons/triangle.svg';\nimport _imports_2 from '@/icons/square.svg';\nimport _imports_3 from '@/icons/saw.svg';\nconst _withScopeId = n => (_pushScopeId(\"data-v-4dd36412\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"lfo_controls_column\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"lfo_waveform_btn_icon\",\n  src: _imports_0,\n  alt: \"\",\n  draggable: \"false\"\n};\nconst _hoisted_3 = {\n  key: 1,\n  class: \"lfo_waveform_btn_icon\",\n  src: _imports_1,\n  alt: \"\",\n  draggable: \"false\"\n};\nconst _hoisted_4 = {\n  key: 2,\n  class: \"lfo_waveform_btn_icon\",\n  src: _imports_2,\n  alt: \"\",\n  draggable: \"false\"\n};\nconst _hoisted_5 = {\n  key: 3,\n  class: \"lfo_waveform_btn_icon\",\n  src: _imports_3,\n  alt: \"\",\n  draggable: \"false\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_LfoVisualizer = _resolveComponent(\"LfoVisualizer\");\n  const _component_Knobs = _resolveComponent(\"Knobs\");\n  return _openBlock(), _createElementBlock(\"div\", {\n    ref: \"container\",\n    class: \"container hidden\",\n    style: _normalizeStyle(this.container)\n  }, [_createElementVNode(\"div\", {\n    class: \"border\",\n    style: _normalizeStyle(this.border)\n  }, [_createElementVNode(\"div\", {\n    class: \"lfo_elems_row\",\n    style: _normalizeStyle(this.lfo_elems_row)\n  }, [_createCommentVNode(\" MODULATION AMOUNT: REGULATES THE AMPLITUDE OF THE LFO !!!!! broken !!!!!!\\n      <div class=\\\"lfoFaderBase volFaderBase\\\" @mousedown=\\\"isDepthFaderDown=true\\\">\\n        <div class=\\\"lfoDepthFaderLevel\\\" :style=\\\"this.lfoDepthFaderLevel\\\"></div>\\n      </div> \"), _createVNode(_component_LfoVisualizer, {\n    ref: \"visualizer\",\n    freq: this.freq,\n    depth: this.depth,\n    wave: this.waveform\n  }, null, 8 /* PROPS */, [\"freq\", \"depth\", \"wave\"]), _createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", {\n    class: \"lfoFaderBase freqFader\",\n    style: _normalizeStyle(this.lfoFaderBase),\n    onMousedown: _cache[0] || (_cache[0] = $event => $data.isFreqFaderDown = true)\n  }, [_createElementVNode(\"div\", {\n    class: \"lfoFreqFaderLevel\",\n    style: _normalizeStyle(this.lfoFreqFaderLevel)\n  }, null, 4 /* STYLE */)], 36 /* STYLE, HYDRATE_EVENTS */), _createElementVNode(\"div\", {\n    class: \"lfo_waveform-btn-selector\",\n    style: _normalizeStyle($options.lfo_waveform_btn_selector),\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.nextWaveType && $options.nextWaveType(...args))\n  }, [this.waveform === 'sine' ? (_openBlock(), _createElementBlock(\"img\", _hoisted_2)) : _createCommentVNode(\"v-if\", true), this.waveform === 'triangle' ? (_openBlock(), _createElementBlock(\"img\", _hoisted_3)) : _createCommentVNode(\"v-if\", true), this.waveform === 'square' ? (_openBlock(), _createElementBlock(\"img\", _hoisted_4)) : _createCommentVNode(\"v-if\", true), this.waveform === 'sawtooth' ? (_openBlock(), _createElementBlock(\"img\", _hoisted_5)) : _createCommentVNode(\"v-if\", true)], 4 /* STYLE */)])], 4 /* STYLE */), _createVNode(_component_Knobs, {\n    ref: \"knobs\",\n    type: \"lfo\",\n    id: this.id,\n    parameters: this.parameters\n  }, null, 8 /* PROPS */, [\"id\", \"parameters\"])], 4 /* STYLE */)], 4 /* STYLE */);\n}","map":{"version":3,"mappings":";OAc2EA,UAAsB;OAClBC,UAA0B;OAC5BC,UAAwB;OACtBC,UAAqB;;;EARzFC,KAAK,EAAC;AAAqB;;;EAKOA,KAAK,EAAC,uBAAuB;EAACC,GAAsB,EAAtBL,UAAsB;EAACM,GAAG,EAAC,EAAE;EAACC,SAAS,EAAC;;;;EAClEH,KAAK,EAAC,uBAAuB;EAACC,GAA0B,EAA1BJ,UAA0B;EAACK,GAAG,EAAC,EAAE;EAACC,SAAS,EAAC;;;;EAC5EH,KAAK,EAAC,uBAAuB;EAACC,GAAwB,EAAxBH,UAAwB;EAACI,GAAG,EAAC,EAAE;EAACC,SAAS,EAAC;;;;EACtEH,KAAK,EAAC,uBAAuB;EAACC,GAAqB,EAArBF,UAAqB;EAACG,GAAG,EAAC,EAAE;EAACC,SAAS,EAAC;;;;;uBAhBpHC,oBAwBM;IAxBDC,GAAG,EAAC,WAAW;IAACL,KAAK,EAAC,kBAAkB;IAAEM,KAAK,uBAAOC,SAAS;MAClEC,oBAsBI;IAtBCR,KAAK,EAAC,QAAQ;IAAEM,KAAK,uBAAOG,MAAM;MACrCD,oBAkBI;IAlBCR,KAAK,EAAC,eAAe;IAAEM,KAAK,uBAAOI,aAAa;MACnDC,2RAGQ,EACVC,aAA4GC;IAA7FR,GAAG,EAAC,YAAY;IAAES,IAAI,OAAOA,IAAI;IAAGC,KAAK,OAAOA,KAAK;IAAGC,IAAI,OAAOC;sDAClFT,oBAWM,OAXNU,UAWM,GAVJV,oBAEM;IAFDR,KAAK,EAAC,wBAAwB;IAAEM,KAAK,uBAAOa,YAAY;IAAGC,WAAS,sCAAEC,qBAAe;MACxFb,oBAAqE;IAAhER,KAAK,EAAC,mBAAmB;IAAEM,KAAK,uBAAOgB,iBAAiB;6DAE/Dd,oBAMM;IANDR,KAAK,EAAC,2BAA2B;IAAEM,KAAK,kBAAEiB,kCAAyB;IAAGC,OAAK,yCAAED,uDAAY;WAC5EN,QAAQ,6BAAxBb,oBAAiH,OAAjHqB,UAAiH,6CACjGR,QAAQ,iCAAxBb,oBAAyH,OAAzHsB,UAAyH,6CACzGT,QAAQ,+BAAxBb,oBAAqH,OAArHuB,UAAqH,6CACrGV,QAAQ,iCAAxBb,oBAAoH,OAApHwB,UAAoH,4EAM1HhB,aAA2EiB;IAApExB,GAAG,EAAC,OAAO;IAACyB,IAAI,EAAC,KAAK;IAAEC,EAAE,OAAOA,EAAE;IAAGC,UAAU,OAAOA","names":["_imports_0","_imports_1","_imports_2","_imports_3","class","src","alt","draggable","_createElementBlock","ref","style","container","_createElementVNode","border","lfo_elems_row","_createCommentVNode","_createVNode","_component_LfoVisualizer","freq","depth","wave","waveform","_hoisted_1","lfoFaderBase","onMousedown","$data","lfoFreqFaderLevel","$options","onClick","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_component_Knobs","type","id","parameters"],"sourceRoot":"","sources":["/Users/guglielmofratticioli/Documents/POLIMI/FurioColombo.github.io/src/views/Synth/Modulators/Lfo.vue"],"sourcesContent":["<template>\n  <div ref=\"container\" class=\"container hidden\" :style=\"this.container\">\n    <div class=\"border\" :style=\"this.border\">\n      <div class=\"lfo_elems_row\" :style=\"this.lfo_elems_row\">\n        <!-- MODULATION AMOUNT: REGULATES THE AMPLITUDE OF THE LFO !!!!! broken !!!!!!\n      <div class=\"lfoFaderBase volFaderBase\" @mousedown=\"isDepthFaderDown=true\">\n        <div class=\"lfoDepthFaderLevel\" :style=\"this.lfoDepthFaderLevel\"></div>\n      </div> -->\n      <LfoVisualizer ref=\"visualizer\" :freq=\"this.freq\" :depth=\"this.depth\" :wave=\"this.waveform\"></LfoVisualizer>\n      <div class=\"lfo_controls_column\" >\n        <div class=\"lfoFaderBase freqFader\" :style=\"this.lfoFaderBase\" @mousedown=\"isFreqFaderDown=true\">\n          <div class=\"lfoFreqFaderLevel\" :style=\"this.lfoFreqFaderLevel\"></div>\n        </div>\n        <div class=\"lfo_waveform-btn-selector\" :style=\"lfo_waveform_btn_selector\" @click=\"nextWaveType\">\n          <img v-if=\"this.waveform==='sine'\" class=\"lfo_waveform_btn_icon\" src=\"@/icons/sine.svg\" alt=\"\" draggable=\"false\">\n          <img v-if=\"this.waveform==='triangle'\" class=\"lfo_waveform_btn_icon\" src=\"@/icons/triangle.svg\" alt=\"\" draggable=\"false\">\n          <img v-if=\"this.waveform==='square'\" class=\"lfo_waveform_btn_icon\" src=\"@/icons/square.svg\" alt=\"\" draggable=\"false\">\n          <img v-if=\"this.waveform==='sawtooth'\" class=\"lfo_waveform_btn_icon\" src=\"@/icons/saw.svg\" alt=\"\" draggable=\"false\">\n\n        </div>\n      </div>\n    </div>\n\n    <Knobs ref=\"knobs\" type=\"lfo\" :id=\"this.id\" :parameters=\"this.parameters\"/>\n  </div>\n  </div>\n</template>\n\n<script>\nimport LfoVisualizer from \"@/views/Synth/Modulators/LfoVisualizer\";\nimport * as Tone from \"tone\";\nimport Knobs from \"./Knobs.vue\";\nimport { toRaw } from \"vue\";\n\nconst waveforms = ['sine', 'triangle', 'square', 'sawtooth']\nexport default {\n  components: { LfoVisualizer, Knobs },\n  props: [\"id\"],\n\n  data() {\n    return {\n      freq: 10,\n      depth: 0.8,\n      isDepthFaderDown: false,\n      isFreqFaderDown: false,\n      waveform: waveforms[0],\n      waveformId: 0,\n      parameters: {}\n\n    }\n  },\n\n  mounted() {\n    //document.addEventListener(\"mousemove\", this.onMouseMove); // todo: remove this\n    //console.log(\"mounted - this.waveformId: \" + this.waveformId + \" - this.waveform: \" + this.waveform)\n\n    this.parameters = {\n      frequency: this.freq,\n      waveform: this.waveform\n    }\n  },\n\n  computed: {\n    lfoDepthFaderLevel() {\n      //console.log(\"lfoDepthFaderLevel\")\n      return {\n        top: ((1 - this.depth) * 85).toString() + \"%\"\n      }\n    },\n    lfo_elems_row() {\n      return {\n        background: this.colors.purple.medium\n      }\n    },\n    lfoFaderBase() {\n      return {\n        background: this.colors.purple.glow\n      }\n    },\n    lfoFreqFaderLevel() {\n      return {\n        top: ((20 - this.freq) / 20 * 85).toString() + \"%\",\n        background: this.colors.purple.light,\n        borderColor: this.colors.purple.dark\n      }\n    },\n    lfo_waveform_btn_selector() {\n      return {\n        borderColor: this.colors.purple.dark,\n        background: this.colors.purple.light,\n        color: this.colors.gray.dark\n      }\n    },\n    container(){\n      return {\n        background: this.colors.purple.glow\n      }\n    },\n    border(){\n      return{\n        background: this.colors.purple.glow\n      }\n    }\n  },\n\n  methods: {\n    setParams({ freq = this.freq, depth = this.depth, waveform = this.waveform}) {\n      if (freq <= 20) {\n        this.freq = freq;\n      } else {\n        this.freq = 20\n      }\n      if(typeof waveform === 'number') {\n        this.waveformId = waveform;\n        if(this.waveformId === 0 || this.waveformId === 1) {\n          this.waveform = waveforms[this.waveformId]\n        } else {\n          console.log(\"ERROR: Called Non existing lfo wave type Id\")\n        }\n      } else if(typeof waveform === 'string'){\n        this.waveform = waveform;\n        waveforms.forEach( (waveformNameString, index) => {\n          if(waveformNameString === this.waveform) this.waveformId = index;\n        })\n      }\n      this.parameters.waveform = this.waveform;\n      this.depth = depth;\n      this.$refs.visualizer.updateParams({freq: this.freq, depth: this.depth})\n      this.$refs.knobs.updateParameters(this.parameters)\n\n    },\n\n    nextWaveType(){\n      this.waveformId++;\n      if(this.waveformId > waveforms.length-1) this.waveformId = 0;\n      this.waveform = waveforms[this.waveformId]\n      this.parameters.waveform = this.waveform;\n      // console.log(\"nextWaveType - this.waveformId: \" + this.waveformId + \" - this.waveform: \" + this.waveform)\n\n\n      //console.log(\"CHANGING WAVE TYPE TO: \" + this.waveform)\n      this.$refs.knobs.updateParameters(this.parameters)\n      this.$refs.visualizer.updateParams({ waveform: this.waveform, frequency: this.freq })\n    },\n\n    startOscilloscope() {\n      //console.log(\"start LFO graphics\")\n      this.$refs.visualizer.startOscilloscope();\n    },\n    stopOscilloscope() {\n      //console.log(\"stop LFO graphics\")\n      this.$refs.visualizer.stopOscilloscope();\n    },\n    resetOscilloscope() {\n      this.$refs.visualizer.stopOscilloscope();\n      this.$refs.visualizer.startOscilloscope();\n\n    },\n    // ---------- USER GESTURE ----------\n\n    depthFaderSelected() {\n      //console.log(\"depthFaderSelected\")\n      this.isDepthFaderDown = true;\n    },\n    freqFaderSelected() {\n      //console.log(\"freqFaderSelected\")\n      this.isFreqFaderDown = true;\n    },\n\n    handleMouseMove(event) {\n      //console.log(\"lfo - handleMouseMove\")\n     this.$refs.knobs.handleMouseMove(event)\n      if (this.isDepthFaderDown) {\n        if (event.movementY < 0) {\n          // Mouse is moving dowm\n          this.depth = this.depth - event.movementY / 100;\n          //console.log(\"moving up\");\n        } else {\n          // Mouse is moving up\n          this.depth = this.depth - event.movementY / 100;\n          //console.log(\"moving down\");\n        }\n        this.depth = Math.max(this.depth, 0);\n        this.depth = Math.min(this.depth, 1);\n\n        //console.log(\"lfo depth: \" + this.depth)\n        this.$refs.visualizer.updateParams({depth: this.depth})\n      }\n      if (this.isFreqFaderDown) {\n        if (event.movementY < 0) {\n          // Mouse is moving dowm\n          this.freq = this.freq - 20 * (event.movementY / 100);\n          //console.log(\"moving up\");\n        } else {\n          // Mouse is moving up\n          this.freq = this.freq - 20 * (event.movementY / 100);\n        }\n        this.freq = Math.max(this.freq, 1);\n        this.freq = Math.min(this.freq, 20);\n\n        //console.log(\"lfo freq: \" + this.freq)\n        this.parameters.frequency = this.freq\n        this.$refs.visualizer.updateParams({freq: this.freq})\n        this.$refs.knobs.updateParameters(this.parameters)\n      }\n    },\n    handleMouseUp() {\n      if (this.isFreqFaderDown) this.isFreqFaderDown = false\n      if (this.isDepthFaderDown) this.isDepthFaderDown = false\n\n      this.$refs.knobs.handleMouseUp()\n    },\n\n    unHide() {\n      this.$refs.container.classList.remove(\"hidden\");\n      this.startOscilloscope()\n    },\n    hide() {\n      this.$refs.container.classList.add(\"hidden\");\n    },\n\n    //-------------METHODS TO LINK WHEN DROPPING\n    link(object, target, color) {\n      //console.log(\"THINGS HAPPENING \"+section+\" \"+target)\n      this.$refs.knobs.addLink(object, target, color)\n\n    },\n    unLink(object, target) {\n      //console.log(\"THINGS HAPPENING \")\n      //console.log(object)\n      //console.log(target)\n      this.$refs.knobs.removeLink(object, target)\n    },\n  }\n}\n</script>\n\n<style scoped>\n\n.border {\n  grid-template-columns: calc(6 / 8 * 100%) calc(2 / 8 * 100%);\n  grid-template-rows: 100% ;\n\n  position: relative;\n  display: grid;\n  width: calc(100% - 0.6vw);\n  height: calc(100% - 0.6vw);\n  box-sizing: border-box;\n  margin: 0.3vw;\n  border-radius: 0.2vw;\n  border: 0.1vw solid #334030;\n}\n.container {\n  grid-column: span 2;\n  width: 100%;\n  height: 100%;\n}\n\n.hidden {\n  display: none;\n}\n\n.lfo_elems_row {\n  margin: 0;\n  padding: 0;\n  display: flex;\n  flex-direction: row;\n  height: 100%;\n  align-items: center;\n  justify-items: center;\n  justify-content: center;\n}\n\n.lfoFaderBase {\n  position: absolute;\n  top: 5%;\n  left: 30%;\n  aspect-ratio: 1/10;\n  border-radius: 5vw;\n  height: 70%;\n}\n\n.lfoDepthFaderLevel {\n  position: relative;\n  width: 100%;\n  border-radius: 5vw;\n  height: 15%;\n  background-color: white;\n  top: 80%\n}\n\n.lfoFreqFaderLevel {\n  position: relative;\n  width: 100%;\n  height: 20%;\n  border-width: 1px;\n  border-style: solid;\n  border-radius: 5vw;\n  top: 80%;\n  box-sizing: border-box;\n}\n\n.lfo_controls_column {\n  height: 100%;\n  width: 100%;\n  display: flex;\n  flex: 0.9;\n  flex-direction: column;\n  align-content: center;\n  justify-content: center;\n  position: relative;\n  margin: 0;\n  padding: 0;\n}\n\n.lfo_waveform-btn-selector {\n  position: absolute;\n  left: 5%;\n  bottom: 5%;\n  aspect-ratio: 7/4;\n  width: 80%;\n  border-radius: 0.3vw;\n  border-style: solid;\n  border-width: 1px;\n  text-align: center;\n}\n\n\n.lfo_waveform_btn_icon {\n  position: absolute;\n  left: 0;\n  top: 0;\n  height: 100%;\n  width: 100%;\n  bottom: 0;\n  place-self: center;\n  align-self: center;\n  margin: 0;\n  padding: 0;\n  clip-path: circle(9%);\n  transform: scale(3.25);\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
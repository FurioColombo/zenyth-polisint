{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, normalizeStyle as _normalizeStyle, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_SpecAnalyzer = _resolveComponent(\"SpecAnalyzer\");\n  var _component_Oscilloscope = _resolveComponent(\"Oscilloscope\");\n  var _component_Meter = _resolveComponent(\"Meter\");\n  return _openBlock(), _createElementBlock(\"div\", {\n    \"class\": \"toolsHost\",\n    style: _normalizeStyle(this.toolsHost)\n  }, [_createVNode(_component_SpecAnalyzer), _createVNode(_component_Oscilloscope, {\n    ref: \"oscilloscope\"\n  }, null, 512), _createVNode(_component_Meter)], 4);\n}","map":{"version":3,"mappings":";;;;;uBACIA,oBAIM;IAJD,SAAM,WAAW;IAAEC,KAAK,uBAAOC,SAAS;MACzCC,aAAgBC,0BAChBD,aAAkCE;IAApBC,GAAG,EAAC;EAAc,eAChCH,aAAQI","names":["_createElementBlock","style","toolsHost","_createVNode","_component_SpecAnalyzer","_component_Oscilloscope","ref","_component_Meter"],"sourceRoot":"","sources":["/Users/eliapirrello/Documents/GitHub/zenyth/src/views/Synth/Tools/ToolsHost.vue"],"sourcesContent":["<template>\n    <div class=\"toolsHost\" :style=\"this.toolsHost\">\n        <SpecAnalyzer />\n        <Oscilloscope ref=\"oscilloscope\"/>\n        <Meter/>\n    </div>\n</template>\n<!-- ./Tools/Meter.vue../Meter.vue -->\n<script>\n    import * as Tone from \"tone\";\n    import Meter from './Meter.vue'\n    import Oscilloscope from './Oscilloscope.vue'\n    import SpecAnalyzer from './SpecAnalyzer.vue'\n    export default {\n    name: \"ToolsHost\",\n    components: {\n        Meter,\n        Oscilloscope,\n        SpecAnalyzer\n    },\n    data() {\n        return {\n\n        }\n    },\n    mounted() {\n\n    },\n    beforeDestroy() {\n    },\n\n    methods: {\n        setOscilloscopeTiming(note){\n            let mseconds = (1/Tone.Frequency(note))*1000;\n            this.$refs[\"oscilloscope\"].setTiming(mseconds)\n        }\n\n    },\n    computed: {\n        toolsHost(){\n            return{\n                background: this.colors.green.light\n            }\n        }\n    }\n}\n</script>\n\n<style>\n    .toolsHost{\n        display: grid;\n        grid-template-rows: 40% 40% 20%;\n    }\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { createElementVNode as _createElementVNode, normalizeStyle as _normalizeStyle, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nimport _imports_0 from '@/icons/ADSR.svg';\nimport _imports_1 from '@/icons/LFO.svg';\nvar _withScopeId = function _withScopeId(n) {\n  return _pushScopeId(\"data-v-0ef4a2a4\"), n = n(), _popScopeId(), n;\n};\nvar _hoisted_1 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"img\", {\n    src: _imports_0,\n    alt: \"\",\n    draggable: \"false\"\n  }, null, -1);\n});\nvar _hoisted_2 = [_hoisted_1];\nvar _hoisted_3 = [\"onClick\"];\nvar _hoisted_4 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"img\", {\n    src: _imports_0,\n    alt: \"\",\n    draggable: \"false\"\n  }, null, -1);\n});\nvar _hoisted_5 = [_hoisted_4];\nvar _hoisted_6 = [\"draggable\", \"onDragstart\"];\nvar _hoisted_7 = [\"onClick\"];\nvar _hoisted_8 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"img\", {\n    src: _imports_1,\n    alt: \"\",\n    draggable: \"false\"\n  }, null, -1);\n});\nvar _hoisted_9 = [_hoisted_8];\nvar _hoisted_10 = [\"draggable\", \"onDragstart\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", {\n    \"class\": \"buttonList\",\n    style: _normalizeStyle(this.buttonList)\n  }, [_createElementVNode(\"div\", {\n    \"class\": \"identifierVol\",\n    style: _normalizeStyle($options.buttonColor('mainEnv')),\n    onClick: _cache[0] || (_cache[0] = function ($event) {\n      return $options.handleClick(null, 'volEnvelope');\n    })\n  }, _hoisted_2, 4), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.buttonListEnv, function (button) {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: button.id,\n      \"class\": \"button\",\n      style: _normalizeStyle($options.buttonColor('envelope'))\n    }, [_createElementVNode(\"div\", {\n      style: _normalizeStyle($options.textId)\n    }, _toDisplayString(button.id), 5), _createElementVNode(\"div\", {\n      \"class\": \"identifier\",\n      onClick: function onClick($event) {\n        return $options.handleClick(button.id, button.type);\n      }\n    }, _hoisted_5, 8, _hoisted_3), _createElementVNode(\"div\", {\n      \"class\": \"draggableArea\",\n      draggable: $options.draggability('envelope', button.id),\n      onDragstart: function onDragstart($event) {\n        return $options.startDrag($event, button.id, button.type);\n      }\n    }, \"ϟ \", 40, _hoisted_6)], 4);\n  }), 128)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.buttonListLfo, function (button) {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: button.id,\n      \"class\": \"button\",\n      style: _normalizeStyle($options.buttonColor('lfo'))\n    }, [_createElementVNode(\"div\", {\n      style: _normalizeStyle($options.textId)\n    }, _toDisplayString(button.id), 5), _createElementVNode(\"div\", {\n      \"class\": \"identifier\",\n      onClick: function onClick($event) {\n        return $options.handleClick(button.id, button.type);\n      }\n    }, _hoisted_9, 8, _hoisted_7), _createElementVNode(\"div\", {\n      \"class\": \"draggableArea\",\n      draggable: $options.draggability('lfo', button.id),\n      onDragstart: function onDragstart($event) {\n        return $options.startDrag($event, button.id, button.type);\n      }\n    }, \"ϟ \", 40, _hoisted_10)], 4);\n  }), 128))], 4);\n}","map":{"version":3,"mappings":";OAGWA,UAAsB;OAmBlBC,UAAqB;;;;;sBAnB9BC,oBAAqD;IAAhDC,GAAsB,EAAtBH,UAAsB;IAACI,GAAG,EAAC,EAAE;IAACC,SAAS,EAAC;;;kBAA7CC,UAAqD;;;sBAOjDJ,oBAAqD;IAAhDC,GAAsB,EAP1BH,UAAsB;IAOKI,GAAG,EAAC,EAAE;IAACC,SAAS,EAAC;;;kBAA7CE,UAAqD;;;;sBAYrDL,oBAAoD;IAA/CC,GAAqB,EAArBF,UAAqB;IAACG,GAAG,EAAC,EAAE;IAACC,SAAS,EAAC;;;kBAA5CG,UAAoD;;;uBArB5DC,oBA4BM;IA5BD,SAAM,YAAY;IAAEC,KAAK,uBAAOC,UAAU;MAC7CT,oBAEM;IAFD,SAAM,eAAe;IAAEQ,KAAK,kBAAEE,oBAAW;IAAcC,OAAK;MAAA,OAAED,oBAAW;IAAA;wCAG9EH,oBAWWK,6BAXgBC,mBAAa,YAAvBC,MAAM;yBACrBP,oBASM;WAVwCO,MAAM,CAACC,EAAE;MAClD,SAAM,QAAQ;MAAEP,KAAK,kBAAEE,oBAAW;QACrCV,oBAA4C;MAAtCQ,KAAK,kBAAEE,eAAM;wBAAMI,MAAM,CAACC,EAAE,OAClCf,oBAGM;MAHD,SAAM,YAAY;MAAEW,OAAK;QAAA,OAAED,oBAAW,CAACI,MAAM,CAACC,EAAE,EAAED,MAAM,CAACE,IAAI;MAAA;mCAIlEhB,oBAEM;MAFD,SAAM,eAAe;MAAEG,SAAS,EAAEO,qBAAY,aAAaI,MAAM,CAACC,EAAE;MACtEE,WAAS;QAAA,OAAEP,kBAAS,CAACQ,MAAM,EAAEJ,MAAM,CAACC,EAAE,EAAED,MAAM,CAACE,IAAI;MAAA;OAAG,IACzD;gCAGJT,oBAWWK,6BAXgBC,mBAAa,YAAvBC,MAAM;yBACrBP,oBASM;WAVwCO,MAAM,CAACC,EAAE;MAClD,SAAM,QAAQ;MAAEP,KAAK,kBAAEE,oBAAW;QACrCV,oBAA4C;MAAtCQ,KAAK,kBAAEE,eAAM;wBAAMI,MAAM,CAACC,EAAE,OAClCf,oBAGM;MAHD,SAAM,YAAY;MAAEW,OAAK;QAAA,OAAED,oBAAW,CAACI,MAAM,CAACC,EAAE,EAAED,MAAM,CAACE,IAAI;MAAA;mCAIlEhB,oBAEM;MAFD,SAAM,eAAe;MAAEG,SAAS,EAAEO,qBAAY,QAAQI,MAAM,CAACC,EAAE;MACjEE,WAAS;QAAA,OAAEP,kBAAS,CAACQ,MAAM,EAAEJ,MAAM,CAACC,EAAE,EAAED,MAAM,CAACE,IAAI;MAAA;OAAG,IACzD","names":["_imports_0","_imports_1","_createElementVNode","src","alt","draggable","_hoisted_1","_hoisted_4","_hoisted_8","_createElementBlock","style","buttonList","$options","onClick","_Fragment","$data","button","id","type","onDragstart","$event"],"sourceRoot":"","sources":["/Users/eliapirrello/Documents/GitHub/zenyth/src/views/Synth/Modulators/ModSelector.vue"],"sourcesContent":["<template>\n  <div class=\"buttonList\" :style=\"this.buttonList\">\n    <div class=\"identifierVol\" :style=\"buttonColor('mainEnv')\" @click=\"handleClick(null, 'volEnvelope')\">\n      <img src=\"@/icons/ADSR.svg\" alt=\"\" draggable=\"false\">\n    </div>\n    <template v-for=\"button in buttonListEnv\" :key=\"button.id\" :ref=\"button.ref\">\n      <div class=\"button\" :style=\"buttonColor('envelope')\">\n        <div :style=\"textId\"> {{ button.id }} </div>\n        <div class=\"identifier\" @click=\"handleClick(button.id, button.type)\">\n\n          <img src=\"@/icons/ADSR.svg\" alt=\"\" draggable=\"false\">\n        </div>\n        <div class=\"draggableArea\" :draggable=\"draggability('envelope', button.id)\"\n          @dragstart=\"startDrag($event, button.id, button.type)\">ϟ\n        </div>\n      </div>\n    </template>\n    <template v-for=\"button in buttonListLfo\" :key=\"button.id\" :ref=\"button.ref\">\n      <div class=\"button\" :style=\"buttonColor('lfo')\">\n        <div :style=\"textId\"> {{ button.id }} </div>\n        <div class=\"identifier\" @click=\"handleClick(button.id, button.type)\"><!-- {{ button.id }} -->\n\n          <img src=\"@/icons/LFO.svg\" alt=\"\" draggable=\"false\">\n        </div>\n        <div class=\"draggableArea\" :draggable=\"draggability('lfo', button.id)\"\n          @dragstart=\"startDrag($event, button.id, button.type)\">ϟ\n        </div>\n      </div>\n    </template>\n  </div>\n\n</template>\n\n<script>\nimport * as Tone from \"tone\";\nimport { watch } from 'vue';\n\nexport default {\n  inject: ['dropFeedback'],\n  props: [],\n  data() {\n    return {\n      color: {\n        mainEnv: this.colors.pink.glow,\n        envelope: this.colors.azure.glow,\n        lfo: this.colors.purple.glow,\n      },\n      type: \"volEnvelope\",\n\n      isDraggable: this.isDraggable,\n      buttonListEnv: [],\n      buttonListLfo: [],\n    };\n  },\n  mounted() {\n    for (let i = 1; i < this.nEnvelopes + 1; i++) {\n      this.buttonListEnv.push({ id: i, ref: \"button\" + i, type: \"envelope\" });\n    }\n    for (let i = 1; i < this.nLfo + 1; i++) {\n      this.buttonListLfo.push({ id: i, ref: \"button\" + i, type: \"lfo\" });\n    }\n    //console.log(this.isDraggable)\n\n\n    //console.log(this.buttonListEnv)\n    //console.log(this.buttonListLfo)\n\n    /*\n    this.$on(\"unLink\", (data) => {\n          console.log(\"ModSelector disconnecting link from \"+data.modulator.type+\" \"+data.modulator.id+\" to \"+data.section+data.target)})\n\n     */\n\n  },\n  computed: {\n    textId(){\n      return {\n        fontWeight: \"bold\",\n        opacity: \"80%\",\n        position: 'absolute',\n        fontSize:'.8vw'\n      }\n    },\n    buttonList() {\n      switch (this.type) {\n        case \"volEnvelope\":\n          return{\n            backgroundColor: this.colors.pink.medium\n          }\n          case \"envelope\":\n          return{\n            backgroundColor: this.colors.azure.medium\n          }\n          case \"lfo\":\n          return{\n            backgroundColor: this.colors.purple.glow\n          }\n      }\n      \n    } \n\n  },\n  methods: {\n    draggability(type, id) {\n      //console.log(this.isDraggable)\n      //console.log(\"checking draggability of \" + type + \" \" + id)\n      return this.isDraggable[type][id]\n    },\n    isDraggableUpdate(isDraggable) {\n      //console.log(\"UPDATE ISDRAGGABLE\")\n      //console.log(this.isDraggable)\n      this.isDraggable = isDraggable\n    },\n    buttonColor(type) {\n      return {\n        backgroundColor: this.color[type]\n      }\n    },\n\n    startDrag(event, id, type) {\n      //console.log(\"dragging \" + type + \" \" + id)\n      event.dataTransfer.dropEffect = \"move\"\n      event.dataTransfer.effectAllowed = \"move\"\n      let data = { type: type, id: id, color: this.color[type] }\n      event.dataTransfer.setData(\"data\", JSON.stringify(data));\n      //console.log(data)\n    },\n    handleClick(id, type) {\n      this.type = type\n      if (type === \"volEnvelope\") {\n        //console.log(\"Selected \" + id)\n        this.$emit(\"selection\", type, null);\n      } else {\n        //console.log(\"Selected \" + type + \" \" + id)\n        this.$emit(\"selection\", id, type);\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n.button {\n  display: grid;\n  grid-template-columns: 80% 18%;\n  flex: 1;\n  width: 100%;\n  height: 100%;\n  border: 0.06vw solid black; \n  border-radius: 0.2vw;\n  padding: 1%;\n  justify-content: center;\n  align-items: center;\n  box-sizing: border-box;\n  align-content: center;\n  justify-items: stretch;\n\n}\n\n.buttonList {\n  padding-left: 0.3vw;\n  padding-right:  0.3vw;\n  padding-bottom: 0.3vw;\n  position: relative;\n  grid-row: 2;\n  display: flex;\n  flex-basis: column;\n  align-items: center;\n  justify-content: center;\n}\n\n.identifier {\n  height: 100%;\n  justify-content: center;\n  align-items: center;\n  /* border: 0.1vw solid black; */\n  display: flex;\n\n}\n\n.identifierVol {\n  border: 0.06vw solid black; \n  border-radius: 0.2vw;\n  flex: 1;\n  box-sizing: border-box;\n  display: flex;\n  height: 100%;\n  justify-content: center;\n  align-items: center;\n}\n\n.draggableArea {\n  border-radius: 50%;\n  display: flex;\n  border: 0.1vw solid black;\n  box-sizing: border-box;\n  position: relative;\n  width: 100%;\n  aspect-ratio: 1/1;\n  font-size: .9vw;\n  align-items: flex-end;\n  justify-content: center;\n}.draggableArea:hover {\n  opacity: 40%;\n}\n.identifier img {\n  position: relative;\n  opacity: 60%;\n  width: 4vw;\n  aspect-ratio: 1/1;\n}\n.identifierVol img {\n  position: relative;\n  opacity: 60%;\n  width: 4vw;\n  aspect-ratio: 1/1;\n}\n.identifier img:hover {\n  opacity: 40%;\n}\n.identifierVol img:hover {\n  opacity: 40%;\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
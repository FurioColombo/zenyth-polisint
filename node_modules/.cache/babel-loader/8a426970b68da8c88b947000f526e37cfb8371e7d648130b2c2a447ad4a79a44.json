{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, normalizeStyle as _normalizeStyle, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nimport _imports_0 from '@/icons/sine.svg';\nimport _imports_1 from '@/icons/triangle.svg';\nimport _imports_2 from '@/icons/square.svg';\nimport _imports_3 from '@/icons/saw.svg';\nvar _withScopeId = function _withScopeId(n) {\n  return _pushScopeId(\"data-v-4dd36412\"), n = n(), _popScopeId(), n;\n};\nvar _hoisted_1 = {\n  \"class\": \"lfo_controls_column\"\n};\nvar _hoisted_2 = {\n  key: 0,\n  \"class\": \"lfo_waveform_btn_icon\",\n  src: _imports_0,\n  alt: \"\",\n  draggable: \"false\"\n};\nvar _hoisted_3 = {\n  key: 1,\n  \"class\": \"lfo_waveform_btn_icon\",\n  src: _imports_1,\n  alt: \"\",\n  draggable: \"false\"\n};\nvar _hoisted_4 = {\n  key: 2,\n  \"class\": \"lfo_waveform_btn_icon\",\n  src: _imports_2,\n  alt: \"\",\n  draggable: \"false\"\n};\nvar _hoisted_5 = {\n  key: 3,\n  \"class\": \"lfo_waveform_btn_icon\",\n  src: _imports_3,\n  alt: \"\",\n  draggable: \"false\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_LfoVisualizer = _resolveComponent(\"LfoVisualizer\");\n  var _component_Knobs = _resolveComponent(\"Knobs\");\n  return _openBlock(), _createElementBlock(\"div\", {\n    ref: \"container\",\n    \"class\": \"container hidden\",\n    style: _normalizeStyle(this.container)\n  }, [_createElementVNode(\"div\", {\n    \"class\": \"border\",\n    style: _normalizeStyle(this.border)\n  }, [_createElementVNode(\"div\", {\n    \"class\": \"lfo_elems_row\",\n    style: _normalizeStyle(this.lfo_elems_row)\n  }, [_createCommentVNode(\" MODULATION AMOUNT: REGULATES THE AMPLITUDE OF THE LFO !!!!! broken !!!!!!\\r\\n      <div class=\\\"lfoFaderBase volFaderBase\\\" @mousedown=\\\"isDepthFaderDown=true\\\">\\r\\n        <div class=\\\"lfoDepthFaderLevel\\\" :style=\\\"this.lfoDepthFaderLevel\\\"></div>\\r\\n      </div> \"), _createVNode(_component_LfoVisualizer, {\n    ref: \"visualizer\",\n    freq: this.freq,\n    depth: this.depth,\n    wave: this.waveform\n  }, null, 8 /* PROPS */, [\"freq\", \"depth\", \"wave\"]), _createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", {\n    \"class\": \"lfoFaderBase freqFader\",\n    style: _normalizeStyle(this.lfoFaderBase),\n    onMousedown: _cache[0] || (_cache[0] = function ($event) {\n      return $data.isFreqFaderDown = true;\n    })\n  }, [_createElementVNode(\"div\", {\n    \"class\": \"lfoFreqFaderLevel\",\n    style: _normalizeStyle(this.lfoFreqFaderLevel)\n  }, null, 4 /* STYLE */)], 36 /* STYLE, HYDRATE_EVENTS */), _createElementVNode(\"div\", {\n    \"class\": \"lfo_waveform-btn-selector\",\n    style: _normalizeStyle($options.lfo_waveform_btn_selector),\n    onClick: _cache[1] || (_cache[1] = function () {\n      return $options.nextWaveType && $options.nextWaveType.apply($options, arguments);\n    })\n  }, [this.waveform === 'sine' ? (_openBlock(), _createElementBlock(\"img\", _hoisted_2)) : _createCommentVNode(\"v-if\", true), this.waveform === 'triangle' ? (_openBlock(), _createElementBlock(\"img\", _hoisted_3)) : _createCommentVNode(\"v-if\", true), this.waveform === 'square' ? (_openBlock(), _createElementBlock(\"img\", _hoisted_4)) : _createCommentVNode(\"v-if\", true), this.waveform === 'sawtooth' ? (_openBlock(), _createElementBlock(\"img\", _hoisted_5)) : _createCommentVNode(\"v-if\", true)], 4 /* STYLE */)])], 4 /* STYLE */), _createVNode(_component_Knobs, {\n    ref: \"knobs\",\n    type: \"lfo\",\n    id: this.id,\n    parameters: this.parameters\n  }, null, 8 /* PROPS */, [\"id\", \"parameters\"])], 4 /* STYLE */)], 4 /* STYLE */);\n}","map":{"version":3,"mappings":";OAc2EA,UAAsB;OAClBC,UAA0B;OAC5BC,UAAwB;OACtBC,UAAqB;;;;;EARzF,SAAM;AAAqB;;;EAKO,SAAM,uBAAuB;EAACC,GAAsB,EAAtBJ,UAAsB;EAACK,GAAG,EAAC,EAAE;EAACC,SAAS,EAAC;;;;EAClE,SAAM,uBAAuB;EAACF,GAA0B,EAA1BH,UAA0B;EAACI,GAAG,EAAC,EAAE;EAACC,SAAS,EAAC;;;;EAC5E,SAAM,uBAAuB;EAACF,GAAwB,EAAxBF,UAAwB;EAACG,GAAG,EAAC,EAAE;EAACC,SAAS,EAAC;;;;EACtE,SAAM,uBAAuB;EAACF,GAAqB,EAArBD,UAAqB;EAACE,GAAG,EAAC,EAAE;EAACC,SAAS,EAAC;;;;;uBAhBpHC,oBAwBM;IAxBDC,GAAG,EAAC,WAAW;IAAC,SAAM,kBAAkB;IAAEC,KAAK,uBAAOC,SAAS;MAClEC,oBAsBI;IAtBC,SAAM,QAAQ;IAAEF,KAAK,uBAAOG,MAAM;MACrCD,oBAkBI;IAlBC,SAAM,eAAe;IAAEF,KAAK,uBAAOI,aAAa;MACnDC,iSAGQ,EACVC,aAA4GC;IAA7FR,GAAG,EAAC,YAAY;IAAES,IAAI,OAAOA,IAAI;IAAGC,KAAK,OAAOA,KAAK;IAAGC,IAAI,OAAOC;sDAClFT,oBAWM,OAXNU,UAWM,GAVJV,oBAEM;IAFD,SAAM,wBAAwB;IAAEF,KAAK,uBAAOa,YAAY;IAAGC,WAAS;MAAA,OAAEC,qBAAe;IAAA;MACxFb,oBAAqE;IAAhE,SAAM,mBAAmB;IAAEF,KAAK,uBAAOgB,iBAAiB;6DAE/Dd,oBAMM;IAND,SAAM,2BAA2B;IAAEF,KAAK,kBAAEiB,kCAAyB;IAAGC,OAAK;MAAA,OAAED,yEAAY;IAAA;WAC5EN,QAAQ,6BAAxBb,oBAAiH,OAAjHqB,UAAiH,6CACjGR,QAAQ,iCAAxBb,oBAAyH,OAAzHsB,UAAyH,6CACzGT,QAAQ,+BAAxBb,oBAAqH,OAArHuB,UAAqH,6CACrGV,QAAQ,iCAAxBb,oBAAoH,OAApHwB,UAAoH,4EAM1HhB,aAA2EiB;IAApExB,GAAG,EAAC,OAAO;IAACyB,IAAI,EAAC,KAAK;IAAEC,EAAE,OAAOA,EAAE;IAAGC,UAAU,OAAOA","names":["_imports_0","_imports_1","_imports_2","_imports_3","src","alt","draggable","_createElementBlock","ref","style","container","_createElementVNode","border","lfo_elems_row","_createCommentVNode","_createVNode","_component_LfoVisualizer","freq","depth","wave","waveform","_hoisted_1","lfoFaderBase","onMousedown","$data","lfoFreqFaderLevel","$options","onClick","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_component_Knobs","type","id","parameters"],"sourceRoot":"","sources":["C:\\Home\\Projects\\Programmazione\\WebStorm\\myZenythPolisinT\\zenyth_polisint\\src\\views\\Synth\\Modulators\\Lfo.vue"],"sourcesContent":["<template>\r\n  <div ref=\"container\" class=\"container hidden\" :style=\"this.container\">\r\n    <div class=\"border\" :style=\"this.border\">\r\n      <div class=\"lfo_elems_row\" :style=\"this.lfo_elems_row\">\r\n        <!-- MODULATION AMOUNT: REGULATES THE AMPLITUDE OF THE LFO !!!!! broken !!!!!!\r\n      <div class=\"lfoFaderBase volFaderBase\" @mousedown=\"isDepthFaderDown=true\">\r\n        <div class=\"lfoDepthFaderLevel\" :style=\"this.lfoDepthFaderLevel\"></div>\r\n      </div> -->\r\n      <LfoVisualizer ref=\"visualizer\" :freq=\"this.freq\" :depth=\"this.depth\" :wave=\"this.waveform\"></LfoVisualizer>\r\n      <div class=\"lfo_controls_column\" >\r\n        <div class=\"lfoFaderBase freqFader\" :style=\"this.lfoFaderBase\" @mousedown=\"isFreqFaderDown=true\">\r\n          <div class=\"lfoFreqFaderLevel\" :style=\"this.lfoFreqFaderLevel\"></div>\r\n        </div>\r\n        <div class=\"lfo_waveform-btn-selector\" :style=\"lfo_waveform_btn_selector\" @click=\"nextWaveType\">\r\n          <img v-if=\"this.waveform==='sine'\" class=\"lfo_waveform_btn_icon\" src=\"@/icons/sine.svg\" alt=\"\" draggable=\"false\">\r\n          <img v-if=\"this.waveform==='triangle'\" class=\"lfo_waveform_btn_icon\" src=\"@/icons/triangle.svg\" alt=\"\" draggable=\"false\">\r\n          <img v-if=\"this.waveform==='square'\" class=\"lfo_waveform_btn_icon\" src=\"@/icons/square.svg\" alt=\"\" draggable=\"false\">\r\n          <img v-if=\"this.waveform==='sawtooth'\" class=\"lfo_waveform_btn_icon\" src=\"@/icons/saw.svg\" alt=\"\" draggable=\"false\">\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <Knobs ref=\"knobs\" type=\"lfo\" :id=\"this.id\" :parameters=\"this.parameters\"/>\r\n  </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport LfoVisualizer from \"@/views/Synth/Modulators/LfoVisualizer\";\r\nimport Knobs from \"./Knobs.vue\";\r\n\r\n\r\nconst waveforms = ['sine', 'triangle', 'square', 'sawtooth']\r\nexport default {\r\n  components: { LfoVisualizer, Knobs },\r\n  props: [\"id\"],\r\n\r\n  data() {\r\n    return {\r\n      freq: 10,\r\n      depth: 0.8,\r\n      isDepthFaderDown: false,\r\n      isFreqFaderDown: false,\r\n      waveform: waveforms[0],\r\n      waveformId: 0,\r\n      parameters: {}\r\n\r\n    }\r\n  },\r\n\r\n  mounted() {\r\n    //document.addEventListener(\"mousemove\", this.onMouseMove); // todo: remove this\r\n    //console.log(\"mounted - this.waveformId: \" + this.waveformId + \" - this.waveform: \" + this.waveform)\r\n\r\n    this.parameters = {\r\n      frequency: this.freq,\r\n      waveform: this.waveform\r\n    }\r\n  },\r\n\r\n  computed: {\r\n    lfoDepthFaderLevel() {\r\n      //console.log(\"lfoDepthFaderLevel\")\r\n      return {\r\n        top: ((1 - this.depth) * 85).toString() + \"%\"\r\n      }\r\n    },\r\n    lfo_elems_row() {\r\n      return {\r\n        background: this.colors.purple.medium\r\n      }\r\n    },\r\n    lfoFaderBase() {\r\n      return {\r\n        background: this.colors.purple.glow\r\n      }\r\n    },\r\n    lfoFreqFaderLevel() {\r\n      return {\r\n        top: ((20 - this.freq) / 20 * 85).toString() + \"%\",\r\n        background: this.colors.purple.light,\r\n        borderColor: this.colors.purple.dark\r\n      }\r\n    },\r\n    lfo_waveform_btn_selector() {\r\n      return {\r\n        borderColor: this.colors.purple.dark,\r\n        background: this.colors.purple.light,\r\n        color: this.colors.gray.dark\r\n      }\r\n    },\r\n    container(){\r\n      return {\r\n        background: this.colors.purple.glow\r\n      }\r\n    },\r\n    border(){\r\n      return{\r\n        background: this.colors.purple.glow\r\n      }\r\n    }\r\n  },\r\n\r\n  methods: {\r\n    setParams({ freq = this.freq, depth = this.depth, waveform = this.waveform}) {\r\n      if (freq <= 20) {\r\n        this.freq = freq;\r\n      } else {\r\n        this.freq = 20\r\n      }\r\n      if(typeof waveform === 'number') {\r\n        this.waveformId = waveform;\r\n        if(this.waveformId === 0 || this.waveformId === 1) {\r\n          this.waveform = waveforms[this.waveformId]\r\n        } else {\r\n          console.log(\"ERROR: Called Non existing lfo wave type Id\")\r\n        }\r\n      } else if(typeof waveform === 'string'){\r\n        this.waveform = waveform;\r\n        waveforms.forEach( (waveformNameString, index) => {\r\n          if(waveformNameString === this.waveform) this.waveformId = index;\r\n        })\r\n      }\r\n      this.parameters.waveform = this.waveform;\r\n      this.depth = depth;\r\n      this.$refs.visualizer.updateParams({freq: this.freq, depth: this.depth})\r\n      this.$refs.knobs.updateParameters(this.parameters)\r\n\r\n    },\r\n\r\n    nextWaveType(){\r\n      this.waveformId++;\r\n      if(this.waveformId > waveforms.length-1) this.waveformId = 0;\r\n      this.waveform = waveforms[this.waveformId]\r\n      this.parameters.waveform = this.waveform;\r\n      // console.log(\"nextWaveType - this.waveformId: \" + this.waveformId + \" - this.waveform: \" + this.waveform)\r\n\r\n\r\n      //console.log(\"CHANGING WAVE TYPE TO: \" + this.waveform)\r\n      this.$refs.knobs.updateParameters(this.parameters)\r\n      this.$refs.visualizer.updateParams({ waveform: this.waveform, frequency: this.freq })\r\n    },\r\n\r\n    startOscilloscope() {\r\n      //console.log(\"start LFO graphics\")\r\n      this.$refs.visualizer.startOscilloscope();\r\n    },\r\n    stopOscilloscope() {\r\n      //console.log(\"stop LFO graphics\")\r\n      this.$refs.visualizer.stopOscilloscope();\r\n    },\r\n    resetOscilloscope() {\r\n      this.$refs.visualizer.stopOscilloscope();\r\n      this.$refs.visualizer.startOscilloscope();\r\n\r\n    },\r\n    // ---------- USER GESTURE ----------\r\n\r\n    depthFaderSelected() {\r\n      //console.log(\"depthFaderSelected\")\r\n      this.isDepthFaderDown = true;\r\n    },\r\n    freqFaderSelected() {\r\n      //console.log(\"freqFaderSelected\")\r\n      this.isFreqFaderDown = true;\r\n    },\r\n\r\n    handleMouseMove(event) {\r\n      //console.log(\"lfo - handleMouseMove\")\r\n     this.$refs.knobs.handleMouseMove(event)\r\n      if (this.isDepthFaderDown) {\r\n        if (event.movementY < 0) {\r\n          // Mouse is moving dowm\r\n          this.depth = this.depth - event.movementY / 100;\r\n          //console.log(\"moving up\");\r\n        } else {\r\n          // Mouse is moving up\r\n          this.depth = this.depth - event.movementY / 100;\r\n          //console.log(\"moving down\");\r\n        }\r\n        this.depth = Math.max(this.depth, 0);\r\n        this.depth = Math.min(this.depth, 1);\r\n\r\n        //console.log(\"lfo depth: \" + this.depth)\r\n        this.$refs.visualizer.updateParams({depth: this.depth})\r\n      }\r\n      if (this.isFreqFaderDown) {\r\n        if (event.movementY < 0) {\r\n          // Mouse is moving dowm\r\n          this.freq = this.freq - 20 * (event.movementY / 100);\r\n          //console.log(\"moving up\");\r\n        } else {\r\n          // Mouse is moving up\r\n          this.freq = this.freq - 20 * (event.movementY / 100);\r\n        }\r\n        this.freq = Math.max(this.freq, 1);\r\n        this.freq = Math.min(this.freq, 20);\r\n\r\n        //console.log(\"lfo freq: \" + this.freq)\r\n        this.parameters.frequency = this.freq\r\n        this.$refs.visualizer.updateParams({freq: this.freq})\r\n        this.$refs.knobs.updateParameters(this.parameters)\r\n      }\r\n    },\r\n    handleMouseUp() {\r\n      if (this.isFreqFaderDown) this.isFreqFaderDown = false\r\n      if (this.isDepthFaderDown) this.isDepthFaderDown = false\r\n\r\n      this.$refs.knobs.handleMouseUp()\r\n    },\r\n\r\n    unHide() {\r\n      this.$refs.container.classList.remove(\"hidden\");\r\n      this.startOscilloscope()\r\n    },\r\n    hide() {\r\n      this.$refs.container.classList.add(\"hidden\");\r\n    },\r\n\r\n    //-------------METHODS TO LINK WHEN DROPPING\r\n    link(object, target, color) {\r\n      //console.log(\"THINGS HAPPENING \"+section+\" \"+target)\r\n      this.$refs.knobs.addLink(object, target, color)\r\n\r\n    },\r\n    unLink(object, target) {\r\n      //console.log(\"THINGS HAPPENING \")\r\n      //console.log(object)\r\n      //console.log(target)\r\n      this.$refs.knobs.removeLink(object, target)\r\n    },\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n.border {\r\n  grid-template-columns: calc(6 / 8 * 100%) calc(2 / 8 * 100%);\r\n  grid-template-rows: 100% ;\r\n\r\n  position: relative;\r\n  display: grid;\r\n  width: calc(100% - 0.6vw);\r\n  height: calc(100% - 0.6vw);\r\n  box-sizing: border-box;\r\n  margin: 0.3vw;\r\n  border-radius: 0.2vw;\r\n  border: 0.1vw solid #334030;\r\n}\r\n.container {\r\n  grid-column: span 2;\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n\r\n.hidden {\r\n  display: none;\r\n}\r\n\r\n.lfo_elems_row {\r\n  margin: 0;\r\n  padding: 0;\r\n  display: flex;\r\n  flex-direction: row;\r\n  height: 100%;\r\n  align-items: center;\r\n  justify-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n.lfoFaderBase {\r\n  position: absolute;\r\n  top: 5%;\r\n  left: 30%;\r\n  aspect-ratio: 1/10;\r\n  border-radius: 5vw;\r\n  height: 70%;\r\n}\r\n\r\n.lfoDepthFaderLevel {\r\n  position: relative;\r\n  width: 100%;\r\n  border-radius: 5vw;\r\n  height: 15%;\r\n  background-color: white;\r\n  top: 80%\r\n}\r\n\r\n.lfoFreqFaderLevel {\r\n  position: relative;\r\n  width: 100%;\r\n  height: 20%;\r\n  border-width: 1px;\r\n  border-style: solid;\r\n  border-radius: 5vw;\r\n  top: 80%;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.lfo_controls_column {\r\n  height: 100%;\r\n  width: 100%;\r\n  display: flex;\r\n  flex: 0.9;\r\n  flex-direction: column;\r\n  align-content: center;\r\n  justify-content: center;\r\n  position: relative;\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\n.lfo_waveform-btn-selector {\r\n  position: absolute;\r\n  left: 5%;\r\n  bottom: 5%;\r\n  aspect-ratio: 7/4;\r\n  width: 80%;\r\n  border-radius: 0.3vw;\r\n  border-style: solid;\r\n  border-width: 1px;\r\n  text-align: center;\r\n}\r\n\r\n\r\n.lfo_waveform_btn_icon {\r\n  position: absolute;\r\n  left: 0;\r\n  top: 0;\r\n  height: 100%;\r\n  width: 100%;\r\n  bottom: 0;\r\n  place-self: center;\r\n  align-self: center;\r\n  margin: 0;\r\n  padding: 0;\r\n  clip-path: circle(9%);\r\n  transform: scale(3.25);\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import _objectSpread from \"/Users/eliapirrello/Documents/GitHub/zenyth/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _typeof from \"/Users/eliapirrello/Documents/GitHub/zenyth/node_modules/@babel/runtime/helpers/esm/typeof.js\";\nimport _classCallCheck from \"/Users/eliapirrello/Documents/GitHub/zenyth/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/eliapirrello/Documents/GitHub/zenyth/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/eliapirrello/Documents/GitHub/zenyth/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/eliapirrello/Documents/GitHub/zenyth/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.timers.js\";\nimport { deactivateAudioGraph } from '../helpers/deactivate-audio-graph';\nimport { testPromiseSupport } from '../helpers/test-promise-support';\nvar DEFAULT_OPTIONS = {\n  numberOfChannels: 1\n};\nexport var createOfflineAudioContextConstructor = function createOfflineAudioContextConstructor(baseAudioContextConstructor, cacheTestResult, createInvalidStateError, createNativeOfflineAudioContext, _startRendering) {\n  return /*#__PURE__*/function (_baseAudioContextCons) {\n    _inherits(OfflineAudioContext, _baseAudioContextCons);\n    var _super = _createSuper(OfflineAudioContext);\n    function OfflineAudioContext(a, b, c) {\n      var _this;\n      _classCallCheck(this, OfflineAudioContext);\n      var options;\n      if (typeof a === 'number' && b !== undefined && c !== undefined) {\n        options = {\n          length: b,\n          numberOfChannels: a,\n          sampleRate: c\n        };\n      } else if (_typeof(a) === 'object') {\n        options = a;\n      } else {\n        throw new Error('The given parameters are not valid.');\n      }\n      var _DEFAULT_OPTIONS$opti = _objectSpread(_objectSpread({}, DEFAULT_OPTIONS), options),\n        length = _DEFAULT_OPTIONS$opti.length,\n        numberOfChannels = _DEFAULT_OPTIONS$opti.numberOfChannels,\n        sampleRate = _DEFAULT_OPTIONS$opti.sampleRate;\n      var nativeOfflineAudioContext = createNativeOfflineAudioContext(numberOfChannels, length, sampleRate);\n      // #21 Safari does not support promises and therefore would fire the statechange event before the promise can be resolved.\n      if (!cacheTestResult(testPromiseSupport, function () {\n        return testPromiseSupport(nativeOfflineAudioContext);\n      })) {\n        nativeOfflineAudioContext.addEventListener('statechange', function () {\n          var i = 0;\n          var delayStateChangeEvent = function delayStateChangeEvent(event) {\n            if (_this._state === 'running') {\n              if (i > 0) {\n                nativeOfflineAudioContext.removeEventListener('statechange', delayStateChangeEvent);\n                event.stopImmediatePropagation();\n                _this._waitForThePromiseToSettle(event);\n              } else {\n                i += 1;\n              }\n            }\n          };\n          return delayStateChangeEvent;\n        }());\n      }\n      _this = _super.call(this, nativeOfflineAudioContext, numberOfChannels);\n      _this._length = length;\n      _this._nativeOfflineAudioContext = nativeOfflineAudioContext;\n      _this._state = null;\n      return _this;\n    }\n    _createClass(OfflineAudioContext, [{\n      key: \"length\",\n      get: function get() {\n        // Bug #17: Safari does not yet expose the length.\n        if (this._nativeOfflineAudioContext.length === undefined) {\n          return this._length;\n        }\n        return this._nativeOfflineAudioContext.length;\n      }\n    }, {\n      key: \"state\",\n      get: function get() {\n        return this._state === null ? this._nativeOfflineAudioContext.state : this._state;\n      }\n    }, {\n      key: \"startRendering\",\n      value: function startRendering() {\n        var _this2 = this;\n        /*\n         * Bug #9 & #59: It is theoretically possible that startRendering() will first render a partialOfflineAudioContext. Therefore\n         * the state of the nativeOfflineAudioContext might no transition to running immediately.\n         */\n        if (this._state === 'running') {\n          return Promise.reject(createInvalidStateError());\n        }\n        this._state = 'running';\n        return _startRendering(this.destination, this._nativeOfflineAudioContext)[\"finally\"](function () {\n          _this2._state = null;\n          deactivateAudioGraph(_this2);\n        });\n      }\n    }, {\n      key: \"_waitForThePromiseToSettle\",\n      value: function _waitForThePromiseToSettle(event) {\n        var _this3 = this;\n        if (this._state === null) {\n          this._nativeOfflineAudioContext.dispatchEvent(event);\n        } else {\n          setTimeout(function () {\n            return _this3._waitForThePromiseToSettle(event);\n          });\n        }\n      }\n    }]);\n    return OfflineAudioContext;\n  }(baseAudioContextConstructor);\n};","map":{"version":3,"mappings":"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","names":["deactivateAudioGraph","testPromiseSupport","DEFAULT_OPTIONS","numberOfChannels","createOfflineAudioContextConstructor","baseAudioContextConstructor","cacheTestResult","createInvalidStateError","createNativeOfflineAudioContext","startRendering","a","b","c","options","undefined","length","sampleRate","Error","nativeOfflineAudioContext","addEventListener","i","delayStateChangeEvent","event","_state","removeEventListener","stopImmediatePropagation","_waitForThePromiseToSettle","_length","_nativeOfflineAudioContext","state","Promise","reject","destination","dispatchEvent","setTimeout"],"sourceRoot":"","sources":["../../../src/factories/offline-audio-context-constructor.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module","externalDependencies":[]}
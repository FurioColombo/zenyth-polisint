{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n// I want to modify a variable of a vue component from its father that is a vue component too\nimport Filter from './Filter.vue';\nimport { getDestination } from \"tone\";\nimport { isProxy, toRaw } from \"vue\";\nvar filterTypes = [\"highpass\", \"peaking\", \"lowpass\"];\nexport default {\n  ref: \"FilterChain\",\n  components: {\n    Filter: Filter\n  },\n  props: [\"color\", \"id\"],\n  data: function data() {\n    return {\n      filterList: [],\n      nFilters: 3,\n      isFxChainRouteActive: [true, false, false]\n    };\n  },\n  mounted: function mounted() {\n    //console.log(\"mounting filter chain\" + this.id)\n    for (var index = 0; index < this.nFiltersXchain; index++) {\n      this.filterList.push({\n        id: index,\n        ref: \"filter\" + index,\n        type: filterTypes[index]\n      });\n    }\n  },\n  computed: {\n    fx_chain_1: function fx_chain_1() {\n      var color = '';\n      if (this.isFxChainRouteActive[0]) color = this.colors.purple.light;else color = this.colors.yellow.glow;\n      return {\n        background: color,\n        border: '.1vw solid' + this.colors.gray.dark\n      };\n    },\n    fx_chain_2: function fx_chain_2() {\n      var color = '';\n      if (this.isFxChainRouteActive[1]) color = this.colors.green.medium;else color = this.colors.yellow.glow;\n      return {\n        background: color,\n        border: '.1vw solid' + this.colors.gray.dark\n      };\n    },\n    fx_chain_3: function fx_chain_3() {\n      var color = '';\n      if (this.isFxChainRouteActive[2]) color = this.colors.pink.light;else color = this.colors.yellow.glow;\n      return {\n        background: color,\n        border: '.1vw solid' + this.colors.gray.dark\n      };\n    },\n    chainLine: function chainLine() {\n      return {\n        top: '49%',\n        left: '5%',\n        width: '88%',\n        height: '.2vw',\n        position: 'absolute',\n        background: this.$props['color'],\n        zIndex: '0',\n        borderRadius: '10%'\n      };\n    },\n    chainDot: function chainDot() {\n      return {\n        top: '45%',\n        left: '3.5%',\n        height: '10%',\n        aspectRatio: '1/1',\n        position: 'absolute',\n        zIndex: '3',\n        background: this.$props['color'],\n        borderRadius: '50%'\n      };\n    }\n  },\n  methods: {\n    handleFiltersMounted: function handleFiltersMounted() {\n      if (this.id === this.nFilterChains - 1) {\n        this.$emit(\"filterInitialized\");\n      }\n    },\n    // -------- AUDIO -------x\n    initConnections: function initConnections() {\n      //console.log(\"filter chain init connections\")\n      for (var index = 0; index < this.nFiltersXchain - 1; index++) {\n        this.filterChains[this.id][index].connect(this.filterChains[this.id][index + 1].getToneFilter());\n        //console.log(\"connected \" + this.filterChains[this.id][index] + \" to \" + this.filterChains[this.id][index + 1])\n      }\n      // connect chain of filters output to chain each chain of effects\n      this.filterChains[this.id][this.nFilters - 1].connect(this.fxChains[0][0]); // init connection to first fx chain\n      this.isFxChainRouteActive[0] = true;\n      /*for (let i = 0; i < this.nFxChains; i++) { // init connection to all chains\r\n        this.filterChains[this.id][this.nFilters - 1].connect(this.fxChains[i][0]);\r\n        this.isFxChainRouteActive[i] = true;\r\n      }*/\n    },\n    setRouting: function setRouting(id) {\n      //console.log(\"chain click - id: \" + id);\n      try {\n        if (this.isFxChainRouteActive[id]) {\n          //console.log(\"disconnect from: \" + this.fxChains[id][0] + \" \" + id);\n          this.filterChains[this.id][this.nFilters - 1].disconnect(this.fxChains[id][0]);\n        } else {\n          //console.log(\"connect to: \" + this.fxChains[id][0] + \" \" + id);\n          this.filterChains[this.id][this.nFilters - 1].connect(this.fxChains[id][0]);\n        }\n      } catch (e) {\n        console.log(\"error: \" + e + \"\\nCHAIN FILTERS CONNECTION TO FX CHAIN \" + id + \" UNSUCCESSFUL. Can't connect to \" + this.fxChains[id][0]);\n      }\n      this.isFxChainRouteActive[id] = !this.isFxChainRouteActive[id];\n    }\n  }\n};","map":{"version":3,"mappings":";AAoBA;AACA,OAAOA,MAAK,MAAO,cAAa;AAChC,SAAQC,cAAc,QAAO,MAAM;AACnC,SAAQC,OAAO,EAAEC,KAAK,QAAO,KAAK;AAElC,IAAMC,WAAU,GAAI,CAAC,UAAU,EAAE,SAAS,EAAE,SAAS;AAErD,eAAe;EACbC,GAAG,EAAE,aAAa;EAClBC,UAAU,EAAE;IACVN,MAAM,EAANA;EACF,CAAC;EACDO,KAAK,EAAE,CAAC,OAAO,EAAE,IAAI,CAAC;EACtBC,IAAI,kBAAG;IACL,OAAO;MACLC,UAAU,EAAE,EAAE;MACdC,QAAQ,EAAE,CAAC;MACXC,oBAAoB,EAAE,CAAC,IAAI,EAAE,KAAK,EAAE,KAAK;IAC3C;EACF,CAAC;EACDC,OAAO,qBAAG;IACR;IACA,KAAK,IAAIC,KAAI,GAAI,CAAC,EAAEA,KAAI,GAAI,IAAI,CAACC,cAAc,EAAED,KAAK,EAAE,EAAE;MACxD,IAAI,CAACJ,UAAU,CAACM,IAAI,CAAC;QAACC,EAAE,EAAEH,KAAK;QAAER,GAAG,EAAE,QAAO,GAAIQ,KAAK;QAAEI,IAAI,EAAEb,WAAW,CAACS,KAAK;MAAC,CAAC;IACnF;EACF,CAAC;EAEDK,QAAQ,EAAE;IACRC,UAAU,wBAAG;MACX,IAAIC,KAAI,GAAI,EAAC;MACb,IAAI,IAAI,CAACT,oBAAoB,CAAC,CAAC,CAAC,EAC9BS,KAAI,GAAI,IAAI,CAACC,MAAM,CAACC,MAAM,CAACC,KAAI,MAE/BH,KAAI,GAAI,IAAI,CAACC,MAAM,CAACG,MAAM,CAACC,IAAG;MAChC,OAAO;QACLC,UAAU,EAAEN,KAAK;QACjBO,MAAM,EAAE,YAAW,GAAI,IAAI,CAACN,MAAM,CAACO,IAAI,CAACC;MAC1C;IACF,CAAC;IACDC,UAAU,wBAAG;MACX,IAAIV,KAAI,GAAI,EAAC;MACb,IAAI,IAAI,CAACT,oBAAoB,CAAC,CAAC,CAAC,EAC9BS,KAAI,GAAI,IAAI,CAACC,MAAM,CAACU,KAAK,CAACC,MAAK,MAE/BZ,KAAI,GAAI,IAAI,CAACC,MAAM,CAACG,MAAM,CAACC,IAAG;MAChC,OAAO;QACLC,UAAU,EAAEN,KAAK;QACjBO,MAAM,EAAE,YAAW,GAAI,IAAI,CAACN,MAAM,CAACO,IAAI,CAACC;MAC1C;IACF,CAAC;IACDI,UAAU,wBAAG;MACX,IAAIb,KAAI,GAAI,EAAC;MACb,IAAI,IAAI,CAACT,oBAAoB,CAAC,CAAC,CAAC,EAC9BS,KAAI,GAAI,IAAI,CAACC,MAAM,CAACa,IAAI,CAACX,KAAI,MAE7BH,KAAI,GAAI,IAAI,CAACC,MAAM,CAACG,MAAM,CAACC,IAAG;MAChC,OAAO;QACLC,UAAU,EAAEN,KAAK;QACjBO,MAAM,EAAE,YAAW,GAAI,IAAI,CAACN,MAAM,CAACO,IAAI,CAACC;MAC1C;IACF,CAAC;IACDM,SAAS,uBAAE;MACT,OAAO;QACLC,GAAG,EAAE,KAAK;QACVC,IAAI,EAAE,IAAI;QACVC,KAAK,EAAE,KAAK;QACZC,MAAM,EAAE,MAAM;QACdC,QAAQ,EAAC,UAAU;QACnBd,UAAU,EAAE,IAAI,CAACe,MAAM,CAAC,OAAO,CAAC;QAChCC,MAAM,EAAC,GAAG;QACVC,YAAY,EAAC;MACf;IACF,CAAC;IACDC,QAAQ,sBAAE;MACR,OAAO;QACLR,GAAG,EAAE,KAAK;QACVC,IAAI,EAAE,MAAM;QACZE,MAAM,EAAE,KAAK;QACbM,WAAW,EAAE,KAAK;QAClBL,QAAQ,EAAE,UAAU;QACpBE,MAAM,EAAE,GAAG;QACXhB,UAAU,EAAE,IAAI,CAACe,MAAM,CAAC,OAAO,CAAC;QAChCE,YAAY,EAAE;MAChB;IACF;EAEF,CAAC;EAEDG,OAAO,EAAE;IACPC,oBAAoB,kCAAG;MACrB,IAAI,IAAI,CAAC/B,EAAC,KAAM,IAAI,CAACgC,aAAY,GAAI,CAAC,EAAE;QACtC,IAAI,CAACC,KAAK,CAAC,mBAAmB;MAChC;IACF,CAAC;IACD;IACAC,eAAe,6BAAG;MAChB;MACA,KAAK,IAAIrC,KAAI,GAAI,CAAC,EAAEA,KAAI,GAAI,IAAI,CAACC,cAAa,GAAI,CAAC,EAAED,KAAK,EAAE,EAAE;QAC5D,IAAI,CAACsC,YAAY,CAAC,IAAI,CAACnC,EAAE,CAAC,CAACH,KAAK,CAAC,CAACuC,OAAO,CAAC,IAAI,CAACD,YAAY,CAAC,IAAI,CAACnC,EAAE,CAAC,CAACH,KAAI,GAAI,CAAC,CAAC,CAACwC,aAAa,EAAE,CAAC;QAChG;MACF;MACA;MACA,IAAI,CAACF,YAAY,CAAC,IAAI,CAACnC,EAAE,CAAC,CAAC,IAAI,CAACN,QAAO,GAAI,CAAC,CAAC,CAAC0C,OAAO,CAAC,IAAI,CAACE,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;MAC5E,IAAI,CAAC3C,oBAAoB,CAAC,CAAC,IAAI,IAAI;MACnC;;;;IAIF,CAAC;IAED4C,UAAU,sBAACvC,EAAE,EAAE;MACb;MACA,IAAI;QACF,IAAI,IAAI,CAACL,oBAAoB,CAACK,EAAE,CAAC,EAAE;UACjC;UACA,IAAI,CAACmC,YAAY,CAAC,IAAI,CAACnC,EAAE,CAAC,CAAC,IAAI,CAACN,QAAO,GAAI,CAAC,CAAC,CAAC8C,UAAU,CACpD,IAAI,CAACF,QAAQ,CAACtC,EAAE,CAAC,CAAC,CAAC,EACtB;QACH,OAAO;UACL;UACA,IAAI,CAACmC,YAAY,CAAC,IAAI,CAACnC,EAAE,CAAC,CAAC,IAAI,CAACN,QAAO,GAAI,CAAC,CAAC,CAAC0C,OAAO,CACjD,IAAI,CAACE,QAAQ,CAACtC,EAAE,CAAC,CAAC,CAAC,EACtB;QACH;MACF,EAAE,OAAOyC,CAAC,EAAE;QACVC,OAAO,CAACC,GAAG,CACP,SAAQ,GAAIF,IAAI,yCAAwC,GAAIzC,EAAC,GAAI,kCAAiC,GAAI,IAAI,CAACsC,QAAQ,CAACtC,EAAE,CAAC,CAAC,CAAC,EAC5H;MACH;MACA,IAAI,CAACL,oBAAoB,CAACK,EAAE,IAAI,CAAC,IAAI,CAACL,oBAAoB,CAACK,EAAE,CAAC;IAChE;EACF;AACF","names":["Filter","getDestination","isProxy","toRaw","filterTypes","ref","components","props","data","filterList","nFilters","isFxChainRouteActive","mounted","index","nFiltersXchain","push","id","type","computed","fx_chain_1","color","colors","purple","light","yellow","glow","background","border","gray","dark","fx_chain_2","green","medium","fx_chain_3","pink","chainLine","top","left","width","height","position","$props","zIndex","borderRadius","chainDot","aspectRatio","methods","handleFiltersMounted","nFilterChains","$emit","initConnections","filterChains","connect","getToneFilter","fxChains","setRouting","disconnect","e","console","log"],"sourceRoot":"","sources":["C:\\Home\\Projects\\Programmazione\\WebStorm\\myZenythPolisinT\\zenyth_polisint\\src\\views\\Synth\\Filters\\FilterChain.vue"],"sourcesContent":["<template>\r\n  <div class=\"filterChain\">\r\n    <div class=\"chainline\" :style=\"this.chainLine\"></div>\r\n    <div class = \"chainDot\" :style=\"this.chainDot\"></div>\r\n    <div class=\"chainHead\" ref=\"chainHead\"></div>\r\n    <template v-for=\"(filter) in this.filterList\" :key=\"filter.id\" :item=\"filter\">\r\n      <Filter :ref=\"filter.ref\" :chainId=\"this.id\" :id=\"filter.id\" :filter_type=\"filter.type\" :chainColor=\"this.color\"\r\n              @filtersMounted=\"this.handleFiltersMounted()\"/>\r\n    </template>\r\n    <div class=\"chainTail\">\r\n      <div></div>\r\n      <div class=\"routing-btn fx_chain_1\" :style=\"fx_chain_1\" @click=\"setRouting(0)\"></div>\r\n      <div class=\"routing-btn fx_chain_2\" :style=\"fx_chain_2\" @click=\"setRouting(1)\"></div>\r\n      <div class=\"routing-btn fx_chain_3\" :style=\"fx_chain_3\" @click=\"setRouting(2)\"></div>\r\n      <div></div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// I want to modify a variable of a vue component from its father that is a vue component too\r\nimport Filter from './Filter.vue'\r\nimport {getDestination} from \"tone\";\r\nimport {isProxy, toRaw} from \"vue\";\r\n\r\nconst filterTypes = [\"highpass\", \"peaking\", \"lowpass\"]\r\n\r\nexport default {\r\n  ref: \"FilterChain\",\r\n  components: {\r\n    Filter,\r\n  },\r\n  props: [\"color\", \"id\"],\r\n  data() {\r\n    return {\r\n      filterList: [],\r\n      nFilters: 3,\r\n      isFxChainRouteActive: [true, false, false]\r\n    }\r\n  },\r\n  mounted() {\r\n    //console.log(\"mounting filter chain\" + this.id)\r\n    for (let index = 0; index < this.nFiltersXchain; index++) {\r\n      this.filterList.push({id: index, ref: \"filter\" + index, type: filterTypes[index]})\r\n    }\r\n  },\r\n\r\n  computed: {\r\n    fx_chain_1() {\r\n      let color = ''\r\n      if (this.isFxChainRouteActive[0])\r\n        color = this.colors.purple.light\r\n      else\r\n        color = this.colors.yellow.glow\r\n      return {\r\n        background: color,\r\n        border: '.1vw solid' + this.colors.gray.dark\r\n      }\r\n    },\r\n    fx_chain_2() {\r\n      let color = ''\r\n      if (this.isFxChainRouteActive[1])\r\n        color = this.colors.green.medium\r\n      else\r\n        color = this.colors.yellow.glow\r\n      return {\r\n        background: color,\r\n        border: '.1vw solid' + this.colors.gray.dark\r\n      }\r\n    },\r\n    fx_chain_3() {\r\n      let color = ''\r\n      if (this.isFxChainRouteActive[2])\r\n        color = this.colors.pink.light\r\n      else\r\n        color = this.colors.yellow.glow\r\n      return {\r\n        background: color,\r\n        border: '.1vw solid' + this.colors.gray.dark\r\n      }\r\n    },\r\n    chainLine(){\r\n      return {\r\n        top: '49%',\r\n        left: '5%',\r\n        width: '88%',\r\n        height: '.2vw',\r\n        position:'absolute',\r\n        background: this.$props['color'],\r\n        zIndex:'0',\r\n        borderRadius:'10%'\r\n      }\r\n    },\r\n    chainDot(){\r\n      return {\r\n        top: '45%',\r\n        left: '3.5%',\r\n        height: '10%',\r\n        aspectRatio: '1/1',\r\n        position: 'absolute',\r\n        zIndex: '3',\r\n        background: this.$props['color'],\r\n        borderRadius: '50%',\r\n      }\r\n    }\r\n\r\n  },\r\n\r\n  methods: {\r\n    handleFiltersMounted() {\r\n      if (this.id === this.nFilterChains - 1) {\r\n        this.$emit(\"filterInitialized\")\r\n      }\r\n    },\r\n    // -------- AUDIO -------x\r\n    initConnections() {\r\n      //console.log(\"filter chain init connections\")\r\n      for (let index = 0; index < this.nFiltersXchain - 1; index++) {\r\n        this.filterChains[this.id][index].connect(this.filterChains[this.id][index + 1].getToneFilter());\r\n        //console.log(\"connected \" + this.filterChains[this.id][index] + \" to \" + this.filterChains[this.id][index + 1])\r\n      }\r\n      // connect chain of filters output to chain each chain of effects\r\n      this.filterChains[this.id][this.nFilters - 1].connect(this.fxChains[0][0]); // init connection to first fx chain\r\n      this.isFxChainRouteActive[0] = true;\r\n      /*for (let i = 0; i < this.nFxChains; i++) { // init connection to all chains\r\n        this.filterChains[this.id][this.nFilters - 1].connect(this.fxChains[i][0]);\r\n        this.isFxChainRouteActive[i] = true;\r\n      }*/\r\n    },\r\n\r\n    setRouting(id) {\r\n      //console.log(\"chain click - id: \" + id);\r\n      try {\r\n        if (this.isFxChainRouteActive[id]) {\r\n          //console.log(\"disconnect from: \" + this.fxChains[id][0] + \" \" + id);\r\n          this.filterChains[this.id][this.nFilters - 1].disconnect(\r\n              this.fxChains[id][0]\r\n          );\r\n        } else {\r\n          //console.log(\"connect to: \" + this.fxChains[id][0] + \" \" + id);\r\n          this.filterChains[this.id][this.nFilters - 1].connect(\r\n              this.fxChains[id][0]\r\n          );\r\n        }\r\n      } catch (e) {\r\n        console.log(\r\n            \"error: \" + e + \"\\nCHAIN FILTERS CONNECTION TO FX CHAIN \" + id + \" UNSUCCESSFUL. Can't connect to \" + this.fxChains[id][0]\r\n        );\r\n      }\r\n      this.isFxChainRouteActive[id] = !this.isFxChainRouteActive[id];\r\n    },\r\n  }\r\n}\r\n\r\n</script>\r\n\r\n<style scoped>\r\n\r\n.filter {\r\n  flex: 4;\r\n}\r\n\r\n.filterChain {\r\n  position:relative;\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: row;\r\n}\r\n\r\n.chainHead {\r\n  flex: 1;\r\n  background-color: transparent;\r\n}\r\n\r\n.chainTail {\r\n  flex: 1;\r\n  display: inline-grid;\r\n  align-items: center;\r\n  justify-items: center;\r\n  flex-direction: column;\r\n  background-color: transparent;\r\n}\r\n\r\n.routing-btn {\r\n  width: 50%;\r\n  aspect-ratio: 1/1;\r\n  border-radius: 50%;\r\n}\r\n\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
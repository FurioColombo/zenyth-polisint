{"ast":null,"code":"import \"core-js/modules/es.array.fill.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport FxCell from '../Effects/FxCell.vue';\nimport { Gain, getDestination } from \"tone\";\nexport default {\n  name: \"FxHost\",\n  components: {\n    FxCell: FxCell\n  },\n  data: function data() {\n    return {\n      Fx_chain1: [],\n      Fx_chain2: [],\n      Fx_chain3: [],\n      isGainSelected: \"\",\n      chainsGains: \"\"\n    };\n  },\n  mounted: function mounted() {\n    this.isGainSelected = Array(this.nFxChains).fill(false);\n    this.chainsGains = Array(this.nFxChains).fill(0);\n    this.chainsGains[0] = 0.8;\n    this.chainsGains[1] = 0.8;\n    this.chainsGains[2] = 0.8;\n    // note: refs are kept incremental through the chains, while everything else is indexed relatively to the chain\n    //console.log(\"creating fx\")\n    for (var i = 1; i <= this.nFxXchain; i++) {\n      this.Fx_chain1.push({\n        id: i,\n        ref: 'Fx' + i,\n        chainId: 0\n      });\n      this.Fx_chain2.push({\n        id: i,\n        ref: 'Fx' + i + this.nFxXchain,\n        chainId: 1\n      });\n      this.Fx_chain3.push({\n        id: i,\n        ref: 'Fx' + i + this.nFxXchain * 2,\n        chainId: 2\n      });\n      // console.log(i)\n    }\n\n    //console.log(this.fxChains)\n    for (var _i = 0; _i < this.nFxChains; _i++) {\n      this.fxChains[_i][0] = new Gain(1);\n      this.fxChains[_i][this.nNodesXfxChain - 1] = new Gain(+this.chainsGains[_i]);\n    }\n  },\n  methods: {\n    // -------------------- AUDIO -----------------------\n    initFxConnections: function initFxConnections() {\n      //console.log(this.fxChains)\n      for (var i = 0; i < this.nFxChains; i++) {\n        // structure: Gain Filter Filter Filter Filter Filter Gain [7]\n        for (var j = 0; j < this.nNodesXfxChain - 2; j++) {\n          //console.log(\"i: \", i, \"j: \", j)\n          this.fxChains[i][j].connect(this.fxChains[i][j + 1].getToneReference());\n          // console.log(\"chain \", i ,\" id: \", j, \" into chain \", i , \" id: \", j+1)\n        }\n        // connect last filter to volume\n        this.fxChains[i][this.nNodesXfxChain - 2].connect(this.fxChains[i][this.nNodesXfxChain - 1]);\n        // connect vol to destination\n        this.fxChains[i][this.nNodesXfxChain - 1].connect(getDestination());\n        // console.log(\"chain \", i, \" id: \", this.nFxXchain-1, \" into getDestination()\")\n      }\n    },\n    // first node of each chain is a gain node - we set its volume to adjust whole chain gain\n    setChainVolume: function setChainVolume(chainId, volume) {\n      this.fxChains[chainId][this.nNodesXfxChain - 1].gain = volume;\n    },\n    // --------------------  GESTURE -----------------------\n    gainMouseDown: function gainMouseDown(gainId) {\n      this.isGainSelected[gainId] = true;\n      // console.log(\"fx gainMouseDown\")\n    },\n    handleMouseUp: function handleMouseUp(e) {\n      //Actions to execute when mouseup happens on any part of the screen\n      this.isGainSelected.fill(false);\n      // console.log(\"fx gainMouseUP\")\n    },\n    handleMouseMove: function handleMouseMove(e) {\n      var _this = this;\n      this.isGainSelected.forEach(function (isSelected, index) {\n        // console.log(\"fx gain vol knob mouse drag\")\n        if (isSelected) {\n          //console.log(\"fx gain vol knob mouse drag of \", isSelected);\n          _this.chainsGains[index] = _this.chainsGains[index] - Math.floor(e.movementY) / 100;\n          _this.chainsGains[index] = Math.max(_this.chainsGains[index], 0);\n          _this.chainsGains[index] = Math.min(_this.chainsGains[index], 1);\n          //console.log(this.chainsGains[index])\n          //console.log(this.fxChains[index][0])\n          _this.fxChains[index][_this.nNodesXfxChain - 1].set({\n            gain: _this.chainsGains[index]\n          });\n        }\n      });\n    },\n    computedFxGainKnobStyle: function computedFxGainKnobStyle(id) {\n      var color = '';\n      if (id === 0) color = this.colors.purple.medium;\n      if (id === 1) color = this.colors.green.medium;\n      if (id === 2) color = this.colors.pink.medium;\n      return {\n        height: 100 * this.chainsGains[id] + \"%\",\n        top: 50 * (1 - this.chainsGains[id]) + \"%\",\n        left: 50 * (1 - this.chainsGains[id]) + \"%\",\n        background: color\n      };\n    },\n    channelGain: function channelGain(id) {\n      var color = '';\n      if (id == 0) color = this.colors.purple.glow;\n      if (id == 1) color = this.colors.green.glow;\n      if (id == 2) color = this.colors.pink.glow;\n      return {\n        background: color\n      };\n    }\n  },\n  computed: {\n    fxHost: function fxHost() {\n      return {\n        background: this.colors.orange.glow,\n        border: '.1vw solid ' + this.colors.orange.dark,\n        boxSizing: 'border-box'\n      };\n    },\n    gainList: function gainList() {\n      return {\n        background: this.colors.orange.light,\n        borderTop: '.1vw solid ' + this.colors.orange.dark,\n        boxSizing: 'border-box',\n        height: '100%'\n      };\n    },\n    chainHead1: function chainHead1() {\n      return {\n        background: this.colors.purple.light\n      };\n    },\n    chainHead2: function chainHead2() {\n      return {\n        background: this.colors.green.medium\n      };\n    },\n    chainHead3: function chainHead3() {\n      return {\n        background: this.colors.pink.light\n      };\n    },\n    fxBack: function fxBack() {\n      return {\n        position: 'relative',\n        height: '100%',\n        width: '100%',\n        background: this.colors.orange.light\n      };\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["FxCell","Gain","getDestination","name","components","data","Fx_chain1","Fx_chain2","Fx_chain3","isGainSelected","chainsGains","mounted","Array","nFxChains","fill","i","nFxXchain","push","id","ref","chainId","fxChains","nNodesXfxChain","methods","initFxConnections","j","connect","getToneReference","setChainVolume","volume","gain","gainMouseDown","gainId","handleMouseUp","e","handleMouseMove","forEach","isSelected","index","Math","floor","movementY","max","min","set","computedFxGainKnobStyle","color","colors","purple","medium","green","pink","height","top","left","background","channelGain","glow","computed","fxHost","orange","border","dark","boxSizing","gainList","light","borderTop","chainHead1","chainHead2","chainHead3","fxBack","position","width"],"sourceRoot":"","sources":["/Users/eliapirrello/Documents/GitHub/zenyth/src/views/Synth/Effects/FxHost.vue"],"sourcesContent":["<template>\n  <div :style=\"this.fxBack\">\n  <div class=\"fxHost\" :style=\"this.fxHost\">\n\n    <div class=\"chainHeadsRow\">\n      <div class=\"chainHead \" :style=\"this.chainHead1\"></div>\n      <div class=\"chainHead \" :style=\"this.chainHead2\"></div>\n      <div class=\"chainHead \" :style=\"this.chainHead3\"></div>\n    </div>\n    <div class=\"fxGrid\">\n      <FxCell v-for=\"(fx) in Fx_chain1\" ref=\"effects\" :chainId=\"fx.chainId\" :id=\"fx.id\" :item=\"fx\"></FxCell>\n      <FxCell v-for=\"(fx) in Fx_chain2\" :chainId=\"fx.chainId\" :id=\"fx.id\" :item=\"fx\"></FxCell>\n      <FxCell v-for=\"(fx) in Fx_chain3\" :chainId=\"fx.chainId\" :id=\"fx.id\" :item=\"fx\"\n              @fxMounted=\"this.initFxConnections()\"></FxCell>\n    </div>\n    <div class=\"gainList\" :style=\"this.gainList\">\n      <div id=\"gain1\" class=\"channelGain\" :style=\"channelGain(0)\" @mousedown=\"gainMouseDown(0)\">\n        <div class=\"channelGainFader\" :style=\"computedFxGainKnobStyle(0)\"></div>\n      </div>\n      <div id=\"gain2\" class=\"channelGain\" :style=\"channelGain(1)\" @mousedown=\"gainMouseDown(1)\">\n        <div class=\"channelGainFader\" :style=\"computedFxGainKnobStyle(1)\"></div>\n      </div>\n      <div id=\"gain3\" class=\"channelGain\" :style=\"channelGain(2)\" @mousedown=\"gainMouseDown(2)\">\n        <div class=\"channelGainFader\" :style=\"computedFxGainKnobStyle(2)\"></div>\n      </div>\n    </div>\n  </div>\n</div>\n</template>\n\n<script>\nimport FxCell from '../Effects/FxCell.vue'\nimport {Gain, getDestination} from \"tone\";\n\nexport default {\n  name: \"FxHost\",\n  components: {FxCell},\n\n  data() {\n    return {\n      Fx_chain1: [],\n      Fx_chain2: [],\n      Fx_chain3: [],\n      isGainSelected: \"\",\n      chainsGains: \"\"\n    }\n  },\n\n  mounted() {\n    this.isGainSelected = Array(this.nFxChains).fill(false)\n    this.chainsGains = Array(this.nFxChains).fill(0);\n    this.chainsGains[0] = 0.8;\n    this.chainsGains[1] = 0.8;\n    this.chainsGains[2] = 0.8;\n    // note: refs are kept incremental through the chains, while everything else is indexed relatively to the chain\n    //console.log(\"creating fx\")\n    for (let i = 1; i <= this.nFxXchain; i++) {\n      this.Fx_chain1.push({id: i, ref: 'Fx' + i, chainId: 0});\n      this.Fx_chain2.push({id: i, ref: 'Fx' + i + this.nFxXchain, chainId: 1});\n      this.Fx_chain3.push({id: i, ref: 'Fx' + i + this.nFxXchain * 2, chainId: 2});\n      // console.log(i)\n    }\n\n    //console.log(this.fxChains)\n    for (let i = 0; i < this.nFxChains; i++) {\n      this.fxChains[i][0] = new Gain(1);\n      this.fxChains[i][this.nNodesXfxChain-1] = new Gain(+this.chainsGains[i]);\n    }\n  },\n\n  methods: {\n    // -------------------- AUDIO -----------------------\n    initFxConnections() {\n      //console.log(this.fxChains)\n      for (let i = 0; i < this.nFxChains; i++) {\n        // structure: Gain Filter Filter Filter Filter Filter Gain [7]\n        for (let j = 0; j < this.nNodesXfxChain-2; j++) {\n          //console.log(\"i: \", i, \"j: \", j)\n          this.fxChains[i][j].connect(this.fxChains[i][j + 1].getToneReference())\n          // console.log(\"chain \", i ,\" id: \", j, \" into chain \", i , \" id: \", j+1)\n        }\n        // connect last filter to volume\n        this.fxChains[i][this.nNodesXfxChain-2].connect(this.fxChains[i][this.nNodesXfxChain-1])\n        // connect vol to destination\n        this.fxChains[i][this.nNodesXfxChain-1].connect(getDestination())\n        // console.log(\"chain \", i, \" id: \", this.nFxXchain-1, \" into getDestination()\")\n      }\n    },\n\n    // first node of each chain is a gain node - we set its volume to adjust whole chain gain\n    setChainVolume(chainId, volume) {\n      this.fxChains[chainId][this.nNodesXfxChain-1].gain = volume;\n\n    },\n\n    // --------------------  GESTURE -----------------------\n    gainMouseDown(gainId) {\n      this.isGainSelected[gainId] = true;\n      // console.log(\"fx gainMouseDown\")\n    },\n\n    handleMouseUp(e) {\n      //Actions to execute when mouseup happens on any part of the screen\n      this.isGainSelected.fill(false)\n      // console.log(\"fx gainMouseUP\")\n\n    },\n    handleMouseMove(e) {\n      this.isGainSelected.forEach((isSelected, index) => {\n        // console.log(\"fx gain vol knob mouse drag\")\n        if (isSelected) {\n          //console.log(\"fx gain vol knob mouse drag of \", isSelected);\n          this.chainsGains[index] = this.chainsGains[index] - Math.floor(e.movementY) / 100;\n          this.chainsGains[index] = Math.max(this.chainsGains[index], 0);\n          this.chainsGains[index] = Math.min(this.chainsGains[index], 1);\n          //console.log(this.chainsGains[index])\n          //console.log(this.fxChains[index][0])\n          this.fxChains[index][this.nNodesXfxChain-1].set({\n            gain: this.chainsGains[index]\n          })\n        }\n      })\n    },\n    computedFxGainKnobStyle(id) {\n      let color = ''; \n      if(id === 0) color = this.colors.purple.medium\n      if(id === 1) color = this.colors.green.medium\n      if(id === 2) color = this.colors.pink.medium\n      return {\n        height: 100 * this.chainsGains[id] + \"%\",\n        top: 50 * (1-this.chainsGains[id]) + \"%\",\n        left: 50 * (1-this.chainsGains[id]) + \"%\",\n      \n        background: color,\n      }\n    },\n    channelGain(id) {\n      let color = ''\n      if(id == 0) color = this.colors.purple.glow\n      if(id == 1) color = this.colors.green.glow\n      if(id == 2) color = this.colors.pink.glow\n      return {\n        background: color,\n      }\n    }\n  },\n\n  computed : {\n\n    fxHost(){\n      return {\n        background: this.colors.orange.glow,\n        border: '.1vw solid '+this.colors.orange.dark,\n        boxSizing: 'border-box'\n      }\n    },\n    gainList(){\n      return {\n        background: this.colors.orange.light,\n        borderTop: '.1vw solid '+this.colors.orange.dark,\n        boxSizing: 'border-box',\n        height: '100%'\n      }\n    },\n    chainHead1(){\n      return {\n        background: this.colors.purple.light\n      }\n    },\n    chainHead2(){\n      return {\n        background: this.colors.green.medium\n      }\n    },\n    chainHead3(){\n      return {\n        background: this.colors.pink.light\n      }\n    },\n    fxBack(){\n      return {\n        position: 'relative',\n        height: '100%',\n        width: '100%',\n        background: this.colors.orange.light\n      }\n    }\n    \n  }\n}\n\n</script>\n\n<style scoped>\n  .fxHost{\n    display: grid;\n    margin: .3vw;\n    height: calc(100% - .6vw);\n    border-radius: 1%;\n    opacity: 90%;\n    grid-template-columns: 1fr;\n    grid-template-rows: 10% 70% 20%;\n    justify-content: center;\n    align-items: center;\n  }\n  .fxGrid{\n    justify-content: center;\n    align-items: center;\n    justify-items: stretch;\n    height: 100%;\n    width: 100%;\n    flex: 1;\n    display: grid;\n    grid-column: auto;\n    grid-template-rows:  1fr 1fr 1fr 1fr 1fr ;\n    grid-template-columns: 1fr 1fr 1fr;\n    grid-auto-flow: column;\n    box-sizing: border-box;\n  }\n\n  .gainList{\n    width: 100%;\n    position: relative;\n    display: flex;\n    justify-content: space-around;\n    align-items: center;\n    flex-direction: row;\n  }\n\n.channelGainFader {\n  box-sizing: border-box;\n  position: relative;\n  left: 50%;\n  top: 50%;\n  aspect-ratio: 1;\n  border-radius: 50%;\n  align-self: center;\n}\n\n.channelGain {\n  box-sizing: border-box;\n  position: relative;\n  align-content: center;\n  height: 70%;\n  aspect-ratio: 1/1;\n  border-radius: 50%;\n  border: 0.06vw solid black;\n}\n\n.chainHeadsRow {\n  height: 60%;\n  width: 100%;\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  flex-direction: row;\n  background-color: transparent;\n  margin-top: 2%;\n  box-sizing: border-box;;\n  border: 0;\n}\n\n\n  .chainHead {\n    height: 50%;\n    aspect-ratio: 1/1;\n    border: 0;\n    clip-path: circle(50%)\n  }\n\n  .head1 {\n    background-color: red;\n  }\n  .head2 {\n    background-color: green;\n  }\n  .head3 {\n    background-color: blue;\n  }\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import _objectSpread from \"C:/Home/Projects/Programmazione/WebStorm/myZenythPolisinT/zenyth_polisint/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _classCallCheck from \"C:/Home/Projects/Programmazione/WebStorm/myZenythPolisinT/zenyth_polisint/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Home/Projects/Programmazione/WebStorm/myZenythPolisinT/zenyth_polisint/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"C:/Home/Projects/Programmazione/WebStorm/myZenythPolisinT/zenyth_polisint/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"C:/Home/Projects/Programmazione/WebStorm/myZenythPolisinT/zenyth_polisint/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Home/Projects/Programmazione/WebStorm/myZenythPolisinT/zenyth_polisint/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nvar DEFAULT_OPTIONS = {\n  channelCount: 2,\n  /*\n   * Bug #105: The channelCountMode should be 'clamped-max' according to the spec but is set to 'explicit' to achieve consistent\n   * behavior.\n   */\n  channelCountMode: 'explicit',\n  channelInterpretation: 'speakers',\n  pan: 0\n};\nexport var createStereoPannerNodeConstructor = function createStereoPannerNodeConstructor(audioNodeConstructor, createAudioParam, createNativeStereoPannerNode, createStereoPannerNodeRenderer, getNativeContext, isNativeOfflineAudioContext) {\n  return /*#__PURE__*/function (_audioNodeConstructor) {\n    _inherits(StereoPannerNode, _audioNodeConstructor);\n    var _super = _createSuper(StereoPannerNode);\n    function StereoPannerNode(context, options) {\n      var _this;\n      _classCallCheck(this, StereoPannerNode);\n      var nativeContext = getNativeContext(context);\n      var mergedOptions = _objectSpread(_objectSpread({}, DEFAULT_OPTIONS), options);\n      var nativeStereoPannerNode = createNativeStereoPannerNode(nativeContext, mergedOptions);\n      var isOffline = isNativeOfflineAudioContext(nativeContext);\n      var stereoPannerNodeRenderer = isOffline ? createStereoPannerNodeRenderer() : null;\n      _this = _super.call(this, context, false, nativeStereoPannerNode, stereoPannerNodeRenderer);\n      _this._pan = createAudioParam(_assertThisInitialized(_this), isOffline, nativeStereoPannerNode.pan);\n      return _this;\n    }\n    _createClass(StereoPannerNode, [{\n      key: \"pan\",\n      get: function get() {\n        return this._pan;\n      }\n    }]);\n    return StereoPannerNode;\n  }(audioNodeConstructor);\n};","map":{"version":3,"mappings":";;;;;;AAGA,IAAMA,eAAe,GAAG;EACpBC,YAAY,EAAE,CAAC;EACf;;;;EAIAC,gBAAgB,EAAE,UAAU;EAC5BC,qBAAqB,EAAE,UAAU;EACjCC,GAAG,EAAE;CACC;AAEV,OAAO,IAAMC,iCAAiC,GAAwC,SAAzEA,iCAAiC,CAC1CC,oBAAoB,EACpBC,gBAAgB,EAChBC,4BAA4B,EAC5BC,8BAA8B,EAC9BC,gBAAgB,EAChBC,2BAA2B,EAC3B;EACA;IAAA;IAAA;IAGI,0BAAYC,OAAU,EAAEC,OAAuC;MAAA;MAAA;MAC3D,IAAMC,aAAa,GAAGJ,gBAAgB,CAACE,OAAO,CAAC;MAC/C,IAAMG,aAAa,mCAAQf,eAAe,GAAKa,OAAO,CAAE;MACxD,IAAMG,sBAAsB,GAAGR,4BAA4B,CAACM,aAAa,EAAEC,aAAa,CAAC;MACzF,IAAME,SAAS,GAAGN,2BAA2B,CAACG,aAAa,CAAC;MAC5D,IAAMI,wBAAwB,GAAiCD,SAAS,GAAGR,8BAA8B,EAAE,GAAG,IAAK;MAEnH,0BAAMG,OAAO,EAAE,KAAK,EAAEI,sBAAsB,EAAEE,wBAAwB;MAEtE,MAAKC,IAAI,GAAGZ,gBAAgB,gCAAOU,SAAS,EAAED,sBAAsB,CAACZ,GAAG,CAAC;MAAC;IAC9E;IAAC;MAAA;MAAA,KAED,eAAO;QACH,OAAO,IAAI,CAACe,IAAI;MACpB;IAAC;IAAA;EAAA,EAjBqDb,oBAAuB;AAmBrF,CAAC","names":["DEFAULT_OPTIONS","channelCount","channelCountMode","channelInterpretation","pan","createStereoPannerNodeConstructor","audioNodeConstructor","createAudioParam","createNativeStereoPannerNode","createStereoPannerNodeRenderer","getNativeContext","isNativeOfflineAudioContext","context","options","nativeContext","mergedOptions","nativeStereoPannerNode","isOffline","stereoPannerNodeRenderer","_pan"],"sourceRoot":"","sources":["../../../src/factories/stereo-panner-node-constructor.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import _classCallCheck from \"C:/Home/Projects/Programmazione/WebStorm/myZenythPolisinT/zenyth_polisint/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Home/Projects/Programmazione/WebStorm/myZenythPolisinT/zenyth_polisint/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"C:/Home/Projects/Programmazione/WebStorm/myZenythPolisinT/zenyth_polisint/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _get from \"C:/Home/Projects/Programmazione/WebStorm/myZenythPolisinT/zenyth_polisint/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"C:/Home/Projects/Programmazione/WebStorm/myZenythPolisinT/zenyth_polisint/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"C:/Home/Projects/Programmazione/WebStorm/myZenythPolisinT/zenyth_polisint/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Home/Projects/Programmazione/WebStorm/myZenythPolisinT/zenyth_polisint/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { Subtract } from \"./Subtract\";\nimport { Signal } from \"./Signal\";\nimport { GreaterThanZero } from \"./GreaterThanZero\";\nimport { readOnly } from \"../core/util/Interface\";\n/**\n * Output 1 if the signal is greater than the value, otherwise outputs 0.\n * can compare two signals or a signal and a number.\n *\n * @example\n * return Tone.Offline(() => {\n * \tconst gt = new Tone.GreaterThan(2).toDestination();\n * \tconst sig = new Tone.Signal(4).connect(gt);\n * }, 0.1, 1);\n * @category Signal\n */\nexport var GreaterThan = /*#__PURE__*/function (_Signal) {\n  _inherits(GreaterThan, _Signal);\n  var _super = _createSuper(GreaterThan);\n  function GreaterThan() {\n    var _this;\n    _classCallCheck(this, GreaterThan);\n    _this = _super.call(this, Object.assign(optionsFromArguments(GreaterThan.getDefaults(), arguments, [\"value\"])));\n    _this.name = \"GreaterThan\";\n    _this.override = false;\n    var options = optionsFromArguments(GreaterThan.getDefaults(), arguments, [\"value\"]);\n    _this._subtract = _this.input = new Subtract({\n      context: _this.context,\n      value: options.value\n    });\n    _this._gtz = _this.output = new GreaterThanZero({\n      context: _this.context\n    });\n    _this.comparator = _this._param = _this._subtract.subtrahend;\n    readOnly(_assertThisInitialized(_this), \"comparator\");\n    // connect\n    _this._subtract.connect(_this._gtz);\n    return _this;\n  }\n  _createClass(GreaterThan, [{\n    key: \"dispose\",\n    value: function dispose() {\n      _get(_getPrototypeOf(GreaterThan.prototype), \"dispose\", this).call(this);\n      this._gtz.dispose();\n      this._subtract.dispose();\n      this.comparator.dispose();\n      return this;\n    }\n  }], [{\n    key: \"getDefaults\",\n    value: function getDefaults() {\n      return Object.assign(Signal.getDefaults(), {\n        value: 0\n      });\n    }\n  }]);\n  return GreaterThan;\n}(Signal);","map":{"version":3,"mappings":";;;;;;;;AACA,SAASA,oBAAoB,QAAQ,uBAAuB;AAC5D,SAASC,QAAQ,QAAQ,YAAY;AACrC,SAASC,MAAM,QAAuB,UAAU;AAChD,SAASC,eAAe,QAAQ,mBAAmB;AACnD,SAASC,QAAQ,QAAQ,wBAAwB;AAKjD;;;;;;;;;;;AAWA,WAAaC,WAAY;EAAA;EAAA;EAoCxB;IAAA;IAAA;IACC,0BAAMC,MAAM,CAACC,MAAM,CAACP,oBAAoB,CAACK,WAAW,CAACG,WAAW,EAAE,EAAEC,SAAS,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC;IAnClF,UAAI,GAAW,aAAa;IAE5B,cAAQ,GAAY,KAAK;IAkCjC,IAAMC,OAAO,GAAGV,oBAAoB,CAACK,WAAW,CAACG,WAAW,EAAE,EAAEC,SAAS,EAAE,CAAC,OAAO,CAAC,CAAC;IAErF,MAAKE,SAAS,GAAG,MAAKC,KAAK,GAAG,IAAIX,QAAQ,CAAC;MAC1CY,OAAO,EAAE,MAAKA,OAAO;MACrBC,KAAK,EAAEJ,OAAO,CAACI;KACf,CAAC;IACF,MAAKC,IAAI,GAAG,MAAKC,MAAM,GAAG,IAAIb,eAAe,CAAC;MAAEU,OAAO,EAAE,MAAKA;IAAO,CAAE,CAAC;IAExE,MAAKI,UAAU,GAAG,MAAKC,MAAM,GAAG,MAAKP,SAAS,CAACQ,UAAU;IACzDf,QAAQ,gCAAO,YAAY,CAAC;IAE5B;IACA,MAAKO,SAAS,CAACS,OAAO,CAAC,MAAKL,IAAI,CAAC;IAAC;EACnC;EAAC;IAAA;IAAA,OAQD,mBAAO;MACN;MACA,IAAI,CAACA,IAAI,CAACM,OAAO,EAAE;MACnB,IAAI,CAACV,SAAS,CAACU,OAAO,EAAE;MACxB,IAAI,CAACJ,UAAU,CAACI,OAAO,EAAE;MACzB,OAAO,IAAI;IACZ;EAAC;IAAA;IAAA,OAZD,uBAAkB;MACjB,OAAOf,MAAM,CAACC,MAAM,CAACL,MAAM,CAACM,WAAW,EAAE,EAAE;QAC1CM,KAAK,EAAE;OACP,CAAC;IACH;EAAC;EAAA;AAAA,EAzD+BZ,MAAgB","names":["optionsFromArguments","Subtract","Signal","GreaterThanZero","readOnly","GreaterThan","Object","assign","getDefaults","arguments","options","_subtract","input","context","value","_gtz","output","comparator","_param","subtrahend","connect","dispose"],"sourceRoot":"","sources":["../../../Tone/signal/GreaterThan.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module","externalDependencies":[]}
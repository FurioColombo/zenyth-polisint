{"ast":null,"code":"import LfoVisualizer from \"@/views/Synth/Modulators/LfoVisualizer\";\nimport * as Tone from \"tone\";\nimport Knobs from \"./Knobs.vue\";\nimport { toRaw } from \"vue\";\nconst waveforms = ['sine', 'triangle', 'square', 'sawtooth'];\nexport default {\n  components: {\n    LfoVisualizer,\n    Knobs\n  },\n  props: [\"id\"],\n  data() {\n    return {\n      freq: 10,\n      depth: 0.8,\n      isDepthFaderDown: false,\n      isFreqFaderDown: false,\n      waveform: waveforms[0],\n      waveformId: 0,\n      parameters: {}\n    };\n  },\n  mounted() {\n    //document.addEventListener(\"mousemove\", this.onMouseMove); // todo: remove this\n    //console.log(\"mounted - this.waveformId: \" + this.waveformId + \" - this.waveform: \" + this.waveform)\n\n    this.parameters = {\n      frequency: this.freq,\n      waveform: this.waveform\n    };\n  },\n  computed: {\n    lfoDepthFaderLevel() {\n      //console.log(\"lfoDepthFaderLevel\")\n      return {\n        top: ((1 - this.depth) * 85).toString() + \"%\"\n      };\n    },\n    lfo_elems_row() {\n      return {\n        background: this.colors.purple.medium\n      };\n    },\n    lfoFaderBase() {\n      return {\n        background: this.colors.purple.glow\n      };\n    },\n    lfoFreqFaderLevel() {\n      return {\n        top: ((20 - this.freq) / 20 * 85).toString() + \"%\",\n        background: this.colors.purple.light,\n        borderColor: this.colors.purple.dark\n      };\n    },\n    lfo_waveform_btn_selector() {\n      return {\n        borderColor: this.colors.purple.dark,\n        background: this.colors.purple.light,\n        color: this.colors.gray.dark\n      };\n    },\n    container() {\n      return {\n        background: this.colors.purple.glow\n      };\n    },\n    border() {\n      return {\n        background: this.colors.purple.glow\n      };\n    }\n  },\n  methods: {\n    setParams({\n      freq = this.freq,\n      depth = this.depth,\n      waveform = this.waveform\n    }) {\n      if (freq <= 20) {\n        this.freq = freq;\n      } else {\n        this.freq = 20;\n      }\n      if (typeof waveform === 'number') {\n        this.waveformId = waveform;\n        if (this.waveformId === 0 || this.waveformId === 1) {\n          this.waveform = waveforms[this.waveformId];\n        } else {\n          console.log(\"ERROR: Called Non existing lfo wave type Id\");\n        }\n      } else if (typeof waveform === 'string') {\n        this.waveform = waveform;\n        waveforms.forEach((waveformNameString, index) => {\n          if (waveformNameString === this.waveform) this.waveformId = index;\n        });\n      }\n      this.parameters.waveform = this.waveform;\n      this.depth = depth;\n      this.$refs.visualizer.updateParams({\n        freq: this.freq,\n        depth: this.depth\n      });\n      this.$refs.knobs.updateParameters(this.parameters);\n    },\n    nextWaveType() {\n      this.waveformId++;\n      if (this.waveformId > waveforms.length - 1) this.waveformId = 0;\n      this.waveform = waveforms[this.waveformId];\n      this.parameters.waveform = this.waveform;\n      // console.log(\"nextWaveType - this.waveformId: \" + this.waveformId + \" - this.waveform: \" + this.waveform)\n\n      console.log(\"CHANGING WAVE TYPE TO: \" + this.waveform);\n      this.$refs.knobs.updateParameters(this.parameters);\n      this.$refs.visualizer.updateParams({\n        waveform: this.waveform,\n        frequency: this.freq\n      });\n    },\n    startOscilloscope() {\n      console.log(\"start LFO graphics\");\n      this.$refs.visualizer.startOscilloscope();\n    },\n    stopOscilloscope() {\n      console.log(\"stop LFO graphics\");\n      this.$refs.visualizer.stopOscilloscope();\n    },\n    resetOscilloscope() {\n      this.$refs.visualizer.stopOscilloscope();\n      this.$refs.visualizer.startOscilloscope();\n    },\n    // ---------- USER GESTURE ----------\n\n    depthFaderSelected() {\n      console.log(\"depthFaderSelected\");\n      this.isDepthFaderDown = true;\n    },\n    freqFaderSelected() {\n      console.log(\"freqFaderSelected\");\n      this.isFreqFaderDown = true;\n    },\n    handleMouseMove(event) {\n      //console.log(\"lfo - handleMouseMove\")\n      this.$refs.knobs.handleMouseMove(event);\n      if (this.isDepthFaderDown) {\n        if (event.movementY < 0) {\n          // Mouse is moving dowm\n          this.depth = this.depth - event.movementY / 100;\n          console.log(\"moving up\");\n        } else {\n          // Mouse is moving up\n          this.depth = this.depth - event.movementY / 100;\n          console.log(\"moving down\");\n        }\n        this.depth = Math.max(this.depth, 0);\n        this.depth = Math.min(this.depth, 1);\n        console.log(\"lfo depth: \" + this.depth);\n        this.$refs.visualizer.updateParams({\n          depth: this.depth\n        });\n      }\n      if (this.isFreqFaderDown) {\n        if (event.movementY < 0) {\n          // Mouse is moving dowm\n          this.freq = this.freq - 20 * (event.movementY / 100);\n          console.log(\"moving up\");\n        } else {\n          // Mouse is moving up\n          this.freq = this.freq - 20 * (event.movementY / 100);\n        }\n        this.freq = Math.max(this.freq, 1);\n        this.freq = Math.min(this.freq, 20);\n        console.log(\"lfo freq: \" + this.freq);\n        this.parameters.frequency = this.freq;\n        this.$refs.visualizer.updateParams({\n          freq: this.freq\n        });\n        this.$refs.knobs.updateParameters(this.parameters);\n      }\n    },\n    handleMouseUp() {\n      if (this.isFreqFaderDown) this.isFreqFaderDown = false;\n      if (this.isDepthFaderDown) this.isDepthFaderDown = false;\n      this.$refs.knobs.handleMouseUp();\n    },\n    unHide() {\n      this.$refs.container.classList.remove(\"hidden\");\n      this.startOscilloscope();\n    },\n    hide() {\n      this.$refs.container.classList.add(\"hidden\");\n    },\n    //-------------METHODS TO LINK WHEN DROPPING\n    link(object, target, color) {\n      //console.log(\"THINGS HAPPENING \"+section+\" \"+target)\n      this.$refs.knobs.addLink(object, target, color);\n    },\n    unLink(object, target) {\n      //console.log(\"THINGS HAPPENING \")\n      //console.log(object)\n      //console.log(target)\n      this.$refs.knobs.removeLink(object, target);\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["LfoVisualizer","Tone","Knobs","toRaw","waveforms","components","props","data","freq","depth","isDepthFaderDown","isFreqFaderDown","waveform","waveformId","parameters","mounted","frequency","computed","lfoDepthFaderLevel","top","toString","lfo_elems_row","background","colors","purple","medium","lfoFaderBase","glow","lfoFreqFaderLevel","light","borderColor","dark","lfo_waveform_btn_selector","color","gray","container","border","methods","setParams","console","log","forEach","waveformNameString","index","$refs","visualizer","updateParams","knobs","updateParameters","nextWaveType","length","startOscilloscope","stopOscilloscope","resetOscilloscope","depthFaderSelected","freqFaderSelected","handleMouseMove","event","movementY","Math","max","min","handleMouseUp","unHide","classList","remove","hide","add","link","object","target","addLink","unLink","removeLink"],"sourceRoot":"","sources":["/Users/guglielmofratticioli/Documents/POLIMI/FurioColombo.github.io/src/views/Synth/Modulators/Lfo.vue"],"sourcesContent":["<template>\n  <div ref=\"container\" class=\"container hidden\" :style=\"this.container\">\n    <div class=\"border\" :style=\"this.border\">\n      <div class=\"lfo_elems_row\" :style=\"this.lfo_elems_row\">\n        <!-- MODULATION AMOUNT: REGULATES THE AMPLITUDE OF THE LFO !!!!! broken !!!!!!\n      <div class=\"lfoFaderBase volFaderBase\" @mousedown=\"isDepthFaderDown=true\">\n        <div class=\"lfoDepthFaderLevel\" :style=\"this.lfoDepthFaderLevel\"></div>\n      </div> -->\n      <LfoVisualizer ref=\"visualizer\" :freq=\"this.freq\" :depth=\"this.depth\" :wave=\"this.waveform\"></LfoVisualizer>\n      <div class=\"lfo_controls_column\" >\n        <div class=\"lfoFaderBase freqFader\" :style=\"this.lfoFaderBase\" @mousedown=\"isFreqFaderDown=true\">\n          <div class=\"lfoFreqFaderLevel\" :style=\"this.lfoFreqFaderLevel\"></div>\n        </div>\n        <div class=\"lfo_waveform-btn-selector\" :style=\"lfo_waveform_btn_selector\" @click=\"nextWaveType\">\n          <img v-if=\"this.waveform==='sine'\" class=\"lfo_waveform_btn_icon\" src=\"@/icons/sine.svg\" alt=\"\" draggable=\"false\">\n          <img v-if=\"this.waveform==='triangle'\" class=\"lfo_waveform_btn_icon\" src=\"@/icons/triangle.svg\" alt=\"\" draggable=\"false\">\n          <img v-if=\"this.waveform==='square'\" class=\"lfo_waveform_btn_icon\" src=\"@/icons/square.svg\" alt=\"\" draggable=\"false\">\n          <img v-if=\"this.waveform==='sawtooth'\" class=\"lfo_waveform_btn_icon\" src=\"@/icons/saw.svg\" alt=\"\" draggable=\"false\">\n\n        </div>\n      </div>\n    </div>\n\n    <Knobs ref=\"knobs\" type=\"lfo\" :id=\"this.id\" :parameters=\"this.parameters\"/>\n  </div>\n  </div>\n</template>\n\n<script>\nimport LfoVisualizer from \"@/views/Synth/Modulators/LfoVisualizer\";\nimport * as Tone from \"tone\";\nimport Knobs from \"./Knobs.vue\";\nimport { toRaw } from \"vue\";\n\nconst waveforms = ['sine', 'triangle', 'square', 'sawtooth']\nexport default {\n  components: { LfoVisualizer, Knobs },\n  props: [\"id\"],\n\n  data() {\n    return {\n      freq: 10,\n      depth: 0.8,\n      isDepthFaderDown: false,\n      isFreqFaderDown: false,\n      waveform: waveforms[0],\n      waveformId: 0,\n      parameters: {}\n\n    }\n  },\n\n  mounted() {\n    //document.addEventListener(\"mousemove\", this.onMouseMove); // todo: remove this\n    //console.log(\"mounted - this.waveformId: \" + this.waveformId + \" - this.waveform: \" + this.waveform)\n\n    this.parameters = {\n      frequency: this.freq,\n      waveform: this.waveform\n    }\n  },\n\n  computed: {\n    lfoDepthFaderLevel() {\n      //console.log(\"lfoDepthFaderLevel\")\n      return {\n        top: ((1 - this.depth) * 85).toString() + \"%\"\n      }\n    },\n    lfo_elems_row() {\n      return {\n        background: this.colors.purple.medium\n      }\n    },\n    lfoFaderBase() {\n      return {\n        background: this.colors.purple.glow\n      }\n    },\n    lfoFreqFaderLevel() {\n      return {\n        top: ((20 - this.freq) / 20 * 85).toString() + \"%\",\n        background: this.colors.purple.light,\n        borderColor: this.colors.purple.dark\n      }\n    },\n    lfo_waveform_btn_selector() {\n      return {\n        borderColor: this.colors.purple.dark,\n        background: this.colors.purple.light,\n        color: this.colors.gray.dark\n      }\n    },\n    container(){\n      return {\n        background: this.colors.purple.glow\n      }\n    },\n    border(){\n      return{\n        background: this.colors.purple.glow\n      }\n    }\n  },\n\n  methods: {\n    setParams({ freq = this.freq, depth = this.depth, waveform = this.waveform}) {\n      if (freq <= 20) {\n        this.freq = freq;\n      } else {\n        this.freq = 20\n      }\n      if(typeof waveform === 'number') {\n        this.waveformId = waveform;\n        if(this.waveformId === 0 || this.waveformId === 1) {\n          this.waveform = waveforms[this.waveformId]\n        } else {\n          console.log(\"ERROR: Called Non existing lfo wave type Id\")\n        }\n      } else if(typeof waveform === 'string'){\n        this.waveform = waveform;\n        waveforms.forEach( (waveformNameString, index) => {\n          if(waveformNameString === this.waveform) this.waveformId = index;\n        })\n      }\n      this.parameters.waveform = this.waveform;\n      this.depth = depth;\n      this.$refs.visualizer.updateParams({freq: this.freq, depth: this.depth})\n      this.$refs.knobs.updateParameters(this.parameters)\n\n    },\n\n    nextWaveType(){\n      this.waveformId++;\n      if(this.waveformId > waveforms.length-1) this.waveformId = 0;\n      this.waveform = waveforms[this.waveformId]\n      this.parameters.waveform = this.waveform;\n      // console.log(\"nextWaveType - this.waveformId: \" + this.waveformId + \" - this.waveform: \" + this.waveform)\n\n      console.log(\"CHANGING WAVE TYPE TO: \" + this.waveform)\n      this.$refs.knobs.updateParameters(this.parameters)\n      this.$refs.visualizer.updateParams({ waveform: this.waveform, frequency: this.freq })\n    },\n\n    startOscilloscope() {\n      console.log(\"start LFO graphics\")\n      this.$refs.visualizer.startOscilloscope();\n    },\n    stopOscilloscope() {\n      console.log(\"stop LFO graphics\")\n      this.$refs.visualizer.stopOscilloscope();\n    },\n    resetOscilloscope() {\n      this.$refs.visualizer.stopOscilloscope();\n      this.$refs.visualizer.startOscilloscope();\n\n    },\n    // ---------- USER GESTURE ----------\n\n    depthFaderSelected() {\n      console.log(\"depthFaderSelected\")\n      this.isDepthFaderDown = true;\n    },\n    freqFaderSelected() {\n      console.log(\"freqFaderSelected\")\n      this.isFreqFaderDown = true;\n    },\n\n    handleMouseMove(event) {\n      //console.log(\"lfo - handleMouseMove\")\n     this.$refs.knobs.handleMouseMove(event)\n      if (this.isDepthFaderDown) {\n        if (event.movementY < 0) {\n          // Mouse is moving dowm\n          this.depth = this.depth - event.movementY / 100;\n          console.log(\"moving up\");\n        } else {\n          // Mouse is moving up\n          this.depth = this.depth - event.movementY / 100;\n          console.log(\"moving down\");\n        }\n        this.depth = Math.max(this.depth, 0);\n        this.depth = Math.min(this.depth, 1);\n\n        console.log(\"lfo depth: \" + this.depth)\n        this.$refs.visualizer.updateParams({depth: this.depth})\n      }\n      if (this.isFreqFaderDown) {\n        if (event.movementY < 0) {\n          // Mouse is moving dowm\n          this.freq = this.freq - 20 * (event.movementY / 100);\n          console.log(\"moving up\");\n        } else {\n          // Mouse is moving up\n          this.freq = this.freq - 20 * (event.movementY / 100);\n        }\n        this.freq = Math.max(this.freq, 1);\n        this.freq = Math.min(this.freq, 20);\n\n        console.log(\"lfo freq: \" + this.freq)\n        this.parameters.frequency = this.freq\n        this.$refs.visualizer.updateParams({freq: this.freq})\n        this.$refs.knobs.updateParameters(this.parameters)\n      }\n    },\n    handleMouseUp() {\n      if (this.isFreqFaderDown) this.isFreqFaderDown = false\n      if (this.isDepthFaderDown) this.isDepthFaderDown = false\n\n      this.$refs.knobs.handleMouseUp()\n    },\n\n    unHide() {\n      this.$refs.container.classList.remove(\"hidden\");\n      this.startOscilloscope()\n    },\n    hide() {\n      this.$refs.container.classList.add(\"hidden\");\n    },\n\n    //-------------METHODS TO LINK WHEN DROPPING\n    link(object, target, color) {\n      //console.log(\"THINGS HAPPENING \"+section+\" \"+target)\n      this.$refs.knobs.addLink(object, target, color)\n\n    },\n    unLink(object, target) {\n      //console.log(\"THINGS HAPPENING \")\n      //console.log(object)\n      //console.log(target)\n      this.$refs.knobs.removeLink(object, target)\n    },\n  }\n}\n</script>\n\n<style scoped>\n\n.border {\n  grid-template-columns: calc(6 / 8 * 100%) calc(2 / 8 * 100%);\n  grid-template-rows: 100% ;\n\n  position: relative;\n  display: grid;\n  width: calc(100% - 0.6vw);\n  height: calc(100% - 0.6vw);\n  box-sizing: border-box;\n  margin: 0.3vw;\n  border-radius: 0.2vw;\n  border: 0.1vw solid #334030;\n}\n.container {\n  grid-column: span 2;\n  width: 100%;\n  height: 100%;\n}\n\n.hidden {\n  display: none;\n}\n\n.lfo_elems_row {\n  margin: 0;\n  padding: 0;\n  display: flex;\n  flex-direction: row;\n  height: 100%;\n  align-items: center;\n  justify-items: center;\n  justify-content: center;\n}\n\n.lfoFaderBase {\n  position: absolute;\n  top: 5%;\n  left: 30%;\n  aspect-ratio: 1/10;\n  border-radius: 5vw;\n  height: 70%;\n}\n\n.lfoDepthFaderLevel {\n  position: relative;\n  width: 100%;\n  border-radius: 5vw;\n  height: 15%;\n  background-color: white;\n  top: 80%\n}\n\n.lfoFreqFaderLevel {\n  position: relative;\n  width: 100%;\n  height: 20%;\n  border-width: 1px;\n  border-style: solid;\n  border-radius: 5vw;\n  top: 80%;\n  box-sizing: border-box;\n}\n\n.lfo_controls_column {\n  height: 100%;\n  width: 100%;\n  display: flex;\n  flex: 0.9;\n  flex-direction: column;\n  align-content: center;\n  justify-content: center;\n  position: relative;\n  margin: 0;\n  padding: 0;\n}\n\n.lfo_waveform-btn-selector {\n  position: absolute;\n  left: 5%;\n  bottom: 5%;\n  aspect-ratio: 7/4;\n  width: 80%;\n  border-radius: 0.3vw;\n  border-style: solid;\n  border-width: 1px;\n  text-align: center;\n}\n\n\n.lfo_waveform_btn_icon {\n  position: absolute;\n  left: 0;\n  top: 0;\n  height: 100%;\n  width: 100%;\n  bottom: 0;\n  place-self: center;\n  align-self: center;\n  margin: 0;\n  padding: 0;\n  clip-path: circle(9%);\n  transform: scale(3.25);\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
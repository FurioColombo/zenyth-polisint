{"ast":null,"code":"import \"core-js/modules/es.array.every.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport { isAudioWorkletNode } from '../guards/audio-worklet-node';\nimport { setInternalStateToPassive } from './set-internal-state-to-passive';\n// Set the internalState of the audioNode to 'passive' if it is not an AudioWorkletNode and if it has no 'active' input connections.\nexport var setInternalStateToPassiveWhenNecessary = function setInternalStateToPassiveWhenNecessary(audioNode, activeInputs) {\n  if (!isAudioWorkletNode(audioNode) && activeInputs.every(function (connections) {\n    return connections.size === 0;\n  })) {\n    setInternalStateToPassive(audioNode);\n  }\n};","map":{"version":3,"mappings":";;AAAA,SAASA,kBAAkB,QAAQ,8BAA8B;AAGjE,SAASC,yBAAyB,QAAQ,iCAAiC;AAE3E;AACA,OAAO,IAAMC,sCAAsC,GAAG,SAAzCA,sCAAsC,CAC/CC,SAAwB,EACxBC,YAA8C,EAC9C;EACA,IAAI,CAACJ,kBAAkB,CAACG,SAAS,CAAC,IAAIC,YAAY,CAACC,KAAK,CAAC,UAACC,WAAW;IAAA,OAAKA,WAAW,CAACC,IAAI,KAAK,CAAC;EAAA,EAAC,EAAE;IAC/FN,yBAAyB,CAACE,SAAS,CAAC;;AAE5C,CAAC","names":["isAudioWorkletNode","setInternalStateToPassive","setInternalStateToPassiveWhenNecessary","audioNode","activeInputs","every","connections","size"],"sourceRoot":"","sources":["../../../src/helpers/set-internal-state-to-passive-when-necessary.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module","externalDependencies":[]}
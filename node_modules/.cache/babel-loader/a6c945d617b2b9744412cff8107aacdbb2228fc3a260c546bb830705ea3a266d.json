{"ast":null,"code":"import * as Tone from \"tone\";\nimport OscHost from \"./Synth/Oscillators/OscHost.vue\";\nimport FilterHost from \"./Synth/Filters/FilterHost.vue\";\nimport FxHost from \"./Synth/Effects/FxHost.vue\";\nimport ToolHost from \"./Synth/Tools/ToolsHost.vue\";\nimport ModHost from \"./Synth/Modulators/ModHost.vue\"; // Envelope Strip\nimport LFO from \"@/views/Synth/Modulators/Lfo.vue\"; // todo: remove\nimport PianoKeyboard from \"./Synth/Keyboard/PianoKeyboard.vue\";\nexport default {\n  name: \"mainHost\",\n  components: {\n    LFO,\n    // todo : delete from here\n    OscHost,\n    FilterHost,\n    FxHost,\n    ToolHost,\n    ModHost,\n    PianoKeyboard\n  },\n  data() {\n    return {\n      draggedInfo: null\n    };\n  },\n  mounted() {\n    Tone.Transport.start(\"+0.1\");\n  },\n  methods: {\n    // -------------- INIT ROUTING (connections) ------------\n    initOscConnections() {\n      this.$refs.oscHost.initConnections();\n    },\n    initFilterConnections() {\n      //console.log(\"main host init filter-fx connections\")\n      // todo: delete this.$refs.filterHost.initConnections()\n    },\n    handleNewOsc() {\n      //initialize volEnvelope on all synth when a new oscillator is added\n      this.$refs.modHost.handleNewOsc();\n    },\n    handleMouseUp(e) {\n      //Actions to execute when mouseup happens on any part of the screen\n      this.$refs.pianoKeyboard.handleMouseUp();\n      this.$refs.modHost.handleMouseUp(e);\n      this.$refs.fxHost.handleMouseUp(e);\n\n      //If something has been dragged and not claimed after 100ms infos are deleted\n      if (this.draggedInfo) {\n        setTimeout(() => this.deleteDraggedInfo(\"MainHost\"), 100);\n      }\n    },\n    handleMouseMove(e) {\n      //console.log(this.$refs.modHost)\n      this.$refs.modHost.handleMouseMove(e);\n      this.$refs.fxHost.handleMouseMove(e);\n    },\n    noteDownHandle(note) {\n      this.$refs[\"toolsHost\"].setOscilloscopeTiming(note);\n    },\n    noteUpHandle(note) {}\n  }\n};","map":{"version":3,"mappings":"AAoBA,OAAO,KAAKA,IAAG,MAAO,MAAM;AAC5B,OAAOC,OAAM,MAAO,iCAAiC;AACrD,OAAOC,UAAS,MAAO,gCAAgC;AACvD,OAAOC,MAAK,MAAO,4BAA4B;AAC/C,OAAOC,QAAO,MAAO,6BAA6B;AAClD,OAAOC,OAAM,MAAO,gCAAgC,EAAE;AACtD,OAAOC,GAAE,MAAO,kCAAkC,EAAE;AACpD,OAAOC,aAAY,MAAO,oCAAoC;AAE9D,eAAe;EACbC,IAAI,EAAE,UAAU;EAChBC,UAAU,EAAE;IACVH,GAAG;IAAE;IACLL,OAAO;IACPC,UAAU;IACVC,MAAM;IACNC,QAAQ;IACRC,OAAO;IACPE;EAEF,CAAC;EACDG,IAAI,GAAG;IACL,OAAO;MACLC,WAAW,EAAE;IACf,CAAC;EACH,CAAC;EACDC,OAAO,GAAG;IACRZ,IAAI,CAACa,SAAS,CAACC,KAAK,CAAC,MAAM;EAC7B,CAAC;EAEDC,OAAO,EAAE;IACP;IACAC,kBAAkB,GAAE;MAClB,IAAI,CAACC,KAAK,CAACC,OAAO,CAACC,eAAe,EAAC;IACrC,CAAC;IACDC,qBAAqB,GAAE;MACrB;MACA;IAAA,CACD;IACDC,YAAY,GAAE;MACZ;MACA,IAAI,CAACJ,KAAK,CAACK,OAAO,CAACD,YAAY,EAAE;IACnC,CAAC;IACDE,aAAa,CAACC,CAAC,EAAE;MACf;MACA,IAAI,CAACP,KAAK,CAACQ,aAAa,CAACF,aAAa,EAAE;MACxC,IAAI,CAACN,KAAK,CAACK,OAAO,CAACC,aAAa,CAACC,CAAC,CAAC;MACnC,IAAI,CAACP,KAAK,CAACS,MAAM,CAACH,aAAa,CAACC,CAAC,CAAC;;MAElC;MACA,IAAI,IAAI,CAACb,WAAW,EAAE;QACpBgB,UAAU,CAAC,MAAM,IAAI,CAACC,iBAAiB,CAAC,UAAU,CAAC,EAAE,GAAG,CAAC;MAC3D;IACF,CAAC;IACDC,eAAe,CAACL,CAAC,EAAC;MAChB;MACA,IAAI,CAACP,KAAK,CAACK,OAAO,CAACO,eAAe,CAACL,CAAC,CAAC;MACrC,IAAI,CAACP,KAAK,CAACS,MAAM,CAACG,eAAe,CAACL,CAAC,CAAC;IAEtC,CAAC;IACDM,cAAc,CAACC,IAAI,EAAE;MACnB,IAAI,CAACd,KAAK,CAAC,WAAW,CAAC,CAACe,qBAAqB,CAACD,IAAI,CAAC;IACrD,CAAC;IAGDE,YAAY,CAACF,IAAI,EAAE,CACnB;EAEF;AACF,CAAC","names":["Tone","OscHost","FilterHost","FxHost","ToolHost","ModHost","LFO","PianoKeyboard","name","components","data","draggedInfo","mounted","Transport","start","methods","initOscConnections","$refs","oscHost","initConnections","initFilterConnections","handleNewOsc","modHost","handleMouseUp","e","pianoKeyboard","fxHost","setTimeout","deleteDraggedInfo","handleMouseMove","noteDownHandle","note","setOscilloscopeTiming","noteUpHandle"],"sourceRoot":"","sources":["/Users/guglielmofratticioli/Documents/POLIMI/FurioColombo.github.io/src/views/MainHost.vue"],"sourcesContent":["<template>\n  <div class=\"appContainer\" @mouseup=\"handleMouseUp\" @mousemove=\"handleMouseMove\">\n    <img className=\"app_logo\" src=\"@/img/zenyth_logo.png\" draggable=\"false\">\n    <div class=\"mainHost\">\n      <OscHost ref=\"oscHost\" @newOsc=\"handleNewOsc\" />\n      <FilterHost ref=\"filterHost\" @filterInitialized=\"initOscConnections\"/>\n      <FxHost ref=\"fxHost\"/>\n      <ToolHost ref=\"toolsHost\" />\n      <ModHost ref=\"modHost\"/>\n      <PianoKeyboard\n        ref=\"pianoKeyboard\"\n        @noteDown=\"noteDownHandle\"\n        @noteUp=\"noteUpHandle\"\n      />\n    </div>\n    <LFO :key=\"1\"  ></LFO>\n  </div>\n</template>\n\n<script>\nimport * as Tone from \"tone\";\nimport OscHost from \"./Synth/Oscillators/OscHost.vue\";\nimport FilterHost from \"./Synth/Filters/FilterHost.vue\";\nimport FxHost from \"./Synth/Effects/FxHost.vue\";\nimport ToolHost from \"./Synth/Tools/ToolsHost.vue\";\nimport ModHost from \"./Synth/Modulators/ModHost.vue\"; // Envelope Strip\nimport LFO from \"@/views/Synth/Modulators/Lfo.vue\"; // todo: remove\nimport PianoKeyboard from \"./Synth/Keyboard/PianoKeyboard.vue\";\n\nexport default {\n  name: \"mainHost\",\n  components: {\n    LFO, // todo : delete from here\n    OscHost,\n    FilterHost,\n    FxHost,\n    ToolHost,\n    ModHost,\n    PianoKeyboard,\n\n  },\n  data() {\n    return {\n      draggedInfo: null,\n    };\n  },\n  mounted() {\n    Tone.Transport.start(\"+0.1\")\n  },\n\n  methods: {\n    // -------------- INIT ROUTING (connections) ------------\n    initOscConnections(){\n      this.$refs.oscHost.initConnections()\n    },\n    initFilterConnections(){\n      //console.log(\"main host init filter-fx connections\")\n      // todo: delete this.$refs.filterHost.initConnections()\n    },\n    handleNewOsc(){\n      //initialize volEnvelope on all synth when a new oscillator is added\n      this.$refs.modHost.handleNewOsc();\n    },\n    handleMouseUp(e) {\n      //Actions to execute when mouseup happens on any part of the screen\n      this.$refs.pianoKeyboard.handleMouseUp();\n      this.$refs.modHost.handleMouseUp(e);\n      this.$refs.fxHost.handleMouseUp(e);\n\n      //If something has been dragged and not claimed after 100ms infos are deleted\n      if (this.draggedInfo) {\n        setTimeout(() => this.deleteDraggedInfo(\"MainHost\"), 100);\n      }\n    },\n    handleMouseMove(e){\n      //console.log(this.$refs.modHost)\n      this.$refs.modHost.handleMouseMove(e);\n      this.$refs.fxHost.handleMouseMove(e);\n\n    },\n    noteDownHandle(note) {\n      this.$refs[\"toolsHost\"].setOscilloscopeTiming(note);\n    },\n\n\n    noteUpHandle(note) {\n    },\n\n  },\n};\n</script>\n\n<style>\n.mainHost {\n  display: grid; /* no more flex display because we need Env Strip to be longer */\n  grid-template-rows: 55% 30% 15%; /* grid display row sizes*/\n  grid-template-columns: 20% 55% 25%; /*  ...   ...   column sizes fr is like unit */\n  width: 100%;\n  justify-content: center;\n  aspect-ratio: 4 / 3;\n  background-color: transparent;\n}\n.appContainer {\n  text-align: center;\n  width: 60%;\n  height: 100vh;\n  margin: auto;\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
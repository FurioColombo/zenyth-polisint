{"ast":null,"code":"import { normalizeStyle as _normalizeStyle, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", {\n    \"class\": \"envelope_container\",\n    style: _normalizeStyle(this.envelope_container)\n  }, [_createElementVNode(\"div\", {\n    \"class\": \"envelope\",\n    ref: \"envelope\",\n    style: _normalizeStyle(this.adsr)\n  }, [_createElementVNode(\"div\", {\n    \"class\": \"attack_area\",\n    style: _normalizeStyle($options.attack_area),\n    onMousedown: _cache[0] || (_cache[0] = function ($event) {\n      return $options.attack_down();\n    })\n  }, null, 36 /* STYLE, HYDRATE_EVENTS */), _createElementVNode(\"div\", {\n    \"class\": \"decay_area\",\n    style: _normalizeStyle($options.decay_area),\n    onMousedown: _cache[1] || (_cache[1] = function ($event) {\n      return $options.decay_down();\n    })\n  }, null, 36 /* STYLE, HYDRATE_EVENTS */), _createElementVNode(\"div\", {\n    \"class\": \"sustain_area\",\n    style: _normalizeStyle($options.sustain_area),\n    onMousedown: _cache[2] || (_cache[2] = function ($event) {\n      return $options.sustain_down();\n    })\n  }, null, 36 /* STYLE, HYDRATE_EVENTS */), _createElementVNode(\"div\", {\n    \"class\": \"release_area\",\n    style: _normalizeStyle($options.release_area),\n    onMousedown: _cache[3] || (_cache[3] = function ($event) {\n      return $options.release_down();\n    })\n  }, null, 36 /* STYLE, HYDRATE_EVENTS */), _createElementVNode(\"div\", {\n    \"class\": \"attack_dot\",\n    style: _normalizeStyle($options.attack_dot),\n    onMousedown: _cache[4] || (_cache[4] = function ($event) {\n      return $options.attack_down();\n    })\n  }, null, 36 /* STYLE, HYDRATE_EVENTS */), _createElementVNode(\"div\", {\n    \"class\": \"decay_dot\",\n    style: _normalizeStyle($options.decay_dot),\n    onMousedown: _cache[5] || (_cache[5] = function ($event) {\n      return $options.decay_down();\n    })\n  }, null, 36 /* STYLE, HYDRATE_EVENTS */), _createElementVNode(\"div\", {\n    \"class\": \"release_dot\",\n    style: _normalizeStyle($options.release_dot),\n    onMousedown: _cache[6] || (_cache[6] = function ($event) {\n      return $options.release_down();\n    })\n  }, null, 36 /* STYLE, HYDRATE_EVENTS */), _createElementVNode(\"div\", {\n    \"class\": \"attack\",\n    style: _normalizeStyle(this.attack)\n  }, [_createElementVNode(\"div\", {\n    \"class\": \"attack_color\",\n    style: _normalizeStyle(this.attack_Color)\n  }, null, 4 /* STYLE */)], 4 /* STYLE */), _createElementVNode(\"div\", {\n    \"class\": \"decay\",\n    style: _normalizeStyle(this.decay)\n  }, [_createElementVNode(\"div\", {\n    \"class\": \"decay_head\",\n    style: _normalizeStyle(this.decay_head)\n  }, null, 4 /* STYLE */), _createElementVNode(\"div\", {\n    \"class\": \"decay_color\",\n    style: _normalizeStyle(this.decay_Color)\n  }, null, 4 /* STYLE */)], 4 /* STYLE */), _createElementVNode(\"div\", {\n    \"class\": \"sustain\",\n    style: _normalizeStyle(this.sustain)\n  }, [_createElementVNode(\"div\", {\n    \"class\": \"sustain_head\",\n    style: _normalizeStyle(this.sustain_head)\n  }, null, 4 /* STYLE */), _createElementVNode(\"div\", {\n    \"class\": \"sustain_color\",\n    style: _normalizeStyle(this.sustain_Color)\n  }, null, 4 /* STYLE */)], 4 /* STYLE */), _createElementVNode(\"div\", {\n    \"class\": \"release\",\n    style: _normalizeStyle(this.release)\n  }, [_createElementVNode(\"div\", {\n    \"class\": \"release_color\",\n    style: _normalizeStyle(this.release_Color)\n  }, null, 4 /* STYLE */)], 4 /* STYLE */), _createElementVNode(\"div\", {\n    \"class\": \"space\",\n    style: _normalizeStyle(this.space)\n  }, null, 4 /* STYLE */), _createCommentVNode(\"<div class=\\\"time_strech\\\" :style=\\\"this.time_Stretch\\\"></div>\")], 4 /* STYLE */)], 4 /* STYLE */);\n}","map":{"version":3,"mappings":";;uBACIA,oBA6BM;IA7BD,SAAM,oBAAoB;IAAEC,KAAK,uBAAOC,kBAAkB;MAC3DC,oBA2BM;IA3BD,SAAM,UAAU;IAACC,GAAG,EAAC,UAAU;IAAEH,KAAK,uBAAOI,IAAI;MAClDF,oBAA+E;IAA1E,SAAM,aAAa;IAAEF,KAAK,kBAAEK,oBAAW;IAAGC,WAAS;MAAA,OAAED,oBAAW;IAAA;4CACrEH,oBAA4E;IAAvE,SAAM,YAAY;IAAEF,KAAK,kBAAEK,mBAAU;IAAGC,WAAS;MAAA,OAAED,mBAAU;IAAA;4CAClEH,oBAAkF;IAA7E,SAAM,cAAc;IAAEF,KAAK,kBAAEK,qBAAY;IAAGC,WAAS;MAAA,OAAED,qBAAY;IAAA;4CACxEH,oBAAkF;IAA7E,SAAM,cAAc;IAAEF,KAAK,kBAAEK,qBAAY;IAAGC,WAAS;MAAA,OAAED,qBAAY;IAAA;4CACxEH,oBAA6E;IAAxE,SAAM,YAAY;IAAEF,KAAK,kBAAEK,mBAAU;IAAGC,WAAS;MAAA,OAAED,oBAAW;IAAA;4CACnEH,oBAA0E;IAArE,SAAM,WAAW;IAAEF,KAAK,kBAAEK,kBAAS;IAAGC,WAAS;MAAA,OAAED,mBAAU;IAAA;4CAChEH,oBAAgF;IAA3E,SAAM,aAAa;IAAEF,KAAK,kBAAEK,oBAAW;IAAGC,WAAS;MAAA,OAAED,qBAAY;IAAA;4CAEtEH,oBAEM;IAFD,SAAM,QAAQ;IAAEF,KAAK,uBAAOO,MAAM;MACnCL,oBAA2D;IAAtD,SAAM,cAAc;IAAEF,KAAK,uBAAOQ,YAAY;4CAEvDN,oBAGM;IAHD,SAAM,OAAO;IAAEF,KAAK,uBAAOS,KAAK;MACjCP,oBAAuD;IAAlD,SAAM,YAAY;IAAEF,KAAK,uBAAOU,UAAU;2BAC/CR,oBAAyD;IAApD,SAAM,aAAa;IAAEF,KAAK,uBAAOW,WAAW;4CAErDT,oBAGM;IAHD,SAAM,SAAS;IAAEF,KAAK,uBAAOY,OAAO;MACrCV,oBAA2D;IAAtD,SAAM,cAAc;IAAEF,KAAK,uBAAOa,YAAY;2BACnDX,oBAA6D;IAAxD,SAAM,eAAe;IAAEF,KAAK,uBAAOc,aAAa;4CAEzDZ,oBAEM;IAFD,SAAM,SAAS;IAAEF,KAAK,uBAAOe,OAAO;MACrCb,oBAA6D;IAAxD,SAAM,eAAe;IAAEF,KAAK,uBAAOgB,aAAa;4CAGzDd,oBAA6C;IAAxC,SAAM,OAAO;IAAEF,KAAK,uBAAOiB,KAAK;2BAErCC,qFAAiE","names":["_createElementBlock","style","envelope_container","_createElementVNode","ref","adsr","$options","onMousedown","attack","attack_Color","decay","decay_head","decay_Color","sustain","sustain_head","sustain_Color","release","release_Color","space","_createCommentVNode"],"sourceRoot":"","sources":["C:\\Home\\Projects\\Programmazione\\WebStorm\\myZenythPolisinT\\zenyth_polisint\\src\\views\\Synth\\Modulators\\EnvelopeVisualizer.vue"],"sourcesContent":["<template>\r\n    <div class=\"envelope_container\" :style=\"this.envelope_container\">\r\n        <div class=\"envelope\" ref=\"envelope\" :style=\"this.adsr\">\r\n            <div class=\"attack_area\" :style=\"attack_area\" @mousedown=\"attack_down()\"></div>\r\n            <div class=\"decay_area\" :style=\"decay_area\" @mousedown=\"decay_down()\"></div>\r\n            <div class=\"sustain_area\" :style=\"sustain_area\" @mousedown=\"sustain_down()\"></div>\r\n            <div class=\"release_area\" :style=\"release_area\" @mousedown=\"release_down()\"></div>\r\n            <div class=\"attack_dot\" :style=\"attack_dot\" @mousedown=\"attack_down()\"></div>\r\n            <div class=\"decay_dot\" :style=\"decay_dot\" @mousedown=\"decay_down()\"></div>\r\n            <div class=\"release_dot\" :style=\"release_dot\" @mousedown=\"release_down()\"></div>\r\n\r\n            <div class=\"attack\" :style=\"this.attack\">\r\n                <div class=\"attack_color\" :style=\"this.attack_Color\"></div>\r\n            </div>\r\n            <div class=\"decay\" :style=\"this.decay\">\r\n                <div class=\"decay_head\" :style=\"this.decay_head\"></div>\r\n                <div class=\"decay_color\" :style=\"this.decay_Color\"></div>\r\n            </div>\r\n            <div class=\"sustain\" :style=\"this.sustain\">\r\n                <div class=\"sustain_head\" :style=\"this.sustain_head\"></div>\r\n                <div class=\"sustain_color\" :style=\"this.sustain_Color\"></div>\r\n            </div>\r\n            <div class=\"release\" :style=\"this.release\">\r\n                <div class=\"release_color\" :style=\"this.release_Color\"></div>\r\n            </div>\r\n\r\n            <div class=\"space\" :style=\"this.space\"></div>\r\n\r\n            <!--<div class=\"time_strech\" :style=\"this.time_Stretch\"></div>-->\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    props: ['is_volume'],\r\n    data() {\r\n        return {\r\n            //tempEvent: null,\r\n            type: \"envelope\",\r\n            parameters: {\r\n                attack: 0.01,\r\n                attackCurve: \"linear\",\r\n                decay: 0.1,\r\n                decayCurve: \"linear\",\r\n                sustain: 0.1,\r\n                releaseCurve: \"linear\",\r\n                release: 0.1,\r\n                sustain_lev: 0.5,\r\n                duration: 4,\r\n            },\r\n            is_attack_down: false,\r\n            is_decay_down: false,\r\n            is_sustain_down: false,\r\n            is_release_down: false,\r\n            test: 10,\r\n        };\r\n    },\r\n    mounted() {\r\n        \r\n    },\r\n    methods: {\r\n\r\n        handleMouseMove(e) {\r\n            //console.log(e)\r\n            if (this.isDragging) {\r\n                this.tempEvent = e;\r\n            }\r\n            let p = this.parameters;\r\n            if (this.is_attack_down) { // attack\r\n                if (e.movementX > 0) {\r\n                    /* console.log(p.attack,); */\r\n                    p.attack = Math.min(p.attack + e.movementX / (this.$refs.envelope.offsetWidth), 1 - (p.decay + p.sustain + p.release));\r\n                }\r\n                if (e.movementX < 0) {\r\n                   /*  console.log(p.attack); */\r\n                    p.attack = Math.max(p.attack + e.movementX / (this.$refs.envelope.offsetWidth), 0);\r\n                }\r\n            }\r\n            if (this.is_decay_down) { // decay\r\n                if (e.movementX > 0) {\r\n                   /*  console.log(p.attack,); */\r\n                    p.decay = Math.min(p.decay + e.movementX / (this.$refs.envelope.offsetWidth), 1 - (p.attack + p.sustain + p.release));\r\n                }\r\n                if (e.movementX < 0) {\r\n                    /* console.log(p.attack); */\r\n                    p.decay = Math.max(p.decay + e.movementX / (this.$refs.envelope.offsetWidth), 0);\r\n                }\r\n                if (e.movementY > 0) {\r\n                    p.sustain_lev = Math.max(p.sustain_lev - e.movementY / 100, 0);\r\n                } else if (e.movementY < 0) {\r\n                    p.sustain_lev = Math.min(p.sustain_lev - e.movementY / 100, 1);\r\n                }\r\n                /* console.log(p.sustain_lev); */\r\n            }\r\n            if (this.is_sustain_down) { // sustain\r\n                if (e.movementX > 0) {\r\n                    /* console.log(p.attack,); */\r\n                    p.decay = Math.min(p.decay + e.movementX / (this.$refs.envelope.offsetWidth), 1 - (p.attack + p.sustain + p.release));\r\n                }\r\n                if (e.movementX < 0) {\r\n                    /* console.log(p.attack); */\r\n                    p.decay = Math.max(p.decay + e.movementX / (this.$refs.envelope.offsetWidth), 0);\r\n                }\r\n                if (e.movementY > 0) {\r\n                    p.sustain_lev = Math.max(p.sustain_lev - e.movementY / 100, 0);\r\n                } else if (e.movementY < 0) {\r\n                    p.sustain_lev = Math.min(p.sustain_lev - e.movementY / 100, 1);\r\n                }\r\n                /* console.log(p.sustain_lev); */\r\n            }\r\n            if (this.is_release_down) { // release\r\n                if (e.movementX > 0) {\r\n                    /* console.log(p.attack,); */\r\n                    p.release = Math.min(p.release + e.movementX / (this.$refs.envelope.offsetWidth), 1 - (p.decay + p.sustain + p.attack));\r\n                }\r\n                if (e.movementX < 0) {\r\n                    /* console.log(p.attack); */\r\n                    p.release = Math.max(p.release + e.movementX / (this.$refs.envelope.offsetWidth), 0);\r\n                }\r\n            }\r\n            if (this.is_attack_down || this.is_decay_down || this.is_sustain_down || this.is_release_down) {\r\n\r\n                let parameters = {\r\n                    attack: this.parameters.attack * this.parameters.duration,\r\n                    decay: this.parameters.decay * this.parameters.duration,\r\n                    sustain: this.parameters.sustain_lev,\r\n                    release: this.parameters.release * this.parameters.duration,\r\n                }\r\n                this.$emit(\"paramRefresh\", parameters)\r\n            }\r\n\r\n\r\n        },\r\n        handleMouseUp() {\r\n            /*if (this.isDragging) {\r\n              console.log(this.tempEvent.target)\r\n              this.isDragging = false\r\n            }*/\r\n            //console.log(\"mouseUp\");\r\n            this.is_attack_down = false;\r\n            this.is_decay_down = false;\r\n            this.is_sustain_down = false;\r\n            this.is_release_down = false;\r\n        },\r\n        attack_down() {\r\n            if (!this.is_attack_down) this.is_attack_down = true;\r\n        },\r\n        decay_down() {\r\n            if (!this.is_decay_down) this.is_decay_down = true;\r\n        },\r\n        sustain_down() {\r\n            if (!this.is_sustain_down) this.is_sustain_down = true;\r\n        },\r\n        release_down() {\r\n            if (!this.is_release_down) this.is_release_down = true;\r\n        }\r\n    },\r\n    computed: {\r\n        envelope_container() {\r\n            let color = '';\r\n            if (this.$props['is_volume']) color = this.colors.pink.medium\r\n            else color = this.colors.azure.medium\r\n            return {\r\n                background: color\r\n            }\r\n        },\r\n        adsr() {\r\n            /* console.log(((this.parameters.attack - this.parameters.sustain) * 100).toFixed(2)) */\r\n            let color = '';\r\n            if (this.$props['is_volume']) color = '#f8e7e6'\r\n            else color = '#ceeae7'\r\n            return {\r\n                display: \"grid\",\r\n                opacity: '100%',\r\n                background: color,\r\n                gridTemplateColumns: this.parameters.attack * 100 + '% '\r\n                    + Math.ceil(this.parameters.decay * 100) + '% '\r\n                    + Math.ceil(this.parameters.sustain * 100) + '% '\r\n                    + Math.ceil(this.parameters.release * 100) + '% '\r\n                    + '10% '\r\n            };\r\n        },\r\n        attack() {\r\n            return {\r\n                height: \"100%\",\r\n                width: \"100%\",\r\n                clipPath: \"polygon(0% 100%, 100% 0%, 100% 100%)\",\r\n            };\r\n        },\r\n        decay() {\r\n            return {\r\n                height: \"100%\",\r\n            };\r\n        },\r\n        sustain() {\r\n            return {\r\n                display: \"grid\",\r\n                gridTemplateRows:\r\n                    (1 - this.parameters.sustain_lev) * 100 +\r\n                    \"% \" +\r\n                    this.parameters.sustain_lev * 100 +\r\n                    \"%\",\r\n                height: \"100%\",\r\n            };\r\n        },\r\n        release() {\r\n            return {\r\n                height: \"100%\",\r\n                clipPath:\r\n                    \"polygon(0% \" +\r\n                    (1 - this.parameters.sustain_lev) * 100 +\r\n                    \"%, 0% 100%, 100% 100%)\",\r\n            };\r\n        },\r\n        attack_Color() {\r\n            let color = '';\r\n            if (this.$props['is_volume']) color = this.colors.pink.dark\r\n            else color = this.colors.azure.dark\r\n            return {\r\n                height: \"100%\",\r\n                background: color,\r\n            };\r\n        },\r\n        decay_Color() {\r\n            let color ='';\r\n            if(this.$props['is_volume']) color= this.colors.pink.medium\r\n            else color = this.colors.azure.medium\r\n            return {\r\n                position: 'relative',\r\n                height: \"100%\",\r\n                background: color,\r\n                top: (this.parameters.sustain_lev - 1) * 100 + \"%\",\r\n            };\r\n        },\r\n        sustain_Color() {\r\n            let color ='';\r\n            if(this.$props['is_volume']) color= this.colors.pink.light\r\n            else color = this.colors.azure.light\r\n            return {\r\n                zIndex: '1',\r\n                height: \"100%\",\r\n                background: color,\r\n            };\r\n        },\r\n        release_Color() {\r\n            let color ='';\r\n            if(this.$props['is_volume']) color= this.colors.pink.light\r\n            else color = this.colors.azure.light\r\n            return {\r\n                height: \"100%\",\r\n                background: color,\r\n                opacity: '60%'\r\n            };\r\n        },\r\n        decay_head() {\r\n            let color ='';\r\n            if(this.$props['is_volume']) color= '#f8e7e6'\r\n            else color = '#ceeae7'\r\n            return {\r\n                position: 'relative',\r\n                zIndex: '3',\r\n                background: color,\r\n                opacity:'100%',\r\n                top:'-1%',\r\n                clipPath: \"polygon(0% 0%, 100% 100%, 100% 0%)\",\r\n                height: (1 - this.parameters.sustain_lev) * 100 + \"%\",\r\n                width: \"102%\",\r\n            };\r\n        },\r\n        sustain_head() {\r\n            return {\r\n                background: \"transparent\",\r\n            };\r\n        },\r\n\r\n        attack_dot() {\r\n            let color ='';\r\n            let borderColor='';\r\n            if(this.$props['is_volume']){ \r\n                color= this.colors.pink.dark\r\n                borderColor = this.colors.pink.glow\r\n                }\r\n            else {\r\n                color = this.colors.azure.dark\r\n                borderColor = this.colors.azure.glow\r\n            }\r\n            return {\r\n                border: '.1vw solid ' + borderColor,\r\n                background: color,\r\n                aspectRatio: \"1/1\",\r\n                height: \"7%\",\r\n                position: \"absolute\",\r\n                zIndex: \"4\",\r\n                borderRadius: \"50%\",\r\n                left: this.parameters.attack * 100 - 1 + \"%\",\r\n                top: \"-2%\",\r\n            };\r\n        },\r\n        decay_dot() {\r\n            let color ='';\r\n            let borderColor='';\r\n            if(this.$props['is_volume']){ \r\n                color= this.colors.pink.medium\r\n                borderColor = this.colors.pink.dark\r\n                }\r\n            else {\r\n                color = this.colors.azure.medium\r\n                borderColor = this.colors.azure.dark\r\n            }\r\n            return {\r\n                border: '.1vw solid ' + borderColor,\r\n                background: color,\r\n                aspectRatio: \"1/1\",\r\n                height: \"7%\",\r\n                position: \"absolute\",\r\n                zIndex: \"5\",\r\n                borderRadius: \"50%\",\r\n                left: (this.parameters.decay + this.parameters.attack) * 100 - .9 + \"%\",\r\n                top: (1 - this.parameters.sustain_lev) * 100 - 5 + \"%\",\r\n            };\r\n        },\r\n        release_dot() {\r\n            let color ='';\r\n            let borderColor='';\r\n            if(this.$props['is_volume']){ \r\n                color= this.colors.pink.glow\r\n                borderColor = this.colors.pink.dark\r\n                }\r\n            else {\r\n                color = this.colors.azure.glow\r\n                borderColor = this.colors.azure.dark\r\n            }\r\n            return {\r\n                border: '.1vw solid ' + borderColor,\r\n                opacity: '60%',\r\n                background: color,\r\n                aspectRatio: \"1/1\",\r\n                height: \"7%\",\r\n                position: \"absolute\",\r\n                zIndex: \"2\",\r\n                borderRadius: \"50%\",\r\n                left: (this.parameters.attack + this.parameters.decay + this.parameters.sustain + this.parameters.release) * 100 - 1 + \"%\",\r\n                top: \"95%\",\r\n            };\r\n        },\r\n        space() {\r\n            return {\r\n                background: \"transparent\",\r\n            };\r\n        },\r\n\r\n        attack_area() {\r\n            return {\r\n                background: \"transparent\",\r\n                aspectRatio: \"1/1\",\r\n                width: \"10%\",\r\n                position: \"absolute\",\r\n                zIndex: \"4\",\r\n                borderRadius: \"50%\",\r\n                left: this.parameters.attack * 100 - 5 + \"%\",\r\n            };\r\n        },\r\n        decay_area() {\r\n            return {\r\n                background: \"transparent\",\r\n                aspectRatio: \"1/1\",\r\n                width: \"10%\",\r\n                position: \"absolute\",\r\n                zIndex: \"4\",\r\n                borderRadius: \"50%\",\r\n                left: (this.parameters.decay + this.parameters.attack) * 100 - 5 + \"%\",\r\n                top: (1 - this.parameters.sustain_lev) * 100 - 20 + \"%\",\r\n            };\r\n        },\r\n        sustain_area() {\r\n            return {\r\n                background: \"transparent\",\r\n                aspectRatio: \"16/9\",\r\n                width: \"10%\",\r\n                position: \"absolute\",\r\n                zIndex: \"4\",\r\n                borderRadius: \"50%\",\r\n                left: (this.parameters.attack + this.parameters.decay + this.parameters.sustain) * 100 - 10 + \"%\",\r\n                top: (1 - this.parameters.sustain_lev) * 100 - 12 + \"%\",\r\n            };\r\n        },\r\n        release_area() {\r\n            return {\r\n                background: \"transparent\",\r\n                aspectRatio: \"1/1\",\r\n                width: \"7%\",\r\n                position: \"absolute\",\r\n                zIndex: \"4\",\r\n                borderRadius: \"50%\",\r\n                left: (this.parameters.attack + this.parameters.decay + this.parameters.sustain + this.parameters.release) * 100 - 5 + '%',\r\n                top: '80%'\r\n            };\r\n        },\r\n    }\r\n\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.envelope_container {\r\n    position: relative;\r\n    margin: 0.5vw 1vw 0.5vw 1vw;\r\n}\r\n\r\n.envelope {\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: transparent;\r\n    box-sizing: border-box;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
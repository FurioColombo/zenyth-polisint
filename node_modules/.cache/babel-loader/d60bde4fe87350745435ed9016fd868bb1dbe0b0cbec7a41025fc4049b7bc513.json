{"ast":null,"code":"import _classCallCheck from \"C:/Home/Projects/Programmazione/WebStorm/myZenythPolisinT/zenyth_polisint/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Home/Projects/Programmazione/WebStorm/myZenythPolisinT/zenyth_polisint/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"C:/Home/Projects/Programmazione/WebStorm/myZenythPolisinT/zenyth_polisint/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _get from \"C:/Home/Projects/Programmazione/WebStorm/myZenythPolisinT/zenyth_polisint/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"C:/Home/Projects/Programmazione/WebStorm/myZenythPolisinT/zenyth_polisint/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"C:/Home/Projects/Programmazione/WebStorm/myZenythPolisinT/zenyth_polisint/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Home/Projects/Programmazione/WebStorm/myZenythPolisinT/zenyth_polisint/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport { AmplitudeEnvelope } from \"../component/envelope/AmplitudeEnvelope\";\nimport { Envelope } from \"../component/envelope/Envelope\";\nimport { Filter } from \"../component/filter/Filter\";\nimport { omitFromObject, optionsFromArguments } from \"../core/util/Defaults\";\nimport { readOnly } from \"../core/util/Interface\";\nimport { Monophonic } from \"../instrument/Monophonic\";\nimport { OmniOscillator } from \"../source/oscillator/OmniOscillator\";\nimport { Source } from \"../source/Source\";\nimport { FrequencyEnvelope } from \"../component/envelope/FrequencyEnvelope\";\nimport { ToneAudioNode } from \"../core/context/ToneAudioNode\";\n/**\n * MonoSynth is composed of one `oscillator`, one `filter`, and two `envelopes`.\n * The amplitude of the Oscillator and the cutoff frequency of the\n * Filter are controlled by Envelopes.\n * <img src=\"https://docs.google.com/drawings/d/1gaY1DF9_Hzkodqf8JI1Cg2VZfwSElpFQfI94IQwad38/pub?w=924&h=240\">\n * @example\n * const synth = new Tone.MonoSynth({\n * \toscillator: {\n * \t\ttype: \"square\"\n * \t},\n * \tenvelope: {\n * \t\tattack: 0.1\n * \t}\n * }).toDestination();\n * synth.triggerAttackRelease(\"C4\", \"8n\");\n * @category Instrument\n */\nexport var MonoSynth = /*#__PURE__*/function (_Monophonic) {\n  _inherits(MonoSynth, _Monophonic);\n  var _super = _createSuper(MonoSynth);\n  function MonoSynth() {\n    var _this;\n    _classCallCheck(this, MonoSynth);\n    _this = _super.call(this, optionsFromArguments(MonoSynth.getDefaults(), arguments));\n    _this.name = \"MonoSynth\";\n    var options = optionsFromArguments(MonoSynth.getDefaults(), arguments);\n    _this.oscillator = new OmniOscillator(Object.assign(options.oscillator, {\n      context: _this.context,\n      detune: options.detune,\n      onstop: function onstop() {\n        return _this.onsilence(_assertThisInitialized(_this));\n      }\n    }));\n    _this.frequency = _this.oscillator.frequency;\n    _this.detune = _this.oscillator.detune;\n    _this.filter = new Filter(Object.assign(options.filter, {\n      context: _this.context\n    }));\n    _this.filterEnvelope = new FrequencyEnvelope(Object.assign(options.filterEnvelope, {\n      context: _this.context\n    }));\n    _this.envelope = new AmplitudeEnvelope(Object.assign(options.envelope, {\n      context: _this.context\n    }));\n    // connect the oscillators to the output\n    _this.oscillator.chain(_this.filter, _this.envelope, _this.output);\n    // connect the filter envelope\n    _this.filterEnvelope.connect(_this.filter.frequency);\n    readOnly(_assertThisInitialized(_this), [\"oscillator\", \"frequency\", \"detune\", \"filter\", \"filterEnvelope\", \"envelope\"]);\n    return _this;\n  }\n  _createClass(MonoSynth, [{\n    key: \"_triggerEnvelopeAttack\",\n    value:\n    /**\n     * start the attack portion of the envelope\n     * @param time the time the attack should start\n     * @param velocity the velocity of the note (0-1)\n     */\n    function _triggerEnvelopeAttack(time) {\n      var velocity = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n      this.envelope.triggerAttack(time, velocity);\n      this.filterEnvelope.triggerAttack(time);\n      this.oscillator.start(time);\n      if (this.envelope.sustain === 0) {\n        var computedAttack = this.toSeconds(this.envelope.attack);\n        var computedDecay = this.toSeconds(this.envelope.decay);\n        this.oscillator.stop(time + computedAttack + computedDecay);\n      }\n    }\n    /**\n     * start the release portion of the envelope\n     * @param time the time the release should start\n     */\n  }, {\n    key: \"_triggerEnvelopeRelease\",\n    value: function _triggerEnvelopeRelease(time) {\n      this.envelope.triggerRelease(time);\n      this.filterEnvelope.triggerRelease(time);\n      this.oscillator.stop(time + this.toSeconds(this.envelope.release));\n    }\n  }, {\n    key: \"getLevelAtTime\",\n    value: function getLevelAtTime(time) {\n      time = this.toSeconds(time);\n      return this.envelope.getValueAtTime(time);\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      _get(_getPrototypeOf(MonoSynth.prototype), \"dispose\", this).call(this);\n      this.oscillator.dispose();\n      this.envelope.dispose();\n      this.filterEnvelope.dispose();\n      this.filter.dispose();\n      return this;\n    }\n  }], [{\n    key: \"getDefaults\",\n    value: function getDefaults() {\n      return Object.assign(Monophonic.getDefaults(), {\n        envelope: Object.assign(omitFromObject(Envelope.getDefaults(), Object.keys(ToneAudioNode.getDefaults())), {\n          attack: 0.005,\n          decay: 0.1,\n          release: 1,\n          sustain: 0.9\n        }),\n        filter: Object.assign(omitFromObject(Filter.getDefaults(), Object.keys(ToneAudioNode.getDefaults())), {\n          Q: 1,\n          rolloff: -12,\n          type: \"lowpass\"\n        }),\n        filterEnvelope: Object.assign(omitFromObject(FrequencyEnvelope.getDefaults(), Object.keys(ToneAudioNode.getDefaults())), {\n          attack: 0.6,\n          baseFrequency: 200,\n          decay: 0.2,\n          exponent: 2,\n          octaves: 3,\n          release: 2,\n          sustain: 0.5\n        }),\n        oscillator: Object.assign(omitFromObject(OmniOscillator.getDefaults(), Object.keys(Source.getDefaults())), {\n          type: \"sawtooth\"\n        })\n      });\n    }\n  }]);\n  return MonoSynth;\n}(Monophonic);","map":{"version":3,"mappings":"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","names":["AmplitudeEnvelope","Envelope","Filter","omitFromObject","optionsFromArguments","readOnly","Monophonic","OmniOscillator","Source","FrequencyEnvelope","ToneAudioNode","MonoSynth","getDefaults","arguments","options","oscillator","Object","assign","context","detune","onstop","onsilence","frequency","filter","filterEnvelope","envelope","chain","output","connect","time","velocity","triggerAttack","start","sustain","computedAttack","toSeconds","attack","computedDecay","decay","stop","triggerRelease","release","getValueAtTime","dispose","keys","Q","rolloff","type","baseFrequency","exponent","octaves"],"sourceRoot":"","sources":["../../../Tone/instrument/MonoSynth.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.number.is-finite.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.array-buffer.slice.js\";\nimport \"core-js/modules/es.typed-array.float32-array.js\";\nimport \"core-js/modules/es.typed-array.at.js\";\nimport \"core-js/modules/es.typed-array.copy-within.js\";\nimport \"core-js/modules/es.typed-array.every.js\";\nimport \"core-js/modules/es.typed-array.fill.js\";\nimport \"core-js/modules/es.typed-array.filter.js\";\nimport \"core-js/modules/es.typed-array.find.js\";\nimport \"core-js/modules/es.typed-array.find-index.js\";\nimport \"core-js/modules/es.typed-array.find-last.js\";\nimport \"core-js/modules/es.typed-array.find-last-index.js\";\nimport \"core-js/modules/es.typed-array.for-each.js\";\nimport \"core-js/modules/es.typed-array.includes.js\";\nimport \"core-js/modules/es.typed-array.index-of.js\";\nimport \"core-js/modules/es.typed-array.iterator.js\";\nimport \"core-js/modules/es.typed-array.join.js\";\nimport \"core-js/modules/es.typed-array.last-index-of.js\";\nimport \"core-js/modules/es.typed-array.map.js\";\nimport \"core-js/modules/es.typed-array.reduce.js\";\nimport \"core-js/modules/es.typed-array.reduce-right.js\";\nimport \"core-js/modules/es.typed-array.reverse.js\";\nimport \"core-js/modules/es.typed-array.set.js\";\nimport \"core-js/modules/es.typed-array.slice.js\";\nimport \"core-js/modules/es.typed-array.some.js\";\nimport \"core-js/modules/es.typed-array.sort.js\";\nimport \"core-js/modules/es.typed-array.subarray.js\";\nimport \"core-js/modules/es.typed-array.to-locale-string.js\";\nimport \"core-js/modules/es.typed-array.to-string.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport { AutomationEventList } from 'automation-events';\nexport var createAudioParamFactory = function createAudioParamFactory(addAudioParamConnections, audioParamAudioNodeStore, audioParamStore, createAudioParamRenderer, createCancelAndHoldAutomationEvent, createCancelScheduledValuesAutomationEvent, createExponentialRampToValueAutomationEvent, createLinearRampToValueAutomationEvent, createSetTargetAutomationEvent, createSetValueAutomationEvent, createSetValueCurveAutomationEvent, nativeAudioContextConstructor, setValueAtTimeUntilPossible) {\n  return function (audioNode, isAudioParamOfOfflineAudioContext, nativeAudioParam) {\n    var maxValue = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n    var minValue = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;\n    var automationEventList = new AutomationEventList(nativeAudioParam.defaultValue);\n    var audioParamRenderer = isAudioParamOfOfflineAudioContext ? createAudioParamRenderer(automationEventList) : null;\n    var audioParam = {\n      get defaultValue() {\n        return nativeAudioParam.defaultValue;\n      },\n      get maxValue() {\n        return maxValue === null ? nativeAudioParam.maxValue : maxValue;\n      },\n      get minValue() {\n        return minValue === null ? nativeAudioParam.minValue : minValue;\n      },\n      get value() {\n        return nativeAudioParam.value;\n      },\n      set value(value) {\n        nativeAudioParam.value = value;\n        // Bug #98: Firefox & Safari do not yet treat the value setter like a call to setValueAtTime().\n        audioParam.setValueAtTime(value, audioNode.context.currentTime);\n      },\n      cancelAndHoldAtTime: function cancelAndHoldAtTime(cancelTime) {\n        // Bug #28: Firefox & Safari do not yet implement cancelAndHoldAtTime().\n        if (typeof nativeAudioParam.cancelAndHoldAtTime === 'function') {\n          if (audioParamRenderer === null) {\n            automationEventList.flush(audioNode.context.currentTime);\n          }\n          automationEventList.add(createCancelAndHoldAutomationEvent(cancelTime));\n          nativeAudioParam.cancelAndHoldAtTime(cancelTime);\n        } else {\n          var previousLastEvent = Array.from(automationEventList).pop();\n          if (audioParamRenderer === null) {\n            automationEventList.flush(audioNode.context.currentTime);\n          }\n          automationEventList.add(createCancelAndHoldAutomationEvent(cancelTime));\n          var currentLastEvent = Array.from(automationEventList).pop();\n          nativeAudioParam.cancelScheduledValues(cancelTime);\n          if (previousLastEvent !== currentLastEvent && currentLastEvent !== undefined) {\n            if (currentLastEvent.type === 'exponentialRampToValue') {\n              nativeAudioParam.exponentialRampToValueAtTime(currentLastEvent.value, currentLastEvent.endTime);\n            } else if (currentLastEvent.type === 'linearRampToValue') {\n              nativeAudioParam.linearRampToValueAtTime(currentLastEvent.value, currentLastEvent.endTime);\n            } else if (currentLastEvent.type === 'setValue') {\n              nativeAudioParam.setValueAtTime(currentLastEvent.value, currentLastEvent.startTime);\n            } else if (currentLastEvent.type === 'setValueCurve') {\n              nativeAudioParam.setValueCurveAtTime(currentLastEvent.values, currentLastEvent.startTime, currentLastEvent.duration);\n            }\n          }\n        }\n        return audioParam;\n      },\n      cancelScheduledValues: function cancelScheduledValues(cancelTime) {\n        if (audioParamRenderer === null) {\n          automationEventList.flush(audioNode.context.currentTime);\n        }\n        automationEventList.add(createCancelScheduledValuesAutomationEvent(cancelTime));\n        nativeAudioParam.cancelScheduledValues(cancelTime);\n        return audioParam;\n      },\n      exponentialRampToValueAtTime: function exponentialRampToValueAtTime(value, endTime) {\n        // Bug #45: Safari does not throw an error yet.\n        if (value === 0) {\n          throw new RangeError();\n        }\n        // Bug #187: Safari does not throw an error yet.\n        if (!Number.isFinite(endTime) || endTime < 0) {\n          throw new RangeError();\n        }\n        if (audioParamRenderer === null) {\n          automationEventList.flush(audioNode.context.currentTime);\n        }\n        automationEventList.add(createExponentialRampToValueAutomationEvent(value, endTime));\n        nativeAudioParam.exponentialRampToValueAtTime(value, endTime);\n        return audioParam;\n      },\n      linearRampToValueAtTime: function linearRampToValueAtTime(value, endTime) {\n        if (audioParamRenderer === null) {\n          automationEventList.flush(audioNode.context.currentTime);\n        }\n        automationEventList.add(createLinearRampToValueAutomationEvent(value, endTime));\n        nativeAudioParam.linearRampToValueAtTime(value, endTime);\n        return audioParam;\n      },\n      setTargetAtTime: function setTargetAtTime(target, startTime, timeConstant) {\n        if (audioParamRenderer === null) {\n          automationEventList.flush(audioNode.context.currentTime);\n        }\n        automationEventList.add(createSetTargetAutomationEvent(target, startTime, timeConstant));\n        nativeAudioParam.setTargetAtTime(target, startTime, timeConstant);\n        return audioParam;\n      },\n      setValueAtTime: function setValueAtTime(value, startTime) {\n        if (audioParamRenderer === null) {\n          automationEventList.flush(audioNode.context.currentTime);\n        }\n        automationEventList.add(createSetValueAutomationEvent(value, startTime));\n        nativeAudioParam.setValueAtTime(value, startTime);\n        return audioParam;\n      },\n      setValueCurveAtTime: function setValueCurveAtTime(values, startTime, duration) {\n        // Bug 183: Safari only accepts a Float32Array.\n        var convertedValues = values instanceof Float32Array ? values : new Float32Array(values);\n        /*\n         * Bug #152: Safari does not correctly interpolate the values of the curve.\n         * @todo Unfortunately there is no way to test for this behavior in a synchronous fashion which is why testing for the\n         * existence of the webkitAudioContext is used as a workaround here.\n         */\n        if (nativeAudioContextConstructor !== null && nativeAudioContextConstructor.name === 'webkitAudioContext') {\n          var endTime = startTime + duration;\n          var sampleRate = audioNode.context.sampleRate;\n          var firstSample = Math.ceil(startTime * sampleRate);\n          var lastSample = Math.floor(endTime * sampleRate);\n          var numberOfInterpolatedValues = lastSample - firstSample;\n          var interpolatedValues = new Float32Array(numberOfInterpolatedValues);\n          for (var i = 0; i < numberOfInterpolatedValues; i += 1) {\n            var theoreticIndex = (convertedValues.length - 1) / duration * ((firstSample + i) / sampleRate - startTime);\n            var lowerIndex = Math.floor(theoreticIndex);\n            var upperIndex = Math.ceil(theoreticIndex);\n            interpolatedValues[i] = lowerIndex === upperIndex ? convertedValues[lowerIndex] : (1 - (theoreticIndex - lowerIndex)) * convertedValues[lowerIndex] + (1 - (upperIndex - theoreticIndex)) * convertedValues[upperIndex];\n          }\n          if (audioParamRenderer === null) {\n            automationEventList.flush(audioNode.context.currentTime);\n          }\n          automationEventList.add(createSetValueCurveAutomationEvent(interpolatedValues, startTime, duration));\n          nativeAudioParam.setValueCurveAtTime(interpolatedValues, startTime, duration);\n          var timeOfLastSample = lastSample / sampleRate;\n          if (timeOfLastSample < endTime) {\n            setValueAtTimeUntilPossible(audioParam, interpolatedValues[interpolatedValues.length - 1], timeOfLastSample);\n          }\n          setValueAtTimeUntilPossible(audioParam, convertedValues[convertedValues.length - 1], endTime);\n        } else {\n          if (audioParamRenderer === null) {\n            automationEventList.flush(audioNode.context.currentTime);\n          }\n          automationEventList.add(createSetValueCurveAutomationEvent(convertedValues, startTime, duration));\n          nativeAudioParam.setValueCurveAtTime(convertedValues, startTime, duration);\n        }\n        return audioParam;\n      }\n    };\n    audioParamStore.set(audioParam, nativeAudioParam);\n    audioParamAudioNodeStore.set(audioParam, audioNode);\n    addAudioParamConnections(audioParam, audioParamRenderer);\n    return audioParam;\n  };\n};","map":{"version":3,"mappings":"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","names":["AutomationEventList","createAudioParamFactory","addAudioParamConnections","audioParamAudioNodeStore","audioParamStore","createAudioParamRenderer","createCancelAndHoldAutomationEvent","createCancelScheduledValuesAutomationEvent","createExponentialRampToValueAutomationEvent","createLinearRampToValueAutomationEvent","createSetTargetAutomationEvent","createSetValueAutomationEvent","createSetValueCurveAutomationEvent","nativeAudioContextConstructor","setValueAtTimeUntilPossible","audioNode","isAudioParamOfOfflineAudioContext","nativeAudioParam","maxValue","minValue","automationEventList","defaultValue","audioParamRenderer","audioParam","value","setValueAtTime","context","currentTime","cancelAndHoldAtTime","cancelTime","flush","add","previousLastEvent","Array","from","pop","currentLastEvent","cancelScheduledValues","undefined","type","exponentialRampToValueAtTime","endTime","linearRampToValueAtTime","startTime","setValueCurveAtTime","values","duration","RangeError","Number","isFinite","setTargetAtTime","target","timeConstant","convertedValues","Float32Array","name","sampleRate","firstSample","Math","ceil","lastSample","floor","numberOfInterpolatedValues","interpolatedValues","i","theoreticIndex","length","lowerIndex","upperIndex","timeOfLastSample","set"],"sourceRoot":"","sources":["../../../src/factories/audio-param-factory.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module","externalDependencies":[]}
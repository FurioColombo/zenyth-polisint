{"ast":null,"code":"import _createForOfIteratorHelper from \"C:/Home/Projects/Programmazione/WebStorm/myZenythPolisinT/zenyth_polisint/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport \"core-js/modules/es.map.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nexport var visitEachAudioNodeOnce = function visitEachAudioNodeOnce(cycles, visitor) {\n  var counts = new Map();\n  var _iterator = _createForOfIteratorHelper(cycles),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var cycle = _step.value;\n      var _iterator2 = _createForOfIteratorHelper(cycle),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var audioNode = _step2.value;\n          var count = counts.get(audioNode);\n          counts.set(audioNode, count === undefined ? 1 : count + 1);\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  counts.forEach(function (count, audioNode) {\n    return visitor(audioNode, count);\n  });\n};","map":{"version":3,"mappings":";;;;;;;AAGA,OAAO,IAAMA,sBAAsB,GAAG,SAAzBA,sBAAsB,CAC/BC,MAAyB,EACzBC,OAA0D,EACpD;EACN,IAAMC,MAAM,GAAG,IAAIC,GAAG,EAAyB;EAAC,2CAE5BH,MAAM;IAAA;EAAA;IAA1B,oDAA4B;MAAA,IAAjBI,KAAK;MAAA,4CACYA,KAAK;QAAA;MAAA;QAA7B,uDAA+B;UAAA,IAApBC,SAAS;UAChB,IAAMC,KAAK,GAAGJ,MAAM,CAACK,GAAG,CAACF,SAAS,CAAC;UAEnCH,MAAM,CAACM,GAAG,CAACH,SAAS,EAAEC,KAAK,KAAKG,SAAS,GAAG,CAAC,GAAGH,KAAK,GAAG,CAAC,CAAC;;MAC7D;QAAA;MAAA;QAAA;MAAA;;EACJ;IAAA;EAAA;IAAA;EAAA;EAEDJ,MAAM,CAACQ,OAAO,CAAC,UAACJ,KAAK,EAAED,SAAS;IAAA,OAAKJ,OAAO,CAACI,SAAS,EAAEC,KAAK,CAAC;EAAA,EAAC;AACnE,CAAC","names":["visitEachAudioNodeOnce","cycles","visitor","counts","Map","cycle","audioNode","count","get","set","undefined","forEach"],"sourceRoot":"","sources":["../../../src/helpers/visit-each-audio-node-once.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, normalizeStyle as _normalizeStyle, createElementVNode as _createElementVNode, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock, Fragment as _Fragment, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nimport _imports_0 from '@/icons/sine.svg';\nimport _imports_1 from '@/icons/triangle.svg';\nimport _imports_2 from '@/icons/saw.svg';\nimport _imports_3 from '@/icons/square.svg';\nconst _withScopeId = n => (_pushScopeId(\"data-v-6eb7f7e6\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"osc\"\n};\nconst _hoisted_2 = {\n  class: \"osc_back\"\n};\nconst _hoisted_3 = {\n  class: \"osc_middle\"\n};\nconst _hoisted_4 = {\n  class: \"osc_front\"\n};\nconst _hoisted_5 = [\"textContent\"];\nconst _hoisted_6 = [\"textContent\"];\nconst _hoisted_7 = [\"textContent\"];\nconst _hoisted_8 = {\n  key: 0,\n  src: _imports_0,\n  alt: \"\",\n  draggable: \"false\"\n};\nconst _hoisted_9 = {\n  key: 1,\n  src: _imports_1,\n  alt: \"\",\n  draggable: \"false\"\n};\nconst _hoisted_10 = {\n  key: 2,\n  src: _imports_2,\n  alt: \"\",\n  draggable: \"false\"\n};\nconst _hoisted_11 = {\n  key: 3,\n  src: _imports_3,\n  alt: \"\",\n  draggable: \"false\"\n};\nconst _hoisted_12 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", null, null, -1 /* HOISTED */));\nconst _hoisted_13 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", null, null, -1 /* HOISTED */));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\" PLEASE DON'T GO CRAZY TRYING UNDERSTAND THIS DIVs LAYER STACKS XD, Look into OSC MIDDLE\"), _createCommentVNode(\" IN \\\"osc_middle\\\" there are the movable circle slider crowns : : 'mod_slider' / 'volume_slider' \"), _createElementVNode(\"div\", {\n    class: \"main_container\",\n    onClick: _cache[26] || (_cache[26] = _withModifiers((...args) => $options.dispose && $options.dispose(...args), [\"shift\"]))\n  }, [_createElementVNode(\"div\", {\n    class: \"type_button\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.nextOscType && $options.nextOscType(...args)),\n    style: _normalizeStyle(this.type_button)\n  }, [_createElementVNode(\"div\", {\n    class: \"innertext\",\n    style: _normalizeStyle(this.type_text)\n  }, _toDisplayString($data.osc_types[true] === \"\" ? 'std' : $data.osc_types[this.oscTypeIndex]), 5 /* TEXT, STYLE */)], 4 /* STYLE */), _createCommentVNode(\" DO NOT TOUCH EVER AGAIN HTML STRUCTURE / CSS !!!!!!!!!!!!\"), _createElementVNode(\"div\", {\n    class: \"osc_container\",\n    style: _normalizeStyle($options.osc_container)\n  }, [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", {\n    class: \"mod_area\",\n    style: _normalizeStyle(this.mod_area)\n  }, null, 4 /* STYLE */), _createElementVNode(\"div\", {\n    class: \"volume_area\",\n    style: _normalizeStyle(this.volume_area)\n  }, null, 4 /* STYLE */), _createElementVNode(\"div\", {\n    class: \"pitch_slider\",\n    style: _normalizeStyle(this.pitch_slider)\n  }, null, 4 /* STYLE */)]), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", {\n    class: \"mod_slider\",\n    ref: \"modulation\",\n    style: _normalizeStyle(this.mod_slider)\n  }, null, 4 /* STYLE */), _createElementVNode(\"div\", {\n    class: \"volume_slider\",\n    ref: \"volume\",\n    style: _normalizeStyle(this.volume_slider)\n  }, null, 4 /* STYLE */)]), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", {\n    class: \"pitch_area\",\n    style: _normalizeStyle(this.pitch_area)\n  }, null, 4 /* STYLE */), _createElementVNode(\"div\", {\n    class: \"pitch_hand\",\n    ref: \"pitch\",\n    style: _normalizeStyle(this.pitch_hand)\n  }, null, 4 /* STYLE */), _createElementVNode(\"div\", {\n    class: \"lineL\",\n    style: _normalizeStyle(this.lineL)\n  }, null, 4 /* STYLE */), _createElementVNode(\"div\", {\n    class: \"lineU\",\n    style: _normalizeStyle(this.lineU)\n  }, null, 4 /* STYLE */), _createElementVNode(\"div\", {\n    class: \"lineR\",\n    style: _normalizeStyle(this.lineR)\n  }, null, 4 /* STYLE */)]), _createElementVNode(\"div\", {\n    class: \"draggable left\",\n    onDragenter: [_cache[2] || (_cache[2] = $event => $options.handleDragEnter('mod')), _cache[4] || (_cache[4] = _withModifiers(() => {}, [\"prevent\"]))],\n    onDragleave: _cache[3] || (_cache[3] = $event => $options.handleDragLeave('mod')),\n    onDragover: _cache[5] || (_cache[5] = _withModifiers(() => {}, [\"prevent\"])),\n    onDrop: _cache[6] || (_cache[6] = $event => $options.handleDrop($event, 'mod')),\n    onMousedown: _cache[7] || (_cache[7] = (...args) => $options.modulationDown && $options.modulationDown(...args))\n  }, [_createElementVNode(\"div\", {\n    class: \"modDot\",\n    style: _normalizeStyle($options.computedModulation('mod')),\n    onClick: _cache[1] || (_cache[1] = _withModifiers($event => $options.unlinkMod('mod'), [\"shift\", \"stop\"])),\n    textContent: _toDisplayString($options.computedModText('mod'))\n  }, null, 12 /* STYLE, PROPS */, _hoisted_5)], 32 /* HYDRATE_EVENTS */), _createElementVNode(\"div\", {\n    class: \"draggable right\",\n    onDragenter: [_cache[9] || (_cache[9] = $event => $options.handleDragEnter('vol')), _cache[11] || (_cache[11] = _withModifiers(() => {}, [\"prevent\"]))],\n    onDragleave: _cache[10] || (_cache[10] = $event => $options.handleDragLeave('vol')),\n    onDragover: _cache[12] || (_cache[12] = _withModifiers(() => {}, [\"prevent\"])),\n    onDrop: _cache[13] || (_cache[13] = $event => $options.handleDrop($event, 'vol')),\n    onMousedown: _cache[14] || (_cache[14] = (...args) => $options.volumeDown && $options.volumeDown(...args))\n  }, [_createElementVNode(\"div\", {\n    class: \"modDot\",\n    style: _normalizeStyle($options.computedModulation('vol')),\n    onClick: _cache[8] || (_cache[8] = _withModifiers($event => $options.unlinkMod('vol'), [\"shift\", \"stop\"])),\n    textContent: _toDisplayString($options.computedModText('vol'))\n  }, null, 12 /* STYLE, PROPS */, _hoisted_6)], 32 /* HYDRATE_EVENTS */), _createElementVNode(\"div\", {\n    class: \"draggable low\",\n    onDragenter: [_cache[16] || (_cache[16] = $event => $options.handleDragEnter('pitch')), _cache[18] || (_cache[18] = _withModifiers(() => {}, [\"prevent\"]))],\n    onDragleave: _cache[17] || (_cache[17] = $event => $options.handleDragLeave('pitch')),\n    onDragover: _cache[19] || (_cache[19] = _withModifiers(() => {}, [\"prevent\"])),\n    onDrop: _cache[20] || (_cache[20] = $event => $options.handleDrop($event, 'pitch')),\n    onMousedown: _cache[21] || (_cache[21] = (...args) => $options.pitchDown && $options.pitchDown(...args))\n  }, [_createElementVNode(\"div\", {\n    class: \"modDot\",\n    style: _normalizeStyle($options.computedModulation('pitch')),\n    onClick: _cache[15] || (_cache[15] = _withModifiers($event => $options.unlinkMod('pitch'), [\"shift\", \"stop\"])),\n    textContent: _toDisplayString($options.computedModText('pitch'))\n  }, null, 12 /* STYLE, PROPS */, _hoisted_7)], 32 /* HYDRATE_EVENTS */), _createElementVNode(\"div\", {\n    class: \"osc_wave\",\n    onClick: _cache[22] || (_cache[22] = (...args) => $options.nextWaveform && $options.nextWaveform(...args)),\n    style: _normalizeStyle(this.osc_wave)\n  }, [this.oscWaveIndex === 0 ? (_openBlock(), _createElementBlock(\"img\", _hoisted_8)) : _createCommentVNode(\"v-if\", true), this.oscWaveIndex === 1 ? (_openBlock(), _createElementBlock(\"img\", _hoisted_9)) : _createCommentVNode(\"v-if\", true), this.oscWaveIndex === 2 ? (_openBlock(), _createElementBlock(\"img\", _hoisted_10)) : _createCommentVNode(\"v-if\", true), this.oscWaveIndex === 3 ? (_openBlock(), _createElementBlock(\"img\", _hoisted_11)) : _createCommentVNode(\"v-if\", true)], 4 /* STYLE */)])], 4 /* STYLE */), _createElementVNode(\"div\", {\n    class: \"chain_buttons\",\n    style: _normalizeStyle($options.chain_buttons)\n  }, [_hoisted_12, _createElementVNode(\"div\", {\n    class: \"button_1\",\n    style: _normalizeStyle($options.button_1),\n    onClick: _cache[23] || (_cache[23] = $event => this.onChainclick(0))\n  }, null, 4 /* STYLE */), _createElementVNode(\"div\", {\n    class: \"button_2\",\n    style: _normalizeStyle($options.button_2),\n    onClick: _cache[24] || (_cache[24] = $event => this.onChainclick(1))\n  }, null, 4 /* STYLE */), _createElementVNode(\"div\", {\n    class: \"button_3\",\n    style: _normalizeStyle($options.button_3),\n    onClick: _cache[25] || (_cache[25] = $event => this.onChainclick(2))\n  }, null, 4 /* STYLE */), _hoisted_13], 4 /* STYLE */)])], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */);\n}","map":{"version":3,"mappings":"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","names":["_imports_0","_imports_1","_imports_2","_imports_3","class","src","alt","draggable","_createElementVNode","_createCommentVNode","onClick","$options","style","type_button","type_text","$data","oscTypeIndex","_hoisted_1","_hoisted_2","mod_area","volume_area","pitch_slider","_hoisted_3","ref","mod_slider","volume_slider","_hoisted_4","pitch_area","pitch_hand","lineL","lineU","lineR","onDragenter","onDragleave","onDragover","onDrop","$event","onMousedown","_toDisplayString","osc_wave","oscWaveIndex","_createElementBlock","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","onChainclick","_hoisted_13"],"sourceRoot":"","sources":["/Users/guglielmofratticioli/Documents/POLIMI/FurioColombo.github.io/src/views/Synth/Oscillators/Osc.vue"],"sourcesContent":["<template>\n  <!-- PLEASE DON'T GO CRAZY TRYING UNDERSTAND THIS DIVs LAYER STACKS XD, Look into OSC MIDDLE-->\n  <!-- IN \"osc_middle\" there are the movable circle slider crowns : : 'mod_slider' / 'volume_slider' -->\n  <div class=\"main_container\" @click.shift=\"dispose\">\n    <div class=\"type_button\" @click=\"nextOscType\" :style=\"this.type_button\">\n      <div class=\"innertext\" :style=\"this.type_text\">{{\n        osc_types[true] === \"\" ? 'std' : osc_types[this.oscTypeIndex]\n      }}\n      </div>\n    </div>\n    <!-- DO NOT TOUCH EVER AGAIN HTML STRUCTURE / CSS !!!!!!!!!!!!-->\n    <div class=\"osc_container\" :style=\"osc_container\">\n      <div class=\"osc\">\n        <div class=\"osc_back\">\n          <div class=\"mod_area\" :style=\"this.mod_area\"></div>\n          <div class=\"volume_area\" :style=\"this.volume_area\"></div>\n          <div class=\"pitch_slider\" :style=\"this.pitch_slider\"></div>\n        </div>\n        <div class=\"osc_middle\">\n\n          <div class=\"mod_slider\" ref=\"modulation\" :style=\"this.mod_slider\"></div>\n          <div class=\"volume_slider\" ref=\"volume\" :style=\"this.volume_slider\"></div>\n        </div>\n        <div class=\"osc_front\">\n          <div class=\"pitch_area\" :style=\"this.pitch_area\"></div>\n          <div class=\"pitch_hand\" ref=\"pitch\" :style=\"this.pitch_hand\"></div>\n          <div class=\"lineL\" :style=\"this.lineL\"></div>\n          <div class=\"lineU\" :style=\"this.lineU\"></div>\n          <div class=\"lineR\" :style=\"this.lineR\"></div>\n        </div>\n        <div class=\"draggable left\" @dragenter=\"handleDragEnter('mod')\" @dragleave=\"handleDragLeave('mod')\"\n          @dragenter.prevent @dragover.prevent @drop=\"handleDrop($event, 'mod')\" @mousedown=\"modulationDown\">\n          <div class=\"modDot\" :style=\"computedModulation('mod')\" @click.shift.stop=\"unlinkMod('mod')\"\n            v-text=\"computedModText('mod')\"></div>\n        </div>\n        <div class=\"draggable right\" @dragenter=\"handleDragEnter('vol')\" @dragleave=\"handleDragLeave('vol')\"\n          @dragenter.prevent @dragover.prevent @drop=\"handleDrop($event, 'vol')\" @mousedown=\"volumeDown\">\n          <div class=\"modDot\" :style=\"computedModulation('vol')\" @click.shift.stop=\"unlinkMod('vol')\"\n            v-text=\"computedModText('vol')\"></div>\n        </div>\n        <div class=\"draggable low\" @dragenter=\"handleDragEnter('pitch')\" @dragleave=\"handleDragLeave('pitch')\"\n          @dragenter.prevent @dragover.prevent @drop=\"handleDrop($event, 'pitch')\" @mousedown=\"pitchDown\">\n          <div class=\"modDot\" :style=\"computedModulation('pitch')\" @click.shift.stop=\"unlinkMod('pitch')\"\n            v-text=\"computedModText('pitch')\"></div>\n        </div>\n        <div class=\"osc_wave\" @click=\"nextWaveform\" :style=\"this.osc_wave\">\n          <img v-if=\"this.oscWaveIndex === 0\" src=\"@/icons/sine.svg\" alt=\"\" draggable=\"false\">\n          <img v-if=\"this.oscWaveIndex === 1\" src=\"@/icons/triangle.svg\" alt=\"\" draggable=\"false\">\n          <img v-if=\"this.oscWaveIndex === 2\" src=\"@/icons/saw.svg\" alt=\"\" draggable=\"false\">\n          <img v-if=\"this.oscWaveIndex === 3\" src=\"@/icons/square.svg\" alt=\"\" draggable=\"false\">\n        </div>\n      </div>\n    </div>\n    <div class=\"chain_buttons\" :style=\"chain_buttons\">\n      <div></div>\n      <div class=\"button_1\" :style=\"button_1\" @click=\"this.onChainclick(0)\"></div>\n      <div class=\"button_2\" :style=\"button_2\" @click=\"this.onChainclick(1)\"></div>\n      <div class=\"button_3\" :style=\"button_3\" @click=\"this.onChainclick(2)\"></div>\n      <div></div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport * as Tone from \"tone\";\nimport SineIcon from \"vue-material-design-icons/SineWave\";\nimport SquareIcon from \"vue-material-design-icons/SquareWave\";\nimport TriangleIcon from \"vue-material-design-icons/TriangleWave\";\nimport SawtoothIcon from \"vue-material-design-icons/SawtoothWave\";\nimport {gainToDb} from \"tone\";\nimport MyPolySynth from \"./MyPolySynth.js\";\n\nconst wave_types = [\"sine\", \"triangle\", \"sawtooth\", \"square\"];\nconst osc_types = [\"\", \"fm\", \"am\", \"fat\"];\n\nexport default {\n  components: {\n    SineIcon,\n    SquareIcon,\n    TriangleIcon,\n    SawtoothIcon,\n  },\n\n  data() {\n    return {\n      // todo: UPDATE ALL COLOR DEPENDING ON THIS:\n      color: {\n        vol: this.colors.pink,\n        mod: this.colors.azure,\n        pitch: this.colors.green\n      },\n\n\n      // waveform_btn_style: osc_background_colors[0], todo: colors?\n      osc_types: [\"std\", \"fm\", \"am\", \"fat\"],\n      volume: 0.5,\n      modulation: 1,\n      pitch: 0,\n      pan: 0,\n      attack: 0.01,\n      decay: 0.1,\n      sustain: 1,\n      release: 0.2,\n      maxPitch: 24,\n      minPitch: -24,\n      partials: \"\",\n      oscWaveIndex: 0, // wave currently selected from  ['sine','triangle', ...]\n      oscTypeIndex: 0, // type of osc selected from ['std', 'fm', ...];\n      waveform_btn_style: \"lightblue\",\n      wave_icon_size: 32,\n      is_modulationDown: false,\n      is_volumeDown: false,\n      is_pitchDown: false,\n      isFilterChainRouteActive: [true, false, false],\n      modulators: {\n        vol: null,\n        mod: null,\n        pitch: null\n      },\n    };\n  },\n  props: [\"id\"],\n\n  mounted() {\n    document.addEventListener(\"mousemove\", this.onMouseMove);\n    document.addEventListener(\"mouseup\", this.onMouseUp);\n    window.addEventListener(\"resize\", this.resizeGraphics);\n\n    // resize graphics\n    this.resizeGraphics();\n    this.gainNode = new Tone.Gain();\n    console.log(this.polyphonyVoices)\n    this.synth = new MyPolySynth(\"\", this.gainNode, this.polyphonyVoices);\n    this.synth.setParameters({ volume: gainToDb(1 - this.volume) });\n\n    this.synths.list.push(this.synth)\n    //console.log(this.synths.list)\n    // we need to init connection to first filter chain\n    // in the first osc case we need to make sure we connect after the chain is created , so we handle that with events\n    // emitted from the filter chain - in all other cases we can just normally connect to the chain\n    if (this.id > 1) {\n      this.initConnections()\n    }\n    //communicate to parent that a new osc has been created (to update volEnvelope from ModHost)\n    this.$emit(\"newOsc\")\n\n  },\n\n  computed: {\n\n    osc_container() {\n      return {\n        background: '#f8e7e6'\n      }\n    },\n    /*------------ TYPE BUTTON ------------*/\n    type_button() {\n      return {\n        fontSize: '.5vw',\n        background: this.colors.pink.glow\n      }\n    },\n    type_text() {\n      return {\n        color: this.colors.gray.dark\n      }\n    },\n    /*--------------- OSC -----------------*/\n    volume_area() {\n      return {\n        background: this.colors.pink.dark\n      }\n    },\n    mod_area() {\n      return {\n        background: this.colors.azure.medium\n      }\n    },\n    pitch_area() {\n      return {\n        background: this.colors.green.glow\n      }\n    },\n    mod_slider() {\n      return {\n        transform: \"rotate(-\" + this.modulation * 111 + \"deg)\",\n        background: 'white',\n        opacity: '60%'\n      }\n    },\n    volume_slider() {\n      return {\n        backgroundColor: 'white',\n        opacity: '60%',\n        transform: \"rotate(\" + this.volume * 112 + \"deg)\",\n      }\n    },\n    pitch_slider() {\n      return {\n        background: this.colors.green.medium\n      }\n    },\n    pitch_hand() {\n      return {\n        transform: \"rotate(\" + (this.pitch * 50) / this.maxPitch + \"deg)\",\n        borderLeft: \".1vw solid \" + this.colors.green.dark\n      }\n    },\n    osc_wave() {\n      return {\n        border: '.1vw solid ' + this.colors.green.dark,\n        background: this.colors.green.glow\n      }\n    },\n    lineL() {\n      return {\n        transform: \"rotate(66deg)\",\n        borderLeft: \".1vw solid \" + this.colors.green.dark\n      }\n    },\n    lineU() {\n      return {\n        transform: \"rotate(-66deg)\",\n        borderLeft: \".1vw solid \" + this.colors.green.dark\n      }\n    },\n    lineR() {\n      return {\n        transform: \"rotate(180deg)\",\n        borderLeft: \".1vw solid \" + this.colors.green.dark\n      }\n    },\n    /*------------ CHAIN BUTTONS ------------*/\n    chain_buttons() {\n      return {\n        background: this.colors.pink.glow\n      }\n    },\n    button_1() {\n      let color = ''\n      if (this.isFilterChainRouteActive[0])\n        color = this.colors.purple.light\n      else {\n        color = this.colors.pink.glow\n      }\n      return {\n        background: color, \n        border: '.1vw solid ' + this.colors.gray.dark \n      }\n    },\n    button_2() {\n      let color = ''\n      if (this.isFilterChainRouteActive[1])\n        color = this.colors.green.medium\n      else {\n        color = this.colors.pink.glow\n      }\n      return {\n        background: color, \n        border: '.1vw solid ' + this.colors.gray.dark \n      }\n    },\n    button_3() {\n      let color = ''\n      if (this.isFilterChainRouteActive[2])\n        color = this.colors.pink.light\n      else {\n        color = this.colors.pink.glow\n      }\n      return {\n        background: color, \n        border: '.1vw solid ' + this.colors.gray.dark \n      }\n    },\n  },\n\n  methods: {\n\n    //--------DRAG AND DROP METHODS--------\n    handleDrop(event, target) {\n      if (this.modulators[target] === null) {\n        let data = JSON.parse(event.dataTransfer.getData(\"data\"));\n        //if i'm not trying to link an evelope to volume\n        if (!(target === 'vol' && data.type === 'envelope')) {\n          //console.log(\"Dropping on \" + target)\n          //console.log(data)\n          this.modulators[target] = {color: data.color, id: data.id, type: data.type}\n          document.dispatchEvent(new CustomEvent(\"link\", {\n                detail: {\n                  object: this.synth,\n                  target: target,\n                  color: this.color[target][\"medium\"],\n                  modulator: {type: this.modulators[target].type, id: this.modulators[target].id}\n                }\n              }\n          ))\n        }\n      }\n\n    },\n    handleDragEnter(target) {\n      //todo: highlight object when dragging on it\n      //console.log(\"Dragging over \" + target)\n    },\n    handleDragLeave(target) {\n      //console.log(\"Dragging out of \" + target)\n    },\n    unlinkMod(target) {\n      //todo: CALL BACK ENVELOPS TO UNLINK\n      document.dispatchEvent(new CustomEvent(\"unLink\", {\n            detail: {\n              object: this.synth,\n              target: target,\n              modulator: {type: this.modulators[target].type, id: this.modulators[target].id}\n            }\n          }\n      ))\n\n      //re-hide link dot\n      this.modulators[target] = null;\n\n    },\n    //--------DRAG AND DROP STYLING--------\n    computedModulation(target) {\n      switch (target) {\n        case \"vol\":\n          if (this.modulators[target]) {\n            return {\n              width: \"1vw\",\n              height: \"1vw\",\n              borderRadius: \"50%\",\n              backgroundColor: this.modulators[target].color,\n              position: \"absolute\",\n              right: \"0%\",\n            };\n          } else {\n            return {\n              display: \"none\",\n              width: \"0%\",\n              height: \"0%\",\n            }\n          }\n\n        case \"mod\":\n          if (this.modulators[target]) {\n            return {\n              width: \"1vw\",\n              height: \"1vw\",\n              borderRadius: \"50%\",\n              backgroundColor: this.modulators[target].color,\n              position: \"absolute\",\n            };\n          } else {\n            return {\n              display: \"none\",\n              width: \"0%\",\n              height: \"0%\",\n            }\n          }\n        case \"pitch\":\n          if (this.modulators[target]) {\n            return {\n              width: \"1vw\",\n              height: \"1vw\",\n              borderRadius: \"50%\",\n              backgroundColor: this.modulators[target].color,\n              position: \"absolute\",\n              left: \"0%\",\n              bottom: \"0%\"\n            };\n          } else {\n            return {\n              display: \"none\",\n              width: \"0%\",\n              height: \"0%\",\n            }\n          }\n      }\n    },\n    computedModText(target) {\n      if (this.modulators[target]) {\n        return this.modulators[target].id\n      } else return \"\";\n    },\n\n\n\n    //-----------------\n    dispose() {\n      //unlink linked modulators\n      for (let key in this.modulators) {\n        if (this.modulators[key])\n          this.unlinkMod(key)\n      }\n\n      this.$emit(\"disposed\", this.id)\n      this.synth.disconnectDispose()\n      this.synths.list.splice(this.synths.list.indexOf(this.synth), 1)\n\n\n      //console.log(\"Synth to remove is at index: \" + this.synths.list.indexOf(this.synth))\n      //console.log(\"list of synths remaining:\")\n      //console.log(this.synths.list)\n    },\n    initConnections() {\n      this.gainNode.connect(this.filterChains[0][0].getToneFilter())\n    },\n\n    // ----------- GRAPHIC HELPERS -----------\n    resizeGraphics() {\n      let width = document.body.clientWidth;\n      if (width >= 500) {\n        this.wave_icon_size = (32 * width) / 1500;\n      } else {\n        this.wave_icon_size = 0;\n      }\n    },\n\n    // ---------- USER EVENTS ---------------\n    // Audio routing changed clicking the dots that represent the filter chains\n    onChainclick(id) {\n      //console.log(\"chain click - id: \" + id);\n      try {\n        if (this.isFilterChainRouteActive[id]) {\n          /*\n          console.log(\n              \"disconnect from: \" +\n              this.filterChains[id][0] + \" \" + id\n          );\n          */\n          this.gainNode.disconnect(\n              this.filterChains[id][0].getToneFilter()\n          );\n        } else {\n          /*\n          console.log(\n            \"connect to: \" +\n            this.filterChains[id][0] + \" \" + id\n          );\n          */\n          this.gainNode.connect(\n              this.filterChains[id][0].getToneFilter()\n          );\n        }\n      } catch (e) {\n        console.log(\n          \"error: \" + e + \"\\nCHAIN CONNECTION TO OSC UNSUCCESSFUL. Can't connect to \" + this.filterChains[id][0]\n        );\n      }\n      this.isFilterChainRouteActive[id] = !this.isFilterChainRouteActive[id];\n    },\n\n    onMouseMove(event) {\n      if (this.is_volumeDown) {\n        // RIGHT FADER - volume\n        if (event.movementY < 0) {\n          // Mouse is moving up\n          this.volume = Math.max(this.volume + event.movementY / 100, 0);\n        } else {\n          // Mouse is moving down\n          this.volume = Math.min(this.volume + event.movementY / 100, 1);\n        }\n        // -------------- modify here synth audio ----------------\n        // this.synth.volume.value = gainToDb(1 - this.volume);\n        this.synth.setParameters({ volume: gainToDb(1 - this.volume) });\n        //console.log(\"synth volume: \" + this.volume.toFixed(2) + \" dB\");\n      } else if (this.is_modulationDown) {\n        // LEFT FADER - modulation\n        if (event.movementY < 0) {\n          // Mouse is moving down\n          this.modulation = Math.max(this.modulation + event.movementY / 100, 0);\n        } else {\n          // Mouse is moving up\n          this.modulation = Math.min(this.modulation + event.movementY / 100, 1);\n        }\n        // -------------- modify here synth audio ----------------\n        // (1- this.modulation) needed because the graphics return a value of 1 for the minimum and 0 for the max\n        this.synth.setParameters({modulation: 1 - this.modulation })\n        //console.log(\"modulation: \" + (1 -  this.modulation.toFixed(2)));\n      } else if (this.is_pitchDown) {\n        // BOTTOM FADER - pitch shift\n        if (event.movementX < 0) {\n          // Mouse is moving right\n          this.pitch = Math.min(this.pitch - Math.floor(event.movementX), this.maxPitch);\n        } else if (event.movementX > 0) {\n          // Mouse is moving left\n          this.pitch = Math.max(this.pitch - Math.floor(event.movementX), this.minPitch);\n        }\n        // ----------- modify here synth audio -------------\n        // todo: pitch max a dx e min a sx - meglio il contrario, secondo me - segue possibile ma brutto fix\n        // console.log(\"pitch shift: \" + this.pitch * -1)\n        // this.synth.set({detune: this.pitch * -100});\n        //console.log(\"pitch shift: \" + this.pitch);\n        this.synth.setParameters({ transpose: this.pitch });\n        // -------------------------------------------------\n      }\n    },\n    onMouseUp(event) {\n      if (this.is_modulationDown) this.is_modulationDown = false;\n      if (this.is_volumeDown) this.is_volumeDown = false;\n      if (this.is_pitchDown) this.is_pitchDown = false;\n    },\n\n    modulationDown(event) {\n      if (!this.is_modulationDown) this.is_modulationDown = true;\n    },\n    volumeDown(event) {\n      if (!this.is_volumeDown) this.is_volumeDown = true;\n    },\n    pitchDown(event) {\n      if (!this.is_pitchDown) this.is_pitchDown = true;\n    },\n\n    // ----------- AUDIO -----------\n    // Update osc waveform\n    nextOscType() {\n      // go circularly on along the list osc_types list\n      this.oscTypeIndex++;\n      if (this.oscTypeIndex >= osc_types.length) this.oscTypeIndex = 0;\n\n      this.synth.setParameters({ type: osc_types[this.oscTypeIndex] })\n\n      //console.log(\"osc type: \" + osc_types[this.oscTypeIndex]);\n    },\n\n    nextWaveform() {\n      // update selected wavetype changing the current index\n      this.oscWaveIndex++;\n      if (this.oscWaveIndex >= wave_types.length) this.oscWaveIndex = 0;\n\n      //console.log(wave_types[this.oscWaveIndex])\n      // set new waveform\n      this.synth.setParameters({ waveform: wave_types[this.oscWaveIndex] })\n    },\n\n    // set routing\n    connect(route) {\n      this.synth.connect(route);\n    },\n  },\n\n  unmounted() {\n    // remove event listeners\n    window.removeEventListener(\"resize\", this.resizeGraphics);\n    document.removeEventListener(\"mousemove\", this.onMouseMove);\n    document.removeEventListener(\"mouseup\", this.onMouseUp);\n  },\n};\n</script>\n\n<style scoped>\n.modDot {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 0.8vw;\n  text-align: center;\n  box-sizing: border-box;\n  border: .06vw solid black;\n}\n\n.main_container {\n  border: .1vw solid #c2847b ;\n  box-sizing: border-box;\n  height: calc(100% / 3);\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n}\n.main_container:hover {\n  border: .1vw solid #63443e;\n  box-sizing: border-box;\n  height: calc(100% / 3);\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n}\n\n.osc_container {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n  flex: 4;\n  height: 100%;\n  width: 100%;\n}\n\n/*---------- MOD TYPE BUTTON ----------*/\n.type_button {\n  border: .1vw solid #c2847b;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex: 1;\n  height: 100%;\n}\n.type_button:hover {\n  border: .1vw solid #63443e;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex: 1;\n  height: 100%;\n}\n\n.type_button .innertext {\n  font-size: .8vw;\n  writing-mode: vertical-rl;\n  text-orientation: upright;\n  text-transform: uppercase;\n}\n\n/*--------------- OSC -----------------*/\n.osc {\n  width: 90%;\n  justify-content: center;\n  align-items: center;\n  display: flex;\n  position: relative;\n  aspect-ratio: 1/1;\n}\n\n.osc_back {\n  margin: auto;\n  width: 100%;\n  position: absolute;\n  aspect-ratio: 1/1;\n  clip-path: circle(50%);\n  z-index: 1;\n}\n\n.pitch_slider {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  clip-path: polygon(50% 100%, 100% 100%, 100% 72%, 50% 50%, 0% 72%, 0% 100%);\n  z-index: 27;\n}\n\n.mod_area {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  clip-path: polygon(50% 0%, 0% 0%, 0% 100%, 50% 50%);\n  z-index: 2;\n}\n\n.volume_area {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  clip-path: polygon(50% 0%, 100% 0%, 100% 100%, 50% 50%);\n  z-index: 3;\n}\n\n.osc_middle {\n  margin: auto;\n  height: 95%;\n  top: 2.5%;\n  left: 2.5%;\n  position: absolute;\n  aspect-ratio: 1/1;\n  clip-path: circle(50%);\n  z-index: 25;\n}\n\n.mod_slider {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  clip-path: polygon(50% 0%, 0% 0%, 0% 100%, 50% 50%);\n  z-index: 27;\n}\n\n.volume_slider {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  clip-path: polygon(50% 0%, 100% 0%, 100% 100%, 50% 50%);\n  z-index: 26;\n}\n\n.osc_front {\n  margin: auto;\n  height: 96%;\n  top: 2%;\n  left: 2%;\n  position: absolute;\n  aspect-ratio: 1/1;\n  clip-path: circle(50%);\n  z-index: 50;\n}\n\n.pitch_area {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  clip-path: polygon(50% 100%,\n      100% 100%,\n      100% 72%,\n      50% 50%,\n      0% 72%,\n      0% 100%,\n      50% 100%);\n  z-index: 10;\n}\n\n.pitch_hand {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  height: 40%;\n  width: 100%;\n  transform-origin: 0 0;\n  z-index: 15;\n}\n.lineL {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  height: 100%;\n  width: 100%;\n  transform-origin: 0 0;\n  z-index: 15;\n}\n\n.lineU {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  height: 100%;\n  width: 100%;\n  transform-origin: 0 0;\n  z-index: 15;\n}\n.lineR {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  height: 100%;\n  width: 100%;\n  transform-origin: 0 0;\n  z-index: 15;\n}\n\n\n.osc_wave {\n  display: flex;\n  position: relative;\n  aspect-ratio: 1;\n  width: 45%;\n  border-radius: 50%;\n  left: 0;\n  top: 0;\n  z-index: 101;\n}\n\n.osc_wave img {\n  position: relative;\n  aspect-ratio: 1/1;\n  width: 100%;\n  left: 0;\n  top: 0;\n  clip-path: circle(20%);\n  z-index: 102;\n}\n\n.draggable {\n  position: absolute;\n  z-index: 75;\n}\n\n.left {\n  width: 50%;\n  height: 70%;\n  left: 0;\n  bottom: 30%;\n  background-color: transparent;\n}\n\n.right {\n  width: 50%;\n  height: 70%;\n  background-color: transparent;\n  left: 50%;\n  bottom: 30%\n}\n\n.low {\n  width: 100%;\n  height: 30%;\n  top: 70%;\n  background-color: transparent;\n}\n\n/*------------ CHAIN BUTTONS ------------*/\n.chain_buttons {\n  border: .1vw solid #c2847b;\n  flex: .5;\n  display: grid;\n  grid-template-rows: .3fr 1fr 1fr 1fr .3fr;\n  height: 100%;\n  align-items: center;\n  padding-left: 3%;\n  padding-right: 3%;\n}\n.chain_buttons:hover {\n  border: .1vw solid #63443e;\n  flex: .5;\n  display: grid;\n  grid-template-rows: .3fr 1fr 1fr 1fr .3fr;\n  height: 100%;\n  align-items: center;\n  padding-left: 3%;\n  padding-right: 3%;\n}\n\n\n.button_1,\n.button_2,\n.button_3 {\n  width: 100%;\n  aspect-ratio: 1/1;\n  border: .1vw solid black;\n  border-radius: 50%;\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
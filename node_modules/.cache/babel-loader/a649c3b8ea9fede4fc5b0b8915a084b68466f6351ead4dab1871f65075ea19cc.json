{"ast":null,"code":"import { Effect } from \"../effect/Effect\";\nimport { LFO } from \"../source/oscillator/LFO\";\nimport { readOnly } from \"../core/util/Interface\";\n/**\n * Base class for LFO-based effects.\n */\nexport class LFOEffect extends Effect {\n  constructor(options) {\n    super(options);\n    this.name = \"LFOEffect\";\n    this._lfo = new LFO({\n      context: this.context,\n      frequency: options.frequency,\n      amplitude: options.depth\n    });\n    this.depth = this._lfo.amplitude;\n    this.frequency = this._lfo.frequency;\n    this.type = options.type;\n    readOnly(this, [\"frequency\", \"depth\"]);\n  }\n  static getDefaults() {\n    return Object.assign(Effect.getDefaults(), {\n      frequency: 1,\n      type: \"sine\",\n      depth: 1\n    });\n  }\n  /**\n   * Start the effect.\n   */\n  start(time) {\n    this._lfo.start(time);\n    return this;\n  }\n  /**\n   * Stop the lfo\n   */\n  stop(time) {\n    this._lfo.stop(time);\n    return this;\n  }\n  /**\n   * Sync the filter to the transport. See [[LFO.sync]]\n   */\n  sync() {\n    this._lfo.sync();\n    return this;\n  }\n  /**\n   * Unsync the filter from the transport.\n   */\n  unsync() {\n    this._lfo.unsync();\n    return this;\n  }\n  /**\n   * The type of the LFO's oscillator: See [[Oscillator.type]]\n   * @example\n   * const autoFilter = new Tone.AutoFilter().start().toDestination();\n   * const noise = new Tone.Noise().start().connect(autoFilter);\n   * autoFilter.type = \"square\";\n   */\n  get type() {\n    return this._lfo.type;\n  }\n  set type(type) {\n    this._lfo.type = type;\n  }\n  dispose() {\n    super.dispose();\n    this._lfo.dispose();\n    this.frequency.dispose();\n    this.depth.dispose();\n    return this;\n  }\n}","map":{"version":3,"mappings":"AAAA,SAASA,MAAM,QAAuB,kBAAkB;AAExD,SAASC,GAAG,QAAQ,0BAA0B;AAG9C,SAASC,QAAQ,QAAQ,wBAAwB;AASjD;;;AAGA,OAAM,MAAgBC,SAA4C,SAAQH,MAAe;EAoBxFI,YAAYC,OAAyB;IAEpC,KAAK,CAACA,OAAO,CAAC;IApBN,SAAI,GAAW,WAAW;IAsBlC,IAAI,CAACC,IAAI,GAAG,IAAIL,GAAG,CAAC;MACnBM,OAAO,EAAE,IAAI,CAACA,OAAO;MACrBC,SAAS,EAAEH,OAAO,CAACG,SAAS;MAC5BC,SAAS,EAAEJ,OAAO,CAACK;KACnB,CAAC;IACF,IAAI,CAACA,KAAK,GAAG,IAAI,CAACJ,IAAI,CAACG,SAAS;IAChC,IAAI,CAACD,SAAS,GAAG,IAAI,CAACF,IAAI,CAACE,SAAS;IAEpC,IAAI,CAACG,IAAI,GAAGN,OAAO,CAACM,IAAI;IACxBT,QAAQ,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC;EACvC;EAEA,OAAOU,WAAW;IACjB,OAAOC,MAAM,CAACC,MAAM,CAACd,MAAM,CAACY,WAAW,EAAE,EAAE;MAC1CJ,SAAS,EAAE,CAAC;MACZG,IAAI,EAAE,MAA4B;MAClCD,KAAK,EAAE;KACP,CAAC;EACH;EAEA;;;EAGAK,KAAK,CAACC,IAAW;IAChB,IAAI,CAACV,IAAI,CAACS,KAAK,CAACC,IAAI,CAAC;IACrB,OAAO,IAAI;EACZ;EAEA;;;EAGAC,IAAI,CAACD,IAAW;IACf,IAAI,CAACV,IAAI,CAACW,IAAI,CAACD,IAAI,CAAC;IACpB,OAAO,IAAI;EACZ;EAEA;;;EAGAE,IAAI;IACH,IAAI,CAACZ,IAAI,CAACY,IAAI,EAAE;IAChB,OAAO,IAAI;EACZ;EAEA;;;EAGAC,MAAM;IACL,IAAI,CAACb,IAAI,CAACa,MAAM,EAAE;IAClB,OAAO,IAAI;EACZ;EAEA;;;;;;;EAOA,IAAIR,IAAI;IACP,OAAO,IAAI,CAACL,IAAI,CAACK,IAAI;EACtB;EACA,IAAIA,IAAI,CAACA,IAAI;IACZ,IAAI,CAACL,IAAI,CAACK,IAAI,GAAGA,IAAI;EACtB;EAEAS,OAAO;IACN,KAAK,CAACA,OAAO,EAAE;IACf,IAAI,CAACd,IAAI,CAACc,OAAO,EAAE;IACnB,IAAI,CAACZ,SAAS,CAACY,OAAO,EAAE;IACxB,IAAI,CAACV,KAAK,CAACU,OAAO,EAAE;IACpB,OAAO,IAAI;EACZ","names":["Effect","LFO","readOnly","LFOEffect","constructor","options","_lfo","context","frequency","amplitude","depth","type","getDefaults","Object","assign","start","time","stop","sync","unsync","dispose"],"sourceRoot":"","sources":["../../../Tone/effect/LFOEffect.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import _classCallCheck from \"C:/Home/Projects/Programmazione/WebStorm/myZenythPolisinT/zenyth_polisint/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Home/Projects/Programmazione/WebStorm/myZenythPolisinT/zenyth_polisint/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _get from \"C:/Home/Projects/Programmazione/WebStorm/myZenythPolisinT/zenyth_polisint/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"C:/Home/Projects/Programmazione/WebStorm/myZenythPolisinT/zenyth_polisint/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"C:/Home/Projects/Programmazione/WebStorm/myZenythPolisinT/zenyth_polisint/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Home/Projects/Programmazione/WebStorm/myZenythPolisinT/zenyth_polisint/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport { SignalOperator } from \"./SignalOperator\";\nimport { WaveShaper } from \"./WaveShaper\";\n/**\n * Return the absolute value of an incoming signal.\n *\n * @example\n * return Tone.Offline(() => {\n * \tconst abs = new Tone.Abs().toDestination();\n * \tconst signal = new Tone.Signal(1);\n * \tsignal.rampTo(-1, 0.5);\n * \tsignal.connect(abs);\n * }, 0.5, 1);\n * @category Signal\n */\nexport var Abs = /*#__PURE__*/function (_SignalOperator) {\n  _inherits(Abs, _SignalOperator);\n  var _super = _createSuper(Abs);\n  function Abs() {\n    var _this;\n    _classCallCheck(this, Abs);\n    _this = _super.apply(this, arguments);\n    _this.name = \"Abs\";\n    /**\n     * The node which converts the audio ranges\n     */\n    _this._abs = new WaveShaper({\n      context: _this.context,\n      mapping: function mapping(val) {\n        if (Math.abs(val) < 0.001) {\n          return 0;\n        } else {\n          return Math.abs(val);\n        }\n      }\n    });\n    /**\n     * The AudioRange input [-1, 1]\n     */\n    _this.input = _this._abs;\n    /**\n     * The output range [0, 1]\n     */\n    _this.output = _this._abs;\n    return _this;\n  }\n  /**\n   * clean up\n   */\n  _createClass(Abs, [{\n    key: \"dispose\",\n    value: function dispose() {\n      _get(_getPrototypeOf(Abs.prototype), \"dispose\", this).call(this);\n      this._abs.dispose();\n      return this;\n    }\n  }]);\n  return Abs;\n}(SignalOperator);","map":{"version":3,"mappings":";;;;;;;AACA,SAASA,cAAc,QAAQ,kBAAkB;AACjD,SAASC,UAAU,QAAQ,cAAc;AAEzC;;;;;;;;;;;;AAYA,WAAaC,GAAI;EAAA;EAAA;EAAjB;IAAA;IAAA;;IAEU,UAAI,GAAW,KAAK;IAE7B;;;IAGQ,UAAI,GAAG,IAAID,UAAU,CAAC;MAC7BE,OAAO,EAAE,MAAKA,OAAO;MACrBC,OAAO,EAAE,oBAAG,EAAG;QACd,IAAIC,IAAI,CAACC,GAAG,CAACC,GAAG,CAAC,GAAG,KAAK,EAAE;UAC1B,OAAO,CAAC;SACR,MAAM;UACN,OAAOF,IAAI,CAACC,GAAG,CAACC,GAAG,CAAC;;MAEtB;KACA,CAAC;IAEF;;;IAGA,WAAK,GAAG,MAAKC,IAAI;IAEjB;;;IAGA,YAAM,GAAG,MAAKA,IAAI;IAAC;EAUpB;EARC;;;EAAA;IAAA;IAAA,OAGA,mBAAO;MACN;MACA,IAAI,CAACA,IAAI,CAACC,OAAO,EAAE;MACnB,OAAO,IAAI;IACZ;EAAC;EAAA;AAAA,EAnCuBT,cAAoC","names":["SignalOperator","WaveShaper","Abs","context","mapping","Math","abs","val","_abs","dispose"],"sourceRoot":"","sources":["../../../Tone/signal/Abs.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module","externalDependencies":[]}
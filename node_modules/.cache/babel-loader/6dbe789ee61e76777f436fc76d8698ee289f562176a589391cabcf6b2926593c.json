{"ast":null,"code":"import { Chorus, Distortion, Envelope, Gain, LFO, Panner, PingPongDelay, Reverb, Vibrato } from 'tone';\nimport { nextTick } from \"vue\";\nexport default class MyEffect {\n  constructor({\n    type = \"none\",\n    modulation = 0\n  }) {\n    this.type = type;\n    this.mod = modulation;\n    this.effect = this.generateToneFx(type);\n  }\n\n  // getters\n  getToneReference() {\n    return this.effect;\n  }\n\n  // creator\n  generateToneFx(type) {\n    let effect;\n    // console.log(\"fx gen type: \" + type)\n    switch (type) {\n      case 0:\n      case 'none':\n        effect = new Gain();\n        break;\n      case 1:\n      case 'reverb':\n        effect = this.createReverb();\n        break;\n      case 2:\n      case 'delay':\n        effect = this.createDelay();\n        break;\n      case 3:\n      case 'distortion':\n        effect = this.createDistortion();\n        break;\n      case 4:\n      case 'vibrato':\n        effect = this.createVibrato();\n        break;\n      case 5:\n      case 'pan':\n        effect = this.createPan();\n        break;\n      case 6:\n      case 'chorus':\n        effect = this.createChorus();\n        break;\n      default:\n        effect = new Gain();\n    }\n    // console.log(effect)\n    this.setFxParams({\n      effect: effect,\n      type: type\n    });\n    return effect;\n  }\n\n  // setters\n  // general setter\n  setFxParams({\n    effect = this.effect,\n    type = this.type,\n    mod = this.mod\n  }) {\n    this.effect = effect;\n    this.type = type;\n    this.mod = mod;\n    // console.log(\"effect = \"+ this.effect,\" type = \" + this.type, \"mod = \" + this.mod)\n\n    switch (type) {\n      case 1: // reverb\n      case 'reverb':\n        this.effect.set({\n          decay: 0.1 + 5 * mod,\n          wet: 0.3 + 0.7 * mod\n        });\n        break;\n      case 2: // delay\n      case 'delay':\n        this.effect.set({\n          delayTime: 0.05 + 0.4 * mod,\n          feedback: 0.05 + 0.90 * mod,\n          wet: 0.3 + 0.7 * mod\n        });\n        break;\n      case 3: // distortion\n      case 'distortion':\n        this.effect.set({\n          distortion: 0.05 + 0.95 * mod,\n          wet: 0.4 + 0.6 * mod\n        });\n        break;\n      case 4: // vibrato\n      case 'vibrato':\n        this.effect.set({\n          depth: 0.5 + 0.5 * mod,\n          frequency: 1 + 20 * mod,\n          wet: 0.5 + 0.5 * mod\n        });\n        break;\n      case 5: // pan\n      case 'pan':\n        let coeff = -1 + 2 * mod;\n        this.effect.set({\n          pan: coeff,\n          wet: 1\n        });\n        console.log(\"pan coeff: \" + coeff.toFixed(2));\n        break;\n      case 6: // chorus\n      case 'chorus':\n        this.effect.set({\n          depth: 0.6 + mod * 0.4,\n          frequency: 30 + mod * 10,\n          spread: 80 * mod * 8,\n          wet: 1,\n          feedback: 0.05 + mod * 0.9,\n          type: \"triangle\" + (mod * 10).toFixed(0).toString(),\n          delayTime: 100 + mod * 90\n        });\n        break;\n      default:\n        this.effect = new Gain();\n    }\n  }\n\n  // -------------- FX CREATION -------------\n  createReverb() {\n    return new Reverb();\n  }\n  createDelay() {\n    //todo: not interesting effect if used like this\n    return new PingPongDelay();\n  }\n  createDistortion() {\n    return new Distortion();\n  }\n  createVibrato() {\n    return new Vibrato();\n  }\n  createPan() {\n    // todo: create LFO modulating width\n    return new Panner();\n  }\n  createChorus() {\n    return new Chorus();\n  }\n\n  // ------------- TONE JS EXTENSIONS -----------\n  connect(route) {\n    this.effect.connect(route);\n  }\n  disconnect() {\n    this.effect.disconnect();\n  }\n  dispose() {\n    this.effect.dispose();\n  }\n}","map":{"version":3,"names":["Chorus","Distortion","Envelope","Gain","LFO","Panner","PingPongDelay","Reverb","Vibrato","nextTick","MyEffect","constructor","type","modulation","mod","effect","generateToneFx","getToneReference","createReverb","createDelay","createDistortion","createVibrato","createPan","createChorus","setFxParams","set","decay","wet","delayTime","feedback","distortion","depth","frequency","coeff","pan","console","log","toFixed","spread","toString","connect","route","disconnect","dispose"],"sources":["/Users/guglielmofratticioli/Documents/POLIMI/FurioColombo.github.io/src/views/Synth/Effects/MyFx.js"],"sourcesContent":["import {Chorus, Distortion, Envelope, Gain, LFO, Panner, PingPongDelay, Reverb, Vibrato} from 'tone'\nimport {nextTick} from \"vue\";\n\nexport default class MyEffect {\n    constructor({ type = \"none\", modulation = 0 }) {\n        this.type = type;\n        this.mod = modulation;\n        this.effect = this.generateToneFx(type)\n    }\n\n    // getters\n    getToneReference(){\n        return this.effect;\n    }\n\n    // creator\n    generateToneFx(type) {\n        let effect;\n        // console.log(\"fx gen type: \" + type)\n        switch (type) {\n            case 0:\n            case 'none':\n                effect = new Gain();\n                break;\n            case 1:\n            case 'reverb':\n                effect = this.createReverb()\n                break;\n            case 2:\n            case 'delay':\n                effect = this.createDelay()\n                break;\n            case 3:\n            case 'distortion':\n                effect = this.createDistortion()\n                break;\n            case 4:\n            case 'vibrato':\n                effect = this.createVibrato()\n                break;\n            case 5:\n            case 'pan':\n                effect = this.createPan()\n                break;\n            case 6:\n            case 'chorus':\n                effect = this.createChorus()\n                break;\n            default:\n                effect = new Gain();\n        }\n        // console.log(effect)\n        this.setFxParams({ effect: effect, type: type })\n        return effect;\n    }\n\n    // setters\n    // general setter\n    setFxParams({ effect = this.effect, type = this.type, mod = this.mod }) {\n        this.effect = effect;\n        this.type = type;\n        this.mod = mod;\n        // console.log(\"effect = \"+ this.effect,\" type = \" + this.type, \"mod = \" + this.mod)\n\n        switch (type) {\n            case 1: // reverb\n            case 'reverb':\n                this.effect.set({\n                    decay: 0.1 + 5*mod,\n                    wet: 0.3 + 0.7*mod,\n                })\n                break;\n            case 2: // delay\n            case 'delay':\n                this.effect.set({\n                    delayTime: 0.05 + 0.4*mod,\n                    feedback: 0.05 + 0.90*mod,\n                    wet: 0.3 + 0.7*mod,\n                })\n                break;\n            case 3: // distortion\n            case 'distortion':\n                this.effect.set({\n                    distortion: 0.05 + 0.95*mod,\n                    wet: 0.4 + 0.6*mod,\n                })\n                break;\n            case 4: // vibrato\n            case 'vibrato':\n                this.effect.set({\n                    depth: 0.5 + 0.5*mod,\n                    frequency: 1 + 20*mod,\n                    wet: 0.5 + 0.5*mod\n                })\n                break;\n            case 5: // pan\n            case 'pan':\n                let coeff = -1 + (2*mod)\n                this.effect.set({\n                    pan: coeff,\n                    wet: 1,\n                })\n                console.log(\"pan coeff: \" + coeff.toFixed(2))\n                break;\n            case 6: // chorus\n            case 'chorus':\n                this.effect.set({\n                    depth: 0.6 + mod*0.4,\n                    frequency: 30 + mod*10,\n                    spread: 80 * mod*8,\n                    wet: 1,\n                    feedback: 0.05 + mod*0.9,\n                    type: \"triangle\" + (mod*10).toFixed(0).toString(),\n                    delayTime: 100 + mod*90,\n                })\n                break;\n            default:\n                this.effect = new Gain();\n        }\n    }\n\n    // -------------- FX CREATION -------------\n    createReverb(){\n        return new Reverb();\n    }\n    createDelay() {\n        //todo: not interesting effect if used like this\n        return new PingPongDelay();\n    }\n    createDistortion(){\n        return new Distortion();\n    }\n    createVibrato(){\n        return new Vibrato();\n    }\n    createPan(){\n        // todo: create LFO modulating width\n        return new Panner();\n    }\n    createChorus(){\n        return new Chorus();\n    }\n\n   \n    // ------------- TONE JS EXTENSIONS -----------\n    connect(route){\n        this.effect.connect(route);\n    }\n    disconnect(){\n        this.effect.disconnect();\n    }\n    dispose(){\n        this.effect.dispose();\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport * as Tone from \"tone\";\nimport Envelope from \"./Envelope.vue\";\nimport Lfo from \"./Lfo.vue\";\nimport VolEnvelope from \"./VolEnvelope.vue\";\nimport ModSelector from \"./ModSelector.vue\";\nimport { isProxy, toRaw } from 'vue';\nexport default {\n  components: {\n    VolEnvelope,\n    Envelope,\n    Lfo,\n    ModSelector\n  },\n  data() {\n    return {\n      name: \"modHost\",\n      //number of total modulators\n\n      //visible modulator\n      selection: 'volEnvelope',\n      selectionType: null,\n      //list of modulators\n      envList: [],\n      lfoList: []\n    };\n  },\n  created() {\n    //create arrays of modulators\n    for (let i = 1; i < this.nEnvelopes + 1; i++) {\n      this.envList.push({\n        id: i,\n        ref: i\n      });\n    }\n    for (let i = 1; i < this.nLfo + 1; i++) {\n      this.lfoList.push({\n        id: i,\n        ref: i\n      });\n    }\n    //console.log(toRaw(this.modulatorList));\n  },\n\n  mounted() {\n    //unhide main volume modulator\n    this.$refs.volEnvelope.unHide();\n    //console.log(this.$refs.volEnvelope)\n\n    //listens to link and unlink events\n    document.addEventListener(\"link\", this.handleLink);\n    document.addEventListener(\"unLink\", this.handleUnlink);\n  },\n  computed: {\n    modHost() {\n      return {\n        background: this.colors.gray.glow\n      };\n    }\n  },\n  methods: {\n    handleDraggableUpdate(isDraggable) {\n      this.$refs.modSelector.isDraggableUpdate(isDraggable);\n    },\n    handleNewOsc() {\n      //initialize volEnvelope on all synth when a new oscillator is added\n      this.$refs.volEnvelope.handleNewOsc();\n    },\n    handleMouseUp(e) {\n      if (this.selection === 'volEnvelope') {\n        this.$refs.volEnvelope.handleMouseUp(e);\n      } else {\n        if (this.selectionType === \"envelope\") {\n          toRaw(toRaw(this.$refs.envelopes)[this.selection - 1]).handleMouseUp(e);\n        }\n        if (this.selectionType === \"lfo\") {\n          toRaw(toRaw(this.$refs.lfos)[this.selection - 1]).handleMouseUp(e);\n        }\n      }\n    },\n    handleMouseMove(e) {\n      if (this.selection === 'volEnvelope') {\n        this.$refs.volEnvelope.handleMouseMove(e);\n      } else {\n        if (this.selectionType === \"envelope\") {\n          toRaw(toRaw(this.$refs.envelopes)[this.selection - 1]).handleMouseMove(e);\n        }\n        if (this.selectionType === \"lfo\") {\n          toRaw(toRaw(this.$refs.lfos)[this.selection - 1]).handleMouseMove(e);\n        }\n      }\n    },\n    changeSelection(id, type) {\n      //console.log(\"selected \"+id)\n      //console.log(this.$refs)\n\n      //hide old modulator\n      if (this.selection === 'volEnvelope') {\n        this.$refs.volEnvelope.hide();\n      } else {\n        if (this.selectionType === \"envelope\") {\n          toRaw(toRaw(this.$refs.envelopes)[this.selection - 1]).hide();\n        }\n        if (this.selectionType === \"lfo\") {\n          toRaw(toRaw(this.$refs.lfos)[this.selection - 1]).hide();\n          toRaw(toRaw(this.$refs.lfos)[this.selection - 1]).stopOscilloscope();\n        }\n      }\n\n      //show new modulator\n      if (id === 'volEnvelope') {\n        this.$refs.volEnvelope.unHide();\n      } else {\n        if (type === \"envelope\") {\n          toRaw(toRaw(this.$refs.envelopes)[id - 1]).unHide();\n        }\n        if (type === \"lfo\") {\n          toRaw(toRaw(this.$refs.lfos)[id - 1]).unHide();\n        }\n      }\n      this.selection = id;\n      this.selectionType = type;\n    },\n    //handlers for drag and drop\n    handleLink(event) {\n      console.log(\"link\");\n      let data = event.detail;\n      //console.log(data)\n      //console.log(this.synths)\n      this.$refs[data.modulator.type + \"s\"][data.modulator.id - 1].link(data.object, data.target, data.color);\n    },\n    handleUnlink(event) {\n      console.log(\"unLink\");\n      let data = event.detail;\n      this.$refs[data.modulator.type + \"s\"][data.modulator.id - 1].unLink(data.object, data.target);\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["Tone","Envelope","Lfo","VolEnvelope","ModSelector","isProxy","toRaw","components","data","name","selection","selectionType","envList","lfoList","created","i","nEnvelopes","push","id","ref","nLfo","mounted","$refs","volEnvelope","unHide","document","addEventListener","handleLink","handleUnlink","computed","modHost","background","colors","gray","glow","methods","handleDraggableUpdate","isDraggable","modSelector","isDraggableUpdate","handleNewOsc","handleMouseUp","e","envelopes","lfos","handleMouseMove","changeSelection","type","hide","stopOscilloscope","event","console","log","detail","modulator","link","object","target","color","unLink"],"sourceRoot":"","sources":["/Users/guglielmofratticioli/Documents/POLIMI/FurioColombo.github.io/src/views/Synth/Modulators/ModHost.vue"],"sourcesContent":["<template>\n  <div class=\"modHost\" :style=\"modHost\">\n     <VolEnvelope ref=\"volEnvelope\"/>\n    <template\n      v-for=\"modulator in envList\"\n      :key=\"modulator.id\">\n\n       <Envelope\n        :id=\"modulator.id\"\n        ref=\"envelopes\"\n      @isDraggableUpdate=\"handleDraggableUpdate\"/>\n    </template>\n    <template\n        v-for=\"modulator in lfoList\"\n        :key=\"modulator.id\">\n\n\n       <Lfo\n          :id=\"modulator.id\"\n          ref=\"lfos\"/>\n    </template>\n    <ModSelector\n      @selection=\"changeSelection\"\n      ref=\"modSelector\"/>\n  </div>\n</template>\n\n<script>\nimport * as Tone from \"tone\";\nimport Envelope from \"./Envelope.vue\";\nimport Lfo from \"./Lfo.vue\";\nimport VolEnvelope from \"./VolEnvelope.vue\";\nimport ModSelector from \"./ModSelector.vue\";\nimport { isProxy, toRaw } from 'vue';\n\nexport default {\n  components: {\n    VolEnvelope,\n    Envelope,\n    Lfo,\n    ModSelector,\n  },\n  data() {\n    return {\n      name: \"modHost\",\n      //number of total modulators\n\n      //visible modulator\n      selection: 'volEnvelope',\n      selectionType: null,\n\n      //list of modulators\n      envList: [],\n      lfoList: [],\n    };\n  },\n  created() {\n    //create arrays of modulators\n    for (let i = 1; i < this.nEnvelopes+1; i++) {\n      this.envList.push({ id: i, ref: i });\n    }\n    for (let i = 1; i < this.nLfo+1; i++) {\n      this.lfoList.push({ id: i, ref: i });\n    }\n    //console.log(toRaw(this.modulatorList));\n  },\n  mounted() {\n    //unhide main volume modulator\n    this.$refs.volEnvelope.unHide();\n    //console.log(this.$refs.volEnvelope)\n\n    //listens to link and unlink events\n    document.addEventListener(\"link\", this.handleLink)\n    document.addEventListener(\"unLink\", this.handleUnlink)\n  },\n  computed: {\n    modHost() {\n      return{\n        background: this.colors.gray.glow,\n      }\n    }\n  },\n  methods: {\n    handleDraggableUpdate(isDraggable){\n      this.$refs.modSelector.isDraggableUpdate(isDraggable)\n    },\n    handleNewOsc(){\n      //initialize volEnvelope on all synth when a new oscillator is added\n      this.$refs.volEnvelope.handleNewOsc();\n    },\n    handleMouseUp(e){\n      if(this.selection==='volEnvelope'){\n        this.$refs.volEnvelope.handleMouseUp(e)\n      }else{\n        if(this.selectionType===\"envelope\"){\n          toRaw(toRaw(this.$refs.envelopes)[this.selection-1]).handleMouseUp(e);\n        }\n        if(this.selectionType===\"lfo\"){\n          toRaw(toRaw(this.$refs.lfos)[this.selection-1]).handleMouseUp(e);\n        }\n      }\n    },\n    handleMouseMove(e){\n      if(this.selection==='volEnvelope'){\n        this.$refs.volEnvelope.handleMouseMove(e)\n      }else{\n        if(this.selectionType===\"envelope\"){\n          toRaw(toRaw(this.$refs.envelopes)[this.selection-1]).handleMouseMove(e);\n        }\n        if(this.selectionType===\"lfo\"){\n          toRaw(toRaw(this.$refs.lfos)[this.selection-1]).handleMouseMove(e);\n        }\n      }\n    },\n    changeSelection(id, type) {\n      //console.log(\"selected \"+id)\n      //console.log(this.$refs)\n\n      //hide old modulator\n      if(this.selection==='volEnvelope'){\n        this.$refs.volEnvelope.hide()\n      }else{\n        if(this.selectionType===\"envelope\"){\n          toRaw(toRaw(this.$refs.envelopes)[this.selection-1]).hide();\n        }\n        if(this.selectionType===\"lfo\"){\n          toRaw(toRaw(this.$refs.lfos)[this.selection-1]).hide();\n          toRaw(toRaw(this.$refs.lfos)[this.selection-1]).stopOscilloscope();\n        }\n      }\n\n\n      //show new modulator\n      if(id==='volEnvelope'){\n        this.$refs.volEnvelope.unHide()\n      }else{\n        if(type===\"envelope\"){\n          toRaw(toRaw(this.$refs.envelopes)[id-1]).unHide();\n        }\n        if(type===\"lfo\"){\n          toRaw(toRaw(this.$refs.lfos)[id-1]).unHide();\n        }\n      }\n\n\n      this.selection = id;\n      this.selectionType = type;\n      \n    },\n\n    //handlers for drag and drop\n    handleLink(event){\n      console.log(\"link\")\n      let data = event.detail\n      //console.log(data)\n      //console.log(this.synths)\n      this.$refs[data.modulator.type+\"s\"][data.modulator.id-1].link(data.object, data.target, data.color)\n    },\n    handleUnlink(event){\n      console.log(\"unLink\")\n      let data = event.detail\n      this.$refs[data.modulator.type+\"s\"][data.modulator.id-1].unLink(data.object, data.target)\n\n    }\n\n  },\n};\n</script>\n\n<style scoped>\n.modHost {\n  grid-column: span 2; /* takes 2 spaces horizontally*/\n  position: relative;\n  display: grid;\n  grid-template-rows: 80% 20%;\n  grid-template-columns: 100%;\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import _slicedToArray from \"C:/Home/Projects/Programmazione/WebStorm/myZenythPolisinT/zenyth_polisint/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _classCallCheck from \"C:/Home/Projects/Programmazione/WebStorm/myZenythPolisinT/zenyth_polisint/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Home/Projects/Programmazione/WebStorm/myZenythPolisinT/zenyth_polisint/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"C:/Home/Projects/Programmazione/WebStorm/myZenythPolisinT/zenyth_polisint/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _get from \"C:/Home/Projects/Programmazione/WebStorm/myZenythPolisinT/zenyth_polisint/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"C:/Home/Projects/Programmazione/WebStorm/myZenythPolisinT/zenyth_polisint/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"C:/Home/Projects/Programmazione/WebStorm/myZenythPolisinT/zenyth_polisint/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Home/Projects/Programmazione/WebStorm/myZenythPolisinT/zenyth_polisint/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.map.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.function.bind.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.array.every.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport { Tone } from \"../Tone\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { noOp } from \"../util/Interface\";\nimport { isString } from \"../util/TypeCheck\";\nimport { ToneAudioBuffer } from \"./ToneAudioBuffer\";\nimport { assert } from \"../util/Debug\";\n/**\n * A data structure for holding multiple buffers in a Map-like datastructure.\n *\n * @example\n * const pianoSamples = new Tone.ToneAudioBuffers({\n * \tA1: \"https://tonejs.github.io/audio/casio/A1.mp3\",\n * \tA2: \"https://tonejs.github.io/audio/casio/A2.mp3\",\n * }, () => {\n * \tconst player = new Tone.Player().toDestination();\n * \t// play one of the samples when they all load\n * \tplayer.buffer = pianoSamples.get(\"A2\");\n * \tplayer.start();\n * });\n * @example\n * // To pass in additional parameters in the second parameter\n * const buffers = new Tone.ToneAudioBuffers({\n * \t urls: {\n * \t\t A1: \"A1.mp3\",\n * \t\t A2: \"A2.mp3\",\n * \t },\n * \t onload: () => console.log(\"loaded\"),\n * \t baseUrl: \"https://tonejs.github.io/audio/casio/\"\n * });\n * @category Core\n */\nexport var ToneAudioBuffers = /*#__PURE__*/function (_Tone) {\n  _inherits(ToneAudioBuffers, _Tone);\n  var _super = _createSuper(ToneAudioBuffers);\n  function ToneAudioBuffers() {\n    var _this;\n    _classCallCheck(this, ToneAudioBuffers);\n    _this = _super.call(this);\n    _this.name = \"ToneAudioBuffers\";\n    /**\n     * All of the buffers\n     */\n    _this._buffers = new Map();\n    /**\n     * Keep track of the number of loaded buffers\n     */\n    _this._loadingCount = 0;\n    var options = optionsFromArguments(ToneAudioBuffers.getDefaults(), arguments, [\"urls\", \"onload\", \"baseUrl\"], \"urls\");\n    _this.baseUrl = options.baseUrl;\n    // add each one\n    Object.keys(options.urls).forEach(function (name) {\n      _this._loadingCount++;\n      var url = options.urls[name];\n      _this.add(name, url, _this._bufferLoaded.bind(_assertThisInitialized(_this), options.onload), options.onerror);\n    });\n    return _this;\n  }\n  _createClass(ToneAudioBuffers, [{\n    key: \"has\",\n    value:\n    /**\n     * True if the buffers object has a buffer by that name.\n     * @param  name  The key or index of the buffer.\n     */\n    function has(name) {\n      return this._buffers.has(name.toString());\n    }\n    /**\n     * Get a buffer by name. If an array was loaded,\n     * then use the array index.\n     * @param  name  The key or index of the buffer.\n     */\n  }, {\n    key: \"get\",\n    value: function get(name) {\n      assert(this.has(name), \"ToneAudioBuffers has no buffer named: \".concat(name));\n      return this._buffers.get(name.toString());\n    }\n    /**\n     * A buffer was loaded. decrement the counter.\n     */\n  }, {\n    key: \"_bufferLoaded\",\n    value: function _bufferLoaded(callback) {\n      this._loadingCount--;\n      if (this._loadingCount === 0 && callback) {\n        callback();\n      }\n    }\n    /**\n     * If the buffers are loaded or not\n     */\n  }, {\n    key: \"loaded\",\n    get: function get() {\n      return Array.from(this._buffers).every(function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 2),\n          _ = _ref2[0],\n          buffer = _ref2[1];\n        return buffer.loaded;\n      });\n    }\n    /**\n     * Add a buffer by name and url to the Buffers\n     * @param  name      A unique name to give the buffer\n     * @param  url  Either the url of the bufer, or a buffer which will be added with the given name.\n     * @param  callback  The callback to invoke when the url is loaded.\n     * @param  onerror  Invoked if the buffer can't be loaded\n     */\n  }, {\n    key: \"add\",\n    value: function add(name, url) {\n      var callback = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : noOp;\n      var onerror = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : noOp;\n      if (isString(url)) {\n        this._buffers.set(name.toString(), new ToneAudioBuffer(this.baseUrl + url, callback, onerror));\n      } else {\n        this._buffers.set(name.toString(), new ToneAudioBuffer(url, callback, onerror));\n      }\n      return this;\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      _get(_getPrototypeOf(ToneAudioBuffers.prototype), \"dispose\", this).call(this);\n      this._buffers.forEach(function (buffer) {\n        return buffer.dispose();\n      });\n      this._buffers.clear();\n      return this;\n    }\n  }], [{\n    key: \"getDefaults\",\n    value: function getDefaults() {\n      return {\n        baseUrl: \"\",\n        onerror: noOp,\n        onload: noOp,\n        urls: {}\n      };\n    }\n  }]);\n  return ToneAudioBuffers;\n}(Tone);","map":{"version":3,"mappings":"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","names":["Tone","optionsFromArguments","noOp","isString","ToneAudioBuffer","assert","ToneAudioBuffers","Map","options","getDefaults","arguments","baseUrl","Object","keys","urls","forEach","_loadingCount","url","name","add","_bufferLoaded","bind","onload","onerror","_buffers","has","toString","get","callback","Array","from","every","_","buffer","loaded","set","dispose","clear"],"sourceRoot":"","sources":["../../../../Tone/core/context/ToneAudioBuffers.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { Scale } from \"./Scale\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { Pow } from \"./Pow\";\n/**\n * Performs an exponential scaling on an input signal.\n * Scales a NormalRange value [0,1] exponentially\n * to the output range of outputMin to outputMax.\n * @example\n * const scaleExp = new Tone.ScaleExp(0, 100, 2);\n * const signal = new Tone.Signal(0.5).connect(scaleExp);\n * @category Signal\n */\nexport class ScaleExp extends Scale {\n  constructor() {\n    super(Object.assign(optionsFromArguments(ScaleExp.getDefaults(), arguments, [\"min\", \"max\", \"exponent\"])));\n    this.name = \"ScaleExp\";\n    const options = optionsFromArguments(ScaleExp.getDefaults(), arguments, [\"min\", \"max\", \"exponent\"]);\n    this.input = this._exp = new Pow({\n      context: this.context,\n      value: options.exponent\n    });\n    this._exp.connect(this._mult);\n  }\n  static getDefaults() {\n    return Object.assign(Scale.getDefaults(), {\n      exponent: 1\n    });\n  }\n  /**\n   * Instead of interpolating linearly between the [[min]] and\n   * [[max]] values, setting the exponent will interpolate between\n   * the two values with an exponential curve.\n   */\n  get exponent() {\n    return this._exp.value;\n  }\n  set exponent(exp) {\n    this._exp.value = exp;\n  }\n  dispose() {\n    super.dispose();\n    this._exp.dispose();\n    return this;\n  }\n}","map":{"version":3,"mappings":"AAAA,SAASA,KAAK,QAAsB,SAAS;AAE7C,SAASC,oBAAoB,QAAQ,uBAAuB;AAC5D,SAASC,GAAG,QAAQ,OAAO;AAM3B;;;;;;;;;AASA,OAAM,MAAOC,QAAS,SAAQH,KAAsB;EAgBnDI;IACC,KAAK,CAACC,MAAM,CAACC,MAAM,CAACL,oBAAoB,CAACE,QAAQ,CAACI,WAAW,EAAE,EAAEC,SAAS,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,UAAU,CAAC,CAAC,CAAC,CAAC;IAfjG,SAAI,GAAW,UAAU;IAgBjC,MAAMC,OAAO,GAAGR,oBAAoB,CAACE,QAAQ,CAACI,WAAW,EAAE,EAAEC,SAAS,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,UAAU,CAAC,CAAC;IAEnG,IAAI,CAACE,KAAK,GAAG,IAAI,CAACC,IAAI,GAAG,IAAIT,GAAG,CAAC;MAChCU,OAAO,EAAE,IAAI,CAACA,OAAO;MACrBC,KAAK,EAAEJ,OAAO,CAACK;KACf,CAAC;IACF,IAAI,CAACH,IAAI,CAACI,OAAO,CAAC,IAAI,CAACC,KAAK,CAAC;EAC9B;EAEA,OAAOT,WAAW;IACjB,OAAOF,MAAM,CAACC,MAAM,CAACN,KAAK,CAACO,WAAW,EAAE,EAAE;MACzCO,QAAQ,EAAE;KACV,CAAC;EACH;EAEA;;;;;EAKA,IAAIA,QAAQ;IACX,OAAO,IAAI,CAACH,IAAI,CAACE,KAAK;EACvB;EACA,IAAIC,QAAQ,CAACG,GAAG;IACf,IAAI,CAACN,IAAI,CAACE,KAAK,GAAGI,GAAG;EACtB;EAEAC,OAAO;IACN,KAAK,CAACA,OAAO,EAAE;IACf,IAAI,CAACP,IAAI,CAACO,OAAO,EAAE;IACnB,OAAO,IAAI;EACZ","names":["Scale","optionsFromArguments","Pow","ScaleExp","constructor","Object","assign","getDefaults","arguments","options","input","_exp","context","value","exponent","connect","_mult","exp","dispose"],"sourceRoot":"","sources":["../../../Tone/signal/ScaleExp.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module","externalDependencies":[]}
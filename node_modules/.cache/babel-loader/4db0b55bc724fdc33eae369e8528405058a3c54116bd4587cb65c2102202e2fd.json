{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, normalizeStyle as _normalizeStyle, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nvar _withScopeId = function _withScopeId(n) {\n  return _pushScopeId(\"data-v-24c79e62\"), n = n(), _popScopeId(), n;\n};\nvar _hoisted_1 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"div\", null, null, -1);\n});\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_EnvelopeVisualizer = _resolveComponent(\"EnvelopeVisualizer\");\n  var _component_Knobs = _resolveComponent(\"Knobs\");\n  return _openBlock(), _createElementBlock(\"div\", {\n    ref: \"container\",\n    \"class\": \"container hidden\",\n    style: _normalizeStyle(this.container)\n  }, [_createElementVNode(\"div\", {\n    \"class\": \"border\",\n    style: _normalizeStyle(this.border)\n  }, [_createVNode(_component_EnvelopeVisualizer, {\n    ref: \"visualizer\",\n    is_volume: false,\n    onParamRefresh: $options.handleRefresh\n  }, null, 8, [\"onParamRefresh\"]), _createVNode(_component_Knobs, {\n    ref: \"knobs\",\n    type: \"envelope\",\n    id: this.id,\n    parameters: this.parameters,\n    onIsDraggableUpdate: $options.handleDraggableUpdate\n  }, null, 8, [\"id\", \"parameters\", \"onIsDraggableUpdate\"]), _hoisted_1], 4)], 4);\n}","map":{"version":3,"mappings":";;;;;sBAMMA,oBAAY;AAAA;;;;uBALhBC,oBAOM;IAPDC,GAAG,EAAC,WAAW;IAAC,SAAM,kBAAkB;IAAEC,KAAK,uBAAOC,SAAS;MAClEJ,oBAKM;IALD,SAAM,QAAQ;IAAEG,KAAK,uBAAOE,MAAM;MACrCC,aAAuFC;IAAnEL,GAAG,EAAC,YAAY;IAAEM,SAAS,EAAE,KAAK;IAAGC,cAAY,EAAEC;mCACvEJ,aACmDK;IAD5CT,GAAG,EAAC,OAAO;IAACU,IAAI,EAAC,UAAU;IAAEC,EAAE,OAAOA,EAAE;IAAGC,UAAU,OAAOA,UAAU;IACrEC,mBAAiB,EAAEL;4DAC3BM,UAAY","names":["_createElementVNode","_createElementBlock","ref","style","container","border","_createVNode","_component_EnvelopeVisualizer","is_volume","onParamRefresh","$options","_component_Knobs","type","id","parameters","onIsDraggableUpdate","_hoisted_1"],"sourceRoot":"","sources":["/Users/eliapirrello/Documents/GitHub/zenyth/src/views/Synth/Modulators/Envelope.vue"],"sourcesContent":["<template>\n  <div ref=\"container\" class=\"container hidden\" :style=\"this.container\">\n    <div class=\"border\" :style=\"this.border\">\n      <EnvelopeVisualizer ref=\"visualizer\" :is_volume=\"false\" @paramRefresh=\"handleRefresh\"/>\n      <Knobs ref=\"knobs\" type=\"envelope\" :id=\"this.id\" :parameters=\"this.parameters\"\n             @isDraggableUpdate=\"handleDraggableUpdate\"/>\n      <div> </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport {transcode} from \"buffer\";\nimport * as Tone from \"tone\";\nimport ToolsHost from \"../Tools/ToolsHost.vue\";\nimport Knobs from \"./Knobs.vue\";\nimport VolEnvelope from \"@/views/Synth/Modulators/VolEnvelope.vue\";\nimport Lfo from \"@/views/Synth/Modulators/Lfo.vue\";\nimport ModSelector from \"@/views/Synth/Modulators/ModSelector.vue\";\nimport EnvelopeVisualizer from \"./EnvelopeVisualizer.vue\";\n\nexport default {\n  components: {\n    EnvelopeVisualizer, Knobs,\n  },\n  props: [\"id\"],\n  data() {\n    return {\n      parameters: {\n        attack: 0.01 * 2.5,\n        attackCurve: \"linear\",\n        decay: 0.1 * 2.5,\n        decayCurve: \"linear\",\n        releaseCurve: \"linear\",\n        release: 0.1 * 2.5,\n        sustain: 0.5,\n      },\n\n    }\n  },\n  methods: {\n    //UPDATE PARAMS CHANGED IN ENVELOPE VISUALIZER\n    handleRefresh(parameters) {\n      this.parameters = parameters\n      this.$refs.knobs.updateParameters(this.parameters)\n    },\n    //-------------METHODS TO LINK WHEN DROPPING\n    link(object, target, color) {\n      //console.log(\"THINGS HAPPENING \"+section+\" \"+target)\n      this.$refs.knobs.addLink(object, target, color)\n\n    },\n    unLink(object, target) {\n      //console.log(\"THINGS HAPPENING \")\n      //console.log(object)\n      //console.log(target)\n      this.$refs.knobs.removeLink(object, target)\n    },\n    handleDraggableUpdate(isDraggable) {\n      this.$emit(\"isDraggableUpdate\", isDraggable)\n    },\n    //--------------METHODS TO SHOW/HIDE------------\n    unHide() {\n      this.$refs.container.classList.remove(\"hidden\");\n    },\n    hide() {\n      this.$refs.container.classList.add(\"hidden\");\n    },\n    //----------------------------------------------\n    handleMouseMove(e) {\n      this.$refs.visualizer.handleMouseMove(e);\n      this.$refs.knobs.handleMouseMove(e);\n    },\n    handleMouseUp(e) {\n      this.$refs.visualizer.handleMouseUp(e);\n      this.$refs.knobs.handleMouseUp(e);\n    }\n  },\n  computed: {\n    border(){\n      return{\n        background: '#ceeae7'\n      }\n    },\n    container(){\n      return{\n        background: this.colors.azure.medium\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n.border {\n  grid-template-columns: calc(6 / 8 * 100%) calc(2 / 8 * 100%);\n  grid-template-rows: 100% ;\n\n  position: relative;\n  display: grid;\n  width: calc(100% - 0.6vw);\n  height: calc(100% - 0.6vw);\n  box-sizing: border-box;\n  margin: 0.3vw;\n  border-radius: 0.2vw;\n  border: 0.1vw solid #334030;\n}\n\n.container {\n  grid-column: span 2;\n  width: 100%;\n  height: 100%;\n}\n\n.hidden {\n  display: none;\n}\n\n.envelope {\n  width: 100%;\n  height: 100%;\n  background-color: transparent;\n  box-sizing: border-box;\n}\n\n.centering {\n  position: relative;\n  width: 100%;\n  height: 100%;\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
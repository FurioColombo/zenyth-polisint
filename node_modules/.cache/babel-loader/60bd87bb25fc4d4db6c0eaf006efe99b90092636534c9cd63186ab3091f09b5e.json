{"ast":null,"code":"import { normalizeStyle as _normalizeStyle, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, withModifiers as _withModifiers, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nimport _imports_0 from '@/icons/blizzard.svg';\nimport _imports_1 from '@/icons/drop.svg';\nimport _imports_2 from '@/icons/fire.svg';\nimport _imports_3 from '@/icons/moon.svg';\nimport _imports_4 from '@/icons/wind.svg';\nimport _imports_5 from '@/icons/tornado.svg';\nvar _withScopeId = function _withScopeId(n) {\n  return _pushScopeId(\"data-v-7e3130a4\"), n = n(), _popScopeId(), n;\n};\nvar _hoisted_1 = {\n  \"class\": \"icon\"\n};\nvar _hoisted_2 = {\n  key: 1,\n  src: _imports_0,\n  alt: \"\"\n};\nvar _hoisted_3 = {\n  key: 2,\n  src: _imports_1,\n  alt: \"\"\n};\nvar _hoisted_4 = {\n  key: 3,\n  src: _imports_2,\n  alt: \"\"\n};\nvar _hoisted_5 = {\n  key: 4,\n  src: _imports_3,\n  alt: \"\"\n};\nvar _hoisted_6 = {\n  key: 5,\n  src: _imports_4,\n  alt: \"\"\n};\nvar _hoisted_7 = {\n  key: 6,\n  src: _imports_5,\n  alt: \"\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _this = this;\n  return _openBlock(), _createElementBlock(\"div\", {\n    \"class\": \"cell\",\n    onClick: [_cache[3] || (_cache[3] = function () {\n      return $options.nextFx && $options.nextFx.apply($options, arguments);\n    }), _cache[4] || (_cache[4] = _withModifiers(function () {\n      return $options.setToBypass && $options.setToBypass.apply($options, arguments);\n    }, [\"shift\"]))],\n    onMousedown: _cache[5] || (_cache[5] = function () {\n      return $options.fxDown && $options.fxDown.apply($options, arguments);\n    })\n  }, [_createElementVNode(\"div\", _hoisted_1, [this.typeId === 0 ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 0,\n    ref: \"plus\",\n    style: _normalizeStyle(this.iconDiv),\n    onMouseover: _cache[0] || (_cache[0] = function () {\n      return _this.onIconEnter && _this.onIconEnter.apply(_this, arguments);\n    }),\n    onMouseout: _cache[1] || (_cache[1] = function () {\n      return $options.onIconLeave && $options.onIconLeave.apply($options, arguments);\n    })\n  }, \" +\", 36 /* STYLE, HYDRATE_EVENTS */)) : _createCommentVNode(\"v-if\", true), this.typeId === 1 ? (_openBlock(), _createElementBlock(\"img\", _hoisted_2)) : _createCommentVNode(\"v-if\", true), this.typeId === 2 ? (_openBlock(), _createElementBlock(\"img\", _hoisted_3)) : _createCommentVNode(\"v-if\", true), this.typeId === 3 ? (_openBlock(), _createElementBlock(\"img\", _hoisted_4)) : _createCommentVNode(\"v-if\", true), this.typeId === 4 ? (_openBlock(), _createElementBlock(\"img\", _hoisted_5)) : _createCommentVNode(\"v-if\", true), this.typeId === 5 ? (_openBlock(), _createElementBlock(\"img\", _hoisted_6)) : _createCommentVNode(\"v-if\", true), this.typeId === 6 ? (_openBlock(), _createElementBlock(\"img\", _hoisted_7)) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", {\n    \"class\": \"glow\",\n    style: _normalizeStyle($options.computedGlowStyle),\n    onMousedown: _cache[2] || (_cache[2] = function () {\n      return $options.fxDown && $options.fxDown.apply($options, arguments);\n    })\n  }, null, 36 /* STYLE, HYDRATE_EVENTS */)], 32 /* HYDRATE_EVENTS */);\n}","map":{"version":3,"mappings":";OAIoCA,UAA0B;OAC1BC,UAAsB;OACtBC,UAAsB;OACtBC,UAAsB;OACtBC,UAAsB;OACtBC,UAAyB;;;;;EAPpD,SAAM;AAAM;;;EAEeC,GAA0B,EAA1BN,UAA0B;EAACO,GAAG,EAAC;;;;EAC/BD,GAAsB,EAAtBL,UAAsB;EAACM,GAAG,EAAC;;;;EAC3BD,GAAsB,EAAtBJ,UAAsB;EAACK,GAAG,EAAC;;;;EAC3BD,GAAsB,EAAtBH,UAAsB;EAACI,GAAG,EAAC;;;;EAC3BD,GAAsB,EAAtBF,UAAsB;EAACG,GAAG,EAAC;;;;EAC3BD,GAAyB,EAAzBD,UAAyB;EAACE,GAAG,EAAC;;;;uBARhEC,oBAYM;IAZD,SAAM,MAAM;IAAEC,OAAK;aAAEC,6DAAM;IAAA;aAAgBA,uEAAW;IAAA;IAAGC,WAAS;MAAA,OAAED,6DAAM;IAAA;MAC7EE,oBAQM,OARNC,UAQM,QAPYC,MAAM,wBAAtBN,oBAA6H;;IAA/FO,GAAG,EAAC,MAAM;IAAEC,KAAK,uBAAOC,OAAO;IAAGC,WAAS;MAAA,aAAOC,WAAW,UAAXA,WAAW;IAAA;IAAGC,UAAQ;MAAA,OAAEV,uEAAW;IAAA;KAAE,IAAE,6EACvGI,MAAM,wBAAtBN,oBAAgE,OAAhEa,UAAgE,6CAChDP,MAAM,wBAAtBN,oBAA4D,OAA5Dc,UAA4D,6CAC5CR,MAAM,wBAAtBN,oBAA4D,OAA5De,UAA4D,6CAC5CT,MAAM,wBAAtBN,oBAA4D,OAA5DgB,UAA4D,6CAC5CV,MAAM,wBAAtBN,oBAA4D,OAA5DiB,UAA4D,6CAC5CX,MAAM,wBAAtBN,oBAA+D,OAA/DkB,UAA+D,0CAEjEd,oBACM;IADD,SAAM,MAAM;IAAEI,KAAK,kBAAEN,0BAAiB;IAAGC,WAAS;MAAA,OAAED,6DAAM;IAAA","names":["_imports_0","_imports_1","_imports_2","_imports_3","_imports_4","_imports_5","src","alt","_createElementBlock","onClick","$options","onMousedown","_createElementVNode","_hoisted_1","typeId","ref","style","iconDiv","onMouseover","onIconEnter","onMouseout","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7"],"sourceRoot":"","sources":["C:\\Home\\Projects\\Programmazione\\WebStorm\\myZenythPolisinT\\zenyth_polisint\\src\\views\\Synth\\Effects\\FxCell.vue"],"sourcesContent":["<template>\r\n  <div class=\"cell\" @click=\"nextFx\" @click.shift=\"setToBypass\" @mousedown=\"fxDown\">\r\n    <div class=\"icon\">\r\n      <div v-if=\"this.typeId === 0\" ref=\"plus\" :style=\"this.iconDiv\" @mouseover=\"this.onIconEnter\" @mouseout=\"onIconLeave\"> +</div>\r\n      <img v-if=\"this.typeId === 1\" src=\"@/icons/blizzard.svg\" alt=\"\">\r\n      <img v-if=\"this.typeId === 2\" src=\"@/icons/drop.svg\" alt=\"\">\r\n      <img v-if=\"this.typeId === 3\" src=\"@/icons/fire.svg\" alt=\"\">\r\n      <img v-if=\"this.typeId === 4\" src=\"@/icons/moon.svg\" alt=\"\">\r\n      <img v-if=\"this.typeId === 5\" src=\"@/icons/wind.svg\" alt=\"\">\r\n      <img v-if=\"this.typeId === 6\" src=\"@/icons/tornado.svg\" alt=\"\">\r\n    </div>\r\n    <div class=\"glow\" :style=\"computedGlowStyle\" @mousedown=\"fxDown\">\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { isSVGTag } from '@vue/shared';\r\nimport MyEffect from \"@/views/Synth/Effects/MyFx\";\r\nimport {Gain, getDestination} from \"tone\";\r\nimport { nextTick } from \"vue\";\r\n\r\nconst types = ['none', 'reverb', 'delay', 'distortion', 'vibrato', 'pan', 'chorus'];\r\nconst Fx_colors = ['transparent', 'lightblue', 'deepskyblue', 'red', 'orange', 'darkorchid', 'yellow'];\r\nexport default {\r\n  props: [\"chainId\", \"id\", \"ref\"],\r\n\r\n  data() {\r\n    return {\r\n      modulation: 0,\r\n      is_down: false,\r\n      typeId: 0,\r\n      volume: 0,\r\n\r\n      //variables to solve\r\n      //dragging and clicking interference\r\n      startX: 0,\r\n      startY: 0,\r\n      endX: 0,\r\n      endY: 0,\r\n      threshold: 2, // adjust as needed\r\n    };\r\n  },\r\n  mounted() {\r\n    // gesture listeners\r\n    document.addEventListener(\"mouseup\", this.onMouseup);\r\n    document.addEventListener(\"mousemove\", this.onMousemove);\r\n    // init effect as bypass (a gain node)\r\n    this.effect = new MyEffect({ typeId: types[this.typeId], modulation: this.modulation })\r\n    // this.effect = this.fxHelper.generateToneFx('none');\r\n    // create the effect in the global fx matrix\r\n    this.fxChains[this.chainId][this.id] = this.effect;\r\n    // console.log(\"fx chain: \" + this.chainId + \" - fx id: \" + this.id)\r\n    // console.log(this.chainId, \" \", this.id)\r\n\r\n    // notify parent that each filter has been created\r\n    if (this.chainId === this.nFxChains - 1 && this.id === this.nFxXchain) {\r\n      this.$emit(\"fxMounted\")\r\n    }\r\n  },\r\n\r\n  computed: {\r\n    computedGlowStyle() {\r\n      return {\r\n        opacity: (this.modulation + 0.3) * 100 + \"%\",\r\n        background: Fx_colors[this.typeId]\r\n      }\r\n    },\r\n    iconDiv() {\r\n      let color = 'black'\r\n      if (this.chainId === 0) color = this.colors.purple.medium\r\n      if (this.chainId === 1) color = this.colors.green.medium\r\n      if (this.chainId === 2) color = this.colors.pink.medium\r\n      return {\r\n        color: color,\r\n      }\r\n    },\r\n    iconDivBlack(){\r\n      let color = 'black'\r\n      return {\r\n        color: color,\r\n      }\r\n    },\r\n    onIconEnter() {\r\n      this.$refs['plus'].style.color = 'black'\r\n    },\r\n    onIconLeave() {\r\n      let color = 'black'\r\n      if (this.chainId === 0) color = this.colors.purple.medium\r\n      if (this.chainId === 1) color = this.colors.green.medium\r\n      if (this.chainId === 2) color = this.colors.pink.medium\r\n      this.$refs['plus'].style.color = color\r\n    }\r\n    /*     onIconLeave(){\r\n          let color = 'black'\r\n          if(this.chainId === 0 ) color = this.colors.purple.medium\r\n          if(this.chainId === 1 ) color = this.colors.green.medium\r\n          if(this.chainId === 2 ) color = this.colors.pink.medium\r\n          this.$refs['plus'].style.color = color\r\n        } */\r\n  },\r\n\r\n  components: { isSVGTag },\r\n\r\n  methods: {\r\n    // ------------------ USER INTERACTIONS -----------------------\r\n    nextFx() {\r\n      //calculate distance between mouseDown and mouseUp, if it is more than threshold pixels, then it is a drag\r\n      const distance = Math.sqrt(\r\n        Math.pow(this.endX - this.startX, 2) +\r\n        Math.pow(this.endY - this.startY, 2)\r\n      );\r\n\r\n      if (distance <= this.threshold) {\r\n        if (!this.is_down) {\r\n          // change fx type and index\r\n          this.typeId = this.generateNextTypeIndex();\r\n          let fxType = types[this.typeId]\r\n          //console.log(fxType)\r\n\r\n          this.changeFxType(fxType)\r\n        }\r\n      }\r\n\r\n    },\r\n\r\n    changeFxType(fxType) {\r\n      // disconnect old effect\r\n      this.effect.disconnect();\r\n      this.effect.dispose();\r\n\r\n      // create new effect\r\n      this.effect = new MyEffect({ type: fxType, modulation: this.modulation })\r\n      this.effect.setFxParams({ type: fxType, mod: this.modulation })\r\n\r\n      // attach new fx in the global fx matrix\r\n      // init effect\r\n      this.fxChains[this.chainId][this.id] = this.effect;\r\n      // connect effect\r\n      this.fxChains[this.chainId][this.id-1].connect(this.fxChains[this.chainId][this.id].getToneReference());\r\n      if(this.fxChains[this.chainId][this.id+1] instanceof MyEffect) {\r\n        this.fxChains[this.chainId][this.id].connect(this.fxChains[this.chainId][this.id + 1].getToneReference())\r\n      } else if(this.fxChains[this.chainId][this.id+1] instanceof Gain){\r\n        this.fxChains[this.chainId][this.id].connect(this.fxChains[this.chainId][this.id + 1])\r\n      }\r\n      //console.log(this.fxChains)\r\n\r\n      /* // debug global fx matrix\r\n      this.fxChains.forEach((chain) => {\r\n        chain.forEach((fx) => {\r\n          if (fx instanceof MyEffect){\r\n            console.log(fx.getToneReference())\r\n          } else { console.log(fx) }\r\n        })\r\n      })*/\r\n    },\r\n\r\n    generateRandomTypeIndex() {\r\n      return Math.round(Math.random() * 10 + 1) % types.length\r\n    },\r\n\r\n    generateNextTypeIndex() {\r\n      return (this.typeId + 1) % types.length;\r\n    },\r\n\r\n    setToBypass() {\r\n      this.typeId = 0;\r\n      this.changeFxType('none')\r\n\r\n      //console.log(\"set fx in position \" + this.chainId + \" - \" + this.id + \" to bypass\")\r\n    },\r\n\r\n    fxDown(e) {\r\n      //save mouseDown position\r\n      this.startX = e.clientX;\r\n      this.startY = e.clientY;\r\n\r\n      if (!this.is_down)\r\n        this.is_down = true;\r\n    },\r\n    onMouseup(e) {\r\n      //save mouseUp position\r\n      this.endX = e.clientX;\r\n      this.endY = e.clientY;\r\n      if (this.is_down)\r\n        this.is_down = false;\r\n    },\r\n    onMousemove(event) {\r\n      if (this.is_down) {\r\n        if (event.movementY < 0) {\r\n          this.modulation = Math.min(this.modulation - event.movementY / 100, 1);\r\n        } else {\r\n          this.modulation = Math.max(this.modulation - event.movementY / 100, 0);\r\n        }\r\n        this.effect.setFxParams({ fx: this.effect, typeId: this.typeId, mod: this.modulation })\r\n\r\n        // console.log(this.modulation);\r\n      }\r\n    }\r\n  },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.cell {\r\n  position: relative;\r\n  height: 85%;\r\n  background-color: transparent;\r\n  display: flex;\r\n  margin: 10%;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n.icon {\r\n  display: flex;\r\n  aspect-ratio: 1/1;\r\n  position: absolute;\r\n  z-index: 2;\r\n  background-color: transparent;\r\n}\r\n\r\n.icon div {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: 1.5vw;\r\n  height: 100%;\r\n  aspect-ratio: 1/1;\r\n  background-color: transparent;\r\n}\r\n\r\n.icon img {\r\n  width: 1.5vw;\r\n  aspect-ratio: 1/1;\r\n  opacity: 80%;\r\n  -webkit-user-drag: none;\r\n}\r\n\r\n.glow {\r\n  border-radius: 5%;\r\n  flex: 1;\r\n  height: 100%;\r\n  width: 100%;\r\n  position: absolute;\r\n  z-index: 1;\r\n  background-color: red;\r\n}\r\n\r\n.glow div {\r\n  height: 100%;\r\n  width: 100%;\r\n  opacity: 100%;\r\n  color: black;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: 2vw;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createElementVNode as _createElementVNode, normalizeStyle as _normalizeStyle, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nvar _withScopeId = function _withScopeId(n) {\n  return _pushScopeId(\"data-v-245c68f8\"), n = n(), _popScopeId(), n;\n};\nvar _hoisted_1 = {\n  \"class\": \"knobs\"\n};\nvar _hoisted_2 = [\"onMousedown\"];\nvar _hoisted_3 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"div\", {\n    \"class\": \"knob_fader_background\"\n  }, null, -1);\n});\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.knobList, function (knob) {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: knob.id,\n      ref_for: true,\n      ref: knob.ref,\n      \"class\": \"knob\",\n      onMousedown: function onMousedown($event) {\n        return $options.mouseDown(knob.id);\n      }\n    }, [_hoisted_3, knob.isOn === true ? (_openBlock(), _createElementBlock(\"div\", {\n      key: 0,\n      \"class\": \"knob_fader\",\n      style: _normalizeStyle($options.computedFaderStyle(knob.id))\n    }, null, 4)) : _createCommentVNode(\"\", true)], 40, _hoisted_2);\n  }), 128))]);\n}","map":{"version":3,"mappings":";;;;;EACO,SAAM;AAAO;;;sBAEdA,oBAAyC;IAApC,SAAM;EAAuB;AAAA;;uBAFtCC,oBAKM,OALNC,UAKM,sBAJJD,oBAGME,6BAHcC,cAAQ,YAAhBC,IAAI;yBAAhBJ,oBAGM;MAHyBK,GAAG,EAAED,IAAI,CAACE,EAAE;;MAAGC,GAAG,EAAEH,IAAI,CAACG,GAAG;MAAE,SAAM,MAAM;MAAEC,WAAS;QAAA,OAAEC,kBAAS,CAACL,IAAI,CAACE,EAAE;MAAA;QACrGI,UAAyC,EAC9BN,IAAI,CAACO,IAAI,2BAApBX,oBAA2F;;MAA9D,SAAM,YAAY;MAAEY,KAAK,kBAAEH,2BAAkB,CAACL,IAAI,CAACE,EAAE","names":["_createElementVNode","_createElementBlock","_hoisted_1","_Fragment","$data","knob","key","id","ref","onMousedown","$options","_hoisted_3","isOn","style"],"sourceRoot":"","sources":["/Users/eliapirrello/Documents/GitHub/zenyth/src/views/Synth/Modulators/Knobs.vue"],"sourcesContent":["<template>\n  <div class=\"knobs\">\n    <div v-for=\"knob in knobList\" :key=\"knob.id\" :ref=\"knob.ref\" class=\"knob\" @mousedown=\"mouseDown(knob.id)\">\n      <div class=\"knob_fader_background\"></div>\n      <div v-if=\"knob.isOn===true\" class=\"knob_fader\" :style=\"computedFaderStyle(knob.id)\"></div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { isProxy, toRaw } from 'vue';\nexport default {\n  props: [\"type\", \"id\", \"parameters\"],\n  name: \"Knobs\",\n  data() {\n    return {\n      knobList: [],\n      freeKnobs: this.nKnobs,\n      isMouseDown: false,\n      selectedKnobId: \"\",\n    }\n  },\n  mounted() {\n    for (let i = 0; i < this.nKnobs; i++) {\n      this.knobList.push({id: i, ref: \"knob\" + i, isOn:false, amount: 0, object: null, target: null});\n    }\n\n    //Set available state (isDraggable)\n    this.isDraggable[this.type][this.id] = true\n\n  },\n  methods: {\n    updateParameters(parameters=this.parameters){\n     // console.log(\"UPDATING PARAMETERS\", parameters)\n      for(let i=0; i<this.nKnobs; i++){\n        if(this.knobList[i].isOn) {\n          this.knobList[i].object.setModulatorParameters(this.type, this.knobList[i].target, parameters)\n          break\n        }\n      }\n    },\n\n    knobText(id){\n      if(this.knobList[id].isOn===true){\n        return this.knobList[id].amount\n      }else{\n        return \"yo\"\n      }\n    },\n\n    addLink(object, target, color, parameters=this.parameters){\n      for(let i=0; i<this.nKnobs; i++){\n        if(!this.knobList[i].isOn) {\n          this.knobList[i].color = color\n          this.knobList[i].isOn = true;\n          this.knobList[i].amount= 0.5;\n          this.knobList[i].object = object\n          this.knobList[i].target = target\n          this.freeKnobs -= 1;\n\n          //set modulator amount at object\n          console.log(\"ADDING LINK\")\n          console.log(parameters)\n          object.setModulatorParameters(this.type, target, parameters)\n          object.setModulatorAmount(this.type, target, this.knobList[i].amount)\n          break;\n        }\n      }\n      if (this.freeKnobs === 0) this.isDraggable[this.type][this.id] = false\n      this.$emit(\"isDraggableUpdate\", this.isDraggable)\n      //todo: event to set isDraggable inside modSelector NOT WORKING\n    },\n\n    removeLink(object, target){\n      //console.log(\"REMOVING LINK TO\"+target)\n      //console.log(object)\n\n      this.knobList.forEach((knob) => {\n        knob.amount = knob.amount+0.01\n        knob.amount = knob.amount-0.01\n        knob = toRaw(knob)\n        if (knob.object === object && knob.target === target) {\n          knob.object.setModulatorAmount(this.type, target, 0)\n          //remove info from knob\n          knob.amount = 0\n          knob.isOn = false\n          knob.object = null\n          knob.target = null\n        }\n      })\n      this.freeKnobs++;\n      this.isDraggable[this.type][this.id] = true\n    },\n\n    handleMouseMove(e) {\n\n      if(this.isMouseDown &&  this.knobList[this.selectedKnobId].isOn){\n        this.knobList[this.selectedKnobId].amount = this.knobList[this.selectedKnobId].amount - Math.floor(e.movementY) / 100;\n        this.knobList[this.selectedKnobId].amount = Math.max(this.knobList[this.selectedKnobId].amount, 0)\n        this.knobList[this.selectedKnobId].amount = Math.min(this.knobList[this.selectedKnobId].amount, 1)\n        this.knobList[this.selectedKnobId].object.setModulatorAmount(this.type, this.knobList[this.selectedKnobId].target, this.knobList[this.selectedKnobId].amount)\n\n      }\n\n    },\n\n    mouseDown(knobId){\n      this.isMouseDown = true;\n      this.selectedKnobId = knobId;\n    },\n\n    computedFaderStyle(id) {\n      let rawKnobAmount = this.knobList[id].amount\n        return {\n          backgroundColor: this.knobList[id].color,\n          height: (rawKnobAmount * 100).toString() + \"%\"\n        }\n    },\n\n    handleMouseUp() {\n      this.isMouseDown = false;\n    },\n  },\n  computed: {\n  }\n}\n</script>\n\n<style scoped>\n.knobs {\n  margin: 2%;\n  border-radius: 0.3vw;\n  box-sizing: border-box;\n  position: relative;\n  display: grid;\n  grid-template-rows: repeat(3, 1fr);\n  column-gap: 1vw;\n  row-gap: 1vw;\n  grid-template-columns: repeat(3, 1fr);\n  align-content: center;\n  justify-content: center;\n  align-items: stretch;\n  justify-items: center;\n  padding: 4%;\n  border: 0.06vw solid black;\n}\n\n.knob {\n  aspect-ratio: 1/1;\n  clip-path: circle(50%);\n  position: relative;\n  vertical-align: bottom;\n  background-color: whitesmoke;\n  display: grid;\n}\n\n.knob_fader {\n  position: absolute;\n  height: 0%;\n  box-sizing: border-box;\n  align-self: end;\n  width: 100%;\n  background-color: transparent;\n  border-bottom-left-radius: 0.4vw;\n  border-bottom-right-radius: 0.4vw;\n  background-clip: content-box;\n  padding: 0.1vw;\n  z-index: 101;\n}\n\n.knob_fader_background {\n  clip-path: circle(50%);\n  box-sizing: border-box;\n  aspect-ratio: 1/1;\n  height: 100%;\n  background-color: transparent;\n  border: 0.1vw solid black;\n  border-radius: 50%;\n  z-index: 102;\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
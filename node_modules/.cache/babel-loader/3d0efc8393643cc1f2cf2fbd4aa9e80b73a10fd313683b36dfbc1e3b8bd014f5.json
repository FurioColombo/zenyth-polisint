{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.array.concat.js\";\n/**\n * Assert that the statement is true, otherwise invoke the error.\n * @param statement\n * @param error The message which is passed into an Error\n */\nexport function assert(statement, error) {\n  if (!statement) {\n    throw new Error(error);\n  }\n}\n/**\n * Make sure that the given value is within the range\n */\nexport function assertRange(value, gte) {\n  var lte = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : Infinity;\n  if (!(gte <= value && value <= lte)) {\n    throw new RangeError(\"Value must be within [\".concat(gte, \", \").concat(lte, \"], got: \").concat(value));\n  }\n}\n/**\n * Make sure that the given value is within the range\n */\nexport function assertContextRunning(context) {\n  // add a warning if the context is not started\n  if (!context.isOffline && context.state !== \"running\") {\n    warn(\"The AudioContext is \\\"suspended\\\". Invoke Tone.start() from a user action to start the audio.\");\n  }\n}\n/**\n * The default logger is the console\n */\nvar defaultLogger = console;\n/**\n * Set the logging interface\n */\nexport function setLogger(logger) {\n  defaultLogger = logger;\n}\n/**\n * Log anything\n */\nexport function log() {\n  var _defaultLogger;\n  (_defaultLogger = defaultLogger).log.apply(_defaultLogger, arguments);\n}\n/**\n * Warn anything\n */\nexport function warn() {\n  var _defaultLogger2;\n  (_defaultLogger2 = defaultLogger).warn.apply(_defaultLogger2, arguments);\n}","map":{"version":3,"mappings":";;;AAAA;;;;;AAKA,OAAM,SAAUA,MAAM,CAACC,SAAkB,EAAEC,KAAa;EACvD,IAAI,CAACD,SAAS,EAAE;IACf,MAAM,IAAIE,KAAK,CAACD,KAAK,CAAC;;AAExB;AAEA;;;AAGA,OAAM,SAAUE,WAAW,CAACC,KAAa,EAAEC,GAAW,EAAgB;EAAA,IAAdC,GAAG,uEAAGC,QAAQ;EACrE,IAAI,EAAEF,GAAG,IAAID,KAAK,IAAIA,KAAK,IAAIE,GAAG,CAAC,EAAE;IACpC,MAAM,IAAIE,UAAU,iCAA0BH,GAAG,eAAKC,GAAG,qBAAWF,KAAK,EAAG;;AAE9E;AAEA;;;AAGA,OAAM,SAAUK,oBAAoB,CAACC,OAAqD;EACzF;EACA,IAAI,CAACA,OAAO,CAACC,SAAS,IAAID,OAAO,CAACE,KAAK,KAAK,SAAS,EAAE;IACtDC,IAAI,CAAC,+FAA+F,CAAC;;AAEvG;AAUA;;;AAGA,IAAIC,aAAa,GAAWC,OAAO;AAEnC;;;AAGA,OAAM,SAAUC,SAAS,CAACC,MAAc;EACvCH,aAAa,GAAGG,MAAM;AACvB;AAEA;;;AAGA,OAAM,SAAUC,GAAG,GAAe;EAAA;EACjC,+BAAa,EAACA,GAAG,iCAAS;AAC3B;AAEA;;;AAGA,OAAM,SAAUL,IAAI,GAAe;EAAA;EAClC,gCAAa,EAACA,IAAI,kCAAS;AAC5B","names":["assert","statement","error","Error","assertRange","value","gte","lte","Infinity","RangeError","assertContextRunning","context","isOffline","state","warn","defaultLogger","console","setLogger","logger","log"],"sourceRoot":"","sources":["../../../../Tone/core/util/Debug.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module","externalDependencies":[]}
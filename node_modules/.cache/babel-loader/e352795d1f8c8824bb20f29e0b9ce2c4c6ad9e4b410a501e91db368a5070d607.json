{"ast":null,"code":"import _classCallCheck from \"/Users/eliapirrello/Documents/GitHub/zenyth/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/eliapirrello/Documents/GitHub/zenyth/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/Users/eliapirrello/Documents/GitHub/zenyth/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _get from \"/Users/eliapirrello/Documents/GitHub/zenyth/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/eliapirrello/Documents/GitHub/zenyth/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/Users/eliapirrello/Documents/GitHub/zenyth/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/eliapirrello/Documents/GitHub/zenyth/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport { Delay } from \"../core/context/Delay\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { readOnly } from \"../core/util/Interface\";\nimport { FeedbackEffect } from \"./FeedbackEffect\";\n/**\n * FeedbackDelay is a DelayNode in which part of output signal is fed back into the delay.\n *\n * @param delayTime The delay applied to the incoming signal.\n * @param feedback The amount of the effected signal which is fed back through the delay.\n * @example\n * const feedbackDelay = new Tone.FeedbackDelay(\"8n\", 0.5).toDestination();\n * const tom = new Tone.MembraneSynth({\n * \toctaves: 4,\n * \tpitchDecay: 0.1\n * }).connect(feedbackDelay);\n * tom.triggerAttackRelease(\"A2\", \"32n\");\n * @category Effect\n */\nexport var FeedbackDelay = /*#__PURE__*/function (_FeedbackEffect) {\n  _inherits(FeedbackDelay, _FeedbackEffect);\n  var _super = _createSuper(FeedbackDelay);\n  function FeedbackDelay() {\n    var _this;\n    _classCallCheck(this, FeedbackDelay);\n    _this = _super.call(this, optionsFromArguments(FeedbackDelay.getDefaults(), arguments, [\"delayTime\", \"feedback\"]));\n    _this.name = \"FeedbackDelay\";\n    var options = optionsFromArguments(FeedbackDelay.getDefaults(), arguments, [\"delayTime\", \"feedback\"]);\n    _this._delayNode = new Delay({\n      context: _this.context,\n      delayTime: options.delayTime,\n      maxDelay: options.maxDelay\n    });\n    _this.delayTime = _this._delayNode.delayTime;\n    // connect it up\n    _this.connectEffect(_this._delayNode);\n    readOnly(_assertThisInitialized(_this), \"delayTime\");\n    return _this;\n  }\n  _createClass(FeedbackDelay, [{\n    key: \"dispose\",\n    value: function dispose() {\n      _get(_getPrototypeOf(FeedbackDelay.prototype), \"dispose\", this).call(this);\n      this._delayNode.dispose();\n      this.delayTime.dispose();\n      return this;\n    }\n  }], [{\n    key: \"getDefaults\",\n    value: function getDefaults() {\n      return Object.assign(FeedbackEffect.getDefaults(), {\n        delayTime: 0.25,\n        maxDelay: 1\n      });\n    }\n  }]);\n  return FeedbackDelay;\n}(FeedbackEffect);","map":{"version":3,"mappings":";;;;;;;;AAAA,SAASA,KAAK,QAAQ,uBAAuB;AAG7C,SAASC,oBAAoB,QAAQ,uBAAuB;AAC5D,SAASC,QAAQ,QAAQ,wBAAwB;AACjD,SAASC,cAAc,QAA+B,kBAAkB;AAOxE;;;;;;;;;;;;;;AAcA,WAAaC,aAAc;EAAA;EAAA;EAgB1B;IAAA;IAAA;IAEC,0BAAMH,oBAAoB,CAACG,aAAa,CAACC,WAAW,EAAE,EAAEC,SAAS,EAAE,CAAC,WAAW,EAAE,UAAU,CAAC,CAAC;IAhBrF,UAAI,GAAW,eAAe;IAiBtC,IAAMC,OAAO,GAAGN,oBAAoB,CAACG,aAAa,CAACC,WAAW,EAAE,EAAEC,SAAS,EAAE,CAAC,WAAW,EAAE,UAAU,CAAC,CAAC;IAEvG,MAAKE,UAAU,GAAG,IAAIR,KAAK,CAAC;MAC3BS,OAAO,EAAE,MAAKA,OAAO;MACrBC,SAAS,EAAEH,OAAO,CAACG,SAAS;MAC5BC,QAAQ,EAAEJ,OAAO,CAACI;KAClB,CAAC;IACF,MAAKD,SAAS,GAAG,MAAKF,UAAU,CAACE,SAAS;IAE1C;IACA,MAAKE,aAAa,CAAC,MAAKJ,UAAU,CAAC;IACnCN,QAAQ,gCAAO,WAAW,CAAC;IAAC;EAC7B;EAAC;IAAA;IAAA,OASD,mBAAO;MACN;MACA,IAAI,CAACM,UAAU,CAACK,OAAO,EAAE;MACzB,IAAI,CAACH,SAAS,CAACG,OAAO,EAAE;MACxB,OAAO,IAAI;IACZ;EAAC;IAAA;IAAA,OAZD,uBAAkB;MACjB,OAAOC,MAAM,CAACC,MAAM,CAACZ,cAAc,CAACE,WAAW,EAAE,EAAE;QAClDK,SAAS,EAAE,IAAI;QACfC,QAAQ,EAAE;OACV,CAAC;IACH;EAAC;EAAA;AAAA,EAtCiCR,cAAoC","names":["Delay","optionsFromArguments","readOnly","FeedbackEffect","FeedbackDelay","getDefaults","arguments","options","_delayNode","context","delayTime","maxDelay","connectEffect","dispose","Object","assign"],"sourceRoot":"","sources":["../../../Tone/effect/FeedbackDelay.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module","externalDependencies":[]}
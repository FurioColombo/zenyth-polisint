{"ast":null,"code":"import { normalizeStyle as _normalizeStyle, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", {\n    class: \"envelope_container\",\n    style: _normalizeStyle(this.envelope_container)\n  }, [_createElementVNode(\"div\", {\n    class: \"envelope\",\n    ref: \"envelope\",\n    style: _normalizeStyle(this.adsr)\n  }, [_createElementVNode(\"div\", {\n    class: \"attack_area\",\n    style: _normalizeStyle($options.attack_area),\n    onMousedown: _cache[0] || (_cache[0] = $event => $options.attack_down())\n  }, null, 36 /* STYLE, HYDRATE_EVENTS */), _createElementVNode(\"div\", {\n    class: \"decay_area\",\n    style: _normalizeStyle($options.decay_area),\n    onMousedown: _cache[1] || (_cache[1] = $event => $options.decay_down())\n  }, null, 36 /* STYLE, HYDRATE_EVENTS */), _createElementVNode(\"div\", {\n    class: \"sustain_area\",\n    style: _normalizeStyle($options.sustain_area),\n    onMousedown: _cache[2] || (_cache[2] = $event => $options.sustain_down())\n  }, null, 36 /* STYLE, HYDRATE_EVENTS */), _createElementVNode(\"div\", {\n    class: \"release_area\",\n    style: _normalizeStyle($options.release_area),\n    onMousedown: _cache[3] || (_cache[3] = $event => $options.release_down())\n  }, null, 36 /* STYLE, HYDRATE_EVENTS */), _createElementVNode(\"div\", {\n    class: \"attack_dot\",\n    style: _normalizeStyle($options.attack_dot),\n    onMousedown: _cache[4] || (_cache[4] = $event => $options.attack_down())\n  }, null, 36 /* STYLE, HYDRATE_EVENTS */), _createElementVNode(\"div\", {\n    class: \"decay_dot\",\n    style: _normalizeStyle($options.decay_dot),\n    onMousedown: _cache[5] || (_cache[5] = $event => $options.decay_down())\n  }, null, 36 /* STYLE, HYDRATE_EVENTS */), _createElementVNode(\"div\", {\n    class: \"release_dot\",\n    style: _normalizeStyle($options.release_dot),\n    onMousedown: _cache[6] || (_cache[6] = $event => $options.release_down())\n  }, null, 36 /* STYLE, HYDRATE_EVENTS */), _createElementVNode(\"div\", {\n    class: \"attack\",\n    style: _normalizeStyle(this.attack)\n  }, [_createElementVNode(\"div\", {\n    class: \"attack_color\",\n    style: _normalizeStyle(this.attack_Color)\n  }, null, 4 /* STYLE */)], 4 /* STYLE */), _createElementVNode(\"div\", {\n    class: \"decay\",\n    style: _normalizeStyle(this.decay)\n  }, [_createElementVNode(\"div\", {\n    class: \"decay_head\",\n    style: _normalizeStyle(this.decay_head)\n  }, null, 4 /* STYLE */), _createElementVNode(\"div\", {\n    class: \"decay_color\",\n    style: _normalizeStyle(this.decay_Color)\n  }, null, 4 /* STYLE */)], 4 /* STYLE */), _createElementVNode(\"div\", {\n    class: \"sustain\",\n    style: _normalizeStyle(this.sustain)\n  }, [_createElementVNode(\"div\", {\n    class: \"sustain_head\",\n    style: _normalizeStyle(this.sustain_head)\n  }, null, 4 /* STYLE */), _createElementVNode(\"div\", {\n    class: \"sustain_color\",\n    style: _normalizeStyle(this.sustain_Color)\n  }, null, 4 /* STYLE */)], 4 /* STYLE */), _createElementVNode(\"div\", {\n    class: \"release\",\n    style: _normalizeStyle(this.release)\n  }, [_createElementVNode(\"div\", {\n    class: \"release_color\",\n    style: _normalizeStyle(this.release_Color)\n  }, null, 4 /* STYLE */)], 4 /* STYLE */), _createElementVNode(\"div\", {\n    class: \"space\",\n    style: _normalizeStyle(this.space)\n  }, null, 4 /* STYLE */), _createCommentVNode(\"<div class=\\\"time_strech\\\" :style=\\\"this.time_Stretch\\\"></div>\")], 4 /* STYLE */)], 4 /* STYLE */);\n}","map":{"version":3,"mappings":";;uBACIA,oBA6BM;IA7BDC,KAAK,EAAC,oBAAoB;IAAEC,KAAK,uBAAOC,kBAAkB;MAC3DC,oBA2BM;IA3BDH,KAAK,EAAC,UAAU;IAACI,GAAG,EAAC,UAAU;IAAEH,KAAK,uBAAOI,IAAI;MAClDF,oBAA+E;IAA1EH,KAAK,EAAC,aAAa;IAAEC,KAAK,kBAAEK,oBAAW;IAAGC,WAAS,sCAAED,oBAAW;4CACrEH,oBAA4E;IAAvEH,KAAK,EAAC,YAAY;IAAEC,KAAK,kBAAEK,mBAAU;IAAGC,WAAS,sCAAED,mBAAU;4CAClEH,oBAAkF;IAA7EH,KAAK,EAAC,cAAc;IAAEC,KAAK,kBAAEK,qBAAY;IAAGC,WAAS,sCAAED,qBAAY;4CACxEH,oBAAkF;IAA7EH,KAAK,EAAC,cAAc;IAAEC,KAAK,kBAAEK,qBAAY;IAAGC,WAAS,sCAAED,qBAAY;4CACxEH,oBAA6E;IAAxEH,KAAK,EAAC,YAAY;IAAEC,KAAK,kBAAEK,mBAAU;IAAGC,WAAS,sCAAED,oBAAW;4CACnEH,oBAA0E;IAArEH,KAAK,EAAC,WAAW;IAAEC,KAAK,kBAAEK,kBAAS;IAAGC,WAAS,sCAAED,mBAAU;4CAChEH,oBAAgF;IAA3EH,KAAK,EAAC,aAAa;IAAEC,KAAK,kBAAEK,oBAAW;IAAGC,WAAS,sCAAED,qBAAY;4CAEtEH,oBAEM;IAFDH,KAAK,EAAC,QAAQ;IAAEC,KAAK,uBAAOO,MAAM;MACnCL,oBAA2D;IAAtDH,KAAK,EAAC,cAAc;IAAEC,KAAK,uBAAOQ,YAAY;4CAEvDN,oBAGM;IAHDH,KAAK,EAAC,OAAO;IAAEC,KAAK,uBAAOS,KAAK;MACjCP,oBAAuD;IAAlDH,KAAK,EAAC,YAAY;IAAEC,KAAK,uBAAOU,UAAU;2BAC/CR,oBAAyD;IAApDH,KAAK,EAAC,aAAa;IAAEC,KAAK,uBAAOW,WAAW;4CAErDT,oBAGM;IAHDH,KAAK,EAAC,SAAS;IAAEC,KAAK,uBAAOY,OAAO;MACrCV,oBAA2D;IAAtDH,KAAK,EAAC,cAAc;IAAEC,KAAK,uBAAOa,YAAY;2BACnDX,oBAA6D;IAAxDH,KAAK,EAAC,eAAe;IAAEC,KAAK,uBAAOc,aAAa;4CAEzDZ,oBAEM;IAFDH,KAAK,EAAC,SAAS;IAAEC,KAAK,uBAAOe,OAAO;MACrCb,oBAA6D;IAAxDH,KAAK,EAAC,eAAe;IAAEC,KAAK,uBAAOgB,aAAa;4CAGzDd,oBAA6C;IAAxCH,KAAK,EAAC,OAAO;IAAEC,KAAK,uBAAOiB,KAAK;2BAErCC,qFAAiE","names":["_createElementBlock","class","style","envelope_container","_createElementVNode","ref","adsr","$options","onMousedown","attack","attack_Color","decay","decay_head","decay_Color","sustain","sustain_head","sustain_Color","release","release_Color","space","_createCommentVNode"],"sourceRoot":"","sources":["/Users/guglielmofratticioli/Documents/POLIMI/FurioColombo.github.io/src/views/Synth/Modulators/EnvelopeVisualizer.vue"],"sourcesContent":["<template>\n    <div class=\"envelope_container\" :style=\"this.envelope_container\">\n        <div class=\"envelope\" ref=\"envelope\" :style=\"this.adsr\">\n            <div class=\"attack_area\" :style=\"attack_area\" @mousedown=\"attack_down()\"></div>\n            <div class=\"decay_area\" :style=\"decay_area\" @mousedown=\"decay_down()\"></div>\n            <div class=\"sustain_area\" :style=\"sustain_area\" @mousedown=\"sustain_down()\"></div>\n            <div class=\"release_area\" :style=\"release_area\" @mousedown=\"release_down()\"></div>\n            <div class=\"attack_dot\" :style=\"attack_dot\" @mousedown=\"attack_down()\"></div>\n            <div class=\"decay_dot\" :style=\"decay_dot\" @mousedown=\"decay_down()\"></div>\n            <div class=\"release_dot\" :style=\"release_dot\" @mousedown=\"release_down()\"></div>\n\n            <div class=\"attack\" :style=\"this.attack\">\n                <div class=\"attack_color\" :style=\"this.attack_Color\"></div>\n            </div>\n            <div class=\"decay\" :style=\"this.decay\">\n                <div class=\"decay_head\" :style=\"this.decay_head\"></div>\n                <div class=\"decay_color\" :style=\"this.decay_Color\"></div>\n            </div>\n            <div class=\"sustain\" :style=\"this.sustain\">\n                <div class=\"sustain_head\" :style=\"this.sustain_head\"></div>\n                <div class=\"sustain_color\" :style=\"this.sustain_Color\"></div>\n            </div>\n            <div class=\"release\" :style=\"this.release\">\n                <div class=\"release_color\" :style=\"this.release_Color\"></div>\n            </div>\n\n            <div class=\"space\" :style=\"this.space\"></div>\n\n            <!--<div class=\"time_strech\" :style=\"this.time_Stretch\"></div>-->\n        </div>\n    </div>\n</template>\n\n<script>\nexport default {\n    props: ['is_volume'],\n    data() {\n        return {\n            //tempEvent: null,\n            type: \"envelope\",\n            parameters: {\n                attack: 0.01,\n                attackCurve: \"linear\",\n                decay: 0.1,\n                decayCurve: \"linear\",\n                sustain: 0.1,\n                releaseCurve: \"linear\",\n                release: 0.1,\n                sustain_lev: 0.5,\n                duration: 4,\n            },\n            is_attack_down: false,\n            is_decay_down: false,\n            is_sustain_down: false,\n            is_release_down: false,\n            test: 10,\n        };\n    },\n    mounted() {\n        \n    },\n    methods: {\n\n        handleMouseMove(e) {\n            //console.log(e)\n            //NOT NECESSAARY, FOR DEBUGGING\n            if (this.isDragging) {\n                this.tempEvent = e;\n            }\n            let p = this.parameters;\n            if (this.is_attack_down) { // attack\n                if (e.movementX > 0) {\n                    /* console.log(p.attack,); */\n                    p.attack = Math.min(p.attack + e.movementX / (this.$refs.envelope.offsetWidth), 1 - (p.decay + p.sustain + p.release));\n                }\n                if (e.movementX < 0) {\n                   /*  console.log(p.attack); */\n                    p.attack = Math.max(p.attack + e.movementX / (this.$refs.envelope.offsetWidth), 0);\n                }\n            }\n            if (this.is_decay_down) { // decay\n                if (e.movementX > 0) {\n                   /*  console.log(p.attack,); */\n                    p.decay = Math.min(p.decay + e.movementX / (this.$refs.envelope.offsetWidth), 1 - (p.attack + p.sustain + p.release));\n                }\n                if (e.movementX < 0) {\n                    /* console.log(p.attack); */\n                    p.decay = Math.max(p.decay + e.movementX / (this.$refs.envelope.offsetWidth), 0);\n                }\n                if (e.movementY > 0) {\n                    p.sustain_lev = Math.max(p.sustain_lev - e.movementY / 100, 0);\n                } else if (e.movementY < 0) {\n                    p.sustain_lev = Math.min(p.sustain_lev - e.movementY / 100, 1);\n                }\n                /* console.log(p.sustain_lev); */\n            }\n            if (this.is_sustain_down) { // sustain\n                if (e.movementX > 0) {\n                    /* console.log(p.attack,); */\n                    p.decay = Math.min(p.decay + e.movementX / (this.$refs.envelope.offsetWidth), 1 - (p.attack + p.sustain + p.release));\n                }\n                if (e.movementX < 0) {\n                    /* console.log(p.attack); */\n                    p.decay = Math.max(p.decay + e.movementX / (this.$refs.envelope.offsetWidth), 0);\n                }\n                if (e.movementY > 0) {\n                    p.sustain_lev = Math.max(p.sustain_lev - e.movementY / 100, 0);\n                } else if (e.movementY < 0) {\n                    p.sustain_lev = Math.min(p.sustain_lev - e.movementY / 100, 1);\n                }\n                /* console.log(p.sustain_lev); */\n            }\n            if (this.is_release_down) { // release\n                if (e.movementX > 0) {\n                    /* console.log(p.attack,); */\n                    p.release = Math.min(p.release + e.movementX / (this.$refs.envelope.offsetWidth), 1 - (p.decay + p.sustain + p.attack));\n                }\n                if (e.movementX < 0) {\n                    /* console.log(p.attack); */\n                    p.release = Math.max(p.release + e.movementX / (this.$refs.envelope.offsetWidth), 0);\n                }\n            }\n            if (this.is_attack_down || this.is_decay_down || this.is_sustain_down || this.is_release_down) {\n\n                let parameters = {\n                    attack: this.parameters.attack * this.parameters.duration,\n                    decay: this.parameters.decay * this.parameters.duration,\n                    sustain: this.parameters.sustain_lev,\n                    release: this.parameters.release * this.parameters.duration,\n                }\n                this.$emit(\"paramRefresh\", parameters)\n            }\n\n\n        },\n        handleMouseUp() {\n            /*if (this.isDragging) {\n              console.log(this.tempEvent.target)\n              this.isDragging = false\n            }*/\n            //console.log(\"mouseUp\");\n            this.is_attack_down = false;\n            this.is_decay_down = false;\n            this.is_sustain_down = false;\n            this.is_release_down = false;\n        },\n        attack_down() {\n            if (!this.is_attack_down) this.is_attack_down = true;\n        },\n        decay_down() {\n            if (!this.is_decay_down) this.is_decay_down = true;\n        },\n        sustain_down() {\n            if (!this.is_sustain_down) this.is_sustain_down = true;\n        },\n        release_down() {\n            if (!this.is_release_down) this.is_release_down = true;\n        }\n    },\n    computed: {\n        envelope_container() {\n            let color = '';\n            if (this.$props['is_volume']) color = this.colors.pink.medium\n            else color = this.colors.azure.medium\n            return {\n                background: color\n            }\n        },\n        adsr() {\n            /* console.log(((this.parameters.attack - this.parameters.sustain) * 100).toFixed(2)) */\n            let color = '';\n            if (this.$props['is_volume']) color = '#f8e7e6'\n            else color = '#ceeae7'\n            return {\n                display: \"grid\",\n                opacity: '100%',\n                background: color,\n                gridTemplateColumns: this.parameters.attack * 100 + '% '\n                    + Math.ceil(this.parameters.decay * 100) + '% '\n                    + Math.ceil(this.parameters.sustain * 100) + '% '\n                    + Math.ceil(this.parameters.release * 100) + '% '\n                    + '10% '\n            };\n        },\n        attack() {\n            return {\n                height: \"100%\",\n                width: \"100%\",\n                clipPath: \"polygon(0% 100%, 100% 0%, 100% 100%)\",\n            };\n        },\n        decay() {\n            return {\n                height: \"100%\",\n            };\n        },\n        sustain() {\n            return {\n                display: \"grid\",\n                gridTemplateRows:\n                    (1 - this.parameters.sustain_lev) * 100 +\n                    \"% \" +\n                    this.parameters.sustain_lev * 100 +\n                    \"%\",\n                height: \"100%\",\n            };\n        },\n        release() {\n            return {\n                height: \"100%\",\n                clipPath:\n                    \"polygon(0% \" +\n                    (1 - this.parameters.sustain_lev) * 100 +\n                    \"%, 0% 100%, 100% 100%)\",\n            };\n        },\n        attack_Color() {\n            let color = '';\n            if (this.$props['is_volume']) color = this.colors.pink.dark\n            else color = this.colors.azure.dark\n            return {\n                height: \"100%\",\n                background: color,\n            };\n        },\n        decay_Color() {\n            let color ='';\n            if(this.$props['is_volume']) color= this.colors.pink.medium\n            else color = this.colors.azure.medium\n            return {\n                position: 'relative',\n                height: \"100%\",\n                background: color,\n                top: (this.parameters.sustain_lev - 1) * 100 + \"%\",\n            };\n        },\n        sustain_Color() {\n            let color ='';\n            if(this.$props['is_volume']) color= this.colors.pink.light\n            else color = this.colors.azure.light\n            return {\n                zIndex: '1',\n                height: \"100%\",\n                background: color,\n            };\n        },\n        release_Color() {\n            let color ='';\n            if(this.$props['is_volume']) color= this.colors.pink.light\n            else color = this.colors.azure.light\n            return {\n                height: \"100%\",\n                background: color,\n                opacity: '60%'\n            };\n        },\n        decay_head() {\n            let color ='';\n            if(this.$props['is_volume']) color= '#f8e7e6'\n            else color = '#ceeae7'\n            return {\n                position: 'relative',\n                zIndex: '3',\n                background: color,\n                opacity:'100%',\n                top:'-1%',\n                clipPath: \"polygon(0% 0%, 100% 100%, 100% 0%)\",\n                height: (1 - this.parameters.sustain_lev) * 100 + \"%\",\n                width: \"102%\",\n            };\n        },\n        sustain_head() {\n            return {\n                background: \"transparent\",\n            };\n        },\n\n        attack_dot() {\n            let color ='';\n            let borderColor='';\n            if(this.$props['is_volume']){ \n                color= this.colors.pink.dark\n                borderColor = this.colors.pink.glow\n                }\n            else {\n                color = this.colors.azure.dark\n                borderColor = this.colors.azure.glow\n            }\n            return {\n                border: '.1vw solid ' + borderColor,\n                background: color,\n                aspectRatio: \"1/1\",\n                height: \"7%\",\n                position: \"absolute\",\n                zIndex: \"4\",\n                borderRadius: \"50%\",\n                left: this.parameters.attack * 100 - 1 + \"%\",\n                top: \"-2%\",\n            };\n        },\n        decay_dot() {\n            let color ='';\n            let borderColor='';\n            if(this.$props['is_volume']){ \n                color= this.colors.pink.medium\n                borderColor = this.colors.pink.dark\n                }\n            else {\n                color = this.colors.azure.medium\n                borderColor = this.colors.azure.dark\n            }\n            return {\n                border: '.1vw solid ' + borderColor,\n                background: color,\n                aspectRatio: \"1/1\",\n                height: \"7%\",\n                position: \"absolute\",\n                zIndex: \"5\",\n                borderRadius: \"50%\",\n                left: (this.parameters.decay + this.parameters.attack) * 100 - .9 + \"%\",\n                top: (1 - this.parameters.sustain_lev) * 100 - 5 + \"%\",\n            };\n        },\n        release_dot() {\n            let color ='';\n            let borderColor='';\n            if(this.$props['is_volume']){ \n                color= this.colors.pink.glow\n                borderColor = this.colors.pink.dark\n                }\n            else {\n                color = this.colors.azure.glow\n                borderColor = this.colors.azure.dark\n            }\n            return {\n                border: '.1vw solid ' + borderColor,\n                opacity: '60%',\n                background: color,\n                aspectRatio: \"1/1\",\n                height: \"7%\",\n                position: \"absolute\",\n                zIndex: \"2\",\n                borderRadius: \"50%\",\n                left: (this.parameters.attack + this.parameters.decay + this.parameters.sustain + this.parameters.release) * 100 - 1 + \"%\",\n                top: \"95%\",\n            };\n        },\n        space() {\n            return {\n                background: \"transparent\",\n            };\n        },\n\n        attack_area() {\n            return {\n                background: \"transparent\",\n                aspectRatio: \"1/1\",\n                width: \"10%\",\n                position: \"absolute\",\n                zIndex: \"4\",\n                borderRadius: \"50%\",\n                left: this.parameters.attack * 100 - 5 + \"%\",\n            };\n        },\n        decay_area() {\n            return {\n                background: \"transparent\",\n                aspectRatio: \"1/1\",\n                width: \"10%\",\n                position: \"absolute\",\n                zIndex: \"4\",\n                borderRadius: \"50%\",\n                left: (this.parameters.decay + this.parameters.attack) * 100 - 5 + \"%\",\n                top: (1 - this.parameters.sustain_lev) * 100 - 20 + \"%\",\n            };\n        },\n        sustain_area() {\n            return {\n                background: \"transparent\",\n                aspectRatio: \"16/9\",\n                width: \"10%\",\n                position: \"absolute\",\n                zIndex: \"4\",\n                borderRadius: \"50%\",\n                left: (this.parameters.attack + this.parameters.decay + this.parameters.sustain) * 100 - 10 + \"%\",\n                top: (1 - this.parameters.sustain_lev) * 100 - 12 + \"%\",\n            };\n        },\n        release_area() {\n            return {\n                background: \"transparent\",\n                aspectRatio: \"1/1\",\n                width: \"7%\",\n                position: \"absolute\",\n                zIndex: \"4\",\n                borderRadius: \"50%\",\n                left: (this.parameters.attack + this.parameters.decay + this.parameters.sustain + this.parameters.release) * 100 - 5 + '%',\n                top: '80%'\n            };\n        },\n    }\n\n}\n</script>\n\n<style scoped>\n.envelope_container {\n    position: relative;\n    margin: 0.5vw 1vw 0.5vw 1vw;\n}\n\n.envelope {\n    width: 100%;\n    height: 100%;\n    background-color: transparent;\n    box-sizing: border-box;\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import _classCallCheck from \"/Users/eliapirrello/Documents/GitHub/zenyth/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/eliapirrello/Documents/GitHub/zenyth/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport \"core-js/modules/es.number.to-fixed.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport { Chorus, Distortion, Envelope, Gain, LFO, Panner, PingPongDelay, Reverb, Vibrato } from 'tone';\nimport { nextTick } from \"vue\";\nvar MyEffect = /*#__PURE__*/function () {\n  function MyEffect(_ref) {\n    var _ref$type = _ref.type,\n      type = _ref$type === void 0 ? \"none\" : _ref$type,\n      _ref$modulation = _ref.modulation,\n      modulation = _ref$modulation === void 0 ? 0 : _ref$modulation;\n    _classCallCheck(this, MyEffect);\n    this.type = type;\n    this.mod = modulation;\n    this.effect = this.generateToneFx(type);\n  }\n\n  // getters\n  _createClass(MyEffect, [{\n    key: \"getToneReference\",\n    value: function getToneReference() {\n      return this.effect;\n    }\n\n    // creator\n  }, {\n    key: \"generateToneFx\",\n    value: function generateToneFx(type) {\n      var effect;\n      // console.log(\"fx gen type: \" + type)\n      switch (type) {\n        case 0:\n        case 'none':\n          effect = new Gain();\n          break;\n        case 1:\n        case 'reverb':\n          effect = this.createReverb();\n          break;\n        case 2:\n        case 'delay':\n          effect = this.createDelay();\n          break;\n        case 3:\n        case 'distortion':\n          effect = this.createDistortion();\n          break;\n        case 4:\n        case 'vibrato':\n          effect = this.createVibrato();\n          break;\n        case 5:\n        case 'pan':\n          effect = this.createPan();\n          break;\n        case 6:\n        case 'chorus':\n          effect = this.createChorus();\n          break;\n        default:\n          effect = new Gain();\n      }\n      // console.log(effect)\n      this.setFxParams({\n        effect: effect,\n        type: type\n      });\n      return effect;\n    }\n\n    // setters\n    // general setter\n  }, {\n    key: \"setFxParams\",\n    value: function setFxParams(_ref2) {\n      var _ref2$effect = _ref2.effect,\n        effect = _ref2$effect === void 0 ? this.effect : _ref2$effect,\n        _ref2$type = _ref2.type,\n        type = _ref2$type === void 0 ? this.type : _ref2$type,\n        _ref2$mod = _ref2.mod,\n        mod = _ref2$mod === void 0 ? this.mod : _ref2$mod;\n      this.effect = effect;\n      this.type = type;\n      this.mod = mod;\n      // console.log(\"effect = \"+ this.effect,\" type = \" + this.type, \"mod = \" + this.mod)\n\n      switch (type) {\n        case 1: // reverb\n        case 'reverb':\n          this.effect.set({\n            decay: 0.1 + 5 * mod,\n            wet: 0.3 + 0.7 * mod\n          });\n          break;\n        case 2: // delay\n        case 'delay':\n          this.effect.set({\n            delayTime: 0.05 + 0.4 * mod,\n            feedback: 0.05 + 0.90 * mod,\n            wet: 0.3 + 0.7 * mod\n          });\n          break;\n        case 3: // distortion\n        case 'distortion':\n          this.effect.set({\n            distortion: 0.05 + 0.95 * mod,\n            wet: 0.4 + 0.6 * mod\n          });\n          break;\n        case 4: // vibrato\n        case 'vibrato':\n          this.effect.set({\n            depth: 0.5 + 0.5 * mod,\n            frequency: 1 + 20 * mod,\n            wet: 0.5 + 0.5 * mod\n          });\n          break;\n        case 5: // pan\n        case 'pan':\n          var coeff = -1 + 2 * mod;\n          this.effect.set({\n            pan: coeff,\n            wet: 1\n          });\n          console.log(\"pan coeff: \" + coeff.toFixed(2));\n          break;\n        case 6: // chorus\n        case 'chorus':\n          this.effect.set({\n            depth: 0.6 + mod * 0.4,\n            frequency: 30 + mod * 10,\n            spread: 80 * mod * 8,\n            wet: 1,\n            feedback: 0.05 + mod * 0.9,\n            type: \"triangle\" + (mod * 10).toFixed(0).toString(),\n            delayTime: 100 + mod * 90\n          });\n          break;\n        default:\n          this.effect = new Gain();\n      }\n    }\n\n    // -------------- FX CREATION -------------\n  }, {\n    key: \"createReverb\",\n    value: function createReverb() {\n      return new Reverb();\n    }\n  }, {\n    key: \"createDelay\",\n    value: function createDelay() {\n      //todo: not interesting effect if used like this\n      return new PingPongDelay();\n    }\n  }, {\n    key: \"createDistortion\",\n    value: function createDistortion() {\n      return new Distortion();\n    }\n  }, {\n    key: \"createVibrato\",\n    value: function createVibrato() {\n      return new Vibrato();\n    }\n  }, {\n    key: \"createPan\",\n    value: function createPan() {\n      // todo: create LFO modulating width\n      return new Panner();\n    }\n  }, {\n    key: \"createChorus\",\n    value: function createChorus() {\n      return new Chorus();\n    }\n\n    // ------------- TONE JS EXTENSIONS -----------\n  }, {\n    key: \"connect\",\n    value: function connect(route) {\n      this.effect.connect(route);\n    }\n  }, {\n    key: \"disconnect\",\n    value: function disconnect() {\n      this.effect.disconnect();\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      this.effect.dispose();\n    }\n  }]);\n  return MyEffect;\n}();\nexport { MyEffect as default };","map":{"version":3,"names":["Chorus","Distortion","Envelope","Gain","LFO","Panner","PingPongDelay","Reverb","Vibrato","nextTick","MyEffect","type","modulation","mod","effect","generateToneFx","createReverb","createDelay","createDistortion","createVibrato","createPan","createChorus","setFxParams","set","decay","wet","delayTime","feedback","distortion","depth","frequency","coeff","pan","console","log","toFixed","spread","toString","route","connect","disconnect","dispose"],"sources":["/Users/eliapirrello/Documents/GitHub/zenyth/src/views/Synth/Effects/MyFx.js"],"sourcesContent":["import {Chorus, Distortion, Envelope, Gain, LFO, Panner, PingPongDelay, Reverb, Vibrato} from 'tone'\nimport {nextTick} from \"vue\";\n\nexport default class MyEffect {\n    constructor({ type = \"none\", modulation = 0 }) {\n        this.type = type;\n        this.mod = modulation;\n        this.effect = this.generateToneFx(type)\n    }\n\n    // getters\n    getToneReference(){\n        return this.effect;\n    }\n\n    // creator\n    generateToneFx(type) {\n        let effect;\n        // console.log(\"fx gen type: \" + type)\n        switch (type) {\n            case 0:\n            case 'none':\n                effect = new Gain();\n                break;\n            case 1:\n            case 'reverb':\n                effect = this.createReverb()\n                break;\n            case 2:\n            case 'delay':\n                effect = this.createDelay()\n                break;\n            case 3:\n            case 'distortion':\n                effect = this.createDistortion()\n                break;\n            case 4:\n            case 'vibrato':\n                effect = this.createVibrato()\n                break;\n            case 5:\n            case 'pan':\n                effect = this.createPan()\n                break;\n            case 6:\n            case 'chorus':\n                effect = this.createChorus()\n                break;\n            default:\n                effect = new Gain();\n        }\n        // console.log(effect)\n        this.setFxParams({ effect: effect, type: type })\n        return effect;\n    }\n\n    // setters\n    // general setter\n    setFxParams({ effect = this.effect, type = this.type, mod = this.mod }) {\n        this.effect = effect;\n        this.type = type;\n        this.mod = mod;\n        // console.log(\"effect = \"+ this.effect,\" type = \" + this.type, \"mod = \" + this.mod)\n\n        switch (type) {\n            case 1: // reverb\n            case 'reverb':\n                this.effect.set({\n                    decay: 0.1 + 5*mod,\n                    wet: 0.3 + 0.7*mod,\n                })\n                break;\n            case 2: // delay\n            case 'delay':\n                this.effect.set({\n                    delayTime: 0.05 + 0.4*mod,\n                    feedback: 0.05 + 0.90*mod,\n                    wet: 0.3 + 0.7*mod,\n                })\n                break;\n            case 3: // distortion\n            case 'distortion':\n                this.effect.set({\n                    distortion: 0.05 + 0.95*mod,\n                    wet: 0.4 + 0.6*mod,\n                })\n                break;\n            case 4: // vibrato\n            case 'vibrato':\n                this.effect.set({\n                    depth: 0.5 + 0.5*mod,\n                    frequency: 1 + 20*mod,\n                    wet: 0.5 + 0.5*mod\n                })\n                break;\n            case 5: // pan\n            case 'pan':\n                let coeff = -1 + (2*mod)\n                this.effect.set({\n                    pan: coeff,\n                    wet: 1,\n                })\n                console.log(\"pan coeff: \" + coeff.toFixed(2))\n                break;\n            case 6: // chorus\n            case 'chorus':\n                this.effect.set({\n                    depth: 0.6 + mod*0.4,\n                    frequency: 30 + mod*10,\n                    spread: 80 * mod*8,\n                    wet: 1,\n                    feedback: 0.05 + mod*0.9,\n                    type: \"triangle\" + (mod*10).toFixed(0).toString(),\n                    delayTime: 100 + mod*90,\n                })\n                break;\n            default:\n                this.effect = new Gain();\n        }\n    }\n\n    // -------------- FX CREATION -------------\n    createReverb(){\n        return new Reverb();\n    }\n    createDelay() {\n        //todo: not interesting effect if used like this\n        return new PingPongDelay();\n    }\n    createDistortion(){\n        return new Distortion();\n    }\n    createVibrato(){\n        return new Vibrato();\n    }\n    createPan(){\n        // todo: create LFO modulating width\n        return new Panner();\n    }\n    createChorus(){\n        return new Chorus();\n    }\n\n   \n    // ------------- TONE JS EXTENSIONS -----------\n    connect(route){\n        this.effect.connect(route);\n    }\n    disconnect(){\n        this.effect.disconnect();\n    }\n    dispose(){\n        this.effect.dispose();\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
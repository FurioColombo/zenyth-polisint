{"ast":null,"code":"import _createClass from \"C:/Home/Projects/Programmazione/WebStorm/myZenythPolisinT/zenyth_polisint/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"C:/Home/Projects/Programmazione/WebStorm/myZenythPolisinT/zenyth_polisint/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _slicedToArray from \"C:/Home/Projects/Programmazione/WebStorm/myZenythPolisinT/zenyth_polisint/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _typeof from \"C:/Home/Projects/Programmazione/WebStorm/myZenythPolisinT/zenyth_polisint/node_modules/@babel/runtime/helpers/esm/typeof.js\";\nimport \"core-js/modules/es.array.is-array.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.string.trim.js\";\nimport \"core-js/modules/es.map.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/web.url.js\";\nimport \"core-js/modules/web.url-search-params.js\";\nimport \"core-js/modules/es.set.js\";\nimport { NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS } from '../globals';\nimport { isConstructible } from '../helpers/is-constructible';\nimport { splitImportStatements } from '../helpers/split-import-statements';\nvar verifyParameterDescriptors = function verifyParameterDescriptors(parameterDescriptors) {\n  if (parameterDescriptors !== undefined && !Array.isArray(parameterDescriptors)) {\n    throw new TypeError('The parameterDescriptors property of given value for processorCtor is not an array.');\n  }\n};\nvar verifyProcessorCtor = function verifyProcessorCtor(processorCtor) {\n  if (!isConstructible(processorCtor)) {\n    throw new TypeError('The given value for processorCtor should be a constructor.');\n  }\n  if (processorCtor.prototype === null || _typeof(processorCtor.prototype) !== 'object') {\n    throw new TypeError('The given value for processorCtor should have a prototype.');\n  }\n};\nexport var createAddAudioWorkletModule = function createAddAudioWorkletModule(cacheTestResult, createNotSupportedError, evaluateSource, exposeCurrentFrameAndCurrentTime, fetchSource, getNativeContext, getOrCreateBackupOfflineAudioContext, isNativeOfflineAudioContext, nativeAudioWorkletNodeConstructor, ongoingRequests, resolvedRequests, testAudioWorkletProcessorPostMessageSupport, window) {\n  var index = 0;\n  return function (context, moduleURL) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n      credentials: 'omit'\n    };\n    var resolvedRequestsOfContext = resolvedRequests.get(context);\n    if (resolvedRequestsOfContext !== undefined && resolvedRequestsOfContext.has(moduleURL)) {\n      return Promise.resolve();\n    }\n    var ongoingRequestsOfContext = ongoingRequests.get(context);\n    if (ongoingRequestsOfContext !== undefined) {\n      var promiseOfOngoingRequest = ongoingRequestsOfContext.get(moduleURL);\n      if (promiseOfOngoingRequest !== undefined) {\n        return promiseOfOngoingRequest;\n      }\n    }\n    var nativeContext = getNativeContext(context);\n    // Bug #59: Safari does not implement the audioWorklet property.\n    var promise = nativeContext.audioWorklet === undefined ? fetchSource(moduleURL).then(function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 2),\n        source = _ref2[0],\n        absoluteUrl = _ref2[1];\n      var _splitImportStatement = splitImportStatements(source, absoluteUrl),\n        _splitImportStatement2 = _slicedToArray(_splitImportStatement, 2),\n        importStatements = _splitImportStatement2[0],\n        sourceWithoutImportStatements = _splitImportStatement2[1];\n      /*\n       * This is the unminified version of the code used below:\n       *\n       * ```js\n       * ${ importStatements };\n       * ((a, b) => {\n       *     (a[b] = a[b] || [ ]).push(\n       *         (AudioWorkletProcessor, global, registerProcessor, sampleRate, self, window) => {\n       *             ${ sourceWithoutImportStatements }\n       *         }\n       *     );\n       * })(window, '_AWGS');\n       * ```\n       */\n      // tslint:disable-next-line:max-line-length\n      var wrappedSource = \"\".concat(importStatements, \";((a,b)=>{(a[b]=a[b]||[]).push((AudioWorkletProcessor,global,registerProcessor,sampleRate,self,window)=>{\").concat(sourceWithoutImportStatements, \"\\n})})(window,'_AWGS')\");\n      // @todo Evaluating the given source code is a possible security problem.\n      return evaluateSource(wrappedSource);\n    }).then(function () {\n      var evaluateAudioWorkletGlobalScope = window._AWGS.pop();\n      if (evaluateAudioWorkletGlobalScope === undefined) {\n        // Bug #182 Chrome and Edge do throw an instance of a SyntaxError instead of a DOMException.\n        throw new SyntaxError();\n      }\n      exposeCurrentFrameAndCurrentTime(nativeContext.currentTime, nativeContext.sampleRate, function () {\n        return evaluateAudioWorkletGlobalScope( /*#__PURE__*/_createClass(function AudioWorkletProcessor() {\n          _classCallCheck(this, AudioWorkletProcessor);\n        }), undefined, function (name, processorCtor) {\n          if (name.trim() === '') {\n            throw createNotSupportedError();\n          }\n          var nodeNameToProcessorConstructorMap = NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS.get(nativeContext);\n          if (nodeNameToProcessorConstructorMap !== undefined) {\n            if (nodeNameToProcessorConstructorMap.has(name)) {\n              throw createNotSupportedError();\n            }\n            verifyProcessorCtor(processorCtor);\n            verifyParameterDescriptors(processorCtor.parameterDescriptors);\n            nodeNameToProcessorConstructorMap.set(name, processorCtor);\n          } else {\n            verifyProcessorCtor(processorCtor);\n            verifyParameterDescriptors(processorCtor.parameterDescriptors);\n            NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS.set(nativeContext, new Map([[name, processorCtor]]));\n          }\n        }, nativeContext.sampleRate, undefined, undefined);\n      });\n    }) : Promise.all([fetchSource(moduleURL), Promise.resolve(cacheTestResult(testAudioWorkletProcessorPostMessageSupport, testAudioWorkletProcessorPostMessageSupport))]).then(function (_ref3) {\n      var _ref4 = _slicedToArray(_ref3, 2),\n        _ref4$ = _slicedToArray(_ref4[0], 2),\n        source = _ref4$[0],\n        absoluteUrl = _ref4$[1],\n        isSupportingPostMessage = _ref4[1];\n      var currentIndex = index + 1;\n      index = currentIndex;\n      var _splitImportStatement3 = splitImportStatements(source, absoluteUrl),\n        _splitImportStatement4 = _slicedToArray(_splitImportStatement3, 2),\n        importStatements = _splitImportStatement4[0],\n        sourceWithoutImportStatements = _splitImportStatement4[1];\n      /*\n       * Bug #179: Firefox does not allow to transfer any buffer which has been passed to the process() method as an argument.\n       *\n       * This is the unminified version of the code used below.\n       *\n       * ```js\n       * class extends AudioWorkletProcessor {\n       *\n       *     __buffers = new WeakSet();\n       *\n       *     constructor () {\n       *         super();\n       *\n       *         this.port.postMessage = ((postMessage) => {\n       *             return (message, transferables) => {\n       *                 const filteredTransferables = (transferables)\n       *                     ? transferables.filter((transferable) => !this.__buffers.has(transferable))\n       *                     : transferables;\n       *\n       *                 return postMessage.call(this.port, message, filteredTransferables);\n       *              };\n       *         })(this.port.postMessage);\n       *     }\n       * }\n       * ```\n       */\n      var patchedAudioWorkletProcessor = isSupportingPostMessage ? 'AudioWorkletProcessor' : 'class extends AudioWorkletProcessor {__b=new WeakSet();constructor(){super();(p=>p.postMessage=(q=>(m,t)=>q.call(p,m,t?t.filter(u=>!this.__b.has(u)):t))(p.postMessage))(this.port)}}';\n      /*\n       * Bug #170: Chrome and Edge do call process() with an array with empty channelData for each input if no input is connected.\n       *\n       * Bug #179: Firefox does not allow to transfer any buffer which has been passed to the process() method as an argument.\n       *\n       * Bug #190: Safari doesn't throw an error when loading an unparsable module.\n       *\n       * This is the unminified version of the code used below:\n       *\n       * ```js\n       * `${ importStatements };\n       * ((AudioWorkletProcessor, registerProcessor) => {${ sourceWithoutImportStatements }\n       * })(\n       *     ${Â patchedAudioWorkletProcessor },\n       *     (name, processorCtor) => registerProcessor(name, class extends processorCtor {\n       *\n       *         __collectBuffers = (array) => {\n       *             array.forEach((element) => this.__buffers.add(element.buffer));\n       *         };\n       *\n       *         process (inputs, outputs, parameters) {\n       *             inputs.forEach(this.__collectBuffers);\n       *             outputs.forEach(this.__collectBuffers);\n       *             this.__collectBuffers(Object.values(parameters));\n       *\n       *             return super.process(\n       *                 (inputs.map((input) => input.some((channelData) => channelData.length === 0)) ? [ ] : input),\n       *                 outputs,\n       *                 parameters\n       *             );\n       *         }\n       *\n       *     })\n       * );\n       *\n       * registerProcessor(`__sac${currentIndex}`, class extends AudioWorkletProcessor{\n       *\n       *     process () {\n       *         return false;\n       *     }\n       *\n       * })`\n       * ```\n       */\n      var memberDefinition = isSupportingPostMessage ? '' : '__c = (a) => a.forEach(e=>this.__b.add(e.buffer));';\n      var bufferRegistration = isSupportingPostMessage ? '' : 'i.forEach(this.__c);o.forEach(this.__c);this.__c(Object.values(p));';\n      var wrappedSource = \"\".concat(importStatements, \";((AudioWorkletProcessor,registerProcessor)=>{\").concat(sourceWithoutImportStatements, \"\\n})(\").concat(patchedAudioWorkletProcessor, \",(n,p)=>registerProcessor(n,class extends p{\").concat(memberDefinition, \"process(i,o,p){\").concat(bufferRegistration, \"return super.process(i.map(j=>j.some(k=>k.length===0)?[]:j),o,p)}}));registerProcessor('__sac\").concat(currentIndex, \"',class extends AudioWorkletProcessor{process(){return !1}})\");\n      var blob = new Blob([wrappedSource], {\n        type: 'application/javascript; charset=utf-8'\n      });\n      var url = URL.createObjectURL(blob);\n      return nativeContext.audioWorklet.addModule(url, options).then(function () {\n        if (isNativeOfflineAudioContext(nativeContext)) {\n          return nativeContext;\n        }\n        // Bug #186: Chrome and Edge do not allow to create an AudioWorkletNode on a closed AudioContext.\n        var backupOfflineAudioContext = getOrCreateBackupOfflineAudioContext(nativeContext);\n        return backupOfflineAudioContext.audioWorklet.addModule(url, options).then(function () {\n          return backupOfflineAudioContext;\n        });\n      }).then(function (nativeContextOrBackupOfflineAudioContext) {\n        if (nativeAudioWorkletNodeConstructor === null) {\n          throw new SyntaxError();\n        }\n        try {\n          // Bug #190: Safari doesn't throw an error when loading an unparsable module.\n          new nativeAudioWorkletNodeConstructor(nativeContextOrBackupOfflineAudioContext, \"__sac\".concat(currentIndex)); // tslint:disable-line:no-unused-expression\n        } catch (_unused) {\n          throw new SyntaxError();\n        }\n      })[\"finally\"](function () {\n        return URL.revokeObjectURL(url);\n      });\n    });\n    if (ongoingRequestsOfContext === undefined) {\n      ongoingRequests.set(context, new Map([[moduleURL, promise]]));\n    } else {\n      ongoingRequestsOfContext.set(moduleURL, promise);\n    }\n    promise.then(function () {\n      var updatedResolvedRequestsOfContext = resolvedRequests.get(context);\n      if (updatedResolvedRequestsOfContext === undefined) {\n        resolvedRequests.set(context, new Set([moduleURL]));\n      } else {\n        updatedResolvedRequestsOfContext.add(moduleURL);\n      }\n    })[\"finally\"](function () {\n      var updatedOngoingRequestsOfContext = ongoingRequests.get(context);\n      if (updatedOngoingRequestsOfContext !== undefined) {\n        updatedOngoingRequestsOfContext[\"delete\"](moduleURL);\n      }\n    });\n    return promise;\n  };\n};","map":{"version":3,"mappings":"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","names":["NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS","isConstructible","splitImportStatements","verifyParameterDescriptors","parameterDescriptors","undefined","Array","isArray","TypeError","verifyProcessorCtor","processorCtor","prototype","createAddAudioWorkletModule","cacheTestResult","createNotSupportedError","evaluateSource","exposeCurrentFrameAndCurrentTime","fetchSource","getNativeContext","getOrCreateBackupOfflineAudioContext","isNativeOfflineAudioContext","nativeAudioWorkletNodeConstructor","ongoingRequests","resolvedRequests","testAudioWorkletProcessorPostMessageSupport","window","index","context","moduleURL","options","credentials","resolvedRequestsOfContext","get","has","Promise","resolve","ongoingRequestsOfContext","promiseOfOngoingRequest","nativeContext","promise","audioWorklet","then","source","absoluteUrl","importStatements","sourceWithoutImportStatements","wrappedSource","evaluateAudioWorkletGlobalScope","_AWGS","pop","SyntaxError","currentTime","sampleRate","name","trim","nodeNameToProcessorConstructorMap","set","Map","all","isSupportingPostMessage","currentIndex","patchedAudioWorkletProcessor","memberDefinition","bufferRegistration","blob","Blob","type","url","URL","createObjectURL","addModule","backupOfflineAudioContext","nativeContextOrBackupOfflineAudioContext","revokeObjectURL","updatedResolvedRequestsOfContext","Set","add","updatedOngoingRequestsOfContext"],"sourceRoot":"","sources":["../../../src/factories/add-audio-worklet-module.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module","externalDependencies":[]}
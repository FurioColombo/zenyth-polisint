{"ast":null,"code":"import _classCallCheck from \"/Users/eliapirrello/Documents/GitHub/zenyth/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/eliapirrello/Documents/GitHub/zenyth/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/Users/eliapirrello/Documents/GitHub/zenyth/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _get from \"/Users/eliapirrello/Documents/GitHub/zenyth/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/eliapirrello/Documents/GitHub/zenyth/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/Users/eliapirrello/Documents/GitHub/zenyth/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/eliapirrello/Documents/GitHub/zenyth/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport { readOnly } from \"../../core/util/Interface\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { Panner } from \"./Panner\";\nimport { Volume } from \"./Volume\";\n/**\n * PanVol is a Tone.Panner and Tone.Volume in one.\n * @example\n * // pan the incoming signal left and drop the volume\n * const panVol = new Tone.PanVol(-0.25, -12).toDestination();\n * const osc = new Tone.Oscillator().connect(panVol).start();\n * @category Component\n */\nexport var PanVol = /*#__PURE__*/function (_ToneAudioNode) {\n  _inherits(PanVol, _ToneAudioNode);\n  var _super = _createSuper(PanVol);\n  function PanVol() {\n    var _this;\n    _classCallCheck(this, PanVol);\n    _this = _super.call(this, optionsFromArguments(PanVol.getDefaults(), arguments, [\"pan\", \"volume\"]));\n    _this.name = \"PanVol\";\n    var options = optionsFromArguments(PanVol.getDefaults(), arguments, [\"pan\", \"volume\"]);\n    _this._panner = _this.input = new Panner({\n      context: _this.context,\n      pan: options.pan,\n      channelCount: options.channelCount\n    });\n    _this.pan = _this._panner.pan;\n    _this._volume = _this.output = new Volume({\n      context: _this.context,\n      volume: options.volume\n    });\n    _this.volume = _this._volume.volume;\n    // connections\n    _this._panner.connect(_this._volume);\n    _this.mute = options.mute;\n    readOnly(_assertThisInitialized(_this), [\"pan\", \"volume\"]);\n    return _this;\n  }\n  _createClass(PanVol, [{\n    key: \"mute\",\n    get:\n    /**\n     * Mute/unmute the volume\n     */\n    function get() {\n      return this._volume.mute;\n    },\n    set: function set(mute) {\n      this._volume.mute = mute;\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      _get(_getPrototypeOf(PanVol.prototype), \"dispose\", this).call(this);\n      this._panner.dispose();\n      this.pan.dispose();\n      this._volume.dispose();\n      this.volume.dispose();\n      return this;\n    }\n  }], [{\n    key: \"getDefaults\",\n    value: function getDefaults() {\n      return Object.assign(ToneAudioNode.getDefaults(), {\n        mute: false,\n        pan: 0,\n        volume: 0,\n        channelCount: 1\n      });\n    }\n  }]);\n  return PanVol;\n}(ToneAudioNode);","map":{"version":3,"mappings":";;;;;;;;AAAA,SAASA,QAAQ,QAAQ,2BAA2B;AAEpD,SAAgCC,aAAa,QAA8B,kCAAkC;AAE7G,SAASC,oBAAoB,QAAQ,0BAA0B;AAC/D,SAASC,MAAM,QAAQ,UAAU;AACjC,SAASC,MAAM,QAAQ,UAAU;AASjC;;;;;;;;AAQA,WAAaC,MAAO;EAAA;EAAA;EAmCnB;IAAA;IAAA;IAEC,0BAAMH,oBAAoB,CAACG,MAAM,CAACC,WAAW,EAAE,EAAEC,SAAS,EAAE,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;IAnCtE,UAAI,GAAW,QAAQ;IAoC/B,IAAMC,OAAO,GAAGN,oBAAoB,CAACG,MAAM,CAACC,WAAW,EAAE,EAAEC,SAAS,EAAE,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;IAExF,MAAKE,OAAO,GAAG,MAAKC,KAAK,GAAG,IAAIP,MAAM,CAAC;MACtCQ,OAAO,EAAE,MAAKA,OAAO;MACrBC,GAAG,EAAEJ,OAAO,CAACI,GAAG;MAChBC,YAAY,EAAEL,OAAO,CAACK;KACtB,CAAC;IACF,MAAKD,GAAG,GAAG,MAAKH,OAAO,CAACG,GAAG;IAC3B,MAAKE,OAAO,GAAG,MAAKC,MAAM,GAAG,IAAIX,MAAM,CAAC;MACvCO,OAAO,EAAE,MAAKA,OAAO;MACrBK,MAAM,EAAER,OAAO,CAACQ;KAChB,CAAC;IACF,MAAKA,MAAM,GAAG,MAAKF,OAAO,CAACE,MAAM;IAEjC;IACA,MAAKP,OAAO,CAACQ,OAAO,CAAC,MAAKH,OAAO,CAAC;IAClC,MAAKI,IAAI,GAAGV,OAAO,CAACU,IAAI;IAExBlB,QAAQ,gCAAO,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;IAAC;EACnC;EAAC;IAAA;IAAA;IAWD;;;IAGA,eAAQ;MACP,OAAO,IAAI,CAACc,OAAO,CAACI,IAAI;IACzB,CAAC;IAAA,KACD,aAASA,IAAI;MACZ,IAAI,CAACJ,OAAO,CAACI,IAAI,GAAGA,IAAI;IACzB;EAAC;IAAA;IAAA,OAED,mBAAO;MACN;MACA,IAAI,CAACT,OAAO,CAACU,OAAO,EAAE;MACtB,IAAI,CAACP,GAAG,CAACO,OAAO,EAAE;MAClB,IAAI,CAACL,OAAO,CAACK,OAAO,EAAE;MACtB,IAAI,CAACH,MAAM,CAACG,OAAO,EAAE;MACrB,OAAO,IAAI;IACZ;EAAC;IAAA;IAAA,OA1BD,uBAAkB;MACjB,OAAOC,MAAM,CAACC,MAAM,CAACpB,aAAa,CAACK,WAAW,EAAE,EAAE;QACjDY,IAAI,EAAE,KAAK;QACXN,GAAG,EAAE,CAAC;QACNI,MAAM,EAAE,CAAC;QACTH,YAAY,EAAE;OACd,CAAC;IACH;EAAC;EAAA;AAAA,EAlE0BZ,aAA4B","names":["readOnly","ToneAudioNode","optionsFromArguments","Panner","Volume","PanVol","getDefaults","arguments","options","_panner","input","context","pan","channelCount","_volume","output","volume","connect","mute","dispose","Object","assign"],"sourceRoot":"","sources":["../../../../Tone/component/channel/PanVol.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module","externalDependencies":[]}
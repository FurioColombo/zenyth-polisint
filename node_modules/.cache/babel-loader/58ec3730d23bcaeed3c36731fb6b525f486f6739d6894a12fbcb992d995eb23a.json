{"ast":null,"code":"import _classCallCheck from \"C:/Home/Projects/Programmazione/WebStorm/myZenythPolisinT/zenyth_polisint/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Home/Projects/Programmazione/WebStorm/myZenythPolisinT/zenyth_polisint/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"C:/Home/Projects/Programmazione/WebStorm/myZenythPolisinT/zenyth_polisint/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _get from \"C:/Home/Projects/Programmazione/WebStorm/myZenythPolisinT/zenyth_polisint/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"C:/Home/Projects/Programmazione/WebStorm/myZenythPolisinT/zenyth_polisint/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"C:/Home/Projects/Programmazione/WebStorm/myZenythPolisinT/zenyth_polisint/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Home/Projects/Programmazione/WebStorm/myZenythPolisinT/zenyth_polisint/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport { StereoXFeedbackEffect } from \"./StereoXFeedbackEffect\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { Delay } from \"../core/context/Delay\";\nimport { Signal } from \"../signal/Signal\";\nimport { readOnly } from \"../core/util/Interface\";\n/**\n * PingPongDelay is a feedback delay effect where the echo is heard\n * first in one channel and next in the opposite channel. In a stereo\n * system these are the right and left channels.\n * PingPongDelay in more simplified terms is two Tone.FeedbackDelays\n * with independent delay values. Each delay is routed to one channel\n * (left or right), and the channel triggered second will always\n * trigger at the same interval after the first.\n * @example\n * const pingPong = new Tone.PingPongDelay(\"4n\", 0.2).toDestination();\n * const drum = new Tone.MembraneSynth().connect(pingPong);\n * drum.triggerAttackRelease(\"C4\", \"32n\");\n * @category Effect\n */\nexport var PingPongDelay = /*#__PURE__*/function (_StereoXFeedbackEffec) {\n  _inherits(PingPongDelay, _StereoXFeedbackEffec);\n  var _super = _createSuper(PingPongDelay);\n  function PingPongDelay() {\n    var _this;\n    _classCallCheck(this, PingPongDelay);\n    _this = _super.call(this, optionsFromArguments(PingPongDelay.getDefaults(), arguments, [\"delayTime\", \"feedback\"]));\n    _this.name = \"PingPongDelay\";\n    var options = optionsFromArguments(PingPongDelay.getDefaults(), arguments, [\"delayTime\", \"feedback\"]);\n    _this._leftDelay = new Delay({\n      context: _this.context,\n      maxDelay: options.maxDelay\n    });\n    _this._rightDelay = new Delay({\n      context: _this.context,\n      maxDelay: options.maxDelay\n    });\n    _this._rightPreDelay = new Delay({\n      context: _this.context,\n      maxDelay: options.maxDelay\n    });\n    _this.delayTime = new Signal({\n      context: _this.context,\n      units: \"time\",\n      value: options.delayTime\n    });\n    // connect it up\n    _this.connectEffectLeft(_this._leftDelay);\n    _this.connectEffectRight(_this._rightPreDelay, _this._rightDelay);\n    _this.delayTime.fan(_this._leftDelay.delayTime, _this._rightDelay.delayTime, _this._rightPreDelay.delayTime);\n    // rearranged the feedback to be after the rightPreDelay\n    _this._feedbackL.disconnect();\n    _this._feedbackL.connect(_this._rightDelay);\n    readOnly(_assertThisInitialized(_this), [\"delayTime\"]);\n    return _this;\n  }\n  _createClass(PingPongDelay, [{\n    key: \"dispose\",\n    value: function dispose() {\n      _get(_getPrototypeOf(PingPongDelay.prototype), \"dispose\", this).call(this);\n      this._leftDelay.dispose();\n      this._rightDelay.dispose();\n      this._rightPreDelay.dispose();\n      this.delayTime.dispose();\n      return this;\n    }\n  }], [{\n    key: \"getDefaults\",\n    value: function getDefaults() {\n      return Object.assign(StereoXFeedbackEffect.getDefaults(), {\n        delayTime: 0.25,\n        maxDelay: 1\n      });\n    }\n  }]);\n  return PingPongDelay;\n}(StereoXFeedbackEffect);","map":{"version":3,"mappings":";;;;;;;;AAAA,SAASA,qBAAqB,QAAsC,yBAAyB;AAE7F,SAASC,oBAAoB,QAAQ,uBAAuB;AAC5D,SAASC,KAAK,QAAQ,uBAAuB;AAC7C,SAASC,MAAM,QAAQ,kBAAkB;AACzC,SAASC,QAAQ,QAAQ,wBAAwB;AAOjD;;;;;;;;;;;;;;AAcA,WAAaC,aAAc;EAAA;EAAA;EA8B1B;IAAA;IAAA;IAEC,0BAAMJ,oBAAoB,CAACI,aAAa,CAACC,WAAW,EAAE,EAAEC,SAAS,EAAE,CAAC,WAAW,EAAE,UAAU,CAAC,CAAC;IA9BrF,UAAI,GAAW,eAAe;IA+BtC,IAAMC,OAAO,GAAGP,oBAAoB,CAACI,aAAa,CAACC,WAAW,EAAE,EAAEC,SAAS,EAAE,CAAC,WAAW,EAAE,UAAU,CAAC,CAAC;IAEvG,MAAKE,UAAU,GAAG,IAAIP,KAAK,CAAC;MAC3BQ,OAAO,EAAE,MAAKA,OAAO;MACrBC,QAAQ,EAAEH,OAAO,CAACG;KAClB,CAAC;IACF,MAAKC,WAAW,GAAG,IAAIV,KAAK,CAAC;MAC5BQ,OAAO,EAAE,MAAKA,OAAO;MACrBC,QAAQ,EAAEH,OAAO,CAACG;KAClB,CAAC;IACF,MAAKE,cAAc,GAAG,IAAIX,KAAK,CAAC;MAC/BQ,OAAO,EAAE,MAAKA,OAAO;MACrBC,QAAQ,EAAEH,OAAO,CAACG;KAClB,CAAC;IACF,MAAKG,SAAS,GAAG,IAAIX,MAAM,CAAC;MAC3BO,OAAO,EAAE,MAAKA,OAAO;MACrBK,KAAK,EAAE,MAAM;MACbC,KAAK,EAAER,OAAO,CAACM;KACf,CAAC;IAEF;IACA,MAAKG,iBAAiB,CAAC,MAAKR,UAAU,CAAC;IACvC,MAAKS,kBAAkB,CAAC,MAAKL,cAAc,EAAE,MAAKD,WAAW,CAAC;IAC9D,MAAKE,SAAS,CAACK,GAAG,CAAC,MAAKV,UAAU,CAACK,SAAS,EAAE,MAAKF,WAAW,CAACE,SAAS,EAAE,MAAKD,cAAc,CAACC,SAAS,CAAC;IACxG;IACA,MAAKM,UAAU,CAACC,UAAU,EAAE;IAC5B,MAAKD,UAAU,CAACE,OAAO,CAAC,MAAKV,WAAW,CAAC;IACzCR,QAAQ,gCAAO,CAAC,WAAW,CAAC,CAAC;IAAC;EAC/B;EAAC;IAAA;IAAA,OASD,mBAAO;MACN;MACA,IAAI,CAACK,UAAU,CAACc,OAAO,EAAE;MACzB,IAAI,CAACX,WAAW,CAACW,OAAO,EAAE;MAC1B,IAAI,CAACV,cAAc,CAACU,OAAO,EAAE;MAC7B,IAAI,CAACT,SAAS,CAACS,OAAO,EAAE;MACxB,OAAO,IAAI;IACZ;EAAC;IAAA;IAAA,OAdD,uBAAkB;MACjB,OAAOC,MAAM,CAACC,MAAM,CAACzB,qBAAqB,CAACM,WAAW,EAAE,EAAE;QACzDQ,SAAS,EAAE,IAAI;QACfH,QAAQ,EAAE;OACV,CAAC;IACH;EAAC;EAAA;AAAA,EApEiCX,qBAA2C","names":["StereoXFeedbackEffect","optionsFromArguments","Delay","Signal","readOnly","PingPongDelay","getDefaults","arguments","options","_leftDelay","context","maxDelay","_rightDelay","_rightPreDelay","delayTime","units","value","connectEffectLeft","connectEffectRight","fan","_feedbackL","disconnect","connect","dispose","Object","assign"],"sourceRoot":"","sources":["../../../Tone/effect/PingPongDelay.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module","externalDependencies":[]}
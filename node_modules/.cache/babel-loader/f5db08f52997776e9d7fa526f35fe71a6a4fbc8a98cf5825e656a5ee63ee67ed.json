{"ast":null,"code":"import \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport LfoVisualizer from \"@/views/Synth/Modulators/LfoVisualizer\";\nimport * as Tone from \"tone\";\nimport Knobs from \"./Knobs.vue\";\nimport { toRaw } from \"vue\";\nvar waveforms = ['sine', 'triangle', 'square', 'sawtooth'];\nexport default {\n  components: {\n    LfoVisualizer: LfoVisualizer,\n    Knobs: Knobs\n  },\n  props: [\"id\"],\n  data: function data() {\n    return {\n      freq: 10,\n      depth: 0.8,\n      isDepthFaderDown: false,\n      isFreqFaderDown: false,\n      waveform: waveforms[0],\n      waveformId: 0,\n      parameters: {}\n    };\n  },\n  mounted: function mounted() {\n    //document.addEventListener(\"mousemove\", this.onMouseMove); // todo: remove this\n    //console.log(\"mounted - this.waveformId: \" + this.waveformId + \" - this.waveform: \" + this.waveform)\n\n    this.parameters = {\n      frequency: this.freq,\n      waveform: this.waveform\n    };\n  },\n  computed: {\n    lfoDepthFaderLevel: function lfoDepthFaderLevel() {\n      //console.log(\"lfoDepthFaderLevel\")\n      return {\n        top: ((1 - this.depth) * 85).toString() + \"%\"\n      };\n    },\n    lfo_elems_row: function lfo_elems_row() {\n      return {\n        background: this.colors.purple.medium\n      };\n    },\n    lfoFaderBase: function lfoFaderBase() {\n      return {\n        background: this.colors.purple.glow\n      };\n    },\n    lfoFreqFaderLevel: function lfoFreqFaderLevel() {\n      return {\n        top: ((20 - this.freq) / 20 * 85).toString() + \"%\",\n        background: this.colors.purple.light,\n        borderColor: this.colors.purple.dark\n      };\n    },\n    lfo_waveform_btn_selector: function lfo_waveform_btn_selector() {\n      return {\n        borderColor: this.colors.purple.dark,\n        background: this.colors.purple.light,\n        color: this.colors.gray.dark\n      };\n    },\n    container: function container() {\n      return {\n        background: this.colors.purple.glow\n      };\n    },\n    border: function border() {\n      return {\n        background: this.colors.purple.glow\n      };\n    }\n  },\n  methods: {\n    setParams: function setParams(_ref) {\n      var _this = this;\n      var _ref$freq = _ref.freq,\n        freq = _ref$freq === void 0 ? this.freq : _ref$freq,\n        _ref$depth = _ref.depth,\n        depth = _ref$depth === void 0 ? this.depth : _ref$depth,\n        _ref$waveform = _ref.waveform,\n        waveform = _ref$waveform === void 0 ? this.waveform : _ref$waveform;\n      if (freq <= 20) {\n        this.freq = freq;\n      } else {\n        this.freq = 20;\n      }\n      if (typeof waveform === 'number') {\n        this.waveformId = waveform;\n        if (this.waveformId === 0 || this.waveformId === 1) {\n          this.waveform = waveforms[this.waveformId];\n        } else {\n          console.log(\"ERROR: Called Non existing lfo wave type Id\");\n        }\n      } else if (typeof waveform === 'string') {\n        this.waveform = waveform;\n        waveforms.forEach(function (waveformNameString, index) {\n          if (waveformNameString === _this.waveform) _this.waveformId = index;\n        });\n      }\n      this.parameters.waveform = this.waveform;\n      this.depth = depth;\n      this.$refs.visualizer.updateParams({\n        freq: this.freq,\n        depth: this.depth\n      });\n      this.$refs.knobs.updateParameters(this.parameters);\n    },\n    nextWaveType: function nextWaveType() {\n      this.waveformId++;\n      if (this.waveformId > waveforms.length - 1) this.waveformId = 0;\n      this.waveform = waveforms[this.waveformId];\n      this.parameters.waveform = this.waveform;\n      // console.log(\"nextWaveType - this.waveformId: \" + this.waveformId + \" - this.waveform: \" + this.waveform)\n\n      //console.log(\"CHANGING WAVE TYPE TO: \" + this.waveform)\n      this.$refs.knobs.updateParameters(this.parameters);\n      this.$refs.visualizer.updateParams({\n        waveform: this.waveform,\n        frequency: this.freq\n      });\n    },\n    startOscilloscope: function startOscilloscope() {\n      //console.log(\"start LFO graphics\")\n      this.$refs.visualizer.startOscilloscope();\n    },\n    stopOscilloscope: function stopOscilloscope() {\n      //console.log(\"stop LFO graphics\")\n      this.$refs.visualizer.stopOscilloscope();\n    },\n    resetOscilloscope: function resetOscilloscope() {\n      this.$refs.visualizer.stopOscilloscope();\n      this.$refs.visualizer.startOscilloscope();\n    },\n    // ---------- USER GESTURE ----------\n    depthFaderSelected: function depthFaderSelected() {\n      //console.log(\"depthFaderSelected\")\n      this.isDepthFaderDown = true;\n    },\n    freqFaderSelected: function freqFaderSelected() {\n      //console.log(\"freqFaderSelected\")\n      this.isFreqFaderDown = true;\n    },\n    handleMouseMove: function handleMouseMove(event) {\n      //console.log(\"lfo - handleMouseMove\")\n      this.$refs.knobs.handleMouseMove(event);\n      if (this.isDepthFaderDown) {\n        if (event.movementY < 0) {\n          // Mouse is moving dowm\n          this.depth = this.depth - event.movementY / 100;\n          //console.log(\"moving up\");\n        } else {\n          // Mouse is moving up\n          this.depth = this.depth - event.movementY / 100;\n          //console.log(\"moving down\");\n        }\n\n        this.depth = Math.max(this.depth, 0);\n        this.depth = Math.min(this.depth, 1);\n\n        //console.log(\"lfo depth: \" + this.depth)\n        this.$refs.visualizer.updateParams({\n          depth: this.depth\n        });\n      }\n      if (this.isFreqFaderDown) {\n        if (event.movementY < 0) {\n          // Mouse is moving dowm\n          this.freq = this.freq - 20 * (event.movementY / 100);\n          //console.log(\"moving up\");\n        } else {\n          // Mouse is moving up\n          this.freq = this.freq - 20 * (event.movementY / 100);\n        }\n        this.freq = Math.max(this.freq, 1);\n        this.freq = Math.min(this.freq, 20);\n\n        //console.log(\"lfo freq: \" + this.freq)\n        this.parameters.frequency = this.freq;\n        this.$refs.visualizer.updateParams({\n          freq: this.freq\n        });\n        this.$refs.knobs.updateParameters(this.parameters);\n      }\n    },\n    handleMouseUp: function handleMouseUp() {\n      if (this.isFreqFaderDown) this.isFreqFaderDown = false;\n      if (this.isDepthFaderDown) this.isDepthFaderDown = false;\n      this.$refs.knobs.handleMouseUp();\n    },\n    unHide: function unHide() {\n      this.$refs.container.classList.remove(\"hidden\");\n      this.startOscilloscope();\n    },\n    hide: function hide() {\n      this.$refs.container.classList.add(\"hidden\");\n    },\n    //-------------METHODS TO LINK WHEN DROPPING\n    link: function link(object, target, color) {\n      //console.log(\"THINGS HAPPENING \"+section+\" \"+target)\n      this.$refs.knobs.addLink(object, target, color);\n    },\n    unLink: function unLink(object, target) {\n      //console.log(\"THINGS HAPPENING \")\n      //console.log(object)\n      //console.log(target)\n      this.$refs.knobs.removeLink(object, target);\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["LfoVisualizer","Tone","Knobs","toRaw","waveforms","components","props","data","freq","depth","isDepthFaderDown","isFreqFaderDown","waveform","waveformId","parameters","mounted","frequency","computed","lfoDepthFaderLevel","top","toString","lfo_elems_row","background","colors","purple","medium","lfoFaderBase","glow","lfoFreqFaderLevel","light","borderColor","dark","lfo_waveform_btn_selector","color","gray","container","border","methods","setParams","console","log","forEach","waveformNameString","index","$refs","visualizer","updateParams","knobs","updateParameters","nextWaveType","length","startOscilloscope","stopOscilloscope","resetOscilloscope","depthFaderSelected","freqFaderSelected","handleMouseMove","event","movementY","Math","max","min","handleMouseUp","unHide","classList","remove","hide","add","link","object","target","addLink","unLink","removeLink"],"sourceRoot":"","sources":["C:\\Home\\Projects\\Programmazione\\WebStorm\\myZenythPolisinT\\zenyth_polisint\\src\\views\\Synth\\Modulators\\Lfo.vue"],"sourcesContent":["<template>\r\n  <div ref=\"container\" class=\"container hidden\" :style=\"this.container\">\r\n    <div class=\"border\" :style=\"this.border\">\r\n      <div class=\"lfo_elems_row\" :style=\"this.lfo_elems_row\">\r\n        <!-- MODULATION AMOUNT: REGULATES THE AMPLITUDE OF THE LFO !!!!! broken !!!!!!\r\n      <div class=\"lfoFaderBase volFaderBase\" @mousedown=\"isDepthFaderDown=true\">\r\n        <div class=\"lfoDepthFaderLevel\" :style=\"this.lfoDepthFaderLevel\"></div>\r\n      </div> -->\r\n      <LfoVisualizer ref=\"visualizer\" :freq=\"this.freq\" :depth=\"this.depth\" :wave=\"this.waveform\"></LfoVisualizer>\r\n      <div class=\"lfo_controls_column\" >\r\n        <div class=\"lfoFaderBase freqFader\" :style=\"this.lfoFaderBase\" @mousedown=\"isFreqFaderDown=true\">\r\n          <div class=\"lfoFreqFaderLevel\" :style=\"this.lfoFreqFaderLevel\"></div>\r\n        </div>\r\n        <div class=\"lfo_waveform-btn-selector\" :style=\"lfo_waveform_btn_selector\" @click=\"nextWaveType\">\r\n          <img v-if=\"this.waveform==='sine'\" class=\"lfo_waveform_btn_icon\" src=\"@/icons/sine.svg\" alt=\"\" draggable=\"false\">\r\n          <img v-if=\"this.waveform==='triangle'\" class=\"lfo_waveform_btn_icon\" src=\"@/icons/triangle.svg\" alt=\"\" draggable=\"false\">\r\n          <img v-if=\"this.waveform==='square'\" class=\"lfo_waveform_btn_icon\" src=\"@/icons/square.svg\" alt=\"\" draggable=\"false\">\r\n          <img v-if=\"this.waveform==='sawtooth'\" class=\"lfo_waveform_btn_icon\" src=\"@/icons/saw.svg\" alt=\"\" draggable=\"false\">\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <Knobs ref=\"knobs\" type=\"lfo\" :id=\"this.id\" :parameters=\"this.parameters\"/>\r\n  </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport LfoVisualizer from \"@/views/Synth/Modulators/LfoVisualizer\";\r\nimport * as Tone from \"tone\";\r\nimport Knobs from \"./Knobs.vue\";\r\nimport { toRaw } from \"vue\";\r\n\r\nconst waveforms = ['sine', 'triangle', 'square', 'sawtooth']\r\nexport default {\r\n  components: { LfoVisualizer, Knobs },\r\n  props: [\"id\"],\r\n\r\n  data() {\r\n    return {\r\n      freq: 10,\r\n      depth: 0.8,\r\n      isDepthFaderDown: false,\r\n      isFreqFaderDown: false,\r\n      waveform: waveforms[0],\r\n      waveformId: 0,\r\n      parameters: {}\r\n\r\n    }\r\n  },\r\n\r\n  mounted() {\r\n    //document.addEventListener(\"mousemove\", this.onMouseMove); // todo: remove this\r\n    //console.log(\"mounted - this.waveformId: \" + this.waveformId + \" - this.waveform: \" + this.waveform)\r\n\r\n    this.parameters = {\r\n      frequency: this.freq,\r\n      waveform: this.waveform\r\n    }\r\n  },\r\n\r\n  computed: {\r\n    lfoDepthFaderLevel() {\r\n      //console.log(\"lfoDepthFaderLevel\")\r\n      return {\r\n        top: ((1 - this.depth) * 85).toString() + \"%\"\r\n      }\r\n    },\r\n    lfo_elems_row() {\r\n      return {\r\n        background: this.colors.purple.medium\r\n      }\r\n    },\r\n    lfoFaderBase() {\r\n      return {\r\n        background: this.colors.purple.glow\r\n      }\r\n    },\r\n    lfoFreqFaderLevel() {\r\n      return {\r\n        top: ((20 - this.freq) / 20 * 85).toString() + \"%\",\r\n        background: this.colors.purple.light,\r\n        borderColor: this.colors.purple.dark\r\n      }\r\n    },\r\n    lfo_waveform_btn_selector() {\r\n      return {\r\n        borderColor: this.colors.purple.dark,\r\n        background: this.colors.purple.light,\r\n        color: this.colors.gray.dark\r\n      }\r\n    },\r\n    container(){\r\n      return {\r\n        background: this.colors.purple.glow\r\n      }\r\n    },\r\n    border(){\r\n      return{\r\n        background: this.colors.purple.glow\r\n      }\r\n    }\r\n  },\r\n\r\n  methods: {\r\n    setParams({ freq = this.freq, depth = this.depth, waveform = this.waveform}) {\r\n      if (freq <= 20) {\r\n        this.freq = freq;\r\n      } else {\r\n        this.freq = 20\r\n      }\r\n      if(typeof waveform === 'number') {\r\n        this.waveformId = waveform;\r\n        if(this.waveformId === 0 || this.waveformId === 1) {\r\n          this.waveform = waveforms[this.waveformId]\r\n        } else {\r\n          console.log(\"ERROR: Called Non existing lfo wave type Id\")\r\n        }\r\n      } else if(typeof waveform === 'string'){\r\n        this.waveform = waveform;\r\n        waveforms.forEach( (waveformNameString, index) => {\r\n          if(waveformNameString === this.waveform) this.waveformId = index;\r\n        })\r\n      }\r\n      this.parameters.waveform = this.waveform;\r\n      this.depth = depth;\r\n      this.$refs.visualizer.updateParams({freq: this.freq, depth: this.depth})\r\n      this.$refs.knobs.updateParameters(this.parameters)\r\n\r\n    },\r\n\r\n    nextWaveType(){\r\n      this.waveformId++;\r\n      if(this.waveformId > waveforms.length-1) this.waveformId = 0;\r\n      this.waveform = waveforms[this.waveformId]\r\n      this.parameters.waveform = this.waveform;\r\n      // console.log(\"nextWaveType - this.waveformId: \" + this.waveformId + \" - this.waveform: \" + this.waveform)\r\n\r\n\r\n      //console.log(\"CHANGING WAVE TYPE TO: \" + this.waveform)\r\n      this.$refs.knobs.updateParameters(this.parameters)\r\n      this.$refs.visualizer.updateParams({ waveform: this.waveform, frequency: this.freq })\r\n    },\r\n\r\n    startOscilloscope() {\r\n      //console.log(\"start LFO graphics\")\r\n      this.$refs.visualizer.startOscilloscope();\r\n    },\r\n    stopOscilloscope() {\r\n      //console.log(\"stop LFO graphics\")\r\n      this.$refs.visualizer.stopOscilloscope();\r\n    },\r\n    resetOscilloscope() {\r\n      this.$refs.visualizer.stopOscilloscope();\r\n      this.$refs.visualizer.startOscilloscope();\r\n\r\n    },\r\n    // ---------- USER GESTURE ----------\r\n\r\n    depthFaderSelected() {\r\n      //console.log(\"depthFaderSelected\")\r\n      this.isDepthFaderDown = true;\r\n    },\r\n    freqFaderSelected() {\r\n      //console.log(\"freqFaderSelected\")\r\n      this.isFreqFaderDown = true;\r\n    },\r\n\r\n    handleMouseMove(event) {\r\n      //console.log(\"lfo - handleMouseMove\")\r\n     this.$refs.knobs.handleMouseMove(event)\r\n      if (this.isDepthFaderDown) {\r\n        if (event.movementY < 0) {\r\n          // Mouse is moving dowm\r\n          this.depth = this.depth - event.movementY / 100;\r\n          //console.log(\"moving up\");\r\n        } else {\r\n          // Mouse is moving up\r\n          this.depth = this.depth - event.movementY / 100;\r\n          //console.log(\"moving down\");\r\n        }\r\n        this.depth = Math.max(this.depth, 0);\r\n        this.depth = Math.min(this.depth, 1);\r\n\r\n        //console.log(\"lfo depth: \" + this.depth)\r\n        this.$refs.visualizer.updateParams({depth: this.depth})\r\n      }\r\n      if (this.isFreqFaderDown) {\r\n        if (event.movementY < 0) {\r\n          // Mouse is moving dowm\r\n          this.freq = this.freq - 20 * (event.movementY / 100);\r\n          //console.log(\"moving up\");\r\n        } else {\r\n          // Mouse is moving up\r\n          this.freq = this.freq - 20 * (event.movementY / 100);\r\n        }\r\n        this.freq = Math.max(this.freq, 1);\r\n        this.freq = Math.min(this.freq, 20);\r\n\r\n        //console.log(\"lfo freq: \" + this.freq)\r\n        this.parameters.frequency = this.freq\r\n        this.$refs.visualizer.updateParams({freq: this.freq})\r\n        this.$refs.knobs.updateParameters(this.parameters)\r\n      }\r\n    },\r\n    handleMouseUp() {\r\n      if (this.isFreqFaderDown) this.isFreqFaderDown = false\r\n      if (this.isDepthFaderDown) this.isDepthFaderDown = false\r\n\r\n      this.$refs.knobs.handleMouseUp()\r\n    },\r\n\r\n    unHide() {\r\n      this.$refs.container.classList.remove(\"hidden\");\r\n      this.startOscilloscope()\r\n    },\r\n    hide() {\r\n      this.$refs.container.classList.add(\"hidden\");\r\n    },\r\n\r\n    //-------------METHODS TO LINK WHEN DROPPING\r\n    link(object, target, color) {\r\n      //console.log(\"THINGS HAPPENING \"+section+\" \"+target)\r\n      this.$refs.knobs.addLink(object, target, color)\r\n\r\n    },\r\n    unLink(object, target) {\r\n      //console.log(\"THINGS HAPPENING \")\r\n      //console.log(object)\r\n      //console.log(target)\r\n      this.$refs.knobs.removeLink(object, target)\r\n    },\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n.border {\r\n  grid-template-columns: calc(6 / 8 * 100%) calc(2 / 8 * 100%);\r\n  grid-template-rows: 100% ;\r\n\r\n  position: relative;\r\n  display: grid;\r\n  width: calc(100% - 0.6vw);\r\n  height: calc(100% - 0.6vw);\r\n  box-sizing: border-box;\r\n  margin: 0.3vw;\r\n  border-radius: 0.2vw;\r\n  border: 0.1vw solid #334030;\r\n}\r\n.container {\r\n  grid-column: span 2;\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n\r\n.hidden {\r\n  display: none;\r\n}\r\n\r\n.lfo_elems_row {\r\n  margin: 0;\r\n  padding: 0;\r\n  display: flex;\r\n  flex-direction: row;\r\n  height: 100%;\r\n  align-items: center;\r\n  justify-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n.lfoFaderBase {\r\n  position: absolute;\r\n  top: 5%;\r\n  left: 30%;\r\n  aspect-ratio: 1/10;\r\n  border-radius: 5vw;\r\n  height: 70%;\r\n}\r\n\r\n.lfoDepthFaderLevel {\r\n  position: relative;\r\n  width: 100%;\r\n  border-radius: 5vw;\r\n  height: 15%;\r\n  background-color: white;\r\n  top: 80%\r\n}\r\n\r\n.lfoFreqFaderLevel {\r\n  position: relative;\r\n  width: 100%;\r\n  height: 20%;\r\n  border-width: 1px;\r\n  border-style: solid;\r\n  border-radius: 5vw;\r\n  top: 80%;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.lfo_controls_column {\r\n  height: 100%;\r\n  width: 100%;\r\n  display: flex;\r\n  flex: 0.9;\r\n  flex-direction: column;\r\n  align-content: center;\r\n  justify-content: center;\r\n  position: relative;\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\n.lfo_waveform-btn-selector {\r\n  position: absolute;\r\n  left: 5%;\r\n  bottom: 5%;\r\n  aspect-ratio: 7/4;\r\n  width: 80%;\r\n  border-radius: 0.3vw;\r\n  border-style: solid;\r\n  border-width: 1px;\r\n  text-align: center;\r\n}\r\n\r\n\r\n.lfo_waveform_btn_icon {\r\n  position: absolute;\r\n  left: 0;\r\n  top: 0;\r\n  height: 100%;\r\n  width: 100%;\r\n  bottom: 0;\r\n  place-self: center;\r\n  align-self: center;\r\n  margin: 0;\r\n  padding: 0;\r\n  clip-path: circle(9%);\r\n  transform: scale(3.25);\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}